*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.31 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3L_7EF2
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3L_7EF2 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[223231] MAX=1 EXCEEDMAXVALUE='' )[223235] )[223229]
VALIDCHOICES=(CHOICE1='Y' )[223233] )[223517] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[223239]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[223243] )[223241] )[223237] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[223247]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[223253] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[223251] )[223249] )[223245] )[223227]
1402777    proc freq data=EMWS8.Ensmbl14_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl14_VariableSet noprint;
1402778    table ROLE*LEVEL/out=WORK.Ensmbl14META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl14META;
1402779    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL14_VARIABLESET.
NOTE: The data set WORK.ENSMBL14META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402780    proc print data=WORK.Ensmbl14META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14META label noobs;
1402781    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1402782    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1402782  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1402782  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1402783    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1402784    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1402785    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL14META.
NOTE: The PROCEDURE PRINT printed page 1740.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402786    title10;
MPRINT(EM_DIAGRAM):   title10;
1402787    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN EMWS8 Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN EMWS8 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1402816    data WORK.Ensmbl14_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1402817    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1402818    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1402818  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1402818  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1402819       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1402819  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1402819  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1402820    set EMWS8.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
1402821    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1402822    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1402823    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1402824    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1402825    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1402826    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1402827    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1402828    end;
MPRINT(EM_DIAGRAM):   end;
1402829    output;
MPRINT(EM_DIAGRAM):   output;
1402830    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL14_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402831    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1402832    proc print data=WORK.Ensmbl14_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14_EVENT noobs label;
1402833    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1402834    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1402835    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1402836    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL14_EVENT.
NOTE: The PROCEDURE PRINT printed page 1741.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402837    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1402838    proc print data = EMWS8.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural2_DepVar_DM noobs label;
1402839    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1402840    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1402841    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1402841  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1402841  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1402842    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1402843    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1402844    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1742.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402845    title10;
MPRINT(EM_DIAGRAM):   title10;
1402846    %let groupid =;
1402847    %let endGroupid =;
1402848    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402849    set EMWS8.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_EMINFO;
1402850    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402850  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402851    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402852    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402854    %let groupid =;
1402855    %let endGroupid =;
1402856    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402857    set EMWS8.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_EMINFO;
1402858    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402858  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402859    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402860    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402862    %let groupid =;
1402863    %let endGroupid =;
1402864    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402865    set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
1402866    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402866  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402867    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402868    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402870    %let groupid =;
1402871    %let endGroupid =;
1402872    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402873    set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
1402874    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402874  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402875    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402876    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402877    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402878    %let groupid =;
1402879    %let endGroupid =;
1402880    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402881    set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
1402882    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402882  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402883    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402884    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402886    %let groupid =;
1402887    %let endGroupid =;
1402888    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402889    set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
1402890    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402890  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402891    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402892    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402894    %let groupid =;
1402895    %let endGroupid =;
1402896    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1402897    set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
1402898    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1402898  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1402899    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1402900    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1402901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402902    data WORK.Ensmbl14;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14;
1402903    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1402904    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1402904  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1402905    nodeid="REG5";
MPRINT(EM_DIAGRAM):   nodeid="REG5";
1402906    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1402907    output;
MPRINT(EM_DIAGRAM):   output;
1402908    nodeid="REG";
MPRINT(EM_DIAGRAM):   nodeid="REG";
1402909    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1402910    output;
MPRINT(EM_DIAGRAM):   output;
1402911    nodeid="NEURAL4";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL4";
1402912    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1402913    output;
MPRINT(EM_DIAGRAM):   output;
1402914    nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
1402915    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1402916    output;
MPRINT(EM_DIAGRAM):   output;
1402917    nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
1402918    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1402919    output;
MPRINT(EM_DIAGRAM):   output;
1402920    nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
1402921    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1402922    output;
MPRINT(EM_DIAGRAM):   output;
1402923    nodeid="NEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL10";
1402924    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1402925    output;
MPRINT(EM_DIAGRAM):   output;
1402926    ;
MPRINT(EM_DIAGRAM):   ;
1402927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL14 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402928    title;
MPRINT(EM_DIAGRAM):   title;
1402929    proc print data=WORK.Ensmbl14 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14 label noobs;
1402930    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1402931    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1402932    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL14.
NOTE: The PROCEDURE PRINT printed page 1743.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402933    title9;
MPRINT(EM_DIAGRAM):   title9;
1402934    title10;
MPRINT(EM_DIAGRAM):   title10;
1402935    data WORK.M21GGG3A;
MPRINT(EM_DIAGRAM):    data WORK.M21GGG3A;
1402936    set WORK.M21GGG3A;
MPRINT(EM_DIAGRAM):   set WORK.M21GGG3A;
1402937    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1402938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M21GGG3A.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M21GGG3A has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402939    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1402940    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1402941    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1402942    %macro DMDBClass;
1402943        DepVar(DESC)
1402944    %mend DMDBClass;
1402945    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1402946    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1402947    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1402948    %macro DMDBVar;
1402949
1402950    %mend DMDBVar;
1402951    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1402952    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1402953    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1402954    proc dmdb batch data=EMWS8.Reg5_TRAIN
1402955    dmdbcat=WORK.EM_DMDB
1402956    maxlevel = 513
1402957    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg5_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1402958    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1402959    target
1402960    DepVar
1402961    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1402962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG5_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1402963    quit;
1402964    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0FM1ACT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0FM1ACT new;
MPRINT(EM_DIAGRAM):   run;
1403066    filename emflow
1403066  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403067    *------------------------------------------------------------*;
1403068    * Ensmbl14: Scoring REG5_TRAIN data;
1403069    *------------------------------------------------------------*;
1403070    data EMWS8.Ensmbl14_TRAIN
1403071    / view=EMWS8.Ensmbl14_TRAIN
1403072    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_TRAIN / view=EMWS8.Ensmbl14_TRAIN ;
1403073    set EMWS8.Reg5_TRAIN
1403074    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1403075    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
1403076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403077   +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
1403078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403079   +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
1403080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403082   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1403083   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1403084   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1403085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403087   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1403088   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1403089   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1403090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403092   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1403093   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1403094   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1403095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403097   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1403098   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1403099   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1403100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403101   +
1403102   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1403103   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1403103  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1403104   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1403105   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1403106   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1403107   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1403108   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1403109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403110   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1403111   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1403112   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1403113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403115   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1403116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403117   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1403118   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1403119   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1403120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403121   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1403122   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1403123   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1403124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403126   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1403127   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1403128   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1403129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403131   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1403132   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1403133   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1403134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403135   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403136   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1403137   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403138   +
1403139   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1403140   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1403141   +
1403142   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1403143   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1403144   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1403145   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1403146   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1403147   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1403148   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1403149   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1403150   +
1403151   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1403152   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1403153   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1403154   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1403155   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1403156   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403157   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1403158   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1403159   +end;
MPRINT(EM_DIAGRAM):   end;
1403160   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403161   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1403162   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1403163   +   end;
MPRINT(EM_DIAGRAM):   end;
1403164   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1403165   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1403166   +   end;
MPRINT(EM_DIAGRAM):   end;
1403167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403168   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1403169   +   end;
MPRINT(EM_DIAGRAM):   end;
1403170   +end;
MPRINT(EM_DIAGRAM):   end;
1403171   +
1403172   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1403173   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1403174   +
1403175   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1403176   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1403177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403179   +end;
MPRINT(EM_DIAGRAM):   end;
1403180   +
1403181   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1403182   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1403183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403185   +end;
MPRINT(EM_DIAGRAM):   end;
1403186   +
1403187   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1403188   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1403189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403191   +end;
MPRINT(EM_DIAGRAM):   end;
1403192   +
1403193   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1403194   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1403195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403197   +end;
MPRINT(EM_DIAGRAM):   end;
1403198   +
1403199   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1403200   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1403201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403203   +end;
MPRINT(EM_DIAGRAM):   end;
1403204   +
1403205   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1403206   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1403207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403209   +end;
MPRINT(EM_DIAGRAM):   end;
1403210   +
1403211   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1403212   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1403213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403215   +end;
MPRINT(EM_DIAGRAM):   end;
1403216   +
1403217   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1403218   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1403219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403221   +end;
MPRINT(EM_DIAGRAM):   end;
1403222   +
1403223   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1403224   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1403225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403227   +end;
MPRINT(EM_DIAGRAM):   end;
1403228   +
1403229   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1403230   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1403231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403233   +end;
MPRINT(EM_DIAGRAM):   end;
1403234   +
1403235   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1403236   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1403237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403239   +end;
MPRINT(EM_DIAGRAM):   end;
1403240   +
1403241   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1403242   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1403243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403245   +end;
MPRINT(EM_DIAGRAM):   end;
1403246   +
1403247   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1403248   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1403249   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1403250   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1403251   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1403252   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1403253   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1403254   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1403255   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1403256   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1403257   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1403258   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1403259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403261   +end;
MPRINT(EM_DIAGRAM):   end;
1403262   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403263   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1403264   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1403265   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403266   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1403267   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1403268   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1403269   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1403270   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1403271   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403272   +         end;
MPRINT(EM_DIAGRAM):   end;
1403273   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1403274   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1403275   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1403276   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403277   +            end;
MPRINT(EM_DIAGRAM):   end;
1403278   +         end;
MPRINT(EM_DIAGRAM):   end;
1403279   +      end;
MPRINT(EM_DIAGRAM):   end;
1403280   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1403281   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1403282   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1403283   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403284   +         end;
MPRINT(EM_DIAGRAM):   end;
1403285   +      end;
MPRINT(EM_DIAGRAM):   end;
1403286   +   end;
MPRINT(EM_DIAGRAM):   end;
1403287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403288   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1403289   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1403290   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403291   +      end;
MPRINT(EM_DIAGRAM):   end;
1403292   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1403293   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1403294   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1403295   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1403296   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1403297   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1403298   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403299   +         end;
MPRINT(EM_DIAGRAM):   end;
1403300   +      end;
MPRINT(EM_DIAGRAM):   end;
1403301   +   end;
MPRINT(EM_DIAGRAM):   end;
1403302   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1403303   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1403304   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1403305   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1403306   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1403307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403309   +   end;
MPRINT(EM_DIAGRAM):   end;
1403310   +end;
MPRINT(EM_DIAGRAM):   end;
1403311   +
1403312   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1403313   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1403314   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1403315   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1403316   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1403317   +end;
MPRINT(EM_DIAGRAM):   end;
1403318   +
1403319   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1403320   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1403321   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1403322   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1403323   +
1403324   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1403325   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1403326   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1403327   +
1403328   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1403329   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1403330   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1403331   +
1403332   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1403333   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1403334   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1403335   +
1403336   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1403337   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1403338   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1403339   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1403340   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1403341   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1403342   +
1403343   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1403344   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1403345   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1403346   +
1403347   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1403348   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1403349   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1403350   +
1403351   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1403352   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1403353   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1403354   +
1403355   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1403356   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1403357   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1403358   +
1403359   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1403360   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1403361   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1403362   +
1403363   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1403364   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1403365   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1403366   +
1403367   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1403368   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1403369   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1403370   +
1403371   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1403372   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1403373   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1403374   +
1403375   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1403376   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1403377   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1403378   +
1403379   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1403380   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1403381   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1403382   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1403383   +
1403384   +REG5DR1:
1403385   +
1403386   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1403387   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1403388   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1403389   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1403390   +end;
MPRINT(EM_DIAGRAM):   end;
1403391   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403392   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1403393   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1403394   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1403395   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1403396   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1403397   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1403398   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1403399   +   end;
MPRINT(EM_DIAGRAM):   end;
1403400   +end;
MPRINT(EM_DIAGRAM):   end;
1403401   +
1403402   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1403403   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1403404   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1403405   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1403406   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1403407   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1403408   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1403409   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1403410   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1403411   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1403412   +end;
MPRINT(EM_DIAGRAM):   end;
1403413   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1403414   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1403415   +
1403416   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403417   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1403418   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403419   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1403420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403421   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1403422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403423   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1403424   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1403425   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1403426   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1403427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403428   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1403429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403430   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1403431   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1403432   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1403433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403434   +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
1403435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403437   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1403438   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1403439   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1403440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403441   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403442   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1403443   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403444   +
1403445   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1403446   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1403447   +
1403448   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1403449   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1403450   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1403451   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1403452   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1403453   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1403454   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1403455   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1403456   +
1403457   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1403458   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1403459   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1403460   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1403461   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1403462   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403463   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1403464   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1403465   +end;
MPRINT(EM_DIAGRAM):   end;
1403466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403467   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1403468   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1403469   +   end;
MPRINT(EM_DIAGRAM):   end;
1403470   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1403471   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1403472   +   end;
MPRINT(EM_DIAGRAM):   end;
1403473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403474   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1403475   +   end;
MPRINT(EM_DIAGRAM):   end;
1403476   +end;
MPRINT(EM_DIAGRAM):   end;
1403477   +
1403478   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1403479   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1403480   +
1403481   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1403482   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1403483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403485   +end;
MPRINT(EM_DIAGRAM):   end;
1403486   +
1403487   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1403488   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1403489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403491   +end;
MPRINT(EM_DIAGRAM):   end;
1403492   +
1403493   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1403494   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1403495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403497   +end;
MPRINT(EM_DIAGRAM):   end;
1403498   +
1403499   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1403500   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1403501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403503   +end;
MPRINT(EM_DIAGRAM):   end;
1403504   +
1403505   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1403506   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1403507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403509   +end;
MPRINT(EM_DIAGRAM):   end;
1403510   +
1403511   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1403512   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1403513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403515   +end;
MPRINT(EM_DIAGRAM):   end;
1403516   +
1403517   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1403518   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1403519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403521   +end;
MPRINT(EM_DIAGRAM):   end;
1403522   +
1403523   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1403524   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1403525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403527   +end;
MPRINT(EM_DIAGRAM):   end;
1403528   +
1403529   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1403530   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1403531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403533   +end;
MPRINT(EM_DIAGRAM):   end;
1403534   +
1403535   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1403536   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1403537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403539   +end;
MPRINT(EM_DIAGRAM):   end;
1403540   +
1403541   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1403542   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1403543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403545   +end;
MPRINT(EM_DIAGRAM):   end;
1403546   +
1403547   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1403548   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1403549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403551   +end;
MPRINT(EM_DIAGRAM):   end;
1403552   +
1403553   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1403554   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1403555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403557   +end;
MPRINT(EM_DIAGRAM):   end;
1403558   +
1403559   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1403560   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1403561   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1403562   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1403563   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1403564   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1403565   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1403566   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1403567   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1403568   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1403569   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1403570   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1403571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403573   +end;
MPRINT(EM_DIAGRAM):   end;
1403574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403575   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1403576   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1403577   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403578   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1403579   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1403580   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1403581   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1403582   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1403583   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403584   +         end;
MPRINT(EM_DIAGRAM):   end;
1403585   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1403586   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1403587   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1403588   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403589   +            end;
MPRINT(EM_DIAGRAM):   end;
1403590   +         end;
MPRINT(EM_DIAGRAM):   end;
1403591   +      end;
MPRINT(EM_DIAGRAM):   end;
1403592   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1403593   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1403594   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1403595   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403596   +         end;
MPRINT(EM_DIAGRAM):   end;
1403597   +      end;
MPRINT(EM_DIAGRAM):   end;
1403598   +   end;
MPRINT(EM_DIAGRAM):   end;
1403599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403600   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1403601   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1403602   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403603   +      end;
MPRINT(EM_DIAGRAM):   end;
1403604   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1403605   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1403606   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1403607   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1403608   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1403609   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1403610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1403611   +         end;
MPRINT(EM_DIAGRAM):   end;
1403612   +      end;
MPRINT(EM_DIAGRAM):   end;
1403613   +   end;
MPRINT(EM_DIAGRAM):   end;
1403614   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1403615   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1403616   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1403617   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1403618   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1403619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403621   +   end;
MPRINT(EM_DIAGRAM):   end;
1403622   +end;
MPRINT(EM_DIAGRAM):   end;
1403623   +
1403624   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1403625   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1403626   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1403627   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1403628   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1403629   +end;
MPRINT(EM_DIAGRAM):   end;
1403630   +
1403631   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1403632   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1403633   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1403634   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1403635   +
1403636   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1403637   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1403638   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1403639   +
1403640   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1403641   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1403642   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1403643   +
1403644   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1403645   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1403646   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1403647   +
1403648   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1403649   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1403650   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1403651   +
1403652   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1403653   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1403654   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1403655   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1403656   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1403657   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1403658   +
1403659   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1403660   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1403661   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1403662   +
1403663   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1403664   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1403665   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1403666   +
1403667   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1403668   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1403669   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1403670   +
1403671   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1403672   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1403673   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1403674   +
1403675   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1403676   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1403677   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1403678   +
1403679   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1403680   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1403681   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1403682   +
1403683   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1403684   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1403685   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1403686   +
1403687   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1403688   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1403689   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1403690   +
1403691   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1403692   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1403693   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1403694   +
1403695   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1403696   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1403697   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1403698   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1403699   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1403700   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1403701   +end;
MPRINT(EM_DIAGRAM):   end;
1403702   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1403703   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1403704   +
1403705   +REGDR1:
1403706   +
1403707   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1403708   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1403709   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1403710   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1403711   +end;
MPRINT(EM_DIAGRAM):   end;
1403712   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403713   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1403714   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1403715   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1403716   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1403717   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1403718   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1403719   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1403720   +   end;
MPRINT(EM_DIAGRAM):   end;
1403721   +end;
MPRINT(EM_DIAGRAM):   end;
1403722   +
1403723   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1403724   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1403725   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1403726   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1403727   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1403728   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1403729   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1403730   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1403731   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1403732   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1403733   +end;
MPRINT(EM_DIAGRAM):   end;
1403734   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1403735   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1403736   +
1403737   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403738   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1403739   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1403740   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1403741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403742   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1403743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403744   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1403745   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1403746   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1403747   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1403748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403749   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1403750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403751   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1403752   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1403753   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1403754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403755   +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
1403756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403758   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1403759   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1403760   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1403761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403762   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1403763   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1403764   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1403765   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1403766   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1403767   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1403768   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1403769   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1403770   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1403771   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1403772   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1403773   +LENGTH _WARN_ $4
1403774   +      F_DepVar  $ 12
1403775   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1403776   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1403777   +
1403778   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1403779   +
1403780   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1403781   +
1403782   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1403783   +
1403784   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1403785   +
1403786   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1403787   +
1403788   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1403789   +
1403790   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1403791   +
1403792   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1403793   +
1403794   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1403795   +
1403796   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1403797   +
1403798   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1403799   +
1403800   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1403801   +
1403802   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1403803   +
1403804   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1403805   +
1403806   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1403807   +
1403808   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1403809   +
1403810   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1403811   +
1403812   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1403813   +
1403814   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1403815   +
1403816   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1403817   +
1403818   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1403819   +
1403820   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1403821   +
1403822   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1403823   +
1403824   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1403825   +
1403826   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1403827   +
1403828   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1403829   +
1403830   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1403831   +
1403832   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1403833   +
1403834   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1403835   +
1403836   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1403837   +
1403838   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1403839   +
1403840   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1403841   +
1403842   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1403843   +
1403844   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1403845   +
1403846   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1403847   +
1403848   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1403849   +
1403850   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1403851   +
1403852   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1403853   +
1403854   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1403855   +
1403856   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1403857   +
1403858   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1403859   +
1403860   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1403861   +
1403862   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1403863   +
1403864   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1403865   +
1403866   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1403867   +
1403868   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1403869   +
1403870   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1403871   +
1403872   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1403873   +
1403874   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1403875   +
1403876   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1403877   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1403878   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1403879   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1403880   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403882   +end;
MPRINT(EM_DIAGRAM):   end;
1403883   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403884   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1403885   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1403886   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403887   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1403888   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1403889   +   end;
MPRINT(EM_DIAGRAM):   end;
1403890   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1403891   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1403892   +   end;
MPRINT(EM_DIAGRAM):   end;
1403893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403894   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1403895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403897   +   end;
MPRINT(EM_DIAGRAM):   end;
1403898   +end;
MPRINT(EM_DIAGRAM):   end;
1403899   +
1403900   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1403901   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1403902   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1403903   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1403904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403906   +end;
MPRINT(EM_DIAGRAM):   end;
1403907   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403908   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1403909   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1403910   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403911   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1403912   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1403913   +   end;
MPRINT(EM_DIAGRAM):   end;
1403914   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1403915   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1403916   +   end;
MPRINT(EM_DIAGRAM):   end;
1403917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403918   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1403919   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403920   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403921   +   end;
MPRINT(EM_DIAGRAM):   end;
1403922   +end;
MPRINT(EM_DIAGRAM):   end;
1403923   +
1403924   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1403925   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1403926   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1403927   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1403928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403930   +end;
MPRINT(EM_DIAGRAM):   end;
1403931   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1403933   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1403934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403935   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1403936   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1403937   +   end;
MPRINT(EM_DIAGRAM):   end;
1403938   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1403939   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1403940   +   end;
MPRINT(EM_DIAGRAM):   end;
1403941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403942   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1403943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403945   +   end;
MPRINT(EM_DIAGRAM):   end;
1403946   +end;
MPRINT(EM_DIAGRAM):   end;
1403947   +
1403948   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1403949   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1403950   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1403951   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1403952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403954   +end;
MPRINT(EM_DIAGRAM):   end;
1403955   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403956   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1403957   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1403958   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403959   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1403960   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1403961   +   end;
MPRINT(EM_DIAGRAM):   end;
1403962   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1403963   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1403964   +   end;
MPRINT(EM_DIAGRAM):   end;
1403965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403966   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1403967   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403968   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403969   +   end;
MPRINT(EM_DIAGRAM):   end;
1403970   +end;
MPRINT(EM_DIAGRAM):   end;
1403971   +
1403972   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1403973   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1403974   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1403975   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1403976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1403977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403978   +end;
MPRINT(EM_DIAGRAM):   end;
1403979   +else do;
MPRINT(EM_DIAGRAM):   else do;
1403980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1403981   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1403982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1403983   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1403984   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1403985   +   end;
MPRINT(EM_DIAGRAM):   end;
1403986   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1403987   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1403988   +   end;
MPRINT(EM_DIAGRAM):   end;
1403989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1403990   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1403991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1403992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1403993   +   end;
MPRINT(EM_DIAGRAM):   end;
1403994   +end;
MPRINT(EM_DIAGRAM):   end;
1403995   +
1403996   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1403997   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1403998   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1403999   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1404000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404002   +end;
MPRINT(EM_DIAGRAM):   end;
1404003   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404004   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404005   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1404006   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404007   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404008   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1404009   +   end;
MPRINT(EM_DIAGRAM):   end;
1404010   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404011   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1404012   +   end;
MPRINT(EM_DIAGRAM):   end;
1404013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404014   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1404015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404017   +   end;
MPRINT(EM_DIAGRAM):   end;
1404018   +end;
MPRINT(EM_DIAGRAM):   end;
1404019   +
1404020   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1404021   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1404022   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1404023   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1404024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404026   +end;
MPRINT(EM_DIAGRAM):   end;
1404027   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404028   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404029   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1404030   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404031   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1404032   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1404033   +   end;
MPRINT(EM_DIAGRAM):   end;
1404034   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1404035   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1404036   +   end;
MPRINT(EM_DIAGRAM):   end;
1404037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404038   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1404039   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404040   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404041   +   end;
MPRINT(EM_DIAGRAM):   end;
1404042   +end;
MPRINT(EM_DIAGRAM):   end;
1404043   +
1404044   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1404045   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1404046   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1404047   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1404048   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1404049   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1404050   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1404051   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1404052   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1404053   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1404054   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1404055   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1404056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404058   +end;
MPRINT(EM_DIAGRAM):   end;
1404059   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404060   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1404061   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1404062   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404063   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1404064   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1404065   +   end;
MPRINT(EM_DIAGRAM):   end;
1404066   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1404067   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1404068   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1404069   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1404070   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1404071   +   end;
MPRINT(EM_DIAGRAM):   end;
1404072   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1404073   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1404074   +   end;
MPRINT(EM_DIAGRAM):   end;
1404075   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1404076   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1404077   +   end;
MPRINT(EM_DIAGRAM):   end;
1404078   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1404079   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1404080   +   end;
MPRINT(EM_DIAGRAM):   end;
1404081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404082   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1404083   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1404084   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1404085   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1404086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404088   +   end;
MPRINT(EM_DIAGRAM):   end;
1404089   +end;
MPRINT(EM_DIAGRAM):   end;
1404090   +
1404091   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1404092   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1404093   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1404094   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1404095   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1404096   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1404097   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1404098   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1404099   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1404100   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1404101   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1404102   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1404103   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1404104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404106   +end;
MPRINT(EM_DIAGRAM):   end;
1404107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404108   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1404109   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1404110   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404111   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1404112   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1404113   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1404114   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1404115   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1404116   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404117   +         end;
MPRINT(EM_DIAGRAM):   end;
1404118   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1404119   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1404120   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1404121   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404122   +            end;
MPRINT(EM_DIAGRAM):   end;
1404123   +         end;
MPRINT(EM_DIAGRAM):   end;
1404124   +      end;
MPRINT(EM_DIAGRAM):   end;
1404125   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1404126   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1404127   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1404128   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404129   +         end;
MPRINT(EM_DIAGRAM):   end;
1404130   +      end;
MPRINT(EM_DIAGRAM):   end;
1404131   +   end;
MPRINT(EM_DIAGRAM):   end;
1404132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404133   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1404134   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1404135   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404136   +      end;
MPRINT(EM_DIAGRAM):   end;
1404137   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1404138   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1404139   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1404140   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1404141   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1404142   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1404143   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404144   +         end;
MPRINT(EM_DIAGRAM):   end;
1404145   +      end;
MPRINT(EM_DIAGRAM):   end;
1404146   +   end;
MPRINT(EM_DIAGRAM):   end;
1404147   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1404148   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1404149   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1404150   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1404151   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1404152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404154   +   end;
MPRINT(EM_DIAGRAM):   end;
1404155   +end;
MPRINT(EM_DIAGRAM):   end;
1404156   +
1404157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404158   +*** Checking missing input Interval
1404159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1404160   +
1404161   +IF NMISS(
1404162   +   AcceptedCmpTotal ,
1404163   +   Age ,
1404164   +   Frq ,
1404165   +   Income ,
1404166   +   Kidhome ,
1404167   +   Mnt ,
1404168   +   MntFishProducts ,
1404169   +   MntFruits ,
1404170   +   MntGoldProds ,
1404171   +   MntMeatProducts ,
1404172   +   MntSweetProducts ,
1404173   +   MntWines ,
1404174   +   MonthsAsCustomer ,
1404175   +   NumCatalogPurchases ,
1404176   +   NumDealsPurchases ,
1404177   +   NumDistPurchases ,
1404178   +   NumStorePurchases ,
1404179   +   NumWebPurchases ,
1404180   +   NumWebVisitsMonth ,
1404181   +   RFMstat ,
1404182   +   RMntFrq ,
1404183   +   Recency ,
1404184   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1404185   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1404186   +
1404187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404188   +END;
MPRINT(EM_DIAGRAM):   END;
1404189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404190   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1404191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404192   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1404193   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1404194   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1404195   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1404196   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1404197   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1404198   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1404199   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1404200   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1404201   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1404202   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1404203   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1404204   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1404205   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1404206   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1404207   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1404208   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1404209   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1404210   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1404211   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1404212   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1404213   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1404214   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1404215   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1404216   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1404217   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1404218   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1404219   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1404220   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1404221   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1404222   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1404223   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1404224   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1404225   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1404226   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1404227   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1404228   +END;
MPRINT(EM_DIAGRAM):   END;
1404229   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1404230   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1404231   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1404232   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1404233   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1404234   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1404235   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1404236   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1404237   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1404238   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1404239   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1404240   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1404241   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1404242   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1404243   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1404244   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1404245   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1404246   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1404247   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1404248   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1404249   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1404250   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1404251   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1404252   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1404253   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1404254   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1404255   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1404256   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1404257   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1404258   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1404259   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1404260   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1404261   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1404262   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1404263   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1404264   +   ELSE S_NumCatalogPurchases
1404265   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1404266   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1404267   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1404268   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1404269   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1404270   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1404271   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1404272   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1404273   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1404274   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1404275   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1404276   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1404277   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1404278   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1404279   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1404280   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1404281   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1404282   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1404283   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1404284   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1404285   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1404286   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1404287   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1404288   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1404289   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1404290   +END;
MPRINT(EM_DIAGRAM):   END;
1404291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404292   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1404293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404295   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1404296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404298   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1404299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404300   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1404301   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1404302   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1404303   +        S_Income  +    -0.76740176580734 * S_Kidhome
1404304   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1404305   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1404306   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1404307   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1404308   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1404309   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1404310   +          +    -1.00050516074089 * S_NumDealsPurchases
1404311   +          +    -0.89322788176916 * S_NumDistPurchases
1404312   +          +     1.21914397196653 * S_NumStorePurchases
1404313   +          +     1.50867172673665 * S_NumWebPurchases
1404314   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1404315   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1404316   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1404317   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome +
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 *
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts +
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 *
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 *
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 *
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 *
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq +
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1404318   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1404319   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1404320   +        S_Income  +    -0.76288911429735 * S_Kidhome
1404321   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1404322   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1404323   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1404324   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1404325   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1404326   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1404327   +          +     0.79497206561332 * S_NumDealsPurchases
1404328   +          +    -0.13658888199464 * S_NumDistPurchases
1404329   +          +    -0.86436416316417 * S_NumStorePurchases
1404330   +          +    -0.85206550087617 * S_NumWebPurchases
1404331   +          +     1.72745004688732 * S_NumWebVisitsMonth
1404332   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1404333   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1404334   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age +
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome +
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 *
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts +
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 *
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 *
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 *
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 *
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq +
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1404335   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1404336   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1404337   +        S_Income  +    -0.48841499166688 * S_Kidhome
1404338   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1404339   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1404340   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1404341   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1404342   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1404343   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1404344   +          +    -0.00010125986409 * S_NumDealsPurchases
1404345   +          +    -0.00873530900019 * S_NumDistPurchases
1404346   +          +    -0.13188135131414 * S_NumStorePurchases
1404347   +          +    -0.10710067608125 * S_NumWebPurchases
1404348   +          +     0.99164053465149 * S_NumWebVisitsMonth
1404349   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1404350   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1404351   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age +
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome +
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 *
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts +
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 *
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 *
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 *
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 *
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq +
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1404352   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1404353   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1404354   +        S_Income  +    -0.57026847797175 * S_Kidhome
1404355   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1404356   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1404357   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1404358   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1404359   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1404360   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1404361   +          +     0.83618651452015 * S_NumDealsPurchases
1404362   +          +     0.22469306589917 * S_NumDistPurchases
1404363   +          +    -0.95889459414769 * S_NumStorePurchases
1404364   +          +    -0.95695646799114 * S_NumWebPurchases
1404365   +          +     0.96738689790948 * S_NumWebVisitsMonth
1404366   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1404367   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1404368   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome +
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 *
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts +
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 *
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 *
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 *
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 *
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq +
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1404369   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1404370   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1404371   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1404372   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1404373   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 *
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 +
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 *
HigherEducationBinary0 ;
1404374   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1404375   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1404376   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1404377   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1404378   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 *
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 +
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 *
HigherEducationBinary0 ;
1404379   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1404380   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1404381   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1404382   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1404383   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 *
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 +
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 *
HigherEducationBinary0 ;
1404384   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1404385   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1404386   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1404387   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1404388   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 *
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 +
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 *
HigherEducationBinary0 ;
1404389   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1404390   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1404391   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1404392   +          +     0.80885454992674 * Marital_StatusDivorced
1404393   +          +     -0.5568630572283 * Marital_StatusMarried
1404394   +          +    -0.03099047176508 * Marital_StatusSingle
1404395   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 *
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster +
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried +
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1404396   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1404397   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1404398   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1404399   +          +     0.13911597069393 * Marital_StatusDivorced
1404400   +          +    -1.50081060732787 * Marital_StatusMarried
1404401   +          +     1.41717012231539 * Marital_StatusSingle
1404402   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 *
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried +
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1404403   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1404404   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1404405   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1404406   +          +    -0.26412736340464 * Marital_StatusDivorced
1404407   +          +    -0.27049992388629 * Marital_StatusMarried
1404408   +          +     0.67476795725099 * Marital_StatusSingle
1404409   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 *
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried +
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1404410   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1404411   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1404412   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1404413   +          +      0.8954230457499 * Marital_StatusDivorced
1404414   +          +     0.73706556068242 * Marital_StatusMarried
1404415   +          +    -1.29073720538893 * Marital_StatusSingle
1404416   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 *
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried +
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1404417   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1404418   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1404419   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1404420   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1404421   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1404422   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1404423   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1404424   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1404425   +END;
MPRINT(EM_DIAGRAM):   END;
1404426   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1404427   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1404428   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1404429   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1404430   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1404431   +END;
MPRINT(EM_DIAGRAM):   END;
1404432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404433   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1404434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404435   +
1404436   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1404437   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1404438   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1404439   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1404440   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1404441   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
The SAS System
 
MPRINT(DMNORMIP):  );
1404442   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1404443   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1404444   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1404445   +end;
MPRINT(EM_DIAGRAM):   end;
1404446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404447   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1404448   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1404449   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1404450   +   end;
MPRINT(EM_DIAGRAM):   end;
1404451   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1404452   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1404453   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1404454   +   end;
MPRINT(EM_DIAGRAM):   end;
1404455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404456   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1404457   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1404458   +   end;
MPRINT(EM_DIAGRAM):   end;
1404459   +end;
MPRINT(EM_DIAGRAM):   end;
1404460   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1404461   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1404462   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 +
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1404463   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1404464   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1404465   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1404466   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1404467   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1404468   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1404469   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1404470   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1404471   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1404472   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1404473   +END;
MPRINT(EM_DIAGRAM):   END;
1404474   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1404475   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1404476   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1404477   +END;
MPRINT(EM_DIAGRAM):   END;
1404478   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1404479   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1404480   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1404481   +END;
MPRINT(EM_DIAGRAM):   END;
1404482   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1404483   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1404484   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1404485   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1404486   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1404487   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1404488   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1404489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404490   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1404491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404492   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1404493   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1404494   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1404495   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1404496   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1404497   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1404498   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1404499   +END;
MPRINT(EM_DIAGRAM):   END;
1404500   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1404501   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1404502   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1404503   +drop
1404504   +H11
1404505   +H12
1404506   +H13
1404507   +H14
1404508   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1404509   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1404510   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1404511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404512   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1404513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404514   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1404515   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1404516   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1404517   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1404518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404519   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1404520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404521   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1404522   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1404523   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1404524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404525   +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
1404526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404528   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1404529   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1404530   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1404531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1404532   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1404533   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1404534   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1404535   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1404536   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1404537   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1404538   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1404539   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1404540   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1404541   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1404542   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1404543   +LENGTH _WARN_ $4
1404544   +      F_DepVar  $ 12
1404545   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1404546   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1404547   +
1404548   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1404549   +
1404550   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1404551   +
1404552   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1404553   +
1404554   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1404555   +
1404556   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1404557   +
1404558   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1404559   +
1404560   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1404561   +
1404562   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1404563   +
1404564   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1404565   +
1404566   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1404567   +
1404568   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1404569   +
1404570   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1404571   +
1404572   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1404573   +
1404574   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1404575   +
1404576   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1404577   +
1404578   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1404579   +
1404580   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1404581   +
1404582   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1404583   +
1404584   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1404585   +
1404586   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1404587   +
1404588   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1404589   +
1404590   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1404591   +
1404592   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1404593   +
1404594   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1404595   +
1404596   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1404597   +
1404598   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1404599   +
1404600   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1404601   +
1404602   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1404603   +
1404604   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1404605   +
1404606   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1404607   +
1404608   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1404609   +
1404610   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1404611   +
1404612   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1404613   +
1404614   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1404615   +
1404616   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1404617   +
1404618   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1404619   +
1404620   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1404621   +
1404622   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1404623   +
1404624   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1404625   +
1404626   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1404627   +
1404628   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1404629   +
1404630   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1404631   +
1404632   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1404633   +
1404634   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1404635   +
1404636   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1404637   +
1404638   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1404639   +
1404640   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1404641   +
1404642   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1404643   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1404644   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1404645   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1404646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404648   +end;
MPRINT(EM_DIAGRAM):   end;
1404649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404651   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1404652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404654   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1404655   +   end;
MPRINT(EM_DIAGRAM):   end;
1404656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404657   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1404658   +   end;
MPRINT(EM_DIAGRAM):   end;
1404659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404660   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1404661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404663   +   end;
MPRINT(EM_DIAGRAM):   end;
1404664   +end;
MPRINT(EM_DIAGRAM):   end;
1404665   +
1404666   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1404667   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1404668   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1404669   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1404670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404672   +end;
MPRINT(EM_DIAGRAM):   end;
1404673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404675   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1404676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404678   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1404679   +   end;
MPRINT(EM_DIAGRAM):   end;
1404680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404681   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1404682   +   end;
MPRINT(EM_DIAGRAM):   end;
1404683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404684   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1404685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404687   +   end;
MPRINT(EM_DIAGRAM):   end;
1404688   +end;
MPRINT(EM_DIAGRAM):   end;
1404689   +
1404690   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1404691   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1404692   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1404693   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1404694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404696   +end;
MPRINT(EM_DIAGRAM):   end;
1404697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404699   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1404700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404702   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1404703   +   end;
MPRINT(EM_DIAGRAM):   end;
1404704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404705   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1404706   +   end;
MPRINT(EM_DIAGRAM):   end;
1404707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404708   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1404709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404711   +   end;
MPRINT(EM_DIAGRAM):   end;
1404712   +end;
MPRINT(EM_DIAGRAM):   end;
1404713   +
1404714   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1404715   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1404716   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1404717   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1404718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404720   +end;
MPRINT(EM_DIAGRAM):   end;
1404721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404723   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1404724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404725   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404726   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1404727   +   end;
MPRINT(EM_DIAGRAM):   end;
1404728   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404729   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1404730   +   end;
MPRINT(EM_DIAGRAM):   end;
1404731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404732   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1404733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404735   +   end;
MPRINT(EM_DIAGRAM):   end;
1404736   +end;
MPRINT(EM_DIAGRAM):   end;
1404737   +
1404738   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1404739   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1404740   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1404741   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1404742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404744   +end;
MPRINT(EM_DIAGRAM):   end;
1404745   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404747   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1404748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404750   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1404751   +   end;
MPRINT(EM_DIAGRAM):   end;
1404752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404753   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1404754   +   end;
MPRINT(EM_DIAGRAM):   end;
1404755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404756   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1404757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404759   +   end;
MPRINT(EM_DIAGRAM):   end;
1404760   +end;
MPRINT(EM_DIAGRAM):   end;
1404761   +
1404762   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1404763   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1404764   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1404765   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1404766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404768   +end;
MPRINT(EM_DIAGRAM):   end;
1404769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404771   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1404772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404773   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1404774   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1404775   +   end;
MPRINT(EM_DIAGRAM):   end;
1404776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1404777   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1404778   +   end;
MPRINT(EM_DIAGRAM):   end;
1404779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404780   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1404781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404783   +   end;
MPRINT(EM_DIAGRAM):   end;
1404784   +end;
MPRINT(EM_DIAGRAM):   end;
1404785   +
1404786   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1404787   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1404788   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1404789   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1404790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404792   +end;
MPRINT(EM_DIAGRAM):   end;
1404793   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1404795   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1404796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404797   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1404798   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1404799   +   end;
MPRINT(EM_DIAGRAM):   end;
1404800   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1404801   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1404802   +   end;
MPRINT(EM_DIAGRAM):   end;
1404803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404804   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1404805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404807   +   end;
MPRINT(EM_DIAGRAM):   end;
1404808   +end;
MPRINT(EM_DIAGRAM):   end;
1404809   +
1404810   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1404811   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1404812   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1404813   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1404814   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1404815   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1404816   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1404817   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1404818   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1404819   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1404820   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1404821   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1404822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404824   +end;
MPRINT(EM_DIAGRAM):   end;
1404825   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404826   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1404827   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1404828   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404829   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1404830   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1404831   +   end;
MPRINT(EM_DIAGRAM):   end;
1404832   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1404833   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1404834   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1404835   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1404836   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1404837   +   end;
MPRINT(EM_DIAGRAM):   end;
1404838   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1404839   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1404840   +   end;
MPRINT(EM_DIAGRAM):   end;
1404841   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1404842   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1404843   +   end;
MPRINT(EM_DIAGRAM):   end;
1404844   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1404845   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1404846   +   end;
MPRINT(EM_DIAGRAM):   end;
1404847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404848   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1404849   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1404850   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1404851   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1404852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404854   +   end;
MPRINT(EM_DIAGRAM):   end;
1404855   +end;
MPRINT(EM_DIAGRAM):   end;
1404856   +
1404857   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1404858   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1404859   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1404860   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1404861   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1404862   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1404863   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1404864   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1404865   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1404866   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1404867   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1404868   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1404869   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1404870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1404871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404872   +end;
MPRINT(EM_DIAGRAM):   end;
1404873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1404874   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1404875   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1404876   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1404877   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1404878   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1404879   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1404880   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1404881   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1404882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404883   +         end;
MPRINT(EM_DIAGRAM):   end;
1404884   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1404885   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1404886   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1404887   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404888   +            end;
MPRINT(EM_DIAGRAM):   end;
1404889   +         end;
MPRINT(EM_DIAGRAM):   end;
1404890   +      end;
MPRINT(EM_DIAGRAM):   end;
1404891   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1404892   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1404893   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1404894   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404895   +         end;
MPRINT(EM_DIAGRAM):   end;
1404896   +      end;
MPRINT(EM_DIAGRAM):   end;
1404897   +   end;
MPRINT(EM_DIAGRAM):   end;
1404898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1404899   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1404900   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1404901   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404902   +      end;
MPRINT(EM_DIAGRAM):   end;
1404903   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1404904   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1404905   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1404906   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1404907   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1404908   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1404909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1404910   +         end;
MPRINT(EM_DIAGRAM):   end;
1404911   +      end;
MPRINT(EM_DIAGRAM):   end;
1404912   +   end;
MPRINT(EM_DIAGRAM):   end;
1404913   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1404914   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1404915   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1404916   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1404917   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1404918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1404919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404920   +   end;
MPRINT(EM_DIAGRAM):   end;
1404921   +end;
MPRINT(EM_DIAGRAM):   end;
1404922   +
1404923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404924   +*** Checking missing input Interval
1404925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1404926   +
1404927   +IF NMISS(
1404928   +   AcceptedCmpTotal ,
1404929   +   Age ,
1404930   +   Frq ,
1404931   +   Income ,
1404932   +   Kidhome ,
1404933   +   Mnt ,
1404934   +   MntFishProducts ,
1404935   +   MntFruits ,
1404936   +   MntGoldProds ,
1404937   +   MntMeatProducts ,
1404938   +   MntSweetProducts ,
1404939   +   MntWines ,
1404940   +   MonthsAsCustomer ,
1404941   +   NumCatalogPurchases ,
1404942   +   NumDealsPurchases ,
1404943   +   NumDistPurchases ,
1404944   +   NumStorePurchases ,
1404945   +   NumWebPurchases ,
1404946   +   NumWebVisitsMonth ,
1404947   +   RFMstat ,
1404948   +   RMntFrq ,
1404949   +   Recency ,
1404950   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1404951   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1404952   +
1404953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1404954   +END;
MPRINT(EM_DIAGRAM):   END;
1404955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404956   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1404957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1404958   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1404959   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1404960   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1404961   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1404962   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1404963   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1404964   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1404965   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1404966   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1404967   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1404968   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1404969   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1404970   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1404971   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1404972   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1404973   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1404974   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1404975   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1404976   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1404977   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1404978   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1404979   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1404980   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1404981   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1404982   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1404983   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1404984   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1404985   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1404986   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1404987   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1404988   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1404989   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1404990   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1404991   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1404992   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1404993   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1404994   +END;
MPRINT(EM_DIAGRAM):   END;
1404995   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1404996   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1404997   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1404998   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1404999   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1405000   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1405001   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1405002   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1405003   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1405004   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1405005   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1405006   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1405007   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1405008   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1405009   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1405010   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1405011   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1405012   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1405013   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1405014   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1405015   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1405016   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1405017   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1405018   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1405019   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1405020   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1405021   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1405022   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1405023   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1405024   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1405025   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1405026   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1405027   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1405028   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1405029   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1405030   +   ELSE S_NumCatalogPurchases
1405031   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1405032   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1405033   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1405034   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1405035   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1405036   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1405037   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1405038   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1405039   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1405040   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1405041   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1405042   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1405043   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1405044   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1405045   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1405046   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1405047   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1405048   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1405049   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1405050   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1405051   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1405052   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1405053   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1405054   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1405055   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1405056   +END;
MPRINT(EM_DIAGRAM):   END;
1405057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405058   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1405059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405061   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1405062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405064   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1405065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405066   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1405067   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1405068   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1405069   +        S_Income  +    -1.07733254688396 * S_Kidhome
1405070   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1405071   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1405072   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1405073   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1405074   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1405075   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1405076   +          +     0.34431711603003 * S_NumDealsPurchases
1405077   +          +      0.7134923732819 * S_NumDistPurchases
1405078   +          +     0.05901777448936 * S_NumStorePurchases
1405079   +          +    -0.19803026616936 * S_NumWebPurchases
1405080   +          +     1.34202846183228 * S_NumWebVisitsMonth
1405081   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1405082   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1405083   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age +
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome +
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 *
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts +
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 *
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 *
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 *
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 *
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq +
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1405084   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1405085   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1405086   +        S_Income  +    -0.00255151514163 * S_Kidhome
1405087   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1405088   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1405089   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1405090   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1405091   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1405092   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1405093   +          +     0.45752917132477 * S_NumDealsPurchases
1405094   +          +      0.1559495599293 * S_NumDistPurchases
1405095   +          +    -0.33402213718695 * S_NumStorePurchases
1405096   +          +    -0.39372662704902 * S_NumWebPurchases
1405097   +          +     0.52518189694069 * S_NumWebVisitsMonth
1405098   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1405099   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1405100   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome +
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 *
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts +
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 *
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 *
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 *
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 *
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq +
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1405101   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1405102   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1405103   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1405104   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1405105   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 *
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 +
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 *
HigherEducationBinary0 ;
1405106   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1405107   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1405108   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1405109   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1405110   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 *
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 +
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 *
HigherEducationBinary0 ;
1405111   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1405112   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1405113   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1405114   +          +     0.46710555357393 * Marital_StatusDivorced
1405115   +          +    -1.27560428667174 * Marital_StatusMarried
1405116   +          +      1.3147344073121 * Marital_StatusSingle
1405117   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 *
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried +
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1405118   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1405119   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1405120   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1405121   +          +     0.07422027097612 * Marital_StatusDivorced
1405122   +          +     0.00271855575037 * Marital_StatusMarried
1405123   +          +    -0.00749566028051 * Marital_StatusSingle
1405124   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 *
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster +
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried +
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1405125   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1405126   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1405127   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1405128   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1405129   +END;
MPRINT(EM_DIAGRAM):   END;
1405130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1405131   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1405132   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1405133   +END;
MPRINT(EM_DIAGRAM):   END;
1405134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405135   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1405136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405137   +
1405138   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1405139   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1405140   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1405141   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1405142   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1405143   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405144   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1405145   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1405146   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1405147   +end;
MPRINT(EM_DIAGRAM):   end;
1405148   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405149   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1405150   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1405151   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1405152   +   end;
MPRINT(EM_DIAGRAM):   end;
1405153   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1405154   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1405155   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1405156   +   end;
MPRINT(EM_DIAGRAM):   end;
1405157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405158   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1405159   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1405160   +   end;
MPRINT(EM_DIAGRAM):   end;
1405161   +end;
MPRINT(EM_DIAGRAM):   end;
1405162   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1405163   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1405164   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1405165   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1405166   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1405167   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1405168   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1405169   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1405170   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1405171   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1405172   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1405173   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1405174   +END;
MPRINT(EM_DIAGRAM):   END;
1405175   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1405176   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1405177   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1405178   +END;
MPRINT(EM_DIAGRAM):   END;
1405179   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1405180   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1405181   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1405182   +END;
MPRINT(EM_DIAGRAM):   END;
1405183   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1405184   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1405185   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1405186   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1405187   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1405188   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1405189   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1405190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405191   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1405192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405193   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1405194   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1405195   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1405196   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1405197   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1405198   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1405199   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1405200   +END;
MPRINT(EM_DIAGRAM):   END;
1405201   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1405202   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1405203   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1405204   +drop
1405205   +H11
1405206   +H12
1405207   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1405208   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1405209   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1405210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405211   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1405212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405213   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1405214   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1405215   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1405216   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1405217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405218   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1405219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405220   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1405221   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1405222   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1405223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405224   +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
1405225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405227   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1405228   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1405229   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1405230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405231   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1405232   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1405233   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1405234   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1405235   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1405236   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1405237   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1405238   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1405239   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1405240   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1405241   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1405242   +LENGTH _WARN_ $4
1405243   +      F_DepVar  $ 12
1405244   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1405245   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1405246   +
1405247   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1405248   +
1405249   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1405250   +
1405251   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1405252   +
1405253   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1405254   +
1405255   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1405256   +
1405257   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1405258   +
1405259   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1405260   +
1405261   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1405262   +
1405263   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1405264   +
1405265   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1405266   +
1405267   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1405268   +
1405269   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1405270   +
1405271   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1405272   +
1405273   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1405274   +
1405275   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1405276   +
1405277   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1405278   +
1405279   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1405280   +
1405281   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1405282   +
1405283   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1405284   +
1405285   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1405286   +
1405287   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1405288   +
1405289   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1405290   +
1405291   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1405292   +
1405293   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1405294   +
1405295   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1405296   +
1405297   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1405298   +
1405299   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1405300   +
1405301   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1405302   +
1405303   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1405304   +
1405305   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1405306   +
1405307   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1405308   +
1405309   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1405310   +
1405311   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1405312   +
1405313   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1405314   +
1405315   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1405316   +
1405317   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1405318   +
1405319   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1405320   +
1405321   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1405322   +
1405323   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1405324   +
1405325   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1405326   +
1405327   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1405328   +
1405329   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1405330   +
1405331   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1405332   +
1405333   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1405334   +
1405335   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1405336   +
1405337   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1405338   +
1405339   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1405340   +
1405341   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1405342   +
1405343   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1405344   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1405345   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1405346   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1405347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405349   +end;
MPRINT(EM_DIAGRAM):   end;
1405350   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405351   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405352   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1405353   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405354   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1405355   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1405356   +   end;
MPRINT(EM_DIAGRAM):   end;
1405357   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1405358   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1405359   +   end;
MPRINT(EM_DIAGRAM):   end;
1405360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405361   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1405362   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405363   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405364   +   end;
MPRINT(EM_DIAGRAM):   end;
1405365   +end;
MPRINT(EM_DIAGRAM):   end;
1405366   +
1405367   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1405368   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1405369   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1405370   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1405371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405373   +end;
MPRINT(EM_DIAGRAM):   end;
1405374   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405375   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405376   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1405377   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405378   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1405379   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1405380   +   end;
MPRINT(EM_DIAGRAM):   end;
1405381   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1405382   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1405383   +   end;
MPRINT(EM_DIAGRAM):   end;
1405384   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405385   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1405386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405388   +   end;
MPRINT(EM_DIAGRAM):   end;
1405389   +end;
MPRINT(EM_DIAGRAM):   end;
1405390   +
1405391   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1405392   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1405393   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1405394   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1405395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405397   +end;
MPRINT(EM_DIAGRAM):   end;
1405398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405399   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405400   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1405401   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405402   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1405403   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1405404   +   end;
MPRINT(EM_DIAGRAM):   end;
1405405   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1405406   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1405407   +   end;
MPRINT(EM_DIAGRAM):   end;
1405408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405409   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1405410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405412   +   end;
MPRINT(EM_DIAGRAM):   end;
1405413   +end;
MPRINT(EM_DIAGRAM):   end;
1405414   +
1405415   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1405416   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1405417   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1405418   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1405419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405421   +end;
MPRINT(EM_DIAGRAM):   end;
1405422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405424   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1405425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405426   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1405427   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1405428   +   end;
MPRINT(EM_DIAGRAM):   end;
1405429   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1405430   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1405431   +   end;
MPRINT(EM_DIAGRAM):   end;
1405432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405433   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1405434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405436   +   end;
MPRINT(EM_DIAGRAM):   end;
1405437   +end;
MPRINT(EM_DIAGRAM):   end;
1405438   +
1405439   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1405440   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1405441   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1405442   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1405443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405445   +end;
MPRINT(EM_DIAGRAM):   end;
1405446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405447   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405448   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1405449   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405450   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1405451   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1405452   +   end;
MPRINT(EM_DIAGRAM):   end;
1405453   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1405454   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1405455   +   end;
MPRINT(EM_DIAGRAM):   end;
1405456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405457   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1405458   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405459   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405460   +   end;
MPRINT(EM_DIAGRAM):   end;
1405461   +end;
MPRINT(EM_DIAGRAM):   end;
1405462   +
1405463   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1405464   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1405465   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1405466   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1405467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405469   +end;
MPRINT(EM_DIAGRAM):   end;
1405470   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405471   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405472   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1405473   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405474   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1405475   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1405476   +   end;
MPRINT(EM_DIAGRAM):   end;
1405477   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1405478   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1405479   +   end;
MPRINT(EM_DIAGRAM):   end;
1405480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405481   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1405482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405484   +   end;
MPRINT(EM_DIAGRAM):   end;
1405485   +end;
MPRINT(EM_DIAGRAM):   end;
1405486   +
1405487   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1405488   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1405489   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1405490   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1405491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405493   +end;
MPRINT(EM_DIAGRAM):   end;
1405494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1405496   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1405497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405498   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1405499   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1405500   +   end;
MPRINT(EM_DIAGRAM):   end;
1405501   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1405502   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1405503   +   end;
MPRINT(EM_DIAGRAM):   end;
1405504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405505   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1405506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405508   +   end;
MPRINT(EM_DIAGRAM):   end;
1405509   +end;
MPRINT(EM_DIAGRAM):   end;
1405510   +
1405511   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1405512   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1405513   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1405514   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1405515   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1405516   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1405517   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1405518   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1405519   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1405520   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1405521   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1405522   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1405523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405525   +end;
MPRINT(EM_DIAGRAM):   end;
1405526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405527   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1405528   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1405529   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405530   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1405531   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1405532   +   end;
MPRINT(EM_DIAGRAM):   end;
1405533   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1405534   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1405535   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1405536   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1405537   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1405538   +   end;
MPRINT(EM_DIAGRAM):   end;
1405539   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1405540   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1405541   +   end;
MPRINT(EM_DIAGRAM):   end;
1405542   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1405543   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1405544   +   end;
MPRINT(EM_DIAGRAM):   end;
1405545   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1405546   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1405547   +   end;
MPRINT(EM_DIAGRAM):   end;
1405548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405549   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1405550   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1405551   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1405552   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1405553   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405554   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405555   +   end;
MPRINT(EM_DIAGRAM):   end;
1405556   +end;
MPRINT(EM_DIAGRAM):   end;
1405557   +
1405558   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1405559   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1405560   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1405561   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1405562   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1405563   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1405564   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1405565   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1405566   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1405567   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1405568   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1405569   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1405570   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1405571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1405572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405573   +end;
MPRINT(EM_DIAGRAM):   end;
1405574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405575   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1405576   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1405577   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405578   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1405579   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1405580   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1405581   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1405582   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1405583   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1405584   +         end;
MPRINT(EM_DIAGRAM):   end;
1405585   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1405586   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1405587   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1405588   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1405589   +            end;
MPRINT(EM_DIAGRAM):   end;
1405590   +         end;
MPRINT(EM_DIAGRAM):   end;
1405591   +      end;
MPRINT(EM_DIAGRAM):   end;
1405592   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1405593   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1405594   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1405595   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1405596   +         end;
MPRINT(EM_DIAGRAM):   end;
1405597   +      end;
MPRINT(EM_DIAGRAM):   end;
1405598   +   end;
MPRINT(EM_DIAGRAM):   end;
1405599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405600   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1405601   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1405602   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1405603   +      end;
MPRINT(EM_DIAGRAM):   end;
1405604   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1405605   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1405606   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1405607   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1405608   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1405609   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1405610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1405611   +         end;
MPRINT(EM_DIAGRAM):   end;
1405612   +      end;
MPRINT(EM_DIAGRAM):   end;
1405613   +   end;
MPRINT(EM_DIAGRAM):   end;
1405614   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1405615   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1405616   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1405617   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1405618   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1405619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1405620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405621   +   end;
MPRINT(EM_DIAGRAM):   end;
1405622   +end;
MPRINT(EM_DIAGRAM):   end;
1405623   +
1405624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405625   +*** Checking missing input Interval
1405626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1405627   +
1405628   +IF NMISS(
1405629   +   AcceptedCmpTotal ,
1405630   +   Age ,
1405631   +   Frq ,
1405632   +   Income ,
1405633   +   Kidhome ,
1405634   +   Mnt ,
1405635   +   MntFishProducts ,
1405636   +   MntFruits ,
1405637   +   MntGoldProds ,
1405638   +   MntMeatProducts ,
1405639   +   MntSweetProducts ,
1405640   +   MntWines ,
1405641   +   MonthsAsCustomer ,
1405642   +   NumCatalogPurchases ,
1405643   +   NumDealsPurchases ,
1405644   +   NumDistPurchases ,
1405645   +   NumStorePurchases ,
1405646   +   NumWebPurchases ,
1405647   +   NumWebVisitsMonth ,
1405648   +   RFMstat ,
1405649   +   RMntFrq ,
1405650   +   Recency ,
1405651   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1405652   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1405653   +
1405654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1405655   +END;
MPRINT(EM_DIAGRAM):   END;
1405656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405657   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1405658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405659   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1405660   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1405661   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1405662   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1405663   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1405664   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1405665   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1405666   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1405667   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1405668   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1405669   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1405670   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1405671   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1405672   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1405673   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1405674   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1405675   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1405676   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1405677   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1405678   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1405679   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1405680   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1405681   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1405682   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1405683   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1405684   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1405685   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1405686   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1405687   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1405688   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1405689   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1405690   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1405691   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1405692   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1405693   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1405694   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1405695   +END;
MPRINT(EM_DIAGRAM):   END;
1405696   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1405697   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1405698   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1405699   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1405700   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1405701   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1405702   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1405703   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1405704   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1405705   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1405706   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1405707   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1405708   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1405709   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1405710   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1405711   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1405712   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1405713   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1405714   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1405715   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1405716   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1405717   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1405718   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1405719   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1405720   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1405721   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1405722   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1405723   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1405724   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1405725   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1405726   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1405727   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1405728   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1405729   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1405730   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1405731   +   ELSE S_NumCatalogPurchases
1405732   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1405733   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1405734   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1405735   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1405736   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1405737   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1405738   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1405739   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1405740   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1405741   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1405742   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1405743   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1405744   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1405745   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1405746   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1405747   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1405748   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1405749   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1405750   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1405751   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1405752   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1405753   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1405754   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1405755   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1405756   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1405757   +END;
MPRINT(EM_DIAGRAM):   END;
1405758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405759   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1405760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405762   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1405763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405765   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1405766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405767   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1405768   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1405769   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1405770   +        S_Income  +     0.49557647195287 * S_Kidhome
1405771   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1405772   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1405773   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1405774   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1405775   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1405776   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1405777   +          +     1.29965538748336 * S_NumDealsPurchases
1405778   +          +     0.16818868463142 * S_NumDistPurchases
1405779   +          +    -0.64507792847411 * S_NumStorePurchases
1405780   +          +    -0.52243329275268 * S_NumWebPurchases
1405781   +          +     1.48521107923182 * S_NumWebVisitsMonth
1405782   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1405783   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1405784   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome +
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 *
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts +
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 *
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 *
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 *
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 *
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq +
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1405785   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1405786   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1405787   +        S_Income  +       0.536631748871 * S_Kidhome
1405788   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1405789   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1405790   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1405791   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1405792   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1405793   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1405794   +          +    -0.63220849663702 * S_NumDealsPurchases
1405795   +          +    -0.03517440588176 * S_NumDistPurchases
1405796   +          +     0.90435516280473 * S_NumStorePurchases
1405797   +          +     1.02540776095101 * S_NumWebPurchases
1405798   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1405799   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1405800   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1405801   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome +
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 *
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts +
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 *
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 *
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 *
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 *
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq +
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1405802   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1405803   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1405804   +        S_Income  +     0.45173611630992 * S_Kidhome
1405805   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1405806   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1405807   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1405808   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1405809   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1405810   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1405811   +          +     0.00572910064772 * S_NumDealsPurchases
1405812   +          +    -0.43545754325176 * S_NumDistPurchases
1405813   +          +     0.12831980635185 * S_NumStorePurchases
1405814   +          +     0.02223697618186 * S_NumWebPurchases
1405815   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1405816   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1405817   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1405818   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome +
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 *
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts +
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 *
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 *
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 *
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 *
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq +
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1405819   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1405820   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1405821   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1405822   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1405823   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 *
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 +
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 *
HigherEducationBinary0 ;
1405824   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1405825   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1405826   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1405827   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1405828   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 *
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 +
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 *
HigherEducationBinary0 ;
1405829   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1405830   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1405831   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1405832   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1405833   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 *
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 +
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 *
HigherEducationBinary0 ;
1405834   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1405835   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1405836   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1405837   +          +     0.14010081581672 * Marital_StatusDivorced
1405838   +          +     0.03574033044092 * Marital_StatusMarried
1405839   +          +    -0.14272769898675 * Marital_StatusSingle
1405840   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 *
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried +
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1405841   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1405842   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1405843   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1405844   +          +    -0.14878433798537 * Marital_StatusDivorced
1405845   +          +     0.14990226067603 * Marital_StatusMarried
1405846   +          +    -0.50903755449357 * Marital_StatusSingle
1405847   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 *
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried +
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1405848   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1405849   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1405850   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1405851   +          +    -0.52568922939912 * Marital_StatusDivorced
1405852   +          +     1.74121506979092 * Marital_StatusMarried
1405853   +          +    -1.16029880777095 * Marital_StatusSingle
1405854   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 *
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster +
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried +
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1405855   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1405856   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1405857   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1405858   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1405859   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1405860   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1405861   +END;
MPRINT(EM_DIAGRAM):   END;
1405862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1405863   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1405864   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1405865   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1405866   +END;
MPRINT(EM_DIAGRAM):   END;
1405867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405868   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1405869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405870   +
1405871   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1405872   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1405873   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1405874   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1405875   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1405876   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1405877   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1405878   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1405879   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1405880   +end;
MPRINT(EM_DIAGRAM):   end;
1405881   +else do;
MPRINT(EM_DIAGRAM):   else do;
1405882   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1405883   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1405884   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1405885   +   end;
MPRINT(EM_DIAGRAM):   end;
1405886   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1405887   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1405888   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1405889   +   end;
MPRINT(EM_DIAGRAM):   end;
1405890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1405891   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1405892   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1405893   +   end;
MPRINT(EM_DIAGRAM):   end;
1405894   +end;
MPRINT(EM_DIAGRAM):   end;
1405895   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1405896   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1405897   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 +
-3.01894159959464 * H13 ;
1405898   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1405899   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1405900   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1405901   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1405902   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1405903   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1405904   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1405905   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1405906   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1405907   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1405908   +END;
MPRINT(EM_DIAGRAM):   END;
1405909   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1405910   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1405911   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1405912   +END;
MPRINT(EM_DIAGRAM):   END;
1405913   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1405914   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1405915   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1405916   +END;
MPRINT(EM_DIAGRAM):   END;
1405917   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1405918   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1405919   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1405920   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1405921   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1405922   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1405923   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1405924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405925   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1405926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1405927   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1405928   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1405929   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1405930   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1405931   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1405932   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1405933   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1405934   +END;
MPRINT(EM_DIAGRAM):   END;
1405935   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1405936   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1405937   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1405938   +drop
1405939   +H11
1405940   +H12
1405941   +H13
1405942   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1405943   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1405944   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1405945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405946   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1405947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405948   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1405949   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1405950   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1405951   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1405952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405953   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1405954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405955   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1405956   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1405957   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1405958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405959   +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
1405960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405962   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1405963   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1405964   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1405965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1405966   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1405967   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1405968   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1405969   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1405970   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1405971   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1405972   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1405973   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1405974   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1405975   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1405976   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1405977   +LENGTH _WARN_ $4
1405978   +      F_DepVar  $ 12
1405979   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1405980   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1405981   +
1405982   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1405983   +
1405984   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1405985   +
1405986   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1405987   +
1405988   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1405989   +
1405990   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1405991   +
1405992   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1405993   +
1405994   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1405995   +
1405996   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1405997   +
1405998   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1405999   +
1406000   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1406001   +
1406002   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1406003   +
1406004   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1406005   +
1406006   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1406007   +
1406008   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1406009   +
1406010   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1406011   +
1406012   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1406013   +
1406014   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1406015   +
1406016   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1406017   +
1406018   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1406019   +
1406020   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1406021   +
1406022   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1406023   +
1406024   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1406025   +
1406026   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1406027   +
1406028   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1406029   +
1406030   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1406031   +
1406032   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1406033   +
1406034   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1406035   +
1406036   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1406037   +
1406038   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1406039   +
1406040   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1406041   +
1406042   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1406043   +
1406044   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1406045   +
1406046   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1406047   +
1406048   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1406049   +
1406050   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1406051   +
1406052   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1406053   +
1406054   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1406055   +
1406056   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1406057   +
1406058   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1406059   +
1406060   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1406061   +
1406062   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1406063   +
1406064   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1406065   +
1406066   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1406067   +
1406068   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1406069   +
1406070   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1406071   +
1406072   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1406073   +
1406074   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1406075   +
1406076   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1406077   +
1406078   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1406079   +
1406080   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1406081   +
1406082   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1406083   +
1406084   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1406085   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1406086   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1406087   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1406088   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406090   +end;
MPRINT(EM_DIAGRAM):   end;
1406091   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406092   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406093   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1406094   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406095   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406096   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1406097   +   end;
MPRINT(EM_DIAGRAM):   end;
1406098   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406099   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1406100   +   end;
MPRINT(EM_DIAGRAM):   end;
1406101   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406102   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1406103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406105   +   end;
MPRINT(EM_DIAGRAM):   end;
1406106   +end;
MPRINT(EM_DIAGRAM):   end;
1406107   +
1406108   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1406109   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1406110   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1406111   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1406112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406114   +end;
MPRINT(EM_DIAGRAM):   end;
1406115   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406116   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406117   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1406118   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406119   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406120   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1406121   +   end;
MPRINT(EM_DIAGRAM):   end;
1406122   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406123   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1406124   +   end;
MPRINT(EM_DIAGRAM):   end;
1406125   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406126   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1406127   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406128   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406129   +   end;
MPRINT(EM_DIAGRAM):   end;
1406130   +end;
MPRINT(EM_DIAGRAM):   end;
1406131   +
1406132   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1406133   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1406134   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1406135   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1406136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406138   +end;
MPRINT(EM_DIAGRAM):   end;
1406139   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406140   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406141   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1406142   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406143   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406144   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1406145   +   end;
MPRINT(EM_DIAGRAM):   end;
1406146   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406147   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1406148   +   end;
MPRINT(EM_DIAGRAM):   end;
1406149   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406150   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1406151   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406152   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406153   +   end;
MPRINT(EM_DIAGRAM):   end;
1406154   +end;
MPRINT(EM_DIAGRAM):   end;
1406155   +
1406156   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1406157   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1406158   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1406159   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1406160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406162   +end;
MPRINT(EM_DIAGRAM):   end;
1406163   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406164   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406165   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1406166   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406167   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406168   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1406169   +   end;
MPRINT(EM_DIAGRAM):   end;
1406170   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406171   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1406172   +   end;
MPRINT(EM_DIAGRAM):   end;
1406173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406174   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1406175   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406176   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406177   +   end;
MPRINT(EM_DIAGRAM):   end;
1406178   +end;
MPRINT(EM_DIAGRAM):   end;
1406179   +
1406180   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1406181   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1406182   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1406183   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1406184   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406185   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406186   +end;
MPRINT(EM_DIAGRAM):   end;
1406187   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406188   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406189   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1406190   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406191   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406192   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1406193   +   end;
MPRINT(EM_DIAGRAM):   end;
1406194   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406195   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1406196   +   end;
MPRINT(EM_DIAGRAM):   end;
1406197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406198   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1406199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406201   +   end;
MPRINT(EM_DIAGRAM):   end;
1406202   +end;
MPRINT(EM_DIAGRAM):   end;
1406203   +
1406204   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1406205   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1406206   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1406207   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1406208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406210   +end;
MPRINT(EM_DIAGRAM):   end;
1406211   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406213   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1406214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406215   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406216   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1406217   +   end;
MPRINT(EM_DIAGRAM):   end;
1406218   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406219   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1406220   +   end;
MPRINT(EM_DIAGRAM):   end;
1406221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406222   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1406223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406225   +   end;
MPRINT(EM_DIAGRAM):   end;
1406226   +end;
MPRINT(EM_DIAGRAM):   end;
1406227   +
1406228   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1406229   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1406230   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1406231   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1406232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406234   +end;
MPRINT(EM_DIAGRAM):   end;
1406235   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406236   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406237   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1406238   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406239   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1406240   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1406241   +   end;
MPRINT(EM_DIAGRAM):   end;
1406242   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1406243   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1406244   +   end;
MPRINT(EM_DIAGRAM):   end;
1406245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406246   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1406247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406249   +   end;
MPRINT(EM_DIAGRAM):   end;
1406250   +end;
MPRINT(EM_DIAGRAM):   end;
1406251   +
1406252   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1406253   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1406254   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1406255   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1406256   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1406257   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1406258   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1406259   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1406260   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1406261   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1406262   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1406263   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1406264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406266   +end;
MPRINT(EM_DIAGRAM):   end;
1406267   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406268   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1406269   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1406270   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406271   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1406272   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1406273   +   end;
MPRINT(EM_DIAGRAM):   end;
1406274   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1406275   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1406276   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1406277   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1406278   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1406279   +   end;
MPRINT(EM_DIAGRAM):   end;
1406280   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1406281   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1406282   +   end;
MPRINT(EM_DIAGRAM):   end;
1406283   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1406284   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1406285   +   end;
MPRINT(EM_DIAGRAM):   end;
1406286   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1406287   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1406288   +   end;
MPRINT(EM_DIAGRAM):   end;
1406289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406290   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1406291   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1406292   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1406293   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1406294   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406295   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406296   +   end;
MPRINT(EM_DIAGRAM):   end;
1406297   +end;
MPRINT(EM_DIAGRAM):   end;
1406298   +
1406299   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1406300   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1406301   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1406302   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1406303   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1406304   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1406305   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1406306   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1406307   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1406308   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1406309   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1406310   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1406311   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1406312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406314   +end;
MPRINT(EM_DIAGRAM):   end;
1406315   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406316   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1406317   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1406318   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406319   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1406320   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1406321   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1406322   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1406323   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1406324   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1406325   +         end;
MPRINT(EM_DIAGRAM):   end;
1406326   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1406327   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1406328   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1406329   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1406330   +            end;
MPRINT(EM_DIAGRAM):   end;
1406331   +         end;
MPRINT(EM_DIAGRAM):   end;
1406332   +      end;
MPRINT(EM_DIAGRAM):   end;
1406333   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1406334   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1406335   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1406336   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1406337   +         end;
MPRINT(EM_DIAGRAM):   end;
1406338   +      end;
MPRINT(EM_DIAGRAM):   end;
1406339   +   end;
MPRINT(EM_DIAGRAM):   end;
1406340   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406341   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1406342   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1406343   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1406344   +      end;
MPRINT(EM_DIAGRAM):   end;
1406345   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1406346   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1406347   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1406348   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1406349   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1406350   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1406351   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1406352   +         end;
MPRINT(EM_DIAGRAM):   end;
1406353   +      end;
MPRINT(EM_DIAGRAM):   end;
1406354   +   end;
MPRINT(EM_DIAGRAM):   end;
1406355   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1406356   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1406357   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1406358   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1406359   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1406360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406362   +   end;
MPRINT(EM_DIAGRAM):   end;
1406363   +end;
MPRINT(EM_DIAGRAM):   end;
1406364   +
1406365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406366   +*** Checking missing input Interval
1406367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1406368   +
1406369   +IF NMISS(
1406370   +   AcceptedCmpTotal ,
1406371   +   Age ,
1406372   +   Frq ,
1406373   +   Income ,
1406374   +   Kidhome ,
1406375   +   Mnt ,
1406376   +   MntFishProducts ,
1406377   +   MntFruits ,
1406378   +   MntGoldProds ,
1406379   +   MntMeatProducts ,
1406380   +   MntSweetProducts ,
1406381   +   MntWines ,
1406382   +   MonthsAsCustomer ,
1406383   +   NumCatalogPurchases ,
1406384   +   NumDealsPurchases ,
1406385   +   NumDistPurchases ,
1406386   +   NumStorePurchases ,
1406387   +   NumWebPurchases ,
1406388   +   NumWebVisitsMonth ,
1406389   +   RFMstat ,
1406390   +   RMntFrq ,
1406391   +   Recency ,
1406392   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1406393   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1406394   +
1406395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406396   +END;
MPRINT(EM_DIAGRAM):   END;
1406397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406398   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1406399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406400   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1406401   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1406402   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1406403   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1406404   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1406405   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1406406   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1406407   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1406408   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1406409   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1406410   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1406411   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1406412   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1406413   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1406414   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1406415   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1406416   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1406417   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1406418   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1406419   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1406420   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1406421   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1406422   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1406423   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1406424   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1406425   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1406426   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1406427   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1406428   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1406429   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1406430   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1406431   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1406432   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1406433   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1406434   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1406435   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1406436   +END;
MPRINT(EM_DIAGRAM):   END;
1406437   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1406438   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1406439   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1406440   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1406441   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1406442   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1406443   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1406444   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1406445   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1406446   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1406447   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1406448   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1406449   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1406450   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1406451   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1406452   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1406453   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1406454   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1406455   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1406456   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1406457   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1406458   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1406459   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1406460   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1406461   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1406462   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1406463   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1406464   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1406465   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1406466   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1406467   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1406468   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1406469   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1406470   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1406471   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1406472   +   ELSE S_NumCatalogPurchases
1406473   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1406474   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1406475   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1406476   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1406477   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1406478   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1406479   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1406480   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1406481   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1406482   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1406483   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1406484   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1406485   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1406486   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1406487   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1406488   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1406489   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1406490   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1406491   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1406492   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1406493   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1406494   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1406495   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1406496   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1406497   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1406498   +END;
MPRINT(EM_DIAGRAM):   END;
1406499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406500   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1406501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406503   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1406504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406506   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1406507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406508   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1406509   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1406510   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1406511   +        S_Income  +    -0.09693130155866 * S_Kidhome
1406512   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1406513   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1406514   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1406515   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1406516   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1406517   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1406518   +          +     0.87256063855463 * S_NumDealsPurchases
1406519   +          +     0.24228318068596 * S_NumDistPurchases
1406520   +          +    -0.65575177240856 * S_NumStorePurchases
1406521   +          +    -0.94105747825406 * S_NumWebPurchases
1406522   +          +     0.88098930350141 * S_NumWebVisitsMonth
1406523   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1406524   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1406525   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome +
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 *
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts +
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 *
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 *
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 *
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 *
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq +
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1406526   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1406527   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1406528   +        S_Income  +    -0.48351377369429 * S_Kidhome
1406529   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1406530   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1406531   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1406532   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1406533   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1406534   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1406535   +          +     0.19198092320653 * S_NumDealsPurchases
1406536   +          +    -0.01877290175933 * S_NumDistPurchases
1406537   +          +    -0.61698509852352 * S_NumStorePurchases
1406538   +          +    -0.36114842161331 * S_NumWebPurchases
1406539   +          +     0.87653599441887 * S_NumWebVisitsMonth
1406540   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1406541   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1406542   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age +
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome +
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 *
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts +
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 *
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 *
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 *
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 *
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq +
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1406543   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1406544   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1406545   +        S_Income  +    -0.03117320792997 * S_Kidhome
1406546   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1406547   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1406548   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1406549   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1406550   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1406551   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1406552   +          +    -0.17772008430544 * S_NumDealsPurchases
1406553   +          +    -0.24320624261016 * S_NumDistPurchases
1406554   +          +     0.42056923271106 * S_NumStorePurchases
1406555   +          +    -0.28718554863857 * S_NumWebPurchases
1406556   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1406557   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1406558   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1406559   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age +
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome +
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 *
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts +
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 *
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 *
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 *
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 *
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq +
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1406560   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1406561   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1406562   +        S_Income  +     -0.0433863245185 * S_Kidhome
1406563   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1406564   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1406565   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1406566   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1406567   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1406568   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1406569   +          +    -0.43652501997552 * S_NumDealsPurchases
1406570   +          +     0.17317052107867 * S_NumDistPurchases
1406571   +          +     0.23672921935551 * S_NumStorePurchases
1406572   +          +     0.49273989445476 * S_NumWebPurchases
1406573   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1406574   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1406575   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1406576   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age +
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome +
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 *
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts +
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 *
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 *
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 *
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 *
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq +
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1406577   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1406578   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1406579   +        S_Income  +     0.59347379159371 * S_Kidhome
1406580   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1406581   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1406582   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1406583   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1406584   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1406585   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1406586   +          +     0.06887104992711 * S_NumDealsPurchases
1406587   +          +    -0.03976087278251 * S_NumDistPurchases
1406588   +          +     -0.0289014951041 * S_NumStorePurchases
1406589   +          +    -0.08062500939119 * S_NumWebPurchases
1406590   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1406591   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1406592   +        S_RMntFrq  +       0.940313744576 * S_Recency
1406593   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome +
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 *
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts +
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 *
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 *
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 *
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 *
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq +
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1406594   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1406595   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1406596   +        S_Income  +    -0.55245961592835 * S_Kidhome
1406597   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1406598   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1406599   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1406600   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1406601   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1406602   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1406603   +          +    -0.50731731808528 * S_NumDealsPurchases
1406604   +          +     -0.4854662155502 * S_NumDistPurchases
1406605   +          +     0.21175181231244 * S_NumStorePurchases
1406606   +          +     0.04923223410585 * S_NumWebPurchases
1406607   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1406608   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1406609   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1406610   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome +
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 *
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts +
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 *
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 *
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 *
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 *
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq +
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1406611   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1406612   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1406613   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1406614   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1406615   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 *
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 +
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 *
HigherEducationBinary0 ;
1406616   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1406617   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1406618   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1406619   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1406620   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 *
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 +
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 *
HigherEducationBinary0 ;
1406621   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1406622   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1406623   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1406624   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1406625   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 *
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 +
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 *
HigherEducationBinary0 ;
1406626   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1406627   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1406628   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1406629   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1406630   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 *
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 +
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 *
HigherEducationBinary0 ;
1406631   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1406632   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1406633   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1406634   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1406635   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 *
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 +
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 *
HigherEducationBinary0 ;
1406636   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1406637   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1406638   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1406639   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1406640   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 *
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 +
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 *
HigherEducationBinary0 ;
1406641   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1406642   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1406643   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1406644   +          +     0.13102231169849 * Marital_StatusDivorced
1406645   +          +     0.13221932247035 * Marital_StatusMarried
1406646   +          +    -0.28666963919866 * Marital_StatusSingle
1406647   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 *
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster +
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried +
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1406648   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1406649   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1406650   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1406651   +          +     0.36873255525654 * Marital_StatusDivorced
1406652   +          +    -0.54422050380085 * Marital_StatusMarried
1406653   +          +     0.58130553469516 * Marital_StatusSingle
1406654   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 *
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried +
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1406655   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1406656   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1406657   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1406658   +          +    -0.07480235993304 * Marital_StatusDivorced
1406659   +          +     0.31705972445069 * Marital_StatusMarried
1406660   +          +    -0.08626328185895 * Marital_StatusSingle
1406661   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 *
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried +
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1406662   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1406663   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1406664   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1406665   +          +    -0.06733679615115 * Marital_StatusDivorced
1406666   +          +     0.23111557732379 * Marital_StatusMarried
1406667   +          +    -0.34379469870478 * Marital_StatusSingle
1406668   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 *
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried +
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1406669   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1406670   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1406671   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1406672   +          +    -0.07108588070668 * Marital_StatusDivorced
1406673   +          +     1.10060875265784 * Marital_StatusMarried
1406674   +          +    -0.74271327534863 * Marital_StatusSingle
1406675   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 *
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster +
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried +
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1406676   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1406677   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1406678   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1406679   +          +    -0.19461023827362 * Marital_StatusDivorced
1406680   +          +     -0.4165676037681 * Marital_StatusMarried
1406681   +          +     0.43379324993555 * Marital_StatusSingle
1406682   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 *
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried +
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1406683   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1406684   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1406685   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1406686   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1406687   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1406688   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1406689   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1406690   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1406691   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1406692   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1406693   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1406694   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1406695   +END;
MPRINT(EM_DIAGRAM):   END;
1406696   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1406697   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1406698   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1406699   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1406700   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1406701   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1406702   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1406703   +END;
MPRINT(EM_DIAGRAM):   END;
1406704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406705   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1406706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406707   +
1406708   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1406709   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1406710   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1406711   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1406712   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1406713   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406714   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1406715   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1406716   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1406717   +end;
MPRINT(EM_DIAGRAM):   end;
1406718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406719   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1406720   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1406721   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1406722   +   end;
MPRINT(EM_DIAGRAM):   end;
1406723   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1406724   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1406725   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1406726   +   end;
MPRINT(EM_DIAGRAM):   end;
1406727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406728   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1406729   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1406730   +   end;
MPRINT(EM_DIAGRAM):   end;
1406731   +end;
MPRINT(EM_DIAGRAM):   end;
1406732   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1406733   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1406734   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1406735   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 +
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 +
-2.08728996739757 * H16 ;
1406736   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1406737   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1406738   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1406739   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1406740   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1406741   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1406742   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1406743   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1406744   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1406745   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1406746   +END;
MPRINT(EM_DIAGRAM):   END;
1406747   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1406748   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1406749   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1406750   +END;
MPRINT(EM_DIAGRAM):   END;
1406751   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1406752   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1406753   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1406754   +END;
MPRINT(EM_DIAGRAM):   END;
1406755   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1406756   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1406757   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1406758   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1406759   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1406760   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1406761   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1406762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406763   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1406764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1406765   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1406766   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1406767   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1406768   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1406769   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1406770   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1406771   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1406772   +END;
MPRINT(EM_DIAGRAM):   END;
1406773   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1406774   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1406775   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1406776   +drop
1406777   +H11
1406778   +H12
1406779   +H13
1406780   +H14
1406781   +H15
1406782   +H16
1406783   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1406784   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1406785   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1406786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406787   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1406788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406789   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1406790   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1406791   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1406792   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1406793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406794   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1406795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406796   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1406797   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1406798   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1406799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406800   +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
1406801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406803   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1406804   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1406805   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1406806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1406807   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1406808   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1406809   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1406810   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1406811   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1406812   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1406813   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1406814   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1406815   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1406816   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1406817   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1406818   +LENGTH _WARN_ $4
1406819   +      F_DepVar  $ 12
1406820   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1406821   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1406822   +
1406823   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1406824   +
1406825   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1406826   +
1406827   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1406828   +
1406829   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1406830   +
1406831   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1406832   +
1406833   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1406834   +
1406835   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1406836   +
1406837   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1406838   +
1406839   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1406840   +
1406841   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1406842   +
1406843   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1406844   +
1406845   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1406846   +
1406847   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1406848   +
1406849   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1406850   +
1406851   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1406852   +
1406853   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1406854   +
1406855   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1406856   +
1406857   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1406858   +
1406859   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1406860   +
1406861   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1406862   +
1406863   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1406864   +
1406865   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1406866   +
1406867   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1406868   +
1406869   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1406870   +
1406871   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1406872   +
1406873   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1406874   +
1406875   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1406876   +
1406877   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1406878   +
1406879   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1406880   +
1406881   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1406882   +
1406883   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1406884   +
1406885   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1406886   +
1406887   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1406888   +
1406889   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1406890   +
1406891   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1406892   +
1406893   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1406894   +
1406895   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1406896   +
1406897   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1406898   +
1406899   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1406900   +
1406901   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1406902   +
1406903   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1406904   +
1406905   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1406906   +
1406907   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1406908   +
1406909   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1406910   +
1406911   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1406912   +
1406913   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1406914   +
1406915   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1406916   +
1406917   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1406918   +
1406919   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1406920   +
1406921   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1406922   +
1406923   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1406924   +
1406925   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1406926   +
1406927   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1406928   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1406929   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1406930   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1406931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406933   +end;
MPRINT(EM_DIAGRAM):   end;
1406934   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406935   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406936   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1406937   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406938   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406939   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1406940   +   end;
MPRINT(EM_DIAGRAM):   end;
1406941   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406942   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1406943   +   end;
MPRINT(EM_DIAGRAM):   end;
1406944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406945   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1406946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406948   +   end;
MPRINT(EM_DIAGRAM):   end;
1406949   +end;
MPRINT(EM_DIAGRAM):   end;
1406950   +
1406951   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1406952   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1406953   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1406954   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1406955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406957   +end;
MPRINT(EM_DIAGRAM):   end;
1406958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406960   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1406961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406962   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406963   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1406964   +   end;
MPRINT(EM_DIAGRAM):   end;
1406965   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406966   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1406967   +   end;
MPRINT(EM_DIAGRAM):   end;
1406968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406969   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1406970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406972   +   end;
MPRINT(EM_DIAGRAM):   end;
1406973   +end;
MPRINT(EM_DIAGRAM):   end;
1406974   +
1406975   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1406976   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1406977   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1406978   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1406979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1406980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406981   +end;
MPRINT(EM_DIAGRAM):   end;
1406982   +else do;
MPRINT(EM_DIAGRAM):   else do;
1406983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1406984   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1406985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1406986   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1406987   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1406988   +   end;
MPRINT(EM_DIAGRAM):   end;
1406989   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1406990   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1406991   +   end;
MPRINT(EM_DIAGRAM):   end;
1406992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1406993   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1406994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1406995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1406996   +   end;
MPRINT(EM_DIAGRAM):   end;
1406997   +end;
MPRINT(EM_DIAGRAM):   end;
1406998   +
1406999   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1407000   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1407001   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1407002   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1407003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407005   +end;
MPRINT(EM_DIAGRAM):   end;
1407006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1407008   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1407009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1407011   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1407012   +   end;
MPRINT(EM_DIAGRAM):   end;
1407013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1407014   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1407015   +   end;
MPRINT(EM_DIAGRAM):   end;
1407016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407017   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1407018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1407019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407020   +   end;
MPRINT(EM_DIAGRAM):   end;
1407021   +end;
MPRINT(EM_DIAGRAM):   end;
1407022   +
1407023   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1407024   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1407025   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1407026   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1407027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407029   +end;
MPRINT(EM_DIAGRAM):   end;
1407030   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1407032   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1407033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1407035   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1407036   +   end;
MPRINT(EM_DIAGRAM):   end;
1407037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1407038   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1407039   +   end;
MPRINT(EM_DIAGRAM):   end;
1407040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407041   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1407042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1407043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407044   +   end;
MPRINT(EM_DIAGRAM):   end;
1407045   +end;
MPRINT(EM_DIAGRAM):   end;
1407046   +
1407047   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1407048   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1407049   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1407050   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1407051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407053   +end;
MPRINT(EM_DIAGRAM):   end;
1407054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1407056   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1407057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1407059   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1407060   +   end;
MPRINT(EM_DIAGRAM):   end;
1407061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1407062   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1407063   +   end;
MPRINT(EM_DIAGRAM):   end;
1407064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407065   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1407066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1407067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407068   +   end;
MPRINT(EM_DIAGRAM):   end;
1407069   +end;
MPRINT(EM_DIAGRAM):   end;
1407070   +
1407071   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1407072   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1407073   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1407074   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1407075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407077   +end;
MPRINT(EM_DIAGRAM):   end;
1407078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1407080   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1407081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407082   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1407083   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1407084   +   end;
MPRINT(EM_DIAGRAM):   end;
1407085   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1407086   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1407087   +   end;
MPRINT(EM_DIAGRAM):   end;
1407088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407089   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1407090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1407091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407092   +   end;
MPRINT(EM_DIAGRAM):   end;
1407093   +end;
MPRINT(EM_DIAGRAM):   end;
1407094   +
1407095   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1407096   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1407097   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1407098   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1407099   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1407100   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1407101   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1407102   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1407103   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1407104   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1407105   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1407106   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1407107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407109   +end;
MPRINT(EM_DIAGRAM):   end;
1407110   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407111   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1407112   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1407113   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407114   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1407115   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1407116   +   end;
MPRINT(EM_DIAGRAM):   end;
1407117   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1407118   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1407119   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1407120   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1407121   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1407122   +   end;
MPRINT(EM_DIAGRAM):   end;
1407123   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1407124   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1407125   +   end;
MPRINT(EM_DIAGRAM):   end;
1407126   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1407127   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1407128   +   end;
MPRINT(EM_DIAGRAM):   end;
1407129   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1407130   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1407131   +   end;
MPRINT(EM_DIAGRAM):   end;
1407132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407133   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1407134   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1407135   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1407136   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1407137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1407138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407139   +   end;
MPRINT(EM_DIAGRAM):   end;
1407140   +end;
MPRINT(EM_DIAGRAM):   end;
1407141   +
1407142   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1407143   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1407144   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1407145   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1407146   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1407147   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1407148   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1407149   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1407150   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1407151   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1407152   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1407153   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1407154   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1407155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407157   +end;
MPRINT(EM_DIAGRAM):   end;
1407158   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407159   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1407160   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1407161   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407162   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1407163   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1407164   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1407165   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1407166   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1407167   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407168   +         end;
MPRINT(EM_DIAGRAM):   end;
1407169   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1407170   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1407171   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1407172   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407173   +            end;
MPRINT(EM_DIAGRAM):   end;
1407174   +         end;
MPRINT(EM_DIAGRAM):   end;
1407175   +      end;
MPRINT(EM_DIAGRAM):   end;
1407176   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1407177   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1407178   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1407179   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407180   +         end;
MPRINT(EM_DIAGRAM):   end;
1407181   +      end;
MPRINT(EM_DIAGRAM):   end;
1407182   +   end;
MPRINT(EM_DIAGRAM):   end;
1407183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407184   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1407185   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1407186   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407187   +      end;
MPRINT(EM_DIAGRAM):   end;
1407188   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1407189   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1407190   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1407191   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1407192   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1407193   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1407194   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407195   +         end;
MPRINT(EM_DIAGRAM):   end;
1407196   +      end;
MPRINT(EM_DIAGRAM):   end;
1407197   +   end;
MPRINT(EM_DIAGRAM):   end;
1407198   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1407199   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1407200   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1407201   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1407202   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1407203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1407204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407205   +   end;
MPRINT(EM_DIAGRAM):   end;
1407206   +end;
MPRINT(EM_DIAGRAM):   end;
1407207   +
1407208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407209   +*** Checking missing input Interval
1407210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1407211   +
1407212   +IF NMISS(
1407213   +   AcceptedCmpTotal ,
1407214   +   Age ,
1407215   +   Frq ,
1407216   +   Income ,
1407217   +   Kidhome ,
1407218   +   Mnt ,
1407219   +   MntFishProducts ,
1407220   +   MntFruits ,
1407221   +   MntGoldProds ,
1407222   +   MntMeatProducts ,
1407223   +   MntSweetProducts ,
1407224   +   MntWines ,
1407225   +   MonthsAsCustomer ,
1407226   +   NumCatalogPurchases ,
1407227   +   NumDealsPurchases ,
1407228   +   NumDistPurchases ,
1407229   +   NumStorePurchases ,
1407230   +   NumWebPurchases ,
1407231   +   NumWebVisitsMonth ,
1407232   +   RFMstat ,
1407233   +   RMntFrq ,
1407234   +   Recency ,
1407235   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1407236   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1407237   +
1407238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407239   +END;
MPRINT(EM_DIAGRAM):   END;
1407240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407241   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1407242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407243   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1407244   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1407245   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1407246   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1407247   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1407248   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1407249   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1407250   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1407251   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1407252   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1407253   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1407254   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1407255   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1407256   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1407257   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1407258   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1407259   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1407260   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1407261   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1407262   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1407263   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1407264   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1407265   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1407266   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1407267   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1407268   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1407269   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1407270   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1407271   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1407272   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1407273   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1407274   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1407275   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1407276   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1407277   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1407278   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1407279   +END;
MPRINT(EM_DIAGRAM):   END;
1407280   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1407281   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1407282   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1407283   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1407284   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1407285   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1407286   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1407287   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1407288   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1407289   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1407290   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1407291   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1407292   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1407293   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1407294   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1407295   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1407296   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1407297   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1407298   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1407299   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1407300   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1407301   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1407302   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1407303   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1407304   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1407305   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1407306   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1407307   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1407308   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1407309   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1407310   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1407311   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1407312   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1407313   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1407314   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1407315   +   ELSE S_NumCatalogPurchases
1407316   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1407317   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1407318   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1407319   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1407320   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1407321   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1407322   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1407323   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1407324   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1407325   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1407326   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1407327   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1407328   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1407329   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1407330   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1407331   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1407332   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1407333   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1407334   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1407335   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1407336   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1407337   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1407338   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1407339   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1407340   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1407341   +END;
MPRINT(EM_DIAGRAM):   END;
1407342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407343   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1407344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407346   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1407347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407349   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1407350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407351   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1407352   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1407353   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1407354   +        S_Income  +    -0.48552270697514 * S_Kidhome
1407355   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1407356   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1407357   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1407358   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1407359   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1407360   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1407361   +          +    -0.23083265836869 * S_NumDealsPurchases
1407362   +          +     0.18257445063797 * S_NumDistPurchases
1407363   +          +     0.38040778765927 * S_NumStorePurchases
1407364   +          +     0.25798779223068 * S_NumWebPurchases
1407365   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1407366   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1407367   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1407368   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome +
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 *
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts +
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 *
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 *
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 *
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 *
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq +
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1407369   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1407370   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1407371   +        S_Income  +     0.23694585796773 * S_Kidhome
1407372   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1407373   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1407374   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1407375   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1407376   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1407377   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1407378   +          +    -0.07783411363525 * S_NumDealsPurchases
1407379   +          +     0.41281579441285 * S_NumDistPurchases
1407380   +          +     0.22243606867939 * S_NumStorePurchases
1407381   +          +     0.27174952755013 * S_NumWebPurchases
1407382   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1407383   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1407384   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1407385   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome +
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 *
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts +
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 *
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 *
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 *
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 *
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq +
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1407386   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1407387   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1407388   +        S_Income  +     0.20802765248799 * S_Kidhome
1407389   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1407390   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1407391   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1407392   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1407393   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1407394   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1407395   +          +     0.09455783738093 * S_NumDealsPurchases
1407396   +          +    -0.06039304909585 * S_NumDistPurchases
1407397   +          +    -0.10306611685636 * S_NumStorePurchases
1407398   +          +    -0.00323837049664 * S_NumWebPurchases
1407399   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1407400   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1407401   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1407402   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome +
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 *
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts +
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 *
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 *
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 *
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 *
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq +
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1407403   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1407404   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1407405   +        S_Income  +     0.26381864865425 * S_Kidhome
1407406   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1407407   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1407408   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1407409   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1407410   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1407411   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1407412   +          +      0.8306613243419 * S_NumDealsPurchases
1407413   +          +     0.31439474207278 * S_NumDistPurchases
1407414   +          +    -0.62131474975756 * S_NumStorePurchases
1407415   +          +    -1.04845843654047 * S_NumWebPurchases
1407416   +          +     0.13255915506164 * S_NumWebVisitsMonth
1407417   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1407418   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1407419   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age +
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome +
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 *
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts +
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 *
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 *
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 *
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 *
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq +
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1407420   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1407421   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1407422   +        S_Income  +    -0.71599192201946 * S_Kidhome
1407423   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1407424   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1407425   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1407426   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1407427   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1407428   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1407429   +          +     0.63537278643623 * S_NumDealsPurchases
1407430   +          +     0.00410348485264 * S_NumDistPurchases
1407431   +          +    -0.78287523583925 * S_NumStorePurchases
1407432   +          +    -0.73614491225189 * S_NumWebPurchases
1407433   +          +      1.5997596522354 * S_NumWebVisitsMonth
1407434   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1407435   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1407436   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome +
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 *
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts +
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 *
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 *
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 *
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 *
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq +
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1407437   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1407438   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1407439   +        S_Income  +    -0.23853377939411 * S_Kidhome
1407440   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1407441   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1407442   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1407443   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1407444   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1407445   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1407446   +          +    -0.30899603957269 * S_NumDealsPurchases
1407447   +          +     0.11839581082877 * S_NumDistPurchases
1407448   +          +     0.20149797391098 * S_NumStorePurchases
1407449   +          +      0.1616654107491 * S_NumWebPurchases
1407450   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1407451   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1407452   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1407453   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome +
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 *
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts +
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 *
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 *
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 *
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 *
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq +
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1407454   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1407455   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1407456   +        S_Income  +    -0.48650790963695 * S_Kidhome
1407457   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1407458   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1407459   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1407460   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1407461   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1407462   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1407463   +          +    -0.18889005468777 * S_NumDealsPurchases
1407464   +          +     0.17240918361456 * S_NumDistPurchases
1407465   +          +     0.11704610685994 * S_NumStorePurchases
1407466   +          +     0.23031393640508 * S_NumWebPurchases
1407467   +          +     0.66002859819524 * S_NumWebVisitsMonth
1407468   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1407469   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1407470   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome +
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 *
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts +
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 *
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 *
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 *
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 *
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq +
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1407471   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1407472   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1407473   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1407474   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1407475   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 *
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 +
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 *
HigherEducationBinary0 ;
1407476   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1407477   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1407478   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1407479   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1407480   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 *
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 +
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 *
HigherEducationBinary0 ;
1407481   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1407482   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1407483   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1407484   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1407485   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 *
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 +
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 *
HigherEducationBinary0 ;
1407486   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1407487   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1407488   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1407489   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1407490   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 *
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 +
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 *
HigherEducationBinary0 ;
1407491   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1407492   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1407493   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1407494   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1407495   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 *
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 +
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 *
HigherEducationBinary0 ;
1407496   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1407497   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1407498   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1407499   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1407500   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 *
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 +
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 *
HigherEducationBinary0 ;
1407501   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1407502   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1407503   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1407504   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1407505   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 *
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 +
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 *
HigherEducationBinary0 ;
1407506   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1407507   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1407508   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1407509   +          +     0.43452164349556 * Marital_StatusDivorced
1407510   +          +    -0.46042593279944 * Marital_StatusMarried
1407511   +          +     0.45533323427801 * Marital_StatusSingle
1407512   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 *
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster +
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried +
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1407513   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1407514   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1407515   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1407516   +          +     0.11002244687305 * Marital_StatusDivorced
1407517   +          +     0.52424349905683 * Marital_StatusMarried
1407518   +          +     -0.3969250366321 * Marital_StatusSingle
1407519   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 *
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried +
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1407520   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1407521   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1407522   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1407523   +          +    -0.05300704180744 * Marital_StatusDivorced
1407524   +          +     0.07805487103106 * Marital_StatusMarried
1407525   +          +     0.20033339442958 * Marital_StatusSingle
1407526   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 *
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster +
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried +
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1407527   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1407528   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1407529   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1407530   +          +    -0.42379596543146 * Marital_StatusDivorced
1407531   +          +     0.66738351478416 * Marital_StatusMarried
1407532   +          +    -0.37324277578462 * Marital_StatusSingle
1407533   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 *
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster +
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried +
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1407534   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1407535   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1407536   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1407537   +          +     0.88761025578489 * Marital_StatusDivorced
1407538   +          +    -0.85905539883385 * Marital_StatusMarried
1407539   +          +     0.73467737758558 * Marital_StatusSingle
1407540   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 *
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried +
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1407541   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1407542   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1407543   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1407544   +          +    -0.11980818075461 * Marital_StatusDivorced
1407545   +          +    -0.16572953052582 * Marital_StatusMarried
1407546   +          +     0.34617421331983 * Marital_StatusSingle
1407547   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 *
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried +
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1407548   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1407549   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1407550   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1407551   +          +     0.14874886057777 * Marital_StatusDivorced
1407552   +          +     -1.0463076915992 * Marital_StatusMarried
1407553   +          +     0.72937563672763 * Marital_StatusSingle
1407554   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 *
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried +
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1407555   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1407556   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1407557   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1407558   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1407559   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1407560   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1407561   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1407562   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1407563   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1407564   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1407565   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1407566   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1407567   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1407568   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1407569   +END;
MPRINT(EM_DIAGRAM):   END;
1407570   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1407571   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1407572   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1407573   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1407574   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1407575   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1407576   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1407577   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1407578   +END;
MPRINT(EM_DIAGRAM):   END;
1407579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407580   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1407581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407582   +
1407583   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1407584   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1407585   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1407586   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1407587   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1407588   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407589   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1407590   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1407591   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1407592   +end;
MPRINT(EM_DIAGRAM):   end;
1407593   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407594   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1407595   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1407596   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1407597   +   end;
MPRINT(EM_DIAGRAM):   end;
1407598   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1407599   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1407600   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1407601   +   end;
MPRINT(EM_DIAGRAM):   end;
1407602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407603   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1407604   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1407605   +   end;
MPRINT(EM_DIAGRAM):   end;
1407606   +end;
MPRINT(EM_DIAGRAM):   end;
1407607   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1407608   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1407609   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1407610   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1407611   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 +
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 *
H16 + 2.19267705077374 * H17 ;
1407612   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1407613   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1407614   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1407615   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1407616   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1407617   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1407618   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1407619   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1407620   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1407621   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1407622   +END;
MPRINT(EM_DIAGRAM):   END;
1407623   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1407624   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1407625   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1407626   +END;
MPRINT(EM_DIAGRAM):   END;
1407627   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1407628   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1407629   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1407630   +END;
MPRINT(EM_DIAGRAM):   END;
1407631   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1407632   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1407633   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1407634   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1407635   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1407636   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1407637   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1407638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407639   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1407640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1407641   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1407642   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1407643   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1407644   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1407645   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1407646   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1407647   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1407648   +END;
MPRINT(EM_DIAGRAM):   END;
1407649   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1407650   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1407651   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1407652   +drop
1407653   +H11
1407654   +H12
1407655   +H13
1407656   +H14
1407657   +H15
1407658   +H16
1407659   +H17
1407660   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1407661   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1407662   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1407663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407664   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1407665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407666   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1407667   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1407668   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1407669   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1407670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407671   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1407672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407673   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1407674   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1407675   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1407676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407677   +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
1407678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407679   +P_DepVar1 = (
1407680   +Reg5_P_DepVar1 +
1407681   +Reg_P_DepVar1 +
1407682   +Neural4_P_DepVar1 +
1407683   +Neural2_P_DepVar1 +
1407684   +Neural3_P_DepVar1 +
1407685   +Neural9_P_DepVar1 +
1407686   +Neural10_P_DepVar1
1407687   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg5_P_DepVar1 + Reg_P_DepVar1 + Neural4_P_DepVar1 +
Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural9_P_DepVar1 + Neural10_P_DepVar1 )/7;
1407688   +P_DepVar0 = (
1407689   +Reg5_P_DepVar0 +
1407690   +Reg_P_DepVar0 +
1407691   +Neural4_P_DepVar0 +
1407692   +Neural2_P_DepVar0 +
1407693   +Neural3_P_DepVar0 +
1407694   +Neural9_P_DepVar0 +
1407695   +Neural10_P_DepVar0
1407696   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg5_P_DepVar0 + Reg_P_DepVar0 + Neural4_P_DepVar0 +
Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural9_P_DepVar0 + Neural10_P_DepVar0 )/7;
1407697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407698   +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
1407699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407700   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1407701   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1407702   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1407703   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1407704   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1407705   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1407706   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1407707   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1407708   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1407709   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1407710   +end;
MPRINT(EM_DIAGRAM):   end;
1407711   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1407712   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1407713   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1407714   +end;
MPRINT(EM_DIAGRAM):   end;
1407715   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1407716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407717   +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
1407718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407719   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1407720   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1407721   +else
1407722   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1407723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407724   +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
1407725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407726   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1407727   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1407728   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1407729   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1407730   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1407731   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1407732   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1407733   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1407734   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1407735   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1407736   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1407737   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1407738   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1407739   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1407740   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1407741   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1407742   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1407743   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1407744   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1407745   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1407746   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1407747   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1407748   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1407749   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1407750   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1407751   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1407752   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1407753   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1407753  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1407754   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1407754  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1407755   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1407755  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1407756   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1407756  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1407757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407758   +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
1407759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407760   +if
1407761   +F_DepVar NE '1'
1407762   +AND F_DepVar NE '0'
1407763   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1407764   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1407765   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1407766   +end;
MPRINT(EM_DIAGRAM):   end;
1407767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407768   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1407769   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1407770   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1407771   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1407772   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1407773   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1407774   +END;
MPRINT(EM_DIAGRAM):   END;
1407775   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1407776    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1407777    quit;
1407778    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1407779    filename emflow
1407779  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407780    *------------------------------------------------------------*;
1407781    * Ensmbl14: Scoring REG5_VALIDATE data;
1407782    *------------------------------------------------------------*;
1407783    data EMWS8.Ensmbl14_VALIDATE
1407784    / view=EMWS8.Ensmbl14_VALIDATE
1407785    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_VALIDATE / view=EMWS8.Ensmbl14_VALIDATE ;
1407786    set EMWS8.Reg5_VALIDATE
1407787    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1407788    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
1407789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407790   +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
1407791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407792   +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
1407793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407795   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1407796   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1407797   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1407798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407800   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1407801   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1407802   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1407803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407805   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1407806   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1407807   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1407808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407809   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407810   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1407811   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1407812   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1407813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407814   +
1407815   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1407816   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1407816  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1407817   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1407818   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1407819   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1407820   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1407821   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1407822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407823   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1407824   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1407825   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1407826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407828   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1407829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407830   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1407831   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1407832   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1407833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407834   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1407835   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1407836   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1407837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407839   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1407840   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1407841   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1407842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407844   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1407845   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1407846   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1407847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1407848   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1407849   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1407850   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1407851   +
1407852   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1407853   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1407854   +
1407855   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1407856   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1407857   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1407858   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1407859   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1407860   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1407861   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1407862   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1407863   +
1407864   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1407865   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1407866   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1407867   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1407868   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1407869   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407870   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1407871   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1407872   +end;
MPRINT(EM_DIAGRAM):   end;
1407873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407874   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1407875   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1407876   +   end;
MPRINT(EM_DIAGRAM):   end;
1407877   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1407878   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1407879   +   end;
MPRINT(EM_DIAGRAM):   end;
1407880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1407881   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1407882   +   end;
MPRINT(EM_DIAGRAM):   end;
1407883   +end;
MPRINT(EM_DIAGRAM):   end;
1407884   +
1407885   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1407886   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1407887   +
1407888   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1407889   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1407890   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407892   +end;
MPRINT(EM_DIAGRAM):   end;
1407893   +
1407894   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1407895   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1407896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407898   +end;
MPRINT(EM_DIAGRAM):   end;
1407899   +
1407900   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1407901   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1407902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407904   +end;
MPRINT(EM_DIAGRAM):   end;
1407905   +
1407906   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1407907   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1407908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407910   +end;
MPRINT(EM_DIAGRAM):   end;
1407911   +
1407912   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1407913   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1407914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407916   +end;
MPRINT(EM_DIAGRAM):   end;
1407917   +
1407918   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1407919   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1407920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407922   +end;
MPRINT(EM_DIAGRAM):   end;
1407923   +
1407924   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1407925   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1407926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407928   +end;
MPRINT(EM_DIAGRAM):   end;
1407929   +
1407930   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1407931   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1407932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407934   +end;
MPRINT(EM_DIAGRAM):   end;
1407935   +
1407936   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1407937   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1407938   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407940   +end;
MPRINT(EM_DIAGRAM):   end;
1407941   +
1407942   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1407943   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1407944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407946   +end;
MPRINT(EM_DIAGRAM):   end;
1407947   +
1407948   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1407949   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1407950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407952   +end;
MPRINT(EM_DIAGRAM):   end;
1407953   +
1407954   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1407955   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1407956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407958   +end;
MPRINT(EM_DIAGRAM):   end;
1407959   +
1407960   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1407961   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1407962   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1407963   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1407964   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1407965   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1407966   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1407967   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1407968   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1407969   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1407970   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1407971   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1407972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1407973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1407974   +end;
MPRINT(EM_DIAGRAM):   end;
1407975   +else do;
MPRINT(EM_DIAGRAM):   else do;
1407976   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1407977   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1407978   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1407979   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1407980   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1407981   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1407982   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1407983   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1407984   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407985   +         end;
MPRINT(EM_DIAGRAM):   end;
1407986   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1407987   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1407988   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1407989   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407990   +            end;
MPRINT(EM_DIAGRAM):   end;
1407991   +         end;
MPRINT(EM_DIAGRAM):   end;
1407992   +      end;
MPRINT(EM_DIAGRAM):   end;
1407993   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1407994   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1407995   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1407996   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1407997   +         end;
MPRINT(EM_DIAGRAM):   end;
1407998   +      end;
MPRINT(EM_DIAGRAM):   end;
1407999   +   end;
MPRINT(EM_DIAGRAM):   end;
1408000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408001   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1408002   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1408003   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408004   +      end;
MPRINT(EM_DIAGRAM):   end;
1408005   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1408006   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1408007   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1408008   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1408009   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1408010   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1408011   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408012   +         end;
MPRINT(EM_DIAGRAM):   end;
1408013   +      end;
MPRINT(EM_DIAGRAM):   end;
1408014   +   end;
MPRINT(EM_DIAGRAM):   end;
1408015   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1408016   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1408017   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1408018   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1408019   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1408020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408022   +   end;
MPRINT(EM_DIAGRAM):   end;
1408023   +end;
MPRINT(EM_DIAGRAM):   end;
1408024   +
1408025   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1408026   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1408027   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1408028   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1408029   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1408030   +end;
MPRINT(EM_DIAGRAM):   end;
1408031   +
1408032   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1408033   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1408034   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1408035   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1408036   +
1408037   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1408038   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1408039   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1408040   +
1408041   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1408042   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1408043   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1408044   +
1408045   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1408046   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1408047   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1408048   +
1408049   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1408050   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1408051   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1408052   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1408053   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1408054   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1408055   +
1408056   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1408057   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1408058   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1408059   +
1408060   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1408061   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1408062   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1408063   +
1408064   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1408065   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1408066   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1408067   +
1408068   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1408069   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1408070   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1408071   +
1408072   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1408073   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1408074   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1408075   +
1408076   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1408077   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1408078   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1408079   +
1408080   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1408081   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1408082   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1408083   +
1408084   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1408085   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1408086   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1408087   +
1408088   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1408089   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1408090   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1408091   +
1408092   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1408093   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1408094   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1408095   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1408096   +
1408097   +REG5DR1:
1408098   +
1408099   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1408100   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1408101   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1408102   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1408103   +end;
MPRINT(EM_DIAGRAM):   end;
1408104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408105   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1408106   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1408107   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1408108   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1408109   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1408110   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1408111   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1408112   +   end;
MPRINT(EM_DIAGRAM):   end;
1408113   +end;
MPRINT(EM_DIAGRAM):   end;
1408114   +
1408115   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1408116   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1408117   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1408118   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1408119   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1408120   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1408121   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1408122   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1408123   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1408124   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1408125   +end;
MPRINT(EM_DIAGRAM):   end;
1408126   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1408127   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1408128   +
1408129   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1408130   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1408131   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1408132   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1408133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408134   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1408135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408136   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1408137   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1408138   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1408139   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1408140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408141   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1408142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408143   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1408144   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1408145   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1408146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408147   +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
1408148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408150   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1408151   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1408152   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1408153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408154   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1408155   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1408156   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1408157   +
1408158   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1408159   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1408160   +
1408161   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1408162   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1408163   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1408164   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1408165   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1408166   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1408167   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1408168   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1408169   +
1408170   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1408171   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1408172   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1408173   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1408174   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1408175   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408176   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1408177   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1408178   +end;
MPRINT(EM_DIAGRAM):   end;
1408179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408180   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1408181   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1408182   +   end;
MPRINT(EM_DIAGRAM):   end;
1408183   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1408184   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1408185   +   end;
MPRINT(EM_DIAGRAM):   end;
1408186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408187   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1408188   +   end;
MPRINT(EM_DIAGRAM):   end;
1408189   +end;
MPRINT(EM_DIAGRAM):   end;
1408190   +
1408191   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1408192   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1408193   +
1408194   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1408195   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1408196   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408198   +end;
MPRINT(EM_DIAGRAM):   end;
1408199   +
1408200   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1408201   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1408202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408204   +end;
MPRINT(EM_DIAGRAM):   end;
1408205   +
1408206   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1408207   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1408208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408210   +end;
MPRINT(EM_DIAGRAM):   end;
1408211   +
1408212   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1408213   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1408214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408216   +end;
MPRINT(EM_DIAGRAM):   end;
1408217   +
1408218   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1408219   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1408220   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408221   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408222   +end;
MPRINT(EM_DIAGRAM):   end;
1408223   +
1408224   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1408225   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1408226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408228   +end;
MPRINT(EM_DIAGRAM):   end;
1408229   +
1408230   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1408231   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1408232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408234   +end;
MPRINT(EM_DIAGRAM):   end;
1408235   +
1408236   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1408237   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1408238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408240   +end;
MPRINT(EM_DIAGRAM):   end;
1408241   +
1408242   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1408243   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1408244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408246   +end;
MPRINT(EM_DIAGRAM):   end;
1408247   +
1408248   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1408249   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1408250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408252   +end;
MPRINT(EM_DIAGRAM):   end;
1408253   +
1408254   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1408255   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1408256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408258   +end;
MPRINT(EM_DIAGRAM):   end;
1408259   +
1408260   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1408261   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1408262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408264   +end;
MPRINT(EM_DIAGRAM):   end;
1408265   +
1408266   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1408267   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1408268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408270   +end;
MPRINT(EM_DIAGRAM):   end;
1408271   +
1408272   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1408273   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1408274   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1408275   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1408276   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1408277   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1408278   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1408279   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1408280   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1408281   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1408282   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1408283   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1408284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408286   +end;
MPRINT(EM_DIAGRAM):   end;
1408287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408288   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1408289   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1408290   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408291   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1408292   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1408293   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1408294   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1408295   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1408296   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408297   +         end;
MPRINT(EM_DIAGRAM):   end;
1408298   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1408299   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1408300   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1408301   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408302   +            end;
MPRINT(EM_DIAGRAM):   end;
1408303   +         end;
MPRINT(EM_DIAGRAM):   end;
1408304   +      end;
MPRINT(EM_DIAGRAM):   end;
1408305   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1408306   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1408307   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1408308   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408309   +         end;
MPRINT(EM_DIAGRAM):   end;
1408310   +      end;
MPRINT(EM_DIAGRAM):   end;
1408311   +   end;
MPRINT(EM_DIAGRAM):   end;
1408312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408313   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1408314   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1408315   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408316   +      end;
MPRINT(EM_DIAGRAM):   end;
1408317   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1408318   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1408319   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1408320   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1408321   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1408322   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1408323   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408324   +         end;
MPRINT(EM_DIAGRAM):   end;
1408325   +      end;
MPRINT(EM_DIAGRAM):   end;
1408326   +   end;
MPRINT(EM_DIAGRAM):   end;
1408327   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1408328   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1408329   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1408330   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1408331   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1408332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408334   +   end;
MPRINT(EM_DIAGRAM):   end;
1408335   +end;
MPRINT(EM_DIAGRAM):   end;
1408336   +
1408337   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1408338   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1408339   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1408340   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1408341   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1408342   +end;
MPRINT(EM_DIAGRAM):   end;
1408343   +
1408344   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1408345   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1408346   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1408347   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1408348   +
1408349   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1408350   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1408351   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1408352   +
1408353   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1408354   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1408355   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1408356   +
1408357   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1408358   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1408359   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1408360   +
1408361   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1408362   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1408363   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1408364   +
1408365   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1408366   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1408367   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1408368   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1408369   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1408370   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1408371   +
1408372   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1408373   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1408374   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1408375   +
1408376   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1408377   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1408378   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1408379   +
1408380   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1408381   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1408382   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1408383   +
1408384   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1408385   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1408386   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1408387   +
1408388   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1408389   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1408390   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1408391   +
1408392   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1408393   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1408394   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1408395   +
1408396   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1408397   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1408398   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1408399   +
1408400   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1408401   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1408402   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1408403   +
1408404   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1408405   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1408406   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1408407   +
1408408   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1408409   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1408410   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1408411   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1408412   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1408413   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1408414   +end;
MPRINT(EM_DIAGRAM):   end;
1408415   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1408416   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1408417   +
1408418   +REGDR1:
1408419   +
1408420   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1408421   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1408422   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1408423   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1408424   +end;
MPRINT(EM_DIAGRAM):   end;
1408425   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408426   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1408427   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1408428   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1408429   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1408430   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1408431   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1408432   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1408433   +   end;
MPRINT(EM_DIAGRAM):   end;
1408434   +end;
MPRINT(EM_DIAGRAM):   end;
1408435   +
1408436   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1408437   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1408438   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1408439   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1408440   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1408441   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1408442   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1408443   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1408444   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1408445   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1408446   +end;
MPRINT(EM_DIAGRAM):   end;
1408447   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1408448   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1408449   +
1408450   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1408451   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1408452   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1408453   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1408454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408455   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1408456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408457   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1408458   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1408459   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1408460   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1408461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408462   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1408463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408464   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1408465   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1408466   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1408467   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408468   +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
1408469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408471   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1408472   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1408473   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1408474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1408475   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1408476   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1408477   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1408478   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1408479   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1408480   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1408481   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1408482   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1408483   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1408484   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1408485   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1408486   +LENGTH _WARN_ $4
1408487   +      F_DepVar  $ 12
1408488   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1408489   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1408490   +
1408491   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1408492   +
1408493   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1408494   +
1408495   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1408496   +
1408497   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1408498   +
1408499   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1408500   +
1408501   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1408502   +
1408503   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1408504   +
1408505   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1408506   +
1408507   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1408508   +
1408509   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1408510   +
1408511   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1408512   +
1408513   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1408514   +
1408515   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1408516   +
1408517   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1408518   +
1408519   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1408520   +
1408521   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1408522   +
1408523   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1408524   +
1408525   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1408526   +
1408527   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1408528   +
1408529   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1408530   +
1408531   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1408532   +
1408533   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1408534   +
1408535   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1408536   +
1408537   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1408538   +
1408539   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1408540   +
1408541   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1408542   +
1408543   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1408544   +
1408545   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1408546   +
1408547   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1408548   +
1408549   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1408550   +
1408551   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1408552   +
1408553   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1408554   +
1408555   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1408556   +
1408557   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1408558   +
1408559   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1408560   +
1408561   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1408562   +
1408563   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1408564   +
1408565   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1408566   +
1408567   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1408568   +
1408569   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1408570   +
1408571   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1408572   +
1408573   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1408574   +
1408575   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1408576   +
1408577   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1408578   +
1408579   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1408580   +
1408581   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1408582   +
1408583   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1408584   +
1408585   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1408586   +
1408587   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1408588   +
1408589   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1408590   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1408591   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1408592   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1408593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408595   +end;
MPRINT(EM_DIAGRAM):   end;
1408596   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408597   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408598   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1408599   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408600   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1408601   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1408602   +   end;
MPRINT(EM_DIAGRAM):   end;
1408603   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1408604   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1408605   +   end;
MPRINT(EM_DIAGRAM):   end;
1408606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408607   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1408608   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408609   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408610   +   end;
MPRINT(EM_DIAGRAM):   end;
1408611   +end;
MPRINT(EM_DIAGRAM):   end;
1408612   +
1408613   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1408614   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1408615   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1408616   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1408617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408619   +end;
MPRINT(EM_DIAGRAM):   end;
1408620   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408621   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408622   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1408623   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408624   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1408625   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1408626   +   end;
MPRINT(EM_DIAGRAM):   end;
1408627   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1408628   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1408629   +   end;
MPRINT(EM_DIAGRAM):   end;
1408630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408631   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1408632   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408633   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408634   +   end;
MPRINT(EM_DIAGRAM):   end;
1408635   +end;
MPRINT(EM_DIAGRAM):   end;
1408636   +
1408637   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1408638   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1408639   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1408640   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1408641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408643   +end;
MPRINT(EM_DIAGRAM):   end;
1408644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408646   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1408647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408648   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1408649   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1408650   +   end;
MPRINT(EM_DIAGRAM):   end;
1408651   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1408652   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1408653   +   end;
MPRINT(EM_DIAGRAM):   end;
1408654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408655   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1408656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408658   +   end;
MPRINT(EM_DIAGRAM):   end;
1408659   +end;
MPRINT(EM_DIAGRAM):   end;
1408660   +
1408661   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1408662   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1408663   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1408664   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1408665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408667   +end;
MPRINT(EM_DIAGRAM):   end;
1408668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408670   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1408671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408672   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1408673   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1408674   +   end;
MPRINT(EM_DIAGRAM):   end;
1408675   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1408676   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1408677   +   end;
MPRINT(EM_DIAGRAM):   end;
1408678   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408679   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1408680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408682   +   end;
MPRINT(EM_DIAGRAM):   end;
1408683   +end;
MPRINT(EM_DIAGRAM):   end;
1408684   +
1408685   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1408686   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1408687   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1408688   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1408689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408691   +end;
MPRINT(EM_DIAGRAM):   end;
1408692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408694   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1408695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408696   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1408697   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1408698   +   end;
MPRINT(EM_DIAGRAM):   end;
1408699   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1408700   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1408701   +   end;
MPRINT(EM_DIAGRAM):   end;
1408702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408703   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1408704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408706   +   end;
MPRINT(EM_DIAGRAM):   end;
1408707   +end;
MPRINT(EM_DIAGRAM):   end;
1408708   +
1408709   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1408710   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1408711   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1408712   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1408713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408715   +end;
MPRINT(EM_DIAGRAM):   end;
1408716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408718   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1408719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408720   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1408721   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1408722   +   end;
MPRINT(EM_DIAGRAM):   end;
1408723   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1408724   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1408725   +   end;
MPRINT(EM_DIAGRAM):   end;
1408726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408727   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1408728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408730   +   end;
MPRINT(EM_DIAGRAM):   end;
1408731   +end;
MPRINT(EM_DIAGRAM):   end;
1408732   +
1408733   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1408734   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1408735   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1408736   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1408737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408739   +end;
MPRINT(EM_DIAGRAM):   end;
1408740   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1408742   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1408743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408744   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1408745   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1408746   +   end;
MPRINT(EM_DIAGRAM):   end;
1408747   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1408748   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1408749   +   end;
MPRINT(EM_DIAGRAM):   end;
1408750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408751   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1408752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408754   +   end;
MPRINT(EM_DIAGRAM):   end;
1408755   +end;
MPRINT(EM_DIAGRAM):   end;
1408756   +
1408757   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1408758   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1408759   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1408760   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1408761   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1408762   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1408763   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1408764   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1408765   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1408766   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1408767   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1408768   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1408769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408771   +end;
MPRINT(EM_DIAGRAM):   end;
1408772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408773   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1408774   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1408775   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408776   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1408777   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1408778   +   end;
MPRINT(EM_DIAGRAM):   end;
1408779   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1408780   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1408781   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1408782   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1408783   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1408784   +   end;
MPRINT(EM_DIAGRAM):   end;
1408785   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1408786   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1408787   +   end;
MPRINT(EM_DIAGRAM):   end;
1408788   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1408789   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1408790   +   end;
MPRINT(EM_DIAGRAM):   end;
1408791   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1408792   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1408793   +   end;
MPRINT(EM_DIAGRAM):   end;
1408794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408795   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1408796   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1408797   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1408798   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1408799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408801   +   end;
MPRINT(EM_DIAGRAM):   end;
1408802   +end;
MPRINT(EM_DIAGRAM):   end;
1408803   +
1408804   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1408805   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1408806   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1408807   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1408808   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1408809   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1408810   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1408811   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1408812   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1408813   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1408814   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1408815   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1408816   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1408817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1408818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408819   +end;
MPRINT(EM_DIAGRAM):   end;
1408820   +else do;
MPRINT(EM_DIAGRAM):   else do;
1408821   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1408822   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1408823   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1408824   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1408825   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1408826   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1408827   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1408828   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1408829   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408830   +         end;
MPRINT(EM_DIAGRAM):   end;
1408831   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1408832   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1408833   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1408834   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408835   +            end;
MPRINT(EM_DIAGRAM):   end;
1408836   +         end;
MPRINT(EM_DIAGRAM):   end;
1408837   +      end;
MPRINT(EM_DIAGRAM):   end;
1408838   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1408839   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1408840   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1408841   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408842   +         end;
MPRINT(EM_DIAGRAM):   end;
1408843   +      end;
MPRINT(EM_DIAGRAM):   end;
1408844   +   end;
MPRINT(EM_DIAGRAM):   end;
1408845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1408846   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1408847   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1408848   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408849   +      end;
MPRINT(EM_DIAGRAM):   end;
1408850   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1408851   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1408852   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1408853   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1408854   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1408855   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1408856   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1408857   +         end;
MPRINT(EM_DIAGRAM):   end;
1408858   +      end;
MPRINT(EM_DIAGRAM):   end;
1408859   +   end;
MPRINT(EM_DIAGRAM):   end;
1408860   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1408861   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1408862   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1408863   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1408864   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1408865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1408866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408867   +   end;
MPRINT(EM_DIAGRAM):   end;
1408868   +end;
MPRINT(EM_DIAGRAM):   end;
1408869   +
1408870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1408871   +*** Checking missing input Interval
1408872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1408873   +
1408874   +IF NMISS(
1408875   +   AcceptedCmpTotal ,
1408876   +   Age ,
1408877   +   Frq ,
1408878   +   Income ,
1408879   +   Kidhome ,
1408880   +   Mnt ,
1408881   +   MntFishProducts ,
1408882   +   MntFruits ,
1408883   +   MntGoldProds ,
1408884   +   MntMeatProducts ,
1408885   +   MntSweetProducts ,
1408886   +   MntWines ,
1408887   +   MonthsAsCustomer ,
1408888   +   NumCatalogPurchases ,
1408889   +   NumDealsPurchases ,
1408890   +   NumDistPurchases ,
1408891   +   NumStorePurchases ,
1408892   +   NumWebPurchases ,
1408893   +   NumWebVisitsMonth ,
1408894   +   RFMstat ,
1408895   +   RMntFrq ,
1408896   +   Recency ,
1408897   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1408898   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1408899   +
1408900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1408901   +END;
MPRINT(EM_DIAGRAM):   END;
1408902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1408903   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1408904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1408905   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1408906   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1408907   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1408908   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1408909   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1408910   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1408911   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1408912   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1408913   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1408914   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1408915   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1408916   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1408917   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1408918   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1408919   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1408920   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1408921   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1408922   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1408923   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1408924   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1408925   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1408926   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1408927   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1408928   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1408929   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1408930   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1408931   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1408932   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1408933   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1408934   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1408935   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1408936   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1408937   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1408938   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1408939   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1408940   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1408941   +END;
MPRINT(EM_DIAGRAM):   END;
1408942   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1408943   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1408944   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1408945   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1408946   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1408947   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1408948   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1408949   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1408950   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1408951   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1408952   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1408953   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1408954   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1408955   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1408956   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1408957   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1408958   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1408959   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1408960   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1408961   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1408962   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1408963   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1408964   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1408965   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1408966   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1408967   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1408968   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1408969   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1408970   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1408971   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1408972   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1408973   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1408974   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1408975   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1408976   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1408977   +   ELSE S_NumCatalogPurchases
1408978   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1408979   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1408980   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1408981   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1408982   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1408983   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1408984   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1408985   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1408986   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1408987   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1408988   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1408989   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1408990   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1408991   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1408992   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1408993   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1408994   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1408995   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1408996   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1408997   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1408998   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1408999   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1409000   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1409001   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1409002   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1409003   +END;
MPRINT(EM_DIAGRAM):   END;
1409004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409005   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1409006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409008   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1409009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409011   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1409012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409013   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1409014   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1409015   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1409016   +        S_Income  +    -0.76740176580734 * S_Kidhome
1409017   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1409018   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1409019   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1409020   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1409021   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1409022   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1409023   +          +    -1.00050516074089 * S_NumDealsPurchases
1409024   +          +    -0.89322788176916 * S_NumDistPurchases
1409025   +          +     1.21914397196653 * S_NumStorePurchases
1409026   +          +     1.50867172673665 * S_NumWebPurchases
1409027   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1409028   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1409029   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1409030   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome +
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 *
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts +
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 *
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 *
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 *
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 *
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq +
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1409031   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1409032   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1409033   +        S_Income  +    -0.76288911429735 * S_Kidhome
1409034   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1409035   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1409036   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1409037   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1409038   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1409039   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1409040   +          +     0.79497206561332 * S_NumDealsPurchases
1409041   +          +    -0.13658888199464 * S_NumDistPurchases
1409042   +          +    -0.86436416316417 * S_NumStorePurchases
1409043   +          +    -0.85206550087617 * S_NumWebPurchases
1409044   +          +     1.72745004688732 * S_NumWebVisitsMonth
1409045   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1409046   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1409047   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age +
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome +
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 *
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts +
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 *
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 *
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 *
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 *
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq +
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1409048   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1409049   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1409050   +        S_Income  +    -0.48841499166688 * S_Kidhome
1409051   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1409052   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1409053   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1409054   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1409055   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1409056   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1409057   +          +    -0.00010125986409 * S_NumDealsPurchases
1409058   +          +    -0.00873530900019 * S_NumDistPurchases
1409059   +          +    -0.13188135131414 * S_NumStorePurchases
1409060   +          +    -0.10710067608125 * S_NumWebPurchases
1409061   +          +     0.99164053465149 * S_NumWebVisitsMonth
1409062   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1409063   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1409064   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age +
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome +
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 *
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts +
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 *
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 *
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 *
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 *
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq +
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1409065   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1409066   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1409067   +        S_Income  +    -0.57026847797175 * S_Kidhome
1409068   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1409069   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1409070   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1409071   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1409072   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1409073   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1409074   +          +     0.83618651452015 * S_NumDealsPurchases
1409075   +          +     0.22469306589917 * S_NumDistPurchases
1409076   +          +    -0.95889459414769 * S_NumStorePurchases
1409077   +          +    -0.95695646799114 * S_NumWebPurchases
1409078   +          +     0.96738689790948 * S_NumWebVisitsMonth
1409079   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1409080   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1409081   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome +
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 *
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts +
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 *
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 *
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 *
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 *
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq +
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1409082   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1409083   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1409084   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1409085   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1409086   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 *
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 +
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 *
HigherEducationBinary0 ;
1409087   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1409088   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1409089   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1409090   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1409091   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 *
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 +
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 *
HigherEducationBinary0 ;
1409092   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1409093   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1409094   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1409095   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1409096   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 *
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 +
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 *
HigherEducationBinary0 ;
1409097   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1409098   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1409099   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1409100   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1409101   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 *
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 +
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 *
HigherEducationBinary0 ;
1409102   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1409103   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1409104   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1409105   +          +     0.80885454992674 * Marital_StatusDivorced
1409106   +          +     -0.5568630572283 * Marital_StatusMarried
1409107   +          +    -0.03099047176508 * Marital_StatusSingle
1409108   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 *
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster +
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried +
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1409109   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1409110   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1409111   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1409112   +          +     0.13911597069393 * Marital_StatusDivorced
1409113   +          +    -1.50081060732787 * Marital_StatusMarried
1409114   +          +     1.41717012231539 * Marital_StatusSingle
1409115   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 *
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried +
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1409116   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1409117   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1409118   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1409119   +          +    -0.26412736340464 * Marital_StatusDivorced
1409120   +          +    -0.27049992388629 * Marital_StatusMarried
1409121   +          +     0.67476795725099 * Marital_StatusSingle
1409122   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 *
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried +
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1409123   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1409124   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1409125   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1409126   +          +      0.8954230457499 * Marital_StatusDivorced
1409127   +          +     0.73706556068242 * Marital_StatusMarried
1409128   +          +    -1.29073720538893 * Marital_StatusSingle
1409129   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 *
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried +
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1409130   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1409131   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1409132   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1409133   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1409134   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1409135   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1409136   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1409137   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1409138   +END;
MPRINT(EM_DIAGRAM):   END;
1409139   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1409140   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1409141   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1409142   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1409143   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1409144   +END;
MPRINT(EM_DIAGRAM):   END;
1409145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409146   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1409147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409148   +
1409149   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1409150   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1409151   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1409152   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1409153   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1409154   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409155   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1409156   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1409157   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1409158   +end;
MPRINT(EM_DIAGRAM):   end;
1409159   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409160   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1409161   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1409162   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1409163   +   end;
MPRINT(EM_DIAGRAM):   end;
1409164   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1409165   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1409166   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1409167   +   end;
MPRINT(EM_DIAGRAM):   end;
1409168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409169   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1409170   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1409171   +   end;
MPRINT(EM_DIAGRAM):   end;
1409172   +end;
MPRINT(EM_DIAGRAM):   end;
1409173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1409174   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1409175   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 +
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1409176   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1409177   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1409178   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1409179   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1409180   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1409181   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1409182   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1409183   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1409184   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1409185   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1409186   +END;
MPRINT(EM_DIAGRAM):   END;
1409187   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1409188   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1409189   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1409190   +END;
MPRINT(EM_DIAGRAM):   END;
1409191   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1409192   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1409193   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1409194   +END;
MPRINT(EM_DIAGRAM):   END;
1409195   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1409196   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1409197   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1409198   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1409199   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1409200   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1409201   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1409202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409203   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1409204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409205   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1409206   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1409207   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1409208   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1409209   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1409210   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1409211   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1409212   +END;
MPRINT(EM_DIAGRAM):   END;
1409213   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1409214   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1409215   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1409216   +drop
1409217   +H11
1409218   +H12
1409219   +H13
1409220   +H14
1409221   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1409222   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1409223   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1409224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409225   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1409226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409227   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1409228   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1409229   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1409230   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1409231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409232   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1409233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409234   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1409235   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1409236   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1409237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409238   +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
1409239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409241   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1409242   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1409243   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1409244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409245   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1409246   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1409247   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1409248   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1409249   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1409250   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1409251   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1409252   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1409253   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1409254   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1409255   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1409256   +LENGTH _WARN_ $4
1409257   +      F_DepVar  $ 12
1409258   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1409259   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1409260   +
1409261   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1409262   +
1409263   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1409264   +
1409265   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1409266   +
1409267   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1409268   +
1409269   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1409270   +
1409271   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1409272   +
1409273   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1409274   +
1409275   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1409276   +
1409277   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1409278   +
1409279   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1409280   +
1409281   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1409282   +
1409283   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1409284   +
1409285   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1409286   +
1409287   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1409288   +
1409289   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1409290   +
1409291   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1409292   +
1409293   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1409294   +
1409295   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1409296   +
1409297   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1409298   +
1409299   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1409300   +
1409301   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1409302   +
1409303   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1409304   +
1409305   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1409306   +
1409307   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1409308   +
1409309   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1409310   +
1409311   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1409312   +
1409313   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1409314   +
1409315   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1409316   +
1409317   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1409318   +
1409319   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1409320   +
1409321   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1409322   +
1409323   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1409324   +
1409325   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1409326   +
1409327   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1409328   +
1409329   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1409330   +
1409331   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1409332   +
1409333   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1409334   +
1409335   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1409336   +
1409337   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1409338   +
1409339   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1409340   +
1409341   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1409342   +
1409343   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1409344   +
1409345   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1409346   +
1409347   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1409348   +
1409349   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1409350   +
1409351   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1409352   +
1409353   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1409354   +
1409355   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1409356   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1409357   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1409358   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1409359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409361   +end;
MPRINT(EM_DIAGRAM):   end;
1409362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409364   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1409365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1409367   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1409368   +   end;
MPRINT(EM_DIAGRAM):   end;
1409369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1409370   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1409371   +   end;
MPRINT(EM_DIAGRAM):   end;
1409372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409373   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1409374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409376   +   end;
MPRINT(EM_DIAGRAM):   end;
1409377   +end;
MPRINT(EM_DIAGRAM):   end;
1409378   +
1409379   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1409380   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1409381   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1409382   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1409383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409385   +end;
MPRINT(EM_DIAGRAM):   end;
1409386   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409388   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1409389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1409391   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1409392   +   end;
MPRINT(EM_DIAGRAM):   end;
1409393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1409394   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1409395   +   end;
MPRINT(EM_DIAGRAM):   end;
1409396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409397   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1409398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409400   +   end;
MPRINT(EM_DIAGRAM):   end;
1409401   +end;
MPRINT(EM_DIAGRAM):   end;
1409402   +
1409403   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1409404   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1409405   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1409406   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1409407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409409   +end;
MPRINT(EM_DIAGRAM):   end;
1409410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409412   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1409413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1409415   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1409416   +   end;
MPRINT(EM_DIAGRAM):   end;
1409417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1409418   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1409419   +   end;
MPRINT(EM_DIAGRAM):   end;
1409420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409421   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1409422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409424   +   end;
MPRINT(EM_DIAGRAM):   end;
1409425   +end;
MPRINT(EM_DIAGRAM):   end;
1409426   +
1409427   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1409428   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1409429   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1409430   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1409431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409433   +end;
MPRINT(EM_DIAGRAM):   end;
1409434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409436   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1409437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1409439   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1409440   +   end;
MPRINT(EM_DIAGRAM):   end;
1409441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1409442   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1409443   +   end;
MPRINT(EM_DIAGRAM):   end;
1409444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409445   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1409446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409448   +   end;
MPRINT(EM_DIAGRAM):   end;
1409449   +end;
MPRINT(EM_DIAGRAM):   end;
1409450   +
1409451   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1409452   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1409453   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1409454   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1409455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409457   +end;
MPRINT(EM_DIAGRAM):   end;
1409458   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409460   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1409461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409462   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1409463   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1409464   +   end;
MPRINT(EM_DIAGRAM):   end;
1409465   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1409466   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1409467   +   end;
MPRINT(EM_DIAGRAM):   end;
1409468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409469   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1409470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409472   +   end;
MPRINT(EM_DIAGRAM):   end;
1409473   +end;
MPRINT(EM_DIAGRAM):   end;
1409474   +
1409475   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1409476   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1409477   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1409478   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1409479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409481   +end;
MPRINT(EM_DIAGRAM):   end;
1409482   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409484   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1409485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1409487   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1409488   +   end;
MPRINT(EM_DIAGRAM):   end;
1409489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1409490   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1409491   +   end;
MPRINT(EM_DIAGRAM):   end;
1409492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409493   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1409494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409496   +   end;
MPRINT(EM_DIAGRAM):   end;
1409497   +end;
MPRINT(EM_DIAGRAM):   end;
1409498   +
1409499   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1409500   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1409501   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1409502   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1409503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409505   +end;
MPRINT(EM_DIAGRAM):   end;
1409506   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1409508   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1409509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409510   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1409511   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1409512   +   end;
MPRINT(EM_DIAGRAM):   end;
1409513   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1409514   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1409515   +   end;
MPRINT(EM_DIAGRAM):   end;
1409516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409517   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1409518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409520   +   end;
MPRINT(EM_DIAGRAM):   end;
1409521   +end;
MPRINT(EM_DIAGRAM):   end;
1409522   +
1409523   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1409524   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1409525   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1409526   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1409527   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1409528   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1409529   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1409530   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1409531   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1409532   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1409533   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1409534   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1409535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409537   +end;
MPRINT(EM_DIAGRAM):   end;
1409538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409539   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1409540   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1409541   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409542   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1409543   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1409544   +   end;
MPRINT(EM_DIAGRAM):   end;
1409545   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1409546   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1409547   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1409548   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1409549   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1409550   +   end;
MPRINT(EM_DIAGRAM):   end;
1409551   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1409552   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1409553   +   end;
MPRINT(EM_DIAGRAM):   end;
1409554   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1409555   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1409556   +   end;
MPRINT(EM_DIAGRAM):   end;
1409557   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1409558   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1409559   +   end;
MPRINT(EM_DIAGRAM):   end;
1409560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409561   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1409562   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1409563   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1409564   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1409565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409567   +   end;
MPRINT(EM_DIAGRAM):   end;
1409568   +end;
MPRINT(EM_DIAGRAM):   end;
1409569   +
1409570   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1409571   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1409572   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1409573   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1409574   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1409575   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1409576   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1409577   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1409578   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1409579   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1409580   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1409581   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1409582   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1409583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1409584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409585   +end;
MPRINT(EM_DIAGRAM):   end;
1409586   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409587   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1409588   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1409589   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409590   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1409591   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1409592   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1409593   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1409594   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1409595   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1409596   +         end;
MPRINT(EM_DIAGRAM):   end;
1409597   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1409598   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1409599   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1409600   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1409601   +            end;
MPRINT(EM_DIAGRAM):   end;
1409602   +         end;
MPRINT(EM_DIAGRAM):   end;
1409603   +      end;
MPRINT(EM_DIAGRAM):   end;
1409604   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1409605   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1409606   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1409607   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1409608   +         end;
MPRINT(EM_DIAGRAM):   end;
1409609   +      end;
MPRINT(EM_DIAGRAM):   end;
1409610   +   end;
MPRINT(EM_DIAGRAM):   end;
1409611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409612   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1409613   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1409614   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1409615   +      end;
MPRINT(EM_DIAGRAM):   end;
1409616   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1409617   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1409618   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1409619   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1409620   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1409621   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1409622   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1409623   +         end;
MPRINT(EM_DIAGRAM):   end;
1409624   +      end;
MPRINT(EM_DIAGRAM):   end;
1409625   +   end;
MPRINT(EM_DIAGRAM):   end;
1409626   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1409627   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1409628   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1409629   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1409630   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1409631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1409632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409633   +   end;
MPRINT(EM_DIAGRAM):   end;
1409634   +end;
MPRINT(EM_DIAGRAM):   end;
1409635   +
1409636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409637   +*** Checking missing input Interval
1409638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1409639   +
1409640   +IF NMISS(
1409641   +   AcceptedCmpTotal ,
1409642   +   Age ,
1409643   +   Frq ,
1409644   +   Income ,
1409645   +   Kidhome ,
1409646   +   Mnt ,
1409647   +   MntFishProducts ,
1409648   +   MntFruits ,
1409649   +   MntGoldProds ,
1409650   +   MntMeatProducts ,
1409651   +   MntSweetProducts ,
1409652   +   MntWines ,
1409653   +   MonthsAsCustomer ,
1409654   +   NumCatalogPurchases ,
1409655   +   NumDealsPurchases ,
1409656   +   NumDistPurchases ,
1409657   +   NumStorePurchases ,
1409658   +   NumWebPurchases ,
1409659   +   NumWebVisitsMonth ,
1409660   +   RFMstat ,
1409661   +   RMntFrq ,
1409662   +   Recency ,
1409663   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1409664   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1409665   +
1409666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1409667   +END;
MPRINT(EM_DIAGRAM):   END;
1409668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409669   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1409670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409671   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1409672   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1409673   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1409674   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1409675   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1409676   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1409677   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1409678   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1409679   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1409680   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1409681   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1409682   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1409683   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1409684   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1409685   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1409686   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1409687   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1409688   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1409689   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1409690   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1409691   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1409692   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1409693   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1409694   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1409695   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1409696   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1409697   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1409698   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1409699   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1409700   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1409701   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1409702   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1409703   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1409704   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1409705   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1409706   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1409707   +END;
MPRINT(EM_DIAGRAM):   END;
1409708   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1409709   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1409710   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1409711   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1409712   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1409713   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1409714   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1409715   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1409716   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1409717   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1409718   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1409719   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1409720   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1409721   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1409722   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1409723   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1409724   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1409725   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1409726   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1409727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1409728   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1409729   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1409730   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1409731   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1409732   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1409733   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1409734   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1409735   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1409736   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1409737   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1409738   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1409739   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1409740   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1409741   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1409742   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1409743   +   ELSE S_NumCatalogPurchases
1409744   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1409745   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1409746   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1409747   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1409748   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1409749   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1409750   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1409751   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1409752   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1409753   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1409754   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1409755   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1409756   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1409757   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1409758   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1409759   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1409760   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1409761   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
The SAS System
 
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1409762   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1409763   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1409764   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1409765   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1409766   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1409767   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1409768   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1409769   +END;
MPRINT(EM_DIAGRAM):   END;
1409770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409771   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1409772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409774   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1409775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409777   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1409778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409779   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1409780   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1409781   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1409782   +        S_Income  +    -1.07733254688396 * S_Kidhome
1409783   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1409784   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1409785   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1409786   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1409787   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1409788   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1409789   +          +     0.34431711603003 * S_NumDealsPurchases
1409790   +          +      0.7134923732819 * S_NumDistPurchases
1409791   +          +     0.05901777448936 * S_NumStorePurchases
1409792   +          +    -0.19803026616936 * S_NumWebPurchases
1409793   +          +     1.34202846183228 * S_NumWebVisitsMonth
1409794   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1409795   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1409796   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age +
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome +
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 *
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts +
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 *
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 *
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 *
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 *
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq +
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1409797   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1409798   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1409799   +        S_Income  +    -0.00255151514163 * S_Kidhome
1409800   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1409801   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1409802   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1409803   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1409804   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1409805   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1409806   +          +     0.45752917132477 * S_NumDealsPurchases
1409807   +          +      0.1559495599293 * S_NumDistPurchases
1409808   +          +    -0.33402213718695 * S_NumStorePurchases
1409809   +          +    -0.39372662704902 * S_NumWebPurchases
1409810   +          +     0.52518189694069 * S_NumWebVisitsMonth
1409811   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1409812   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1409813   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome +
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 *
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts +
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 *
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 *
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 *
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 *
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq +
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1409814   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1409815   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1409816   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1409817   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1409818   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 *
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 +
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 *
HigherEducationBinary0 ;
1409819   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1409820   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1409821   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1409822   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1409823   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 *
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 +
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 *
HigherEducationBinary0 ;
1409824   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1409825   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1409826   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1409827   +          +     0.46710555357393 * Marital_StatusDivorced
1409828   +          +    -1.27560428667174 * Marital_StatusMarried
1409829   +          +      1.3147344073121 * Marital_StatusSingle
1409830   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 *
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried +
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1409831   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1409832   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1409833   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1409834   +          +     0.07422027097612 * Marital_StatusDivorced
1409835   +          +     0.00271855575037 * Marital_StatusMarried
1409836   +          +    -0.00749566028051 * Marital_StatusSingle
1409837   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 *
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster +
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried +
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1409838   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1409839   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1409840   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1409841   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1409842   +END;
MPRINT(EM_DIAGRAM):   END;
1409843   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1409844   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1409845   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1409846   +END;
MPRINT(EM_DIAGRAM):   END;
1409847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409848   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1409849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409850   +
1409851   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1409852   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1409853   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1409854   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1409855   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1409856   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1409857   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1409858   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1409859   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1409860   +end;
MPRINT(EM_DIAGRAM):   end;
1409861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1409862   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1409863   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1409864   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1409865   +   end;
MPRINT(EM_DIAGRAM):   end;
1409866   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1409867   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1409868   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1409869   +   end;
MPRINT(EM_DIAGRAM):   end;
1409870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1409871   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1409872   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1409873   +   end;
MPRINT(EM_DIAGRAM):   end;
1409874   +end;
MPRINT(EM_DIAGRAM):   end;
1409875   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1409876   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1409877   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1409878   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1409879   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1409880   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1409881   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1409882   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1409883   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1409884   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1409885   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1409886   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1409887   +END;
MPRINT(EM_DIAGRAM):   END;
1409888   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1409889   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1409890   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1409891   +END;
MPRINT(EM_DIAGRAM):   END;
1409892   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1409893   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1409894   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1409895   +END;
MPRINT(EM_DIAGRAM):   END;
1409896   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1409897   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1409898   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1409899   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1409900   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1409901   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1409902   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1409903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409904   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1409905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1409906   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1409907   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1409908   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1409909   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1409910   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1409911   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1409912   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1409913   +END;
MPRINT(EM_DIAGRAM):   END;
1409914   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1409915   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1409916   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1409917   +drop
1409918   +H11
1409919   +H12
1409920   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1409921   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1409922   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1409923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409924   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1409925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409926   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1409927   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1409928   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1409929   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1409930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409931   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1409932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409933   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1409934   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1409935   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1409936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409937   +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
1409938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409940   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1409941   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1409942   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1409943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1409944   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1409945   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1409946   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1409947   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1409948   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1409949   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1409950   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1409951   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1409952   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1409953   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1409954   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1409955   +LENGTH _WARN_ $4
1409956   +      F_DepVar  $ 12
1409957   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1409958   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1409959   +
1409960   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1409961   +
1409962   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1409963   +
1409964   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1409965   +
1409966   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1409967   +
1409968   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1409969   +
1409970   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1409971   +
1409972   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1409973   +
1409974   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1409975   +
1409976   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1409977   +
1409978   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1409979   +
1409980   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1409981   +
1409982   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1409983   +
1409984   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1409985   +
1409986   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1409987   +
1409988   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1409989   +
1409990   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1409991   +
1409992   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1409993   +
1409994   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1409995   +
1409996   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1409997   +
1409998   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1409999   +
1410000   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1410001   +
1410002   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1410003   +
1410004   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1410005   +
1410006   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1410007   +
1410008   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1410009   +
1410010   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1410011   +
1410012   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1410013   +
1410014   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1410015   +
1410016   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1410017   +
1410018   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1410019   +
1410020   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1410021   +
1410022   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1410023   +
1410024   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1410025   +
1410026   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1410027   +
1410028   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1410029   +
1410030   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1410031   +
1410032   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1410033   +
1410034   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1410035   +
1410036   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1410037   +
1410038   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1410039   +
1410040   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1410041   +
1410042   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1410043   +
1410044   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1410045   +
1410046   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1410047   +
1410048   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1410049   +
1410050   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1410051   +
1410052   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1410053   +
1410054   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1410055   +
1410056   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1410057   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1410058   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1410059   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1410060   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410061   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410062   +end;
MPRINT(EM_DIAGRAM):   end;
1410063   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410064   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410065   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1410066   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410067   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410068   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1410069   +   end;
MPRINT(EM_DIAGRAM):   end;
1410070   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410071   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1410072   +   end;
MPRINT(EM_DIAGRAM):   end;
1410073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410074   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1410075   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410076   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410077   +   end;
MPRINT(EM_DIAGRAM):   end;
1410078   +end;
MPRINT(EM_DIAGRAM):   end;
1410079   +
1410080   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1410081   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1410082   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1410083   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1410084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410086   +end;
MPRINT(EM_DIAGRAM):   end;
1410087   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410088   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410089   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1410090   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410091   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410092   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1410093   +   end;
MPRINT(EM_DIAGRAM):   end;
1410094   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410095   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1410096   +   end;
MPRINT(EM_DIAGRAM):   end;
1410097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410098   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1410099   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410100   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410101   +   end;
MPRINT(EM_DIAGRAM):   end;
1410102   +end;
MPRINT(EM_DIAGRAM):   end;
1410103   +
1410104   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1410105   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1410106   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1410107   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1410108   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410109   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410110   +end;
MPRINT(EM_DIAGRAM):   end;
1410111   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410112   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410113   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1410114   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410115   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410116   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1410117   +   end;
MPRINT(EM_DIAGRAM):   end;
1410118   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410119   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1410120   +   end;
MPRINT(EM_DIAGRAM):   end;
1410121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410122   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1410123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410125   +   end;
MPRINT(EM_DIAGRAM):   end;
1410126   +end;
MPRINT(EM_DIAGRAM):   end;
1410127   +
1410128   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1410129   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1410130   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1410131   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1410132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410134   +end;
MPRINT(EM_DIAGRAM):   end;
1410135   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410136   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410137   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1410138   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410139   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410140   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1410141   +   end;
MPRINT(EM_DIAGRAM):   end;
1410142   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410143   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1410144   +   end;
MPRINT(EM_DIAGRAM):   end;
1410145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410146   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1410147   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410148   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410149   +   end;
MPRINT(EM_DIAGRAM):   end;
1410150   +end;
MPRINT(EM_DIAGRAM):   end;
1410151   +
1410152   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1410153   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1410154   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1410155   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1410156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410158   +end;
MPRINT(EM_DIAGRAM):   end;
1410159   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410160   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410161   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1410162   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410163   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410164   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1410165   +   end;
MPRINT(EM_DIAGRAM):   end;
1410166   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410167   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1410168   +   end;
MPRINT(EM_DIAGRAM):   end;
1410169   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410170   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1410171   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410172   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410173   +   end;
MPRINT(EM_DIAGRAM):   end;
1410174   +end;
MPRINT(EM_DIAGRAM):   end;
1410175   +
1410176   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1410177   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1410178   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1410179   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1410180   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410181   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410182   +end;
MPRINT(EM_DIAGRAM):   end;
1410183   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410184   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410185   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1410186   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410187   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410188   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1410189   +   end;
MPRINT(EM_DIAGRAM):   end;
1410190   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410191   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1410192   +   end;
MPRINT(EM_DIAGRAM):   end;
1410193   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410194   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1410195   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410196   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410197   +   end;
MPRINT(EM_DIAGRAM):   end;
1410198   +end;
MPRINT(EM_DIAGRAM):   end;
1410199   +
1410200   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1410201   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1410202   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1410203   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1410204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410206   +end;
MPRINT(EM_DIAGRAM):   end;
1410207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410208   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410209   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1410210   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410211   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1410212   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1410213   +   end;
MPRINT(EM_DIAGRAM):   end;
1410214   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1410215   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1410216   +   end;
MPRINT(EM_DIAGRAM):   end;
1410217   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410218   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1410219   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410220   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410221   +   end;
MPRINT(EM_DIAGRAM):   end;
1410222   +end;
MPRINT(EM_DIAGRAM):   end;
1410223   +
1410224   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1410225   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1410226   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1410227   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1410228   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1410229   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1410230   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1410231   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1410232   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1410233   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1410234   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1410235   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1410236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410238   +end;
MPRINT(EM_DIAGRAM):   end;
1410239   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410240   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1410241   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1410242   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410243   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1410244   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1410245   +   end;
MPRINT(EM_DIAGRAM):   end;
1410246   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1410247   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1410248   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1410249   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1410250   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1410251   +   end;
MPRINT(EM_DIAGRAM):   end;
1410252   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1410253   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1410254   +   end;
MPRINT(EM_DIAGRAM):   end;
1410255   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1410256   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1410257   +   end;
MPRINT(EM_DIAGRAM):   end;
1410258   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1410259   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1410260   +   end;
MPRINT(EM_DIAGRAM):   end;
1410261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410262   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1410263   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1410264   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1410265   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1410266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410268   +   end;
MPRINT(EM_DIAGRAM):   end;
1410269   +end;
MPRINT(EM_DIAGRAM):   end;
1410270   +
1410271   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1410272   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1410273   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1410274   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1410275   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1410276   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1410277   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1410278   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1410279   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1410280   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1410281   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1410282   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1410283   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1410284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410286   +end;
MPRINT(EM_DIAGRAM):   end;
1410287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410288   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1410289   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1410290   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410291   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1410292   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1410293   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1410294   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1410295   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1410296   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1410297   +         end;
MPRINT(EM_DIAGRAM):   end;
1410298   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1410299   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1410300   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1410301   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1410302   +            end;
MPRINT(EM_DIAGRAM):   end;
1410303   +         end;
MPRINT(EM_DIAGRAM):   end;
1410304   +      end;
MPRINT(EM_DIAGRAM):   end;
1410305   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1410306   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1410307   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1410308   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1410309   +         end;
MPRINT(EM_DIAGRAM):   end;
1410310   +      end;
MPRINT(EM_DIAGRAM):   end;
1410311   +   end;
MPRINT(EM_DIAGRAM):   end;
1410312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410313   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1410314   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1410315   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1410316   +      end;
MPRINT(EM_DIAGRAM):   end;
1410317   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1410318   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1410319   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1410320   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1410321   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1410322   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1410323   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1410324   +         end;
MPRINT(EM_DIAGRAM):   end;
1410325   +      end;
MPRINT(EM_DIAGRAM):   end;
1410326   +   end;
MPRINT(EM_DIAGRAM):   end;
1410327   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1410328   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1410329   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1410330   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1410331   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1410332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410334   +   end;
MPRINT(EM_DIAGRAM):   end;
1410335   +end;
MPRINT(EM_DIAGRAM):   end;
1410336   +
1410337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410338   +*** Checking missing input Interval
1410339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1410340   +
1410341   +IF NMISS(
1410342   +   AcceptedCmpTotal ,
1410343   +   Age ,
1410344   +   Frq ,
1410345   +   Income ,
1410346   +   Kidhome ,
1410347   +   Mnt ,
1410348   +   MntFishProducts ,
1410349   +   MntFruits ,
1410350   +   MntGoldProds ,
1410351   +   MntMeatProducts ,
1410352   +   MntSweetProducts ,
1410353   +   MntWines ,
1410354   +   MonthsAsCustomer ,
1410355   +   NumCatalogPurchases ,
1410356   +   NumDealsPurchases ,
1410357   +   NumDistPurchases ,
1410358   +   NumStorePurchases ,
1410359   +   NumWebPurchases ,
1410360   +   NumWebVisitsMonth ,
1410361   +   RFMstat ,
1410362   +   RMntFrq ,
1410363   +   Recency ,
1410364   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1410365   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1410366   +
1410367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410368   +END;
MPRINT(EM_DIAGRAM):   END;
1410369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410370   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1410371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410372   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1410373   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1410374   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1410375   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1410376   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1410377   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1410378   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1410379   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1410380   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1410381   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1410382   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1410383   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1410384   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1410385   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1410386   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1410387   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1410388   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1410389   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1410390   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1410391   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1410392   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1410393   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1410394   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1410395   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1410396   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1410397   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1410398   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1410399   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1410400   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1410401   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1410402   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1410403   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1410404   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1410405   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1410406   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1410407   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1410408   +END;
MPRINT(EM_DIAGRAM):   END;
1410409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1410410   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1410411   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1410412   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1410413   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1410414   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1410415   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1410416   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1410417   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1410418   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1410419   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1410420   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1410421   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1410422   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1410423   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1410424   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1410425   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1410426   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1410427   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1410428   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1410429   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1410430   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1410431   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1410432   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1410433   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1410434   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1410435   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1410436   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1410437   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1410438   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1410439   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1410440   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1410441   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1410442   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1410443   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1410444   +   ELSE S_NumCatalogPurchases
1410445   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1410446   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1410447   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1410448   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1410449   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1410450   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1410451   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1410452   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1410453   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1410454   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1410455   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1410456   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1410457   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1410458   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1410459   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1410460   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1410461   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1410462   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1410463   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1410464   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1410465   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1410466   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1410467   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1410468   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1410469   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1410470   +END;
MPRINT(EM_DIAGRAM):   END;
1410471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410472   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1410473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410475   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1410476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410478   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1410479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410480   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1410481   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1410482   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1410483   +        S_Income  +     0.49557647195287 * S_Kidhome
1410484   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1410485   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1410486   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1410487   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1410488   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1410489   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1410490   +          +     1.29965538748336 * S_NumDealsPurchases
1410491   +          +     0.16818868463142 * S_NumDistPurchases
1410492   +          +    -0.64507792847411 * S_NumStorePurchases
1410493   +          +    -0.52243329275268 * S_NumWebPurchases
1410494   +          +     1.48521107923182 * S_NumWebVisitsMonth
1410495   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1410496   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1410497   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome +
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 *
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts +
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 *
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 *
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 *
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 *
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq +
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1410498   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1410499   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1410500   +        S_Income  +       0.536631748871 * S_Kidhome
1410501   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1410502   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1410503   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1410504   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1410505   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1410506   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1410507   +          +    -0.63220849663702 * S_NumDealsPurchases
1410508   +          +    -0.03517440588176 * S_NumDistPurchases
1410509   +          +     0.90435516280473 * S_NumStorePurchases
1410510   +          +     1.02540776095101 * S_NumWebPurchases
1410511   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1410512   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1410513   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1410514   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome +
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 *
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts +
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 *
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 *
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 *
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 *
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq +
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1410515   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1410516   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1410517   +        S_Income  +     0.45173611630992 * S_Kidhome
1410518   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1410519   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1410520   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1410521   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1410522   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1410523   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1410524   +          +     0.00572910064772 * S_NumDealsPurchases
1410525   +          +    -0.43545754325176 * S_NumDistPurchases
1410526   +          +     0.12831980635185 * S_NumStorePurchases
1410527   +          +     0.02223697618186 * S_NumWebPurchases
1410528   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1410529   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1410530   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1410531   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome +
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 *
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts +
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 *
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 *
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 *
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 *
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq +
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1410532   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1410533   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1410534   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1410535   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1410536   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 *
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 +
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 *
HigherEducationBinary0 ;
1410537   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1410538   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1410539   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1410540   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1410541   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 *
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 +
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 *
HigherEducationBinary0 ;
1410542   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1410543   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1410544   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1410545   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1410546   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 *
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 +
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 *
HigherEducationBinary0 ;
1410547   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1410548   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1410549   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1410550   +          +     0.14010081581672 * Marital_StatusDivorced
1410551   +          +     0.03574033044092 * Marital_StatusMarried
1410552   +          +    -0.14272769898675 * Marital_StatusSingle
1410553   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 *
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried +
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1410554   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1410555   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1410556   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1410557   +          +    -0.14878433798537 * Marital_StatusDivorced
1410558   +          +     0.14990226067603 * Marital_StatusMarried
1410559   +          +    -0.50903755449357 * Marital_StatusSingle
1410560   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 *
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried +
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1410561   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1410562   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1410563   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1410564   +          +    -0.52568922939912 * Marital_StatusDivorced
1410565   +          +     1.74121506979092 * Marital_StatusMarried
1410566   +          +    -1.16029880777095 * Marital_StatusSingle
1410567   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 *
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster +
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried +
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1410568   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1410569   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1410570   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1410571   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1410572   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1410573   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1410574   +END;
MPRINT(EM_DIAGRAM):   END;
1410575   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1410576   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1410577   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1410578   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1410579   +END;
MPRINT(EM_DIAGRAM):   END;
1410580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410581   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1410582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410583   +
1410584   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1410585   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1410586   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1410587   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1410588   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1410589   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410590   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1410591   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1410592   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1410593   +end;
MPRINT(EM_DIAGRAM):   end;
1410594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410595   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1410596   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1410597   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1410598   +   end;
MPRINT(EM_DIAGRAM):   end;
1410599   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1410600   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1410601   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1410602   +   end;
MPRINT(EM_DIAGRAM):   end;
1410603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410604   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1410605   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1410606   +   end;
MPRINT(EM_DIAGRAM):   end;
1410607   +end;
MPRINT(EM_DIAGRAM):   end;
1410608   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1410609   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1410610   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 +
-3.01894159959464 * H13 ;
1410611   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1410612   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1410613   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1410614   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1410615   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1410616   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1410617   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1410618   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1410619   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1410620   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1410621   +END;
MPRINT(EM_DIAGRAM):   END;
1410622   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1410623   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1410624   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1410625   +END;
MPRINT(EM_DIAGRAM):   END;
1410626   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1410627   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1410628   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1410629   +END;
MPRINT(EM_DIAGRAM):   END;
1410630   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1410631   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1410632   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1410633   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1410634   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1410635   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1410636   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1410637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410638   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1410639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1410640   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1410641   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1410642   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1410643   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1410644   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1410645   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1410646   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1410647   +END;
MPRINT(EM_DIAGRAM):   END;
1410648   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1410649   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1410650   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1410651   +drop
1410652   +H11
1410653   +H12
1410654   +H13
1410655   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1410656   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1410657   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1410658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410659   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1410660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410661   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1410662   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1410663   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1410664   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1410665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410666   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1410667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410668   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1410669   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1410670   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1410671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410672   +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
1410673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410675   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1410676   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1410677   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1410678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1410679   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1410680   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1410681   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1410682   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1410683   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1410684   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1410685   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1410686   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1410687   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1410688   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1410689   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1410690   +LENGTH _WARN_ $4
1410691   +      F_DepVar  $ 12
1410692   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1410693   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1410694   +
1410695   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1410696   +
1410697   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1410698   +
1410699   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1410700   +
1410701   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1410702   +
1410703   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1410704   +
1410705   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1410706   +
1410707   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1410708   +
1410709   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1410710   +
1410711   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1410712   +
1410713   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1410714   +
1410715   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1410716   +
1410717   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1410718   +
1410719   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1410720   +
1410721   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1410722   +
1410723   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1410724   +
1410725   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1410726   +
1410727   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1410728   +
1410729   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1410730   +
1410731   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1410732   +
1410733   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1410734   +
1410735   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1410736   +
1410737   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1410738   +
1410739   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1410740   +
1410741   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1410742   +
1410743   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1410744   +
1410745   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1410746   +
1410747   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1410748   +
1410749   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1410750   +
1410751   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1410752   +
1410753   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1410754   +
1410755   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1410756   +
1410757   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1410758   +
1410759   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1410760   +
1410761   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1410762   +
1410763   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1410764   +
1410765   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1410766   +
1410767   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1410768   +
1410769   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1410770   +
1410771   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1410772   +
1410773   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1410774   +
1410775   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1410776   +
1410777   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1410778   +
1410779   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1410780   +
1410781   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1410782   +
1410783   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1410784   +
1410785   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1410786   +
1410787   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1410788   +
1410789   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1410790   +
1410791   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1410792   +
1410793   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1410794   +
1410795   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1410796   +
1410797   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1410798   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1410799   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1410800   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1410801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410803   +end;
MPRINT(EM_DIAGRAM):   end;
1410804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410806   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1410807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410809   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1410810   +   end;
MPRINT(EM_DIAGRAM):   end;
1410811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410812   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1410813   +   end;
MPRINT(EM_DIAGRAM):   end;
1410814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410815   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1410816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410818   +   end;
MPRINT(EM_DIAGRAM):   end;
1410819   +end;
MPRINT(EM_DIAGRAM):   end;
1410820   +
1410821   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1410822   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1410823   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1410824   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1410825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410827   +end;
MPRINT(EM_DIAGRAM):   end;
1410828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410830   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1410831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410833   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1410834   +   end;
MPRINT(EM_DIAGRAM):   end;
1410835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410836   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1410837   +   end;
MPRINT(EM_DIAGRAM):   end;
1410838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410839   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1410840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410842   +   end;
MPRINT(EM_DIAGRAM):   end;
1410843   +end;
MPRINT(EM_DIAGRAM):   end;
1410844   +
1410845   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1410846   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1410847   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1410848   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1410849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410851   +end;
MPRINT(EM_DIAGRAM):   end;
1410852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410854   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1410855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410857   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1410858   +   end;
MPRINT(EM_DIAGRAM):   end;
1410859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410860   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1410861   +   end;
MPRINT(EM_DIAGRAM):   end;
1410862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410863   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1410864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410866   +   end;
MPRINT(EM_DIAGRAM):   end;
1410867   +end;
MPRINT(EM_DIAGRAM):   end;
1410868   +
1410869   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1410870   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1410871   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1410872   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1410873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410875   +end;
MPRINT(EM_DIAGRAM):   end;
1410876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410878   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1410879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410881   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1410882   +   end;
MPRINT(EM_DIAGRAM):   end;
1410883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410884   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1410885   +   end;
MPRINT(EM_DIAGRAM):   end;
1410886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410887   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1410888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410890   +   end;
MPRINT(EM_DIAGRAM):   end;
1410891   +end;
MPRINT(EM_DIAGRAM):   end;
1410892   +
1410893   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1410894   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1410895   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1410896   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1410897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410899   +end;
MPRINT(EM_DIAGRAM):   end;
1410900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410902   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1410903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410904   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410905   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1410906   +   end;
MPRINT(EM_DIAGRAM):   end;
1410907   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410908   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1410909   +   end;
MPRINT(EM_DIAGRAM):   end;
1410910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410911   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1410912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410914   +   end;
MPRINT(EM_DIAGRAM):   end;
1410915   +end;
MPRINT(EM_DIAGRAM):   end;
1410916   +
1410917   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1410918   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1410919   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1410920   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1410921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410923   +end;
MPRINT(EM_DIAGRAM):   end;
1410924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410926   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1410927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410928   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1410929   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1410930   +   end;
MPRINT(EM_DIAGRAM):   end;
1410931   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1410932   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1410933   +   end;
MPRINT(EM_DIAGRAM):   end;
1410934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410935   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1410936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410938   +   end;
MPRINT(EM_DIAGRAM):   end;
1410939   +end;
MPRINT(EM_DIAGRAM):   end;
1410940   +
1410941   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1410942   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1410943   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1410944   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1410945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410947   +end;
MPRINT(EM_DIAGRAM):   end;
1410948   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410949   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1410950   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1410951   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410952   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1410953   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1410954   +   end;
MPRINT(EM_DIAGRAM):   end;
1410955   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1410956   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1410957   +   end;
MPRINT(EM_DIAGRAM):   end;
1410958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1410959   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1410960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1410961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410962   +   end;
MPRINT(EM_DIAGRAM):   end;
1410963   +end;
MPRINT(EM_DIAGRAM):   end;
1410964   +
1410965   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1410966   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1410967   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1410968   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1410969   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1410970   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1410971   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1410972   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1410973   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1410974   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1410975   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1410976   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1410977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1410978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1410979   +end;
MPRINT(EM_DIAGRAM):   end;
1410980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1410981   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1410982   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1410983   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1410984   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1410985   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1410986   +   end;
MPRINT(EM_DIAGRAM):   end;
1410987   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1410988   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1410989   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1410990   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1410991   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1410992   +   end;
MPRINT(EM_DIAGRAM):   end;
1410993   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1410994   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1410995   +   end;
MPRINT(EM_DIAGRAM):   end;
1410996   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1410997   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1410998   +   end;
MPRINT(EM_DIAGRAM):   end;
1410999   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1411000   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1411001   +   end;
MPRINT(EM_DIAGRAM):   end;
1411002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411003   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1411004   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1411005   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1411006   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1411007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411009   +   end;
MPRINT(EM_DIAGRAM):   end;
1411010   +end;
MPRINT(EM_DIAGRAM):   end;
1411011   +
1411012   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1411013   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1411014   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1411015   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1411016   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1411017   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1411018   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1411019   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1411020   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1411021   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1411022   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1411023   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1411024   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1411025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411027   +end;
MPRINT(EM_DIAGRAM):   end;
1411028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411029   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1411030   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1411031   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411032   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1411033   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1411034   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1411035   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1411036   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1411037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411038   +         end;
MPRINT(EM_DIAGRAM):   end;
1411039   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1411040   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1411041   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1411042   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411043   +            end;
MPRINT(EM_DIAGRAM):   end;
1411044   +         end;
MPRINT(EM_DIAGRAM):   end;
1411045   +      end;
MPRINT(EM_DIAGRAM):   end;
1411046   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1411047   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1411048   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1411049   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411050   +         end;
MPRINT(EM_DIAGRAM):   end;
1411051   +      end;
MPRINT(EM_DIAGRAM):   end;
1411052   +   end;
MPRINT(EM_DIAGRAM):   end;
1411053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411054   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1411055   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1411056   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411057   +      end;
MPRINT(EM_DIAGRAM):   end;
1411058   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1411059   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1411060   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1411061   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1411062   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1411063   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1411064   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411065   +         end;
MPRINT(EM_DIAGRAM):   end;
1411066   +      end;
MPRINT(EM_DIAGRAM):   end;
1411067   +   end;
MPRINT(EM_DIAGRAM):   end;
1411068   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1411069   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1411070   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1411071   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1411072   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1411073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411075   +   end;
MPRINT(EM_DIAGRAM):   end;
1411076   +end;
MPRINT(EM_DIAGRAM):   end;
1411077   +
1411078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411079   +*** Checking missing input Interval
1411080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1411081   +
1411082   +IF NMISS(
1411083   +   AcceptedCmpTotal ,
1411084   +   Age ,
1411085   +   Frq ,
1411086   +   Income ,
1411087   +   Kidhome ,
1411088   +   Mnt ,
1411089   +   MntFishProducts ,
1411090   +   MntFruits ,
1411091   +   MntGoldProds ,
1411092   +   MntMeatProducts ,
1411093   +   MntSweetProducts ,
1411094   +   MntWines ,
1411095   +   MonthsAsCustomer ,
1411096   +   NumCatalogPurchases ,
1411097   +   NumDealsPurchases ,
1411098   +   NumDistPurchases ,
1411099   +   NumStorePurchases ,
1411100   +   NumWebPurchases ,
1411101   +   NumWebVisitsMonth ,
1411102   +   RFMstat ,
1411103   +   RMntFrq ,
1411104   +   Recency ,
1411105   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1411106   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1411107   +
1411108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411109   +END;
MPRINT(EM_DIAGRAM):   END;
1411110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411111   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1411112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411113   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1411114   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1411115   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1411116   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1411117   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1411118   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1411119   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1411120   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1411121   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1411122   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1411123   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1411124   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1411125   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1411126   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1411127   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1411128   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1411129   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1411130   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1411131   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1411132   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1411133   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1411134   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1411135   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1411136   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1411137   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1411138   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1411139   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1411140   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1411141   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1411142   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1411143   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1411144   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1411145   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1411146   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1411147   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1411148   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1411149   +END;
MPRINT(EM_DIAGRAM):   END;
1411150   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1411151   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1411152   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1411153   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1411154   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1411155   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1411156   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1411157   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1411158   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1411159   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1411160   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1411161   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1411162   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1411163   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1411164   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1411165   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1411166   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1411167   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1411168   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1411169   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1411170   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1411171   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1411172   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1411173   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1411174   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1411175   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1411176   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1411177   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1411178   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1411179   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1411180   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1411181   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1411182   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1411183   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1411184   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1411185   +   ELSE S_NumCatalogPurchases
1411186   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1411187   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1411188   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1411189   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1411190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1411191   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1411192   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1411193   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1411194   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1411195   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1411196   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1411197   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1411198   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1411199   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1411200   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1411201   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1411202   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1411203   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1411204   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1411205   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1411206   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1411207   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1411208   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1411209   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1411210   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1411211   +END;
MPRINT(EM_DIAGRAM):   END;
1411212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411213   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1411214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411216   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1411217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411219   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1411220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411221   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1411222   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1411223   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1411224   +        S_Income  +    -0.09693130155866 * S_Kidhome
1411225   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1411226   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1411227   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1411228   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1411229   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1411230   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1411231   +          +     0.87256063855463 * S_NumDealsPurchases
1411232   +          +     0.24228318068596 * S_NumDistPurchases
1411233   +          +    -0.65575177240856 * S_NumStorePurchases
1411234   +          +    -0.94105747825406 * S_NumWebPurchases
1411235   +          +     0.88098930350141 * S_NumWebVisitsMonth
1411236   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1411237   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1411238   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome +
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 *
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts +
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 *
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 *
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 *
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 *
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq +
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1411239   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1411240   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1411241   +        S_Income  +    -0.48351377369429 * S_Kidhome
1411242   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1411243   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1411244   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1411245   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1411246   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1411247   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1411248   +          +     0.19198092320653 * S_NumDealsPurchases
1411249   +          +    -0.01877290175933 * S_NumDistPurchases
1411250   +          +    -0.61698509852352 * S_NumStorePurchases
1411251   +          +    -0.36114842161331 * S_NumWebPurchases
1411252   +          +     0.87653599441887 * S_NumWebVisitsMonth
1411253   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1411254   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1411255   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age +
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome +
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 *
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts +
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 *
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 *
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 *
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 *
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq +
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1411256   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1411257   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1411258   +        S_Income  +    -0.03117320792997 * S_Kidhome
1411259   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1411260   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1411261   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1411262   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1411263   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1411264   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1411265   +          +    -0.17772008430544 * S_NumDealsPurchases
1411266   +          +    -0.24320624261016 * S_NumDistPurchases
1411267   +          +     0.42056923271106 * S_NumStorePurchases
1411268   +          +    -0.28718554863857 * S_NumWebPurchases
1411269   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1411270   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1411271   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1411272   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age +
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome +
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 *
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts +
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 *
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 *
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 *
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 *
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq +
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1411273   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1411274   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1411275   +        S_Income  +     -0.0433863245185 * S_Kidhome
1411276   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1411277   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1411278   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1411279   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1411280   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1411281   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1411282   +          +    -0.43652501997552 * S_NumDealsPurchases
1411283   +          +     0.17317052107867 * S_NumDistPurchases
1411284   +          +     0.23672921935551 * S_NumStorePurchases
1411285   +          +     0.49273989445476 * S_NumWebPurchases
1411286   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1411287   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1411288   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1411289   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age +
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome +
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 *
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts +
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 *
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 *
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 *
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 *
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq +
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1411290   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1411291   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1411292   +        S_Income  +     0.59347379159371 * S_Kidhome
1411293   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1411294   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1411295   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1411296   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1411297   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1411298   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1411299   +          +     0.06887104992711 * S_NumDealsPurchases
1411300   +          +    -0.03976087278251 * S_NumDistPurchases
1411301   +          +     -0.0289014951041 * S_NumStorePurchases
1411302   +          +    -0.08062500939119 * S_NumWebPurchases
1411303   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1411304   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1411305   +        S_RMntFrq  +       0.940313744576 * S_Recency
1411306   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome +
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 *
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts +
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 *
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 *
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 *
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 *
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq +
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1411307   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1411308   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1411309   +        S_Income  +    -0.55245961592835 * S_Kidhome
1411310   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1411311   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1411312   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1411313   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1411314   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1411315   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1411316   +          +    -0.50731731808528 * S_NumDealsPurchases
1411317   +          +     -0.4854662155502 * S_NumDistPurchases
1411318   +          +     0.21175181231244 * S_NumStorePurchases
1411319   +          +     0.04923223410585 * S_NumWebPurchases
1411320   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1411321   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1411322   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1411323   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome +
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 *
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts +
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 *
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 *
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 *
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 *
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq +
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1411324   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1411325   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1411326   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1411327   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1411328   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 *
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 +
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 *
HigherEducationBinary0 ;
1411329   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1411330   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1411331   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1411332   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1411333   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 *
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 +
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 *
HigherEducationBinary0 ;
1411334   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1411335   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1411336   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1411337   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1411338   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 *
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 +
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 *
HigherEducationBinary0 ;
1411339   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1411340   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1411341   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1411342   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1411343   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 *
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 +
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 *
HigherEducationBinary0 ;
1411344   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1411345   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1411346   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1411347   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1411348   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 *
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 +
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 *
HigherEducationBinary0 ;
1411349   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1411350   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1411351   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1411352   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1411353   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 *
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 +
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 *
HigherEducationBinary0 ;
1411354   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1411355   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1411356   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1411357   +          +     0.13102231169849 * Marital_StatusDivorced
1411358   +          +     0.13221932247035 * Marital_StatusMarried
1411359   +          +    -0.28666963919866 * Marital_StatusSingle
1411360   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 *
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster +
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried +
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1411361   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1411362   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1411363   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1411364   +          +     0.36873255525654 * Marital_StatusDivorced
1411365   +          +    -0.54422050380085 * Marital_StatusMarried
1411366   +          +     0.58130553469516 * Marital_StatusSingle
1411367   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 *
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried +
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1411368   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1411369   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1411370   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1411371   +          +    -0.07480235993304 * Marital_StatusDivorced
1411372   +          +     0.31705972445069 * Marital_StatusMarried
1411373   +          +    -0.08626328185895 * Marital_StatusSingle
1411374   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 *
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried +
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1411375   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1411376   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1411377   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1411378   +          +    -0.06733679615115 * Marital_StatusDivorced
1411379   +          +     0.23111557732379 * Marital_StatusMarried
1411380   +          +    -0.34379469870478 * Marital_StatusSingle
1411381   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 *
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried +
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1411382   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1411383   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1411384   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1411385   +          +    -0.07108588070668 * Marital_StatusDivorced
1411386   +          +     1.10060875265784 * Marital_StatusMarried
1411387   +          +    -0.74271327534863 * Marital_StatusSingle
1411388   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 *
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster +
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried +
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1411389   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1411390   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1411391   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1411392   +          +    -0.19461023827362 * Marital_StatusDivorced
1411393   +          +     -0.4165676037681 * Marital_StatusMarried
1411394   +          +     0.43379324993555 * Marital_StatusSingle
1411395   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 *
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried +
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1411396   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1411397   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1411398   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1411399   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1411400   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1411401   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1411402   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1411403   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1411404   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1411405   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1411406   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1411407   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1411408   +END;
MPRINT(EM_DIAGRAM):   END;
1411409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1411410   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1411411   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1411412   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1411413   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1411414   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1411415   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1411416   +END;
MPRINT(EM_DIAGRAM):   END;
1411417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411418   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1411419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411420   +
1411421   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1411422   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1411423   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1411424   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1411425   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1411426   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411427   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1411428   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1411429   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1411430   +end;
MPRINT(EM_DIAGRAM):   end;
1411431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411432   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1411433   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1411434   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1411435   +   end;
MPRINT(EM_DIAGRAM):   end;
1411436   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1411437   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1411438   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1411439   +   end;
MPRINT(EM_DIAGRAM):   end;
1411440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411441   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1411442   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1411443   +   end;
MPRINT(EM_DIAGRAM):   end;
1411444   +end;
MPRINT(EM_DIAGRAM):   end;
1411445   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1411446   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1411447   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1411448   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 +
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 +
-2.08728996739757 * H16 ;
1411449   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1411450   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1411451   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1411452   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1411453   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1411454   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1411455   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1411456   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1411457   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1411458   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1411459   +END;
MPRINT(EM_DIAGRAM):   END;
1411460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1411461   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1411462   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1411463   +END;
MPRINT(EM_DIAGRAM):   END;
1411464   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1411465   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1411466   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1411467   +END;
MPRINT(EM_DIAGRAM):   END;
1411468   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1411469   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1411470   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1411471   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1411472   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1411473   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1411474   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1411475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411476   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1411477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411478   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1411479   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1411480   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1411481   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1411482   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1411483   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1411484   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1411485   +END;
MPRINT(EM_DIAGRAM):   END;
1411486   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1411487   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1411488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1411489   +drop
1411490   +H11
1411491   +H12
1411492   +H13
1411493   +H14
1411494   +H15
1411495   +H16
1411496   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1411497   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1411498   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1411499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411500   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1411501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411502   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1411503   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1411504   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1411505   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1411506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411507   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1411508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411509   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1411510   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1411511   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1411512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411513   +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
1411514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411516   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1411517   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1411518   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1411519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1411520   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1411521   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1411522   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1411523   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1411524   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1411525   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1411526   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1411527   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1411528   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1411529   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1411530   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1411531   +LENGTH _WARN_ $4
1411532   +      F_DepVar  $ 12
1411533   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1411534   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1411535   +
1411536   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1411537   +
1411538   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1411539   +
1411540   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1411541   +
1411542   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1411543   +
1411544   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1411545   +
1411546   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1411547   +
1411548   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1411549   +
1411550   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1411551   +
1411552   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1411553   +
1411554   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1411555   +
1411556   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1411557   +
1411558   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1411559   +
1411560   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1411561   +
1411562   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1411563   +
1411564   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1411565   +
1411566   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1411567   +
1411568   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1411569   +
1411570   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1411571   +
1411572   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1411573   +
1411574   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1411575   +
1411576   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1411577   +
1411578   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1411579   +
1411580   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1411581   +
1411582   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1411583   +
1411584   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1411585   +
1411586   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1411587   +
1411588   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1411589   +
1411590   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1411591   +
1411592   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1411593   +
1411594   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1411595   +
1411596   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1411597   +
1411598   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1411599   +
1411600   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1411601   +
1411602   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1411603   +
1411604   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1411605   +
1411606   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1411607   +
1411608   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1411609   +
1411610   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1411611   +
1411612   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1411613   +
1411614   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1411615   +
1411616   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1411617   +
1411618   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1411619   +
1411620   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1411621   +
1411622   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1411623   +
1411624   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1411625   +
1411626   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1411627   +
1411628   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1411629   +
1411630   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1411631   +
1411632   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1411633   +
1411634   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1411635   +
1411636   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1411637   +
1411638   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1411639   +
1411640   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1411641   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1411642   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1411643   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1411644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411646   +end;
MPRINT(EM_DIAGRAM):   end;
1411647   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411649   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1411650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1411652   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1411653   +   end;
MPRINT(EM_DIAGRAM):   end;
1411654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1411655   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1411656   +   end;
MPRINT(EM_DIAGRAM):   end;
1411657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411658   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1411659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411661   +   end;
MPRINT(EM_DIAGRAM):   end;
1411662   +end;
MPRINT(EM_DIAGRAM):   end;
1411663   +
1411664   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1411665   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1411666   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1411667   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1411668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411670   +end;
MPRINT(EM_DIAGRAM):   end;
1411671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411673   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1411674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1411676   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1411677   +   end;
MPRINT(EM_DIAGRAM):   end;
1411678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1411679   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1411680   +   end;
MPRINT(EM_DIAGRAM):   end;
1411681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411682   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1411683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411685   +   end;
MPRINT(EM_DIAGRAM):   end;
1411686   +end;
MPRINT(EM_DIAGRAM):   end;
1411687   +
1411688   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1411689   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1411690   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1411691   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1411692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411694   +end;
MPRINT(EM_DIAGRAM):   end;
1411695   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411697   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1411698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1411700   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1411701   +   end;
MPRINT(EM_DIAGRAM):   end;
1411702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1411703   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1411704   +   end;
MPRINT(EM_DIAGRAM):   end;
1411705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411706   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1411707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411709   +   end;
MPRINT(EM_DIAGRAM):   end;
1411710   +end;
MPRINT(EM_DIAGRAM):   end;
1411711   +
1411712   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1411713   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1411714   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1411715   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1411716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411718   +end;
MPRINT(EM_DIAGRAM):   end;
1411719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411721   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1411722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1411724   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1411725   +   end;
MPRINT(EM_DIAGRAM):   end;
1411726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1411727   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1411728   +   end;
MPRINT(EM_DIAGRAM):   end;
1411729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411730   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1411731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411733   +   end;
MPRINT(EM_DIAGRAM):   end;
1411734   +end;
MPRINT(EM_DIAGRAM):   end;
1411735   +
1411736   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1411737   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1411738   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1411739   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1411740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411742   +end;
MPRINT(EM_DIAGRAM):   end;
1411743   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411745   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1411746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411747   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1411748   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1411749   +   end;
MPRINT(EM_DIAGRAM):   end;
1411750   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1411751   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1411752   +   end;
MPRINT(EM_DIAGRAM):   end;
1411753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411754   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1411755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411757   +   end;
MPRINT(EM_DIAGRAM):   end;
1411758   +end;
MPRINT(EM_DIAGRAM):   end;
1411759   +
1411760   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1411761   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1411762   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1411763   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1411764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411766   +end;
MPRINT(EM_DIAGRAM):   end;
1411767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411769   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1411770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1411772   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1411773   +   end;
MPRINT(EM_DIAGRAM):   end;
1411774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1411775   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1411776   +   end;
MPRINT(EM_DIAGRAM):   end;
1411777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411778   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1411779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411781   +   end;
MPRINT(EM_DIAGRAM):   end;
1411782   +end;
MPRINT(EM_DIAGRAM):   end;
1411783   +
1411784   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1411785   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1411786   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1411787   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1411788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411790   +end;
MPRINT(EM_DIAGRAM):   end;
1411791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1411793   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1411794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411795   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1411796   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1411797   +   end;
MPRINT(EM_DIAGRAM):   end;
1411798   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1411799   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1411800   +   end;
MPRINT(EM_DIAGRAM):   end;
1411801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411802   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1411803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411805   +   end;
MPRINT(EM_DIAGRAM):   end;
1411806   +end;
MPRINT(EM_DIAGRAM):   end;
1411807   +
1411808   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1411809   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1411810   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1411811   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1411812   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1411813   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1411814   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1411815   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1411816   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1411817   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1411818   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1411819   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1411820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411822   +end;
MPRINT(EM_DIAGRAM):   end;
1411823   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411824   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1411825   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1411826   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411827   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1411828   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1411829   +   end;
MPRINT(EM_DIAGRAM):   end;
1411830   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1411831   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1411832   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1411833   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1411834   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1411835   +   end;
MPRINT(EM_DIAGRAM):   end;
1411836   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1411837   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1411838   +   end;
MPRINT(EM_DIAGRAM):   end;
1411839   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1411840   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1411841   +   end;
MPRINT(EM_DIAGRAM):   end;
1411842   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1411843   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1411844   +   end;
MPRINT(EM_DIAGRAM):   end;
1411845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411846   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1411847   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1411848   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1411849   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1411850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411852   +   end;
MPRINT(EM_DIAGRAM):   end;
1411853   +end;
MPRINT(EM_DIAGRAM):   end;
1411854   +
1411855   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1411856   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1411857   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1411858   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1411859   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1411860   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1411861   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1411862   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1411863   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1411864   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1411865   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1411866   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1411867   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1411868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1411869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411870   +end;
MPRINT(EM_DIAGRAM):   end;
1411871   +else do;
MPRINT(EM_DIAGRAM):   else do;
1411872   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1411873   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1411874   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1411875   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1411876   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1411877   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1411878   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1411879   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1411880   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411881   +         end;
MPRINT(EM_DIAGRAM):   end;
1411882   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1411883   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1411884   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1411885   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411886   +            end;
MPRINT(EM_DIAGRAM):   end;
1411887   +         end;
MPRINT(EM_DIAGRAM):   end;
1411888   +      end;
MPRINT(EM_DIAGRAM):   end;
1411889   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1411890   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1411891   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1411892   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411893   +         end;
MPRINT(EM_DIAGRAM):   end;
1411894   +      end;
MPRINT(EM_DIAGRAM):   end;
1411895   +   end;
MPRINT(EM_DIAGRAM):   end;
1411896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1411897   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1411898   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1411899   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411900   +      end;
MPRINT(EM_DIAGRAM):   end;
1411901   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1411902   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1411903   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1411904   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1411905   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1411906   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1411907   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1411908   +         end;
MPRINT(EM_DIAGRAM):   end;
1411909   +      end;
MPRINT(EM_DIAGRAM):   end;
1411910   +   end;
MPRINT(EM_DIAGRAM):   end;
1411911   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1411912   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1411913   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1411914   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1411915   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1411916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1411917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411918   +   end;
MPRINT(EM_DIAGRAM):   end;
1411919   +end;
MPRINT(EM_DIAGRAM):   end;
1411920   +
1411921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411922   +*** Checking missing input Interval
1411923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1411924   +
1411925   +IF NMISS(
1411926   +   AcceptedCmpTotal ,
1411927   +   Age ,
1411928   +   Frq ,
1411929   +   Income ,
1411930   +   Kidhome ,
1411931   +   Mnt ,
1411932   +   MntFishProducts ,
1411933   +   MntFruits ,
1411934   +   MntGoldProds ,
1411935   +   MntMeatProducts ,
1411936   +   MntSweetProducts ,
1411937   +   MntWines ,
1411938   +   MonthsAsCustomer ,
1411939   +   NumCatalogPurchases ,
1411940   +   NumDealsPurchases ,
1411941   +   NumDistPurchases ,
1411942   +   NumStorePurchases ,
1411943   +   NumWebPurchases ,
1411944   +   NumWebVisitsMonth ,
1411945   +   RFMstat ,
1411946   +   RMntFrq ,
1411947   +   Recency ,
1411948   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1411949   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1411950   +
1411951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1411952   +END;
MPRINT(EM_DIAGRAM):   END;
1411953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411954   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1411955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1411956   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1411957   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1411958   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1411959   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1411960   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1411961   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1411962   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1411963   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1411964   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1411965   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1411966   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1411967   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1411968   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1411969   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1411970   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1411971   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1411972   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1411973   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1411974   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1411975   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1411976   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1411977   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1411978   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1411979   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1411980   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1411981   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1411982   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1411983   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1411984   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1411985   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1411986   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1411987   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1411988   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1411989   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1411990   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1411991   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1411992   +END;
MPRINT(EM_DIAGRAM):   END;
1411993   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1411994   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1411995   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1411996   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1411997   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1411998   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1411999   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1412000   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1412001   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1412002   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1412003   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1412004   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1412005   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1412006   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1412007   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1412008   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1412009   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1412010   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1412011   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1412012   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1412013   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1412014   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1412015   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1412016   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1412017   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1412018   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1412019   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1412020   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1412021   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1412022   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1412023   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1412024   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1412025   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1412026   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1412027   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1412028   +   ELSE S_NumCatalogPurchases
1412029   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1412030   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1412031   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1412032   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1412033   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1412034   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1412035   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1412036   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1412037   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1412038   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1412039   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1412040   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1412041   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1412042   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1412043   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1412044   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1412045   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1412046   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1412047   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1412048   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1412049   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1412050   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1412051   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1412052   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1412053   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1412054   +END;
MPRINT(EM_DIAGRAM):   END;
1412055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412056   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1412057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412059   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1412060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412062   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1412063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412064   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1412065   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1412066   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1412067   +        S_Income  +    -0.48552270697514 * S_Kidhome
1412068   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1412069   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1412070   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1412071   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1412072   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1412073   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1412074   +          +    -0.23083265836869 * S_NumDealsPurchases
1412075   +          +     0.18257445063797 * S_NumDistPurchases
1412076   +          +     0.38040778765927 * S_NumStorePurchases
1412077   +          +     0.25798779223068 * S_NumWebPurchases
1412078   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1412079   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1412080   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1412081   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome +
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 *
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts +
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 *
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 *
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 *
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 *
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq +
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1412082   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1412083   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1412084   +        S_Income  +     0.23694585796773 * S_Kidhome
1412085   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1412086   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1412087   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1412088   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1412089   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1412090   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1412091   +          +    -0.07783411363525 * S_NumDealsPurchases
1412092   +          +     0.41281579441285 * S_NumDistPurchases
1412093   +          +     0.22243606867939 * S_NumStorePurchases
1412094   +          +     0.27174952755013 * S_NumWebPurchases
1412095   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1412096   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1412097   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1412098   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome +
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 *
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts +
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 *
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 *
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 *
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 *
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq +
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1412099   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1412100   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1412101   +        S_Income  +     0.20802765248799 * S_Kidhome
1412102   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1412103   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1412104   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1412105   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1412106   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1412107   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1412108   +          +     0.09455783738093 * S_NumDealsPurchases
1412109   +          +    -0.06039304909585 * S_NumDistPurchases
1412110   +          +    -0.10306611685636 * S_NumStorePurchases
1412111   +          +    -0.00323837049664 * S_NumWebPurchases
1412112   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1412113   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1412114   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1412115   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome +
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 *
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts +
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 *
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 *
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 *
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 *
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq +
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1412116   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1412117   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1412118   +        S_Income  +     0.26381864865425 * S_Kidhome
1412119   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1412120   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1412121   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1412122   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1412123   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1412124   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1412125   +          +      0.8306613243419 * S_NumDealsPurchases
1412126   +          +     0.31439474207278 * S_NumDistPurchases
1412127   +          +    -0.62131474975756 * S_NumStorePurchases
1412128   +          +    -1.04845843654047 * S_NumWebPurchases
1412129   +          +     0.13255915506164 * S_NumWebVisitsMonth
1412130   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1412131   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1412132   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age +
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome +
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 *
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts +
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 *
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 *
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 *
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 *
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq +
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1412133   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1412134   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1412135   +        S_Income  +    -0.71599192201946 * S_Kidhome
1412136   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1412137   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1412138   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1412139   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1412140   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1412141   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1412142   +          +     0.63537278643623 * S_NumDealsPurchases
1412143   +          +     0.00410348485264 * S_NumDistPurchases
1412144   +          +    -0.78287523583925 * S_NumStorePurchases
1412145   +          +    -0.73614491225189 * S_NumWebPurchases
1412146   +          +      1.5997596522354 * S_NumWebVisitsMonth
1412147   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1412148   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1412149   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome +
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 *
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts +
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 *
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 *
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 *
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 *
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq +
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1412150   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1412151   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1412152   +        S_Income  +    -0.23853377939411 * S_Kidhome
1412153   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1412154   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1412155   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1412156   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1412157   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1412158   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1412159   +          +    -0.30899603957269 * S_NumDealsPurchases
1412160   +          +     0.11839581082877 * S_NumDistPurchases
1412161   +          +     0.20149797391098 * S_NumStorePurchases
1412162   +          +      0.1616654107491 * S_NumWebPurchases
1412163   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1412164   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1412165   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1412166   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome +
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 *
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts +
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 *
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 *
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 *
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 *
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq +
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1412167   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1412168   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1412169   +        S_Income  +    -0.48650790963695 * S_Kidhome
1412170   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1412171   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1412172   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1412173   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1412174   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1412175   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1412176   +          +    -0.18889005468777 * S_NumDealsPurchases
1412177   +          +     0.17240918361456 * S_NumDistPurchases
1412178   +          +     0.11704610685994 * S_NumStorePurchases
1412179   +          +     0.23031393640508 * S_NumWebPurchases
1412180   +          +     0.66002859819524 * S_NumWebVisitsMonth
1412181   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1412182   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1412183   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome +
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 *
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts +
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 *
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 *
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 *
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 *
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq +
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1412184   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1412185   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1412186   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1412187   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1412188   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 *
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 +
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 *
HigherEducationBinary0 ;
1412189   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1412190   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1412191   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1412192   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1412193   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 *
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 +
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 *
HigherEducationBinary0 ;
1412194   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1412195   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1412196   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1412197   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1412198   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 *
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 +
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 *
HigherEducationBinary0 ;
1412199   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1412200   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1412201   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1412202   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1412203   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 *
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 +
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 *
HigherEducationBinary0 ;
1412204   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1412205   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1412206   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1412207   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1412208   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 *
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 +
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 *
HigherEducationBinary0 ;
1412209   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1412210   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1412211   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1412212   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1412213   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 *
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 +
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 *
HigherEducationBinary0 ;
1412214   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1412215   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1412216   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1412217   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1412218   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 *
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 +
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 *
HigherEducationBinary0 ;
1412219   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1412220   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1412221   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1412222   +          +     0.43452164349556 * Marital_StatusDivorced
1412223   +          +    -0.46042593279944 * Marital_StatusMarried
1412224   +          +     0.45533323427801 * Marital_StatusSingle
1412225   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 *
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster +
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried +
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1412226   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1412227   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1412228   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1412229   +          +     0.11002244687305 * Marital_StatusDivorced
1412230   +          +     0.52424349905683 * Marital_StatusMarried
1412231   +          +     -0.3969250366321 * Marital_StatusSingle
1412232   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 *
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried +
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1412233   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1412234   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1412235   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1412236   +          +    -0.05300704180744 * Marital_StatusDivorced
1412237   +          +     0.07805487103106 * Marital_StatusMarried
1412238   +          +     0.20033339442958 * Marital_StatusSingle
1412239   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 *
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster +
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried +
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1412240   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1412241   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1412242   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1412243   +          +    -0.42379596543146 * Marital_StatusDivorced
1412244   +          +     0.66738351478416 * Marital_StatusMarried
1412245   +          +    -0.37324277578462 * Marital_StatusSingle
1412246   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 *
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster +
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried +
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1412247   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1412248   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1412249   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1412250   +          +     0.88761025578489 * Marital_StatusDivorced
1412251   +          +    -0.85905539883385 * Marital_StatusMarried
1412252   +          +     0.73467737758558 * Marital_StatusSingle
1412253   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 *
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried +
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1412254   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1412255   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1412256   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1412257   +          +    -0.11980818075461 * Marital_StatusDivorced
1412258   +          +    -0.16572953052582 * Marital_StatusMarried
1412259   +          +     0.34617421331983 * Marital_StatusSingle
1412260   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 *
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried +
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1412261   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1412262   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1412263   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1412264   +          +     0.14874886057777 * Marital_StatusDivorced
1412265   +          +     -1.0463076915992 * Marital_StatusMarried
1412266   +          +     0.72937563672763 * Marital_StatusSingle
1412267   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 *
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried +
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1412268   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1412269   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1412270   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1412271   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1412272   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1412273   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1412274   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1412275   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1412276   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1412277   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1412278   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1412279   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1412280   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1412281   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1412282   +END;
MPRINT(EM_DIAGRAM):   END;
1412283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1412284   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1412285   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1412286   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1412287   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1412288   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1412289   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1412290   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1412291   +END;
MPRINT(EM_DIAGRAM):   END;
1412292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412293   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1412294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412295   +
1412296   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1412297   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1412298   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1412299   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1412300   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1412301   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1412302   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1412303   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1412304   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1412305   +end;
MPRINT(EM_DIAGRAM):   end;
1412306   +else do;
MPRINT(EM_DIAGRAM):   else do;
1412307   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1412308   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1412309   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1412310   +   end;
MPRINT(EM_DIAGRAM):   end;
1412311   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1412312   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1412313   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1412314   +   end;
MPRINT(EM_DIAGRAM):   end;
1412315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1412316   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1412317   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1412318   +   end;
MPRINT(EM_DIAGRAM):   end;
1412319   +end;
MPRINT(EM_DIAGRAM):   end;
1412320   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1412321   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1412322   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1412323   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1412324   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 +
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 *
H16 + 2.19267705077374 * H17 ;
1412325   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1412326   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1412327   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1412328   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1412329   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1412330   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1412331   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1412332   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1412333   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1412334   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1412335   +END;
MPRINT(EM_DIAGRAM):   END;
1412336   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1412337   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1412338   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1412339   +END;
MPRINT(EM_DIAGRAM):   END;
1412340   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1412341   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1412342   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1412343   +END;
MPRINT(EM_DIAGRAM):   END;
1412344   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1412345   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1412346   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1412347   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1412348   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1412349   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1412350   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1412351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412352   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1412353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1412354   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1412355   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1412356   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1412357   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1412358   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1412359   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1412360   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1412361   +END;
MPRINT(EM_DIAGRAM):   END;
1412362   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1412363   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1412364   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1412365   +drop
1412366   +H11
1412367   +H12
1412368   +H13
1412369   +H14
1412370   +H15
1412371   +H16
1412372   +H17
1412373   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1412374   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1412375   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1412376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412377   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1412378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412379   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1412380   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1412381   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1412382   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1412383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412384   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1412385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412386   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1412387   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1412388   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1412389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412390   +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
1412391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412392   +P_DepVar1 = (
1412393   +Reg5_P_DepVar1 +
1412394   +Reg_P_DepVar1 +
1412395   +Neural4_P_DepVar1 +
1412396   +Neural2_P_DepVar1 +
1412397   +Neural3_P_DepVar1 +
1412398   +Neural9_P_DepVar1 +
1412399   +Neural10_P_DepVar1
1412400   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg5_P_DepVar1 + Reg_P_DepVar1 + Neural4_P_DepVar1 +
Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural9_P_DepVar1 + Neural10_P_DepVar1 )/7;
1412401   +P_DepVar0 = (
1412402   +Reg5_P_DepVar0 +
1412403   +Reg_P_DepVar0 +
1412404   +Neural4_P_DepVar0 +
1412405   +Neural2_P_DepVar0 +
1412406   +Neural3_P_DepVar0 +
1412407   +Neural9_P_DepVar0 +
1412408   +Neural10_P_DepVar0
1412409   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg5_P_DepVar0 + Reg_P_DepVar0 + Neural4_P_DepVar0 +
Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural9_P_DepVar0 + Neural10_P_DepVar0 )/7;
1412410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412411   +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
1412412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412413   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1412414   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1412415   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1412416   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1412417   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1412418   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1412419   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1412420   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1412421   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1412422   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1412423   +end;
MPRINT(EM_DIAGRAM):   end;
1412424   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1412425   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1412426   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1412427   +end;
MPRINT(EM_DIAGRAM):   end;
1412428   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412430   +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
1412431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412432   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1412433   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1412434   +else
1412435   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1412436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412437   +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
1412438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412439   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1412440   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1412441   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1412442   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1412443   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1412444   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1412445   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1412446   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1412447   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1412448   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1412449   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1412450   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1412451   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1412452   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1412453   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1412454   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1412455   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1412456   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1412457   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1412458   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1412459   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1412460   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1412461   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1412462   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1412463   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1412464   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1412465   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1412466   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1412466  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1412467   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1412467  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1412468   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1412468  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1412469   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1412469  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1412470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412471   +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
1412472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412473   +if
1412474   +F_DepVar NE '1'
1412475   +AND F_DepVar NE '0'
1412476   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1412477   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1412478   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1412479   +end;
MPRINT(EM_DIAGRAM):   end;
1412480   +else do;
MPRINT(EM_DIAGRAM):   else do;
1412481   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1412482   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1412483   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1412484   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1412485   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1412486   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1412487   +END;
MPRINT(EM_DIAGRAM):   END;
1412488   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1412489    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1412490    quit;
1412491    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl14_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1412551    filename _pref
1412551  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1412552    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1412553    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1412554   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1412555   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1412556   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1412557   +
1412558   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1412559   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1412560   +
1412561   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1412562   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1412563   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1412564   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1412565   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1412566   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1412567   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1412568   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1412569   +
1412570   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1412571   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1412572   +
1412573   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1412574   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1412575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412577   +end;
MPRINT(EM_DIAGRAM):   end;
1412578   +
1412579   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1412580   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1412581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412583   +end;
MPRINT(EM_DIAGRAM):   end;
1412584   +
1412585   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1412586   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1412587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412589   +end;
MPRINT(EM_DIAGRAM):   end;
1412590   +
1412591   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1412592   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1412593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412595   +end;
MPRINT(EM_DIAGRAM):   end;
1412596   +
1412597   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1412598   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1412599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412601   +end;
MPRINT(EM_DIAGRAM):   end;
1412602   +
1412603   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1412604   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1412605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412607   +end;
MPRINT(EM_DIAGRAM):   end;
1412608   +
1412609   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1412610   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1412611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412613   +end;
MPRINT(EM_DIAGRAM):   end;
1412614   +
1412615   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1412616   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1412617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412619   +end;
MPRINT(EM_DIAGRAM):   end;
1412620   +
1412621   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1412622   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1412623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412625   +end;
MPRINT(EM_DIAGRAM):   end;
1412626   +
1412627   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1412628   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1412629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412631   +end;
MPRINT(EM_DIAGRAM):   end;
1412632   +
1412633   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1412634   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1412635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412637   +end;
MPRINT(EM_DIAGRAM):   end;
1412638   +
1412639   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1412640   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1412641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412643   +end;
MPRINT(EM_DIAGRAM):   end;
1412644   +
1412645   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1412646   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1412647   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1412648   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1412649   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1412650   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1412651   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1412652   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1412653   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1412654   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1412655   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1412656   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1412657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1412658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412659   +end;
MPRINT(EM_DIAGRAM):   end;
1412660   +else do;
MPRINT(EM_DIAGRAM):   else do;
1412661   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1412662   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1412663   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1412664   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1412665   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1412666   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1412667   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1412668   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1412669   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1412670   +         end;
MPRINT(EM_DIAGRAM):   end;
1412671   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1412672   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1412673   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1412674   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1412675   +            end;
MPRINT(EM_DIAGRAM):   end;
1412676   +         end;
MPRINT(EM_DIAGRAM):   end;
1412677   +      end;
MPRINT(EM_DIAGRAM):   end;
1412678   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1412679   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1412680   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1412681   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1412682   +         end;
MPRINT(EM_DIAGRAM):   end;
1412683   +      end;
MPRINT(EM_DIAGRAM):   end;
1412684   +   end;
MPRINT(EM_DIAGRAM):   end;
1412685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1412686   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1412687   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1412688   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1412689   +      end;
MPRINT(EM_DIAGRAM):   end;
1412690   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1412691   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1412692   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1412693   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1412694   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1412695   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1412696   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1412697   +         end;
MPRINT(EM_DIAGRAM):   end;
1412698   +      end;
MPRINT(EM_DIAGRAM):   end;
1412699   +   end;
MPRINT(EM_DIAGRAM):   end;
1412700   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1412701   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1412702   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1412703   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1412704   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1412705   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1412706   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1412707   +   end;
MPRINT(EM_DIAGRAM):   end;
1412708   +end;
MPRINT(EM_DIAGRAM):   end;
1412709   +
1412710   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1412711   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1412712   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1412713   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1412714   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1412715   +end;
MPRINT(EM_DIAGRAM):   end;
1412716   +
1412717   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1412718   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1412719   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1412720   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1412721   +
1412722   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1412723   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1412724   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1412725   +
1412726   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1412727   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1412728   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1412729   +
1412730   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1412731   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1412732   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1412733   +
1412734   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1412735   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1412736   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1412737   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1412738   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1412739   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1412740   +
1412741   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1412742   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1412743   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1412744   +
1412745   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1412746   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1412747   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1412748   +
1412749   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1412750   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1412751   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1412752   +
1412753   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1412754   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1412755   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1412756   +
1412757   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1412758   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1412759   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1412760   +
1412761   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1412762   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1412763   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1412764   +
1412765   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1412766   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1412767   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1412768   +
1412769   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1412770   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1412771   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1412772   +
1412773   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1412774   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1412775   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1412776   +
1412777   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1412778   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1412779   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1412780   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1412781   +
1412782   +REG5DR1:
1412783   +
1412784   +
1412785   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1412786   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1412787   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1412788   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1412789   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1412790   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1412791   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1412792   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1412793   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1412794   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1412795   +end;
MPRINT(EM_DIAGRAM):   end;
1412796   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1412797   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1412798   +
1412799   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1412800   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1412801   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1412802    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1412803    quit;
1412804    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1412805    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1412806    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1412807    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1412808    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1412809    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412810    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1412811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412812    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412813    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1412814    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1412816    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1412817    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1412818    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1412819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412820    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1412821    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1412822    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1412823    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412825    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1412826    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1412827    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412828    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412829    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1412830    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1412830  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.
 
1412831    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1412832    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1412833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412834    filename _pref
1412834  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1412835    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1412836    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1412837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412838   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1412839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1412840   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1412841   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1412842   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1412843    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1412844    quit;
1412845    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1412846    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1412847    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1412848    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1412849    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1412850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412851    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1412852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1412854    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1412855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412856    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412857    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1412858    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1412859    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1412860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412861    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1412862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1412863    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1412864    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412865    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412866    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1412867    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1412868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412869    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1412870    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1412871    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1412871  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1412872    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412873    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1412874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412875    filename _pref
1412875  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1412876    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1412877    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1412878   +
1412879   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1412880   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1412880  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1412881   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1412882   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1412883   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1412884   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1412885   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1412886    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1412887    quit;
1412888    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1412889    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1412890    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1412891    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1412892    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1412893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412894    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1412895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412897    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1412898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412900    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1412901    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1412902    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1412903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412904    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1412905    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412906    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1412907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412908    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412909    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1412910    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1412911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1412912    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1412913    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1412914    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1412914  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1412915    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412916    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1412917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412918    filename _pref
1412918  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1412919    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1412920    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1412921   +
1412922   +
1412923   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1412924   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1412925   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1412926   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1412927   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1412928   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412929   +
1412930   +
1412931   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1412932   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1412933   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1412934   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1412935   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1412936   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412937   +
1412938   +
1412939   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1412940   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1412941   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1412942   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1412943   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1412944   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412945   +
1412946   +
1412947   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1412948   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1412949   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1412950   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1412951   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1412952   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412953   +
1412954   +
1412955   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1412956   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1412957   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1412958   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1412959   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1412960   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412961   +
1412962   +
1412963   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1412964   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1412965   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1412966   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1412967   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1412968   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412969   +
1412970   +
1412971   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1412972   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1412973   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1412974   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1412975   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1412976   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412977   +
1412978   +
1412979   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1412980   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1412981   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1412982   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1412983   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1412984   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1412985   +if
1412986   +_FILTERNORM1 not in ( '.')
1412987   + and
1412988   +_FILTERNORM2 not in ( '.')
1412989   + and
1412990   +_FILTERNORM3 not in ( '.')
1412991   + and
1412992   +_FILTERNORM4 not in ( '.')
1412993   + and
1412994   +_FILTERNORM5 not in ( '.')
1412995   + and
1412996   +_FILTERNORM6 not in ( '.')
1412997   + and
1412998   +_FILTERNORM7 not in ( ' ')
1412999   + and
1413000   +_FILTERNORM8 not in ( ' ')
1413001   +and
1413002   +( Dt_Customer ne .)
1413003   +and ( Income ne . and (Income<=107000))
1413004   +and ( Kidhome ne .)
1413005   +and ( MntFishProducts ne .)
1413006   +and ( MntFruits ne .)
1413007   +and ( MntGoldProds ne .)
1413008   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1413009   +and ( MntSweetProducts ne .)
1413010   +and ( MntWines ne .)
1413011   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1413012   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1413013   +and ( NumStorePurchases ne .)
1413014   +and ( NumWebPurchases ne .)
1413015   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1413016   +and ( Recency ne .)
1413017   +and ( Teenhome ne .)
1413018   +and ( Year_Birth ne .)
1413019   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1413020   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1413021   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1413022   +end;
MPRINT(EM_DIAGRAM):   end;
1413023   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1413024   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1413025    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1413026    quit;
1413027    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1413028    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1413029    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1413030    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1413031    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1413032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413033    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1413034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413036    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1413037    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413039    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413040    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1413041    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1413042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413043    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1413044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1413045    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1413046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413048    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413049    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1413050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413051    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413052    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1413053    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1413053  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1413054    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413055    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1413056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413057    %macro varDept(fcmpdata=,id=);
1413058    %global nobs&id scoreFlag&id;
1413059    %let scoreFlag&id = 0;
1413060    %if &id=1 or ^&fcmpStart %then %do;
1413061    proc sort data=&fcmpdata out=_temp&id nodupkey;
1413062    by NAME;
1413063    where id=&id and LHS in( %let j=1;
1413064    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1413065    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1413066    "&var" %let j = %eval(&j+1);
1413067    %end;
1413068    );
1413069    run;
1413070    %let dsid = %sysfunc(open(_temp&id));
1413071    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413072    %let dsid = %sysfunc(close(&dsid));
1413073    %if &&nobs&id %then %do;
1413074    %let scoreFlag&id = 1;
1413075    %let fcmpStart = 1;
1413076    %end;
1413077    %else %let fcmpStart = 0;
1413078    %end;
1413079    %else %do;
1413080    proc sort data=&fcmpdata out=_tempid;
1413081    where id=&id;
1413082    by LHS;
1413083    run;
1413084    %let dsid = %sysfunc(open(_tempid));
1413085    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413086    %let dsid = %sysfunc(close(&dsid));
1413087    %if ^&&nobs&id %then %do;
1413088    proc datasets lib=work nolist;
1413089    delete _tempid;
1413090    run;
1413091    quit;
1413092    %end;
1413093    %else %do;
1413094    data _tempAll;
1413095    set %let j=%eval(&id-1);
1413096    %do x=1 %to &j;
1413097    %if &&nobs&x %then %do;
1413098    _temp&x %end;
1413099    %end;
1413100    ;
1413101    run;
1413102    proc sql;
1413103    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1413103  ! work._tempid p2 where p.name=p2.lhs;
1413104    quit;
1413105    data _temp&id;
1413106    set _temp&id;
1413107    where LHS ne '' and NAME ne '' and Node ne '';
1413108    run;
1413109    proc datasets lib=work nolist;
1413110    delete _tempAll;
1413111    run;
1413112    %let dsid = %sysfunc(open(_temp&id));
1413113    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413114    %let dsid = %sysfunc(close(&dsid));
1413115    %if ^&&nobs&id %then %do;
1413116    proc datasets lib=work nolist;
1413117    delete _temp&id;
1413118    run;
1413119    quit;
1413120    %end;
1413121    %else %do;
1413122    %let scoreFlag&id = 1;
1413123    data _temp&id;
1413124    set _temp&id;
1413125    where LHS ne NAME and node ne '';
1413126    run;
1413127    %let dsid = %sysfunc(open(_temp&id));
1413128    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413129    %let dsid = %sysfunc(close(&dsid));
1413130    %if ^&&nobs&id %then %do;
1413131    proc datasets lib=work nolist;
1413132    delete _temp&id;
1413133    run;
1413134    quit;
1413135    %end;
1413136    %else %do;
1413137    proc sort data=_temp&id nodupkey;
1413138    by LHS NAME;
1413139    run;
1413140    %end;
1413141    %end;
1413142    %end;
1413143    %end;
1413144    %mend varDept;
1413145    %macro optCode(outdata=fcmpdata);
1413146    %global fcmpStart;
1413147    %let fcmpStart = 0;
1413148    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1413149    %let NumNodes=9;
1413150    %do k=1 %to &NumNodes;
1413151    %vardept(fcmpdata=&outdata, id=&k);
1413152    %end;
1413153    %mend optCode;
1413154    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1413155    filename _pref
1413155  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1413156    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1413157    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1413158   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1413159   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1413160   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1413161   +
1413162   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1413163   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1413164   +
1413165   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1413166   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1413167   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1413168   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1413169   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1413170   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1413171   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1413172   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1413173   +
1413174   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1413175   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1413176   +
1413177   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1413178   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1413179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413181   +end;
MPRINT(EM_DIAGRAM):   end;
1413182   +
1413183   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1413184   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1413185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413187   +end;
MPRINT(EM_DIAGRAM):   end;
1413188   +
1413189   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1413190   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1413191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413193   +end;
MPRINT(EM_DIAGRAM):   end;
1413194   +
1413195   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1413196   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1413197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413199   +end;
MPRINT(EM_DIAGRAM):   end;
1413200   +
1413201   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1413202   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1413203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413205   +end;
MPRINT(EM_DIAGRAM):   end;
1413206   +
1413207   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1413208   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1413209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413211   +end;
MPRINT(EM_DIAGRAM):   end;
1413212   +
1413213   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1413214   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1413215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413217   +end;
MPRINT(EM_DIAGRAM):   end;
1413218   +
1413219   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1413220   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1413221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413223   +end;
MPRINT(EM_DIAGRAM):   end;
1413224   +
1413225   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1413226   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1413227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413229   +end;
MPRINT(EM_DIAGRAM):   end;
1413230   +
1413231   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1413232   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1413233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413235   +end;
MPRINT(EM_DIAGRAM):   end;
1413236   +
1413237   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1413238   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1413239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413241   +end;
MPRINT(EM_DIAGRAM):   end;
1413242   +
1413243   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1413244   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1413245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413247   +end;
MPRINT(EM_DIAGRAM):   end;
1413248   +
1413249   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1413250   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1413251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413253   +end;
MPRINT(EM_DIAGRAM):   end;
1413254   +
1413255   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1413256   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1413257   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1413258   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1413259   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1413260   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1413261   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1413262   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1413263   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1413264   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1413265   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1413266   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1413267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413269   +end;
MPRINT(EM_DIAGRAM):   end;
1413270   +else do;
MPRINT(EM_DIAGRAM):   else do;
1413271   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1413272   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1413273   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1413274   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1413275   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1413276   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1413277   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1413278   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1413279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1413280   +         end;
MPRINT(EM_DIAGRAM):   end;
1413281   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1413282   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1413283   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1413284   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1413285   +            end;
MPRINT(EM_DIAGRAM):   end;
1413286   +         end;
MPRINT(EM_DIAGRAM):   end;
1413287   +      end;
MPRINT(EM_DIAGRAM):   end;
1413288   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1413289   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1413290   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1413291   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1413292   +         end;
MPRINT(EM_DIAGRAM):   end;
1413293   +      end;
MPRINT(EM_DIAGRAM):   end;
1413294   +   end;
MPRINT(EM_DIAGRAM):   end;
1413295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1413296   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1413297   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1413298   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1413299   +      end;
MPRINT(EM_DIAGRAM):   end;
1413300   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1413301   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1413302   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1413303   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1413304   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1413305   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1413306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1413307   +         end;
MPRINT(EM_DIAGRAM):   end;
1413308   +      end;
MPRINT(EM_DIAGRAM):   end;
1413309   +   end;
MPRINT(EM_DIAGRAM):   end;
1413310   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1413311   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1413312   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1413313   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1413314   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1413315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1413316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413317   +   end;
MPRINT(EM_DIAGRAM):   end;
1413318   +end;
MPRINT(EM_DIAGRAM):   end;
1413319   +
1413320   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1413321   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1413322   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1413323   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1413324   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1413325   +end;
MPRINT(EM_DIAGRAM):   end;
1413326   +
1413327   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1413328   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1413329   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1413330   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1413331   +
1413332   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1413333   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1413334   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1413335   +
1413336   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1413337   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1413338   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1413339   +
1413340   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1413341   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1413342   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1413343   +
1413344   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1413345   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1413346   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1413347   +
1413348   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1413349   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1413350   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1413351   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1413352   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1413353   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1413354   +
1413355   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1413356   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1413357   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1413358   +
1413359   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1413360   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1413361   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1413362   +
1413363   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1413364   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1413365   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1413366   +
1413367   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1413368   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1413369   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1413370   +
1413371   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1413372   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1413373   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1413374   +
1413375   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1413376   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1413377   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1413378   +
1413379   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1413380   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1413381   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1413382   +
1413383   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1413384   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1413385   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1413386   +
1413387   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1413388   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1413389   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1413390   +
1413391   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1413392   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1413393   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1413394   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1413395   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1413396   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1413397   +end;
MPRINT(EM_DIAGRAM):   end;
1413398   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1413399   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1413400   +
1413401   +REGDR1:
1413402   +
1413403   +
1413404   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1413405   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1413406   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1413407   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1413408   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1413409   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1413410   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1413411   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1413412   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1413413   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1413414   +end;
MPRINT(EM_DIAGRAM):   end;
1413415   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1413416   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1413417   +
1413418   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1413419   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1413420   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1413421    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1413422    quit;
1413423    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1413424    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1413425    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1413426    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1413427    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1413428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413429    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1413430    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413431    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413432    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1413433    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413435    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413436    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1413437    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1413438    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413439    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1413440    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1413441    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1413442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413444    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413445    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1413446    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413447    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413448    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1413449    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1413449  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.
 
1413450    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413451    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1413452    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413453    filename _pref
1413453  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1413454    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1413455    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1413456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1413457   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1413458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1413459   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1413460   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1413461   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1413462    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1413463    quit;
1413464    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1413465    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1413466    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1413467    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1413468    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1413469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413470    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1413471    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413472    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413473    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1413474    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413476    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413477    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1413478    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1413479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413480    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1413481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1413482    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1413483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413484    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413485    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413486    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1413487    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413488    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413489    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1413490    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1413490  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1413491    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413492    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1413493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413494    filename _pref
1413494  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1413495    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1413496    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1413497   +
1413498   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1413499   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1413499  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1413500   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1413501   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1413502   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1413503   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1413504   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1413505    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1413506    quit;
1413507    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1413508    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1413509    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1413510    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1413511    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1413512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413513    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1413514    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413516    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1413517    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413518    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413519    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413520    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1413521    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1413522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413523    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1413524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413525    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1413526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413528    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413529    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1413530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413531    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413532    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1413533    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1413533  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1413534    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413535    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1413536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413537    filename _pref
1413537  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1413538    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1413539    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1413540   +
1413541   +
1413542   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1413543   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1413544   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1413545   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1413546   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1413547   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413548   +
1413549   +
1413550   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1413551   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1413552   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1413553   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1413554   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1413555   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413556   +
1413557   +
1413558   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1413559   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1413560   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1413561   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1413562   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1413563   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413564   +
1413565   +
1413566   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1413567   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1413568   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1413569   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1413570   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1413571   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413572   +
1413573   +
1413574   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1413575   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1413576   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1413577   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1413578   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1413579   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413580   +
1413581   +
1413582   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1413583   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1413584   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1413585   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1413586   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1413587   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413588   +
1413589   +
1413590   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1413591   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1413592   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1413593   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1413594   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1413595   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413596   +
1413597   +
1413598   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1413599   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1413600   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1413601   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1413602   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1413603   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1413604   +if
1413605   +_FILTERNORM1 not in ( '.')
1413606   + and
1413607   +_FILTERNORM2 not in ( '.')
1413608   + and
1413609   +_FILTERNORM3 not in ( '.')
1413610   + and
1413611   +_FILTERNORM4 not in ( '.')
1413612   + and
1413613   +_FILTERNORM5 not in ( '.')
1413614   + and
1413615   +_FILTERNORM6 not in ( '.')
1413616   + and
1413617   +_FILTERNORM7 not in ( ' ')
1413618   + and
1413619   +_FILTERNORM8 not in ( ' ')
1413620   +and
1413621   +( Dt_Customer ne .)
1413622   +and ( Income ne . and (Income<=107000))
1413623   +and ( Kidhome ne .)
1413624   +and ( MntFishProducts ne .)
1413625   +and ( MntFruits ne .)
1413626   +and ( MntGoldProds ne .)
1413627   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1413628   +and ( MntSweetProducts ne .)
1413629   +and ( MntWines ne .)
1413630   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1413631   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1413632   +and ( NumStorePurchases ne .)
1413633   +and ( NumWebPurchases ne .)
1413634   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1413635   +and ( Recency ne .)
1413636   +and ( Teenhome ne .)
1413637   +and ( Year_Birth ne .)
1413638   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1413639   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1413640   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1413641   +end;
MPRINT(EM_DIAGRAM):   end;
1413642   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1413643   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1413644    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1413645    quit;
1413646    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1413647    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1413648    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1413649    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1413650    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1413651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413652    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1413653    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413655    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1413656    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1413658    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413659    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1413660    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1413661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413662    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1413663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1413664    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1413665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413667    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1413668    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1413669    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1413670    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413671    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1413672    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1413672  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1413673    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413674    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1413675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1413676    %macro varDept(fcmpdata=,id=);
1413677    %global nobs&id scoreFlag&id;
1413678    %let scoreFlag&id = 0;
1413679    %if &id=1 or ^&fcmpStart %then %do;
1413680    proc sort data=&fcmpdata out=_temp&id nodupkey;
1413681    by NAME;
1413682    where id=&id and LHS in( %let j=1;
1413683    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1413684    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1413685    "&var" %let j = %eval(&j+1);
1413686    %end;
1413687    );
1413688    run;
1413689    %let dsid = %sysfunc(open(_temp&id));
1413690    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413691    %let dsid = %sysfunc(close(&dsid));
1413692    %if &&nobs&id %then %do;
1413693    %let scoreFlag&id = 1;
1413694    %let fcmpStart = 1;
1413695    %end;
1413696    %else %let fcmpStart = 0;
1413697    %end;
1413698    %else %do;
1413699    proc sort data=&fcmpdata out=_tempid;
1413700    where id=&id;
1413701    by LHS;
1413702    run;
1413703    %let dsid = %sysfunc(open(_tempid));
1413704    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413705    %let dsid = %sysfunc(close(&dsid));
1413706    %if ^&&nobs&id %then %do;
1413707    proc datasets lib=work nolist;
1413708    delete _tempid;
1413709    run;
1413710    quit;
1413711    %end;
1413712    %else %do;
1413713    data _tempAll;
1413714    set %let j=%eval(&id-1);
1413715    %do x=1 %to &j;
1413716    %if &&nobs&x %then %do;
1413717    _temp&x %end;
1413718    %end;
1413719    ;
1413720    run;
1413721    proc sql;
1413722    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1413722  ! work._tempid p2 where p.name=p2.lhs;
1413723    quit;
1413724    data _temp&id;
1413725    set _temp&id;
1413726    where LHS ne '' and NAME ne '' and Node ne '';
1413727    run;
1413728    proc datasets lib=work nolist;
1413729    delete _tempAll;
1413730    run;
1413731    %let dsid = %sysfunc(open(_temp&id));
1413732    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413733    %let dsid = %sysfunc(close(&dsid));
1413734    %if ^&&nobs&id %then %do;
1413735    proc datasets lib=work nolist;
1413736    delete _temp&id;
1413737    run;
1413738    quit;
1413739    %end;
1413740    %else %do;
1413741    %let scoreFlag&id = 1;
1413742    data _temp&id;
1413743    set _temp&id;
1413744    where LHS ne NAME and node ne '';
1413745    run;
1413746    %let dsid = %sysfunc(open(_temp&id));
1413747    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1413748    %let dsid = %sysfunc(close(&dsid));
1413749    %if ^&&nobs&id %then %do;
1413750    proc datasets lib=work nolist;
1413751    delete _temp&id;
1413752    run;
1413753    quit;
1413754    %end;
1413755    %else %do;
1413756    proc sort data=_temp&id nodupkey;
1413757    by LHS NAME;
1413758    run;
1413759    %end;
1413760    %end;
1413761    %end;
1413762    %end;
1413763    %mend varDept;
1413764    %macro optCode(outdata=fcmpdata);
1413765    %global fcmpStart;
1413766    %let fcmpStart = 0;
1413767    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1413768    %let NumNodes=9;
1413769    %do k=1 %to &NumNodes;
1413770    %vardept(fcmpdata=&outdata, id=&k);
1413771    %end;
1413772    %mend optCode;
1413773    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 56 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1413774    filename _pref
1413774  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1413775    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1413776    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1413777   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1413778   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1413779   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1413780   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1413781   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1413782   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1413783   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1413784   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1413785   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1413786   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1413787   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1413788   +LENGTH _WARN_ $4
1413789   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1413790   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1413791   +
1413792   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1413793   +
1413794   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1413795   +
1413796   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1413797   +
1413798   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1413799   +
1413800   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1413801   +
1413802   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1413803   +
1413804   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1413805   +
1413806   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1413807   +
1413808   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1413809   +
1413810   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1413811   +
1413812   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1413813   +
1413814   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1413815   +
1413816   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1413817   +
1413818   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1413819   +
1413820   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1413821   +
1413822   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1413823   +
1413824   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1413825   +
1413826   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1413827   +
1413828   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1413829   +
1413830   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1413831   +
1413832   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1413833   +
1413834   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1413835   +
1413836   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1413837   +
1413838   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1413839   +
1413840   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1413841   +
1413842   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1413843   +
1413844   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1413845   +
1413846   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1413847   +
1413848   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1413849   +
1413850   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1413851   +
1413852   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1413853   +
1413854   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1413855   +
1413856   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1413857   +
1413858   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1413859   +
1413860   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1413861   +
1413862   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1413863   +
1413864   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1413865   +
1413866   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1413867   +
1413868   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1413869   +
1413870   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1413871   +
1413872   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1413873   +
1413874   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1413875   +
1413876   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1413877   +
1413878   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1413879   +
1413880   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1413881   +
1413882   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1413883   +
1413884   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1413885   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1413886   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1413887   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1413888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413890   +end;
MPRINT(EM_DIAGRAM):   end;
1413891   +else do;
MPRINT(EM_DIAGRAM):   else do;
1413892   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1413893   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1413894   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1413895   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1413896   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1413897   +   end;
MPRINT(EM_DIAGRAM):   end;
1413898   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1413899   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1413900   +   end;
MPRINT(EM_DIAGRAM):   end;
1413901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1413902   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1413903   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1413904   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413905   +   end;
MPRINT(EM_DIAGRAM):   end;
1413906   +end;
MPRINT(EM_DIAGRAM):   end;
1413907   +
1413908   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1413909   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1413910   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1413911   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1413912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413914   +end;
MPRINT(EM_DIAGRAM):   end;
1413915   +else do;
MPRINT(EM_DIAGRAM):   else do;
1413916   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1413917   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1413918   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1413919   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1413920   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1413921   +   end;
MPRINT(EM_DIAGRAM):   end;
1413922   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1413923   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1413924   +   end;
MPRINT(EM_DIAGRAM):   end;
1413925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1413926   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1413927   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1413928   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413929   +   end;
MPRINT(EM_DIAGRAM):   end;
1413930   +end;
MPRINT(EM_DIAGRAM):   end;
1413931   +
1413932   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1413933   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1413934   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1413935   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1413936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413938   +end;
MPRINT(EM_DIAGRAM):   end;
1413939   +else do;
MPRINT(EM_DIAGRAM):   else do;
1413940   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1413941   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1413942   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1413943   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1413944   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1413945   +   end;
MPRINT(EM_DIAGRAM):   end;
1413946   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1413947   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1413948   +   end;
MPRINT(EM_DIAGRAM):   end;
1413949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1413950   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1413951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1413952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413953   +   end;
MPRINT(EM_DIAGRAM):   end;
1413954   +end;
MPRINT(EM_DIAGRAM):   end;
1413955   +
1413956   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1413957   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1413958   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1413959   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1413960   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413961   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413962   +end;
MPRINT(EM_DIAGRAM):   end;
1413963   +else do;
MPRINT(EM_DIAGRAM):   else do;
1413964   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1413965   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1413966   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1413967   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1413968   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1413969   +   end;
MPRINT(EM_DIAGRAM):   end;
1413970   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1413971   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1413972   +   end;
MPRINT(EM_DIAGRAM):   end;
1413973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1413974   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1413975   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1413976   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413977   +   end;
MPRINT(EM_DIAGRAM):   end;
1413978   +end;
MPRINT(EM_DIAGRAM):   end;
1413979   +
1413980   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1413981   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1413982   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1413983   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1413984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1413985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1413986   +end;
MPRINT(EM_DIAGRAM):   end;
1413987   +else do;
MPRINT(EM_DIAGRAM):   else do;
1413988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1413989   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1413990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1413991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1413992   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1413993   +   end;
MPRINT(EM_DIAGRAM):   end;
1413994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1413995   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1413996   +   end;
MPRINT(EM_DIAGRAM):   end;
1413997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1413998   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1413999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1414000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414001   +   end;
MPRINT(EM_DIAGRAM):   end;
1414002   +end;
MPRINT(EM_DIAGRAM):   end;
1414003   +
1414004   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1414005   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1414006   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1414007   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1414008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1414009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414010   +end;
MPRINT(EM_DIAGRAM):   end;
1414011   +else do;
MPRINT(EM_DIAGRAM):   else do;
1414012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1414013   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1414014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1414015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1414016   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1414017   +   end;
MPRINT(EM_DIAGRAM):   end;
1414018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1414019   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1414020   +   end;
MPRINT(EM_DIAGRAM):   end;
1414021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1414022   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1414023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1414024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414025   +   end;
MPRINT(EM_DIAGRAM):   end;
1414026   +end;
MPRINT(EM_DIAGRAM):   end;
1414027   +
1414028   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1414029   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1414030   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1414031   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1414032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1414033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414034   +end;
MPRINT(EM_DIAGRAM):   end;
1414035   +else do;
MPRINT(EM_DIAGRAM):   else do;
1414036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1414037   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1414038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1414039   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1414040   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1414041   +   end;
MPRINT(EM_DIAGRAM):   end;
1414042   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1414043   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1414044   +   end;
MPRINT(EM_DIAGRAM):   end;
1414045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1414046   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1414047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1414048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414049   +   end;
MPRINT(EM_DIAGRAM):   end;
1414050   +end;
MPRINT(EM_DIAGRAM):   end;
1414051   +
1414052   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1414053   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1414054   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1414055   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1414056   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1414057   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1414058   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1414059   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1414060   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1414061   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1414062   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1414063   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1414064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1414065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414066   +end;
MPRINT(EM_DIAGRAM):   end;
1414067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1414068   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1414069   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1414070   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1414071   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1414072   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1414073   +   end;
MPRINT(EM_DIAGRAM):   end;
1414074   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1414075   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1414076   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1414077   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1414078   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1414079   +   end;
MPRINT(EM_DIAGRAM):   end;
1414080   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1414081   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1414082   +   end;
MPRINT(EM_DIAGRAM):   end;
1414083   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1414084   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1414085   +   end;
MPRINT(EM_DIAGRAM):   end;
1414086   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1414087   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1414088   +   end;
MPRINT(EM_DIAGRAM):   end;
1414089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1414090   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1414091   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1414092   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1414093   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1414094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1414095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414096   +   end;
MPRINT(EM_DIAGRAM):   end;
1414097   +end;
MPRINT(EM_DIAGRAM):   end;
1414098   +
1414099   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1414100   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1414101   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1414102   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1414103   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1414104   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1414105   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1414106   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1414107   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1414108   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1414109   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1414110   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1414111   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1414112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1414113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414114   +end;
MPRINT(EM_DIAGRAM):   end;
1414115   +else do;
MPRINT(EM_DIAGRAM):   else do;
1414116   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1414117   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1414118   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1414119   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1414120   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1414121   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1414122   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1414123   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1414124   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1414125   +         end;
MPRINT(EM_DIAGRAM):   end;
1414126   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1414127   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1414128   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1414129   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1414130   +            end;
MPRINT(EM_DIAGRAM):   end;
1414131   +         end;
MPRINT(EM_DIAGRAM):   end;
1414132   +      end;
MPRINT(EM_DIAGRAM):   end;
1414133   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1414134   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1414135   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1414136   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1414137   +         end;
MPRINT(EM_DIAGRAM):   end;
1414138   +      end;
MPRINT(EM_DIAGRAM):   end;
1414139   +   end;
MPRINT(EM_DIAGRAM):   end;
1414140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1414141   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1414142   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1414143   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1414144   +      end;
MPRINT(EM_DIAGRAM):   end;
1414145   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1414146   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1414147   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1414148   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1414149   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1414150   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1414151   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1414152   +         end;
MPRINT(EM_DIAGRAM):   end;
1414153   +      end;
MPRINT(EM_DIAGRAM):   end;
1414154   +   end;
MPRINT(EM_DIAGRAM):   end;
1414155   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1414156   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1414157   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1414158   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1414159   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1414160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1414161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414162   +   end;
MPRINT(EM_DIAGRAM):   end;
1414163   +end;
MPRINT(EM_DIAGRAM):   end;
1414164   +
1414165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414166   +*** Checking missing input Interval
1414167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1414168   +
1414169   +IF NMISS(
1414170   +   AcceptedCmpTotal ,
1414171   +   Age ,
1414172   +   Frq ,
1414173   +   Income ,
1414174   +   Kidhome ,
1414175   +   Mnt ,
1414176   +   MntFishProducts ,
1414177   +   MntFruits ,
1414178   +   MntGoldProds ,
1414179   +   MntMeatProducts ,
1414180   +   MntSweetProducts ,
1414181   +   MntWines ,
1414182   +   MonthsAsCustomer ,
1414183   +   NumCatalogPurchases ,
1414184   +   NumDealsPurchases ,
1414185   +   NumDistPurchases ,
1414186   +   NumStorePurchases ,
1414187   +   NumWebPurchases ,
1414188   +   NumWebVisitsMonth ,
1414189   +   RFMstat ,
1414190   +   RMntFrq ,
1414191   +   Recency ,
1414192   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1414193   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1414194   +
1414195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414196   +END;
MPRINT(EM_DIAGRAM):   END;
1414197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414198   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1414199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414200   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1414201   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1414202   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1414203   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1414204   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1414205   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1414206   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1414207   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1414208   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1414209   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1414210   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1414211   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1414212   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1414213   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1414214   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1414215   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1414216   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1414217   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1414218   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1414219   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1414220   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1414221   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1414222   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1414223   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1414224   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1414225   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1414226   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1414227   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1414228   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1414229   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1414230   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1414231   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1414232   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1414233   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1414234   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1414235   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1414236   +END;
MPRINT(EM_DIAGRAM):   END;
1414237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1414238   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1414239   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1414240   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1414241   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1414242   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1414243   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1414244   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1414245   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1414246   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1414247   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1414248   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1414249   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1414250   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1414251   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1414252   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1414253   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1414254   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1414255   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1414256   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1414257   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1414258   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1414259   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1414260   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1414261   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1414262   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1414263   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1414264   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1414265   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1414266   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1414267   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1414268   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1414269   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1414270   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1414271   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1414272   +   ELSE S_NumCatalogPurchases
1414273   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1414274   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1414275   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1414276   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1414277   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1414278   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1414279   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1414280   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1414281   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1414282   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1414283   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1414284   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1414285   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1414286   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1414287   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1414288   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1414289   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1414290   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1414291   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1414292   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1414293   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1414294   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1414295   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1414296   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1414297   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1414298   +END;
MPRINT(EM_DIAGRAM):   END;
1414299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414300   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1414301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414303   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1414304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414306   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1414307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414308   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1414309   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1414310   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1414311   +        S_Income  +    -0.76740176580734 * S_Kidhome
1414312   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1414313   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1414314   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1414315   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1414316   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1414317   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1414318   +          +    -1.00050516074089 * S_NumDealsPurchases
1414319   +          +    -0.89322788176916 * S_NumDistPurchases
1414320   +          +     1.21914397196653 * S_NumStorePurchases
1414321   +          +     1.50867172673665 * S_NumWebPurchases
1414322   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1414323   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1414324   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1414325   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome +
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 *
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts +
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 *
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 *
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 *
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 *
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq +
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1414326   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1414327   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1414328   +        S_Income  +    -0.76288911429735 * S_Kidhome
1414329   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1414330   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1414331   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1414332   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1414333   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1414334   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1414335   +          +     0.79497206561332 * S_NumDealsPurchases
1414336   +          +    -0.13658888199464 * S_NumDistPurchases
1414337   +          +    -0.86436416316417 * S_NumStorePurchases
1414338   +          +    -0.85206550087617 * S_NumWebPurchases
1414339   +          +     1.72745004688732 * S_NumWebVisitsMonth
1414340   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1414341   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1414342   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age +
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome +
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 *
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts +
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 *
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 *
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 *
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 *
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq +
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1414343   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1414344   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1414345   +        S_Income  +    -0.48841499166688 * S_Kidhome
1414346   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1414347   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1414348   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1414349   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1414350   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1414351   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1414352   +          +    -0.00010125986409 * S_NumDealsPurchases
1414353   +          +    -0.00873530900019 * S_NumDistPurchases
1414354   +          +    -0.13188135131414 * S_NumStorePurchases
1414355   +          +    -0.10710067608125 * S_NumWebPurchases
1414356   +          +     0.99164053465149 * S_NumWebVisitsMonth
1414357   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1414358   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1414359   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age +
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome +
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 *
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts +
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 *
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 *
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 *
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 *
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq +
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1414360   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1414361   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1414362   +        S_Income  +    -0.57026847797175 * S_Kidhome
1414363   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1414364   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1414365   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1414366   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1414367   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1414368   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1414369   +          +     0.83618651452015 * S_NumDealsPurchases
1414370   +          +     0.22469306589917 * S_NumDistPurchases
1414371   +          +    -0.95889459414769 * S_NumStorePurchases
1414372   +          +    -0.95695646799114 * S_NumWebPurchases
1414373   +          +     0.96738689790948 * S_NumWebVisitsMonth
1414374   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1414375   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1414376   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome +
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 *
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts +
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 *
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 *
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 *
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 *
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq +
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1414377   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1414378   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1414379   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1414380   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1414381   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 *
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 +
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 *
HigherEducationBinary0 ;
1414382   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1414383   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1414384   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1414385   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1414386   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 *
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 +
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 *
HigherEducationBinary0 ;
1414387   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1414388   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1414389   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1414390   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1414391   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 *
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 +
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 *
HigherEducationBinary0 ;
1414392   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1414393   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1414394   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1414395   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1414396   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 *
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 +
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 *
HigherEducationBinary0 ;
1414397   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1414398   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1414399   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1414400   +          +     0.80885454992674 * Marital_StatusDivorced
1414401   +          +     -0.5568630572283 * Marital_StatusMarried
1414402   +          +    -0.03099047176508 * Marital_StatusSingle
1414403   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 *
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster +
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried +
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1414404   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1414405   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1414406   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1414407   +          +     0.13911597069393 * Marital_StatusDivorced
1414408   +          +    -1.50081060732787 * Marital_StatusMarried
1414409   +          +     1.41717012231539 * Marital_StatusSingle
1414410   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 *
The SAS System
 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried +
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1414411   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1414412   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1414413   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1414414   +          +    -0.26412736340464 * Marital_StatusDivorced
1414415   +          +    -0.27049992388629 * Marital_StatusMarried
1414416   +          +     0.67476795725099 * Marital_StatusSingle
1414417   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 *
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried +
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1414418   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1414419   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1414420   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1414421   +          +      0.8954230457499 * Marital_StatusDivorced
1414422   +          +     0.73706556068242 * Marital_StatusMarried
1414423   +          +    -1.29073720538893 * Marital_StatusSingle
1414424   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 *
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried +
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1414425   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1414426   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1414427   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1414428   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1414429   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1414430   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1414431   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1414432   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1414433   +END;
MPRINT(EM_DIAGRAM):   END;
1414434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1414435   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1414436   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1414437   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1414438   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1414439   +END;
MPRINT(EM_DIAGRAM):   END;
1414440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414441   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1414442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414443   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1414444   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1414445   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 +
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1414446   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1414447   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1414448   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1414449   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1414450   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1414451   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1414452   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1414453   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1414454   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1414455   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1414456   +END;
MPRINT(EM_DIAGRAM):   END;
1414457   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1414458   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1414459   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1414460   +END;
MPRINT(EM_DIAGRAM):   END;
1414461   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1414462   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1414463   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1414464   +END;
MPRINT(EM_DIAGRAM):   END;
1414465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414466   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1414467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1414468   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1414469   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1414470   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1414471   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1414472   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1414473   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1414474   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1414475   +END;
MPRINT(EM_DIAGRAM):   END;
1414476   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1414477   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1414478   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1414479   +drop
1414480   +H11
1414481   +H12
1414482   +H13
1414483   +H14
1414484   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1414485   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1414486    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1414487    quit;
1414488    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1414489    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1414490    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1414491    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1414492    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1414493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414494    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1414495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414497    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1414498    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414499    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414500    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414501    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1414502    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1414503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414504    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1414505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1414506    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1414507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414508    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414510    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1414511    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414512    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414513    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1414514    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1414514  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.
 
1414515    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414516    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1414517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414518    filename _pref
1414518  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1414519    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1414520    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1414521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1414522   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1414523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1414524   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1414525   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1414526   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1414527    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1414528    quit;
1414529    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1414530    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1414531    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1414532    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1414533    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1414534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414535    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1414536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414538    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1414539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414541    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414542    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1414543    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1414544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414545    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1414546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1414547    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1414548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414550    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414551    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1414552    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414553    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414554    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1414555    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1414555  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1414556    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414557    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1414558    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414559    filename _pref
1414559  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1414560    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1414561    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1414562   +
1414563   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1414564   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1414564  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1414565   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1414566   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1414567   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1414568   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1414569   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1414570    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1414571    quit;
1414572    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1414573    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1414574    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1414575    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1414576    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1414577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414578    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1414579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414581    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1414582    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414584    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414585    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1414586    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1414587    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414588    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1414589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414590    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1414591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414593    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414594    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1414595    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414596    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414597    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1414598    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1414598  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1414599    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414600    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1414601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414602    filename _pref
1414602  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1414603    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1414604    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1414605   +
1414606   +
1414607   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1414608   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1414609   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1414610   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1414611   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1414612   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414613   +
1414614   +
1414615   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1414616   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1414617   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1414618   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1414619   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1414620   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414621   +
1414622   +
1414623   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1414624   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1414625   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1414626   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1414627   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1414628   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414629   +
1414630   +
1414631   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1414632   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1414633   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1414634   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1414635   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1414636   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414637   +
1414638   +
1414639   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1414640   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1414641   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1414642   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1414643   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1414644   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414645   +
1414646   +
1414647   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1414648   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1414649   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1414650   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1414651   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1414652   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414653   +
1414654   +
1414655   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1414656   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1414657   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1414658   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1414659   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1414660   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414661   +
1414662   +
1414663   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1414664   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1414665   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1414666   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1414667   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1414668   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1414669   +if
1414670   +_FILTERNORM1 not in ( '.')
1414671   + and
1414672   +_FILTERNORM2 not in ( '.')
1414673   + and
1414674   +_FILTERNORM3 not in ( '.')
1414675   + and
1414676   +_FILTERNORM4 not in ( '.')
1414677   + and
1414678   +_FILTERNORM5 not in ( '.')
1414679   + and
1414680   +_FILTERNORM6 not in ( '.')
1414681   + and
1414682   +_FILTERNORM7 not in ( ' ')
1414683   + and
1414684   +_FILTERNORM8 not in ( ' ')
1414685   +and
1414686   +( Dt_Customer ne .)
1414687   +and ( Income ne . and (Income<=107000))
1414688   +and ( Kidhome ne .)
1414689   +and ( MntFishProducts ne .)
1414690   +and ( MntFruits ne .)
1414691   +and ( MntGoldProds ne .)
1414692   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1414693   +and ( MntSweetProducts ne .)
1414694   +and ( MntWines ne .)
1414695   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1414696   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1414697   +and ( NumStorePurchases ne .)
1414698   +and ( NumWebPurchases ne .)
1414699   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1414700   +and ( Recency ne .)
1414701   +and ( Teenhome ne .)
1414702   +and ( Year_Birth ne .)
1414703   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1414704   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1414705   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1414706   +end;
MPRINT(EM_DIAGRAM):   end;
1414707   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1414708   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1414709    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1414710    quit;
1414711    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1414712    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1414713    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1414714    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1414715    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1414716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414717    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1414718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414720    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1414721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414723    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414724    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1414725    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1414726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414727    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1414728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1414729    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1414730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414732    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1414733    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1414734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1414735    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414736    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1414737    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1414737  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1414738    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414739    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1414740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414741    %macro varDept(fcmpdata=,id=);
1414742    %global nobs&id scoreFlag&id;
1414743    %let scoreFlag&id = 0;
1414744    %if &id=1 or ^&fcmpStart %then %do;
1414745    proc sort data=&fcmpdata out=_temp&id nodupkey;
1414746    by NAME;
1414747    where id=&id and LHS in( %let j=1;
1414748    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1414749    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1414750    "&var" %let j = %eval(&j+1);
1414751    %end;
1414752    );
1414753    run;
1414754    %let dsid = %sysfunc(open(_temp&id));
1414755    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1414756    %let dsid = %sysfunc(close(&dsid));
1414757    %if &&nobs&id %then %do;
1414758    %let scoreFlag&id = 1;
1414759    %let fcmpStart = 1;
1414760    %end;
1414761    %else %let fcmpStart = 0;
1414762    %end;
1414763    %else %do;
1414764    proc sort data=&fcmpdata out=_tempid;
1414765    where id=&id;
1414766    by LHS;
1414767    run;
1414768    %let dsid = %sysfunc(open(_tempid));
1414769    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1414770    %let dsid = %sysfunc(close(&dsid));
1414771    %if ^&&nobs&id %then %do;
1414772    proc datasets lib=work nolist;
1414773    delete _tempid;
1414774    run;
1414775    quit;
1414776    %end;
1414777    %else %do;
1414778    data _tempAll;
1414779    set %let j=%eval(&id-1);
1414780    %do x=1 %to &j;
1414781    %if &&nobs&x %then %do;
1414782    _temp&x %end;
1414783    %end;
1414784    ;
1414785    run;
1414786    proc sql;
1414787    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1414787  ! work._tempid p2 where p.name=p2.lhs;
1414788    quit;
1414789    data _temp&id;
1414790    set _temp&id;
1414791    where LHS ne '' and NAME ne '' and Node ne '';
1414792    run;
1414793    proc datasets lib=work nolist;
1414794    delete _tempAll;
1414795    run;
1414796    %let dsid = %sysfunc(open(_temp&id));
1414797    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1414798    %let dsid = %sysfunc(close(&dsid));
1414799    %if ^&&nobs&id %then %do;
1414800    proc datasets lib=work nolist;
1414801    delete _temp&id;
1414802    run;
1414803    quit;
1414804    %end;
1414805    %else %do;
1414806    %let scoreFlag&id = 1;
1414807    data _temp&id;
1414808    set _temp&id;
1414809    where LHS ne NAME and node ne '';
1414810    run;
1414811    %let dsid = %sysfunc(open(_temp&id));
1414812    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1414813    %let dsid = %sysfunc(close(&dsid));
1414814    %if ^&&nobs&id %then %do;
1414815    proc datasets lib=work nolist;
1414816    delete _temp&id;
1414817    run;
1414818    quit;
1414819    %end;
1414820    %else %do;
1414821    proc sort data=_temp&id nodupkey;
1414822    by LHS NAME;
1414823    run;
1414824    %end;
1414825    %end;
1414826    %end;
1414827    %end;
1414828    %mend varDept;
1414829    %macro optCode(outdata=fcmpdata);
1414830    %global fcmpStart;
1414831    %let fcmpStart = 0;
1414832    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1414833    %let NumNodes=9;
1414834    %do k=1 %to &NumNodes;
1414835    %vardept(fcmpdata=&outdata, id=&k);
1414836    %end;
1414837    %mend optCode;
1414838    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1414839    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1414840    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1414841    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1414842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1414843    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1414844    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1414845    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1414846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414847    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1414848    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1414848  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1414849    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1414850    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1414851    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1414852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1414853    filename _pref
1414853  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1414854    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1414855    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1414856   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1414857   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1414858   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1414859   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1414860   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1414861   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1414862   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1414863   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1414864   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1414865   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1414866   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1414867   +LENGTH _WARN_ $4
1414868   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1414869   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1414870   +
1414871   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1414872   +
1414873   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1414874   +
1414875   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1414876   +
1414877   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1414878   +
1414879   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1414880   +
1414881   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1414882   +
1414883   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1414884   +
1414885   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1414886   +
1414887   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1414888   +
1414889   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1414890   +
1414891   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1414892   +
1414893   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1414894   +
1414895   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1414896   +
1414897   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1414898   +
1414899   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1414900   +
1414901   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1414902   +
1414903   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1414904   +
1414905   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1414906   +
1414907   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1414908   +
1414909   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1414910   +
1414911   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1414912   +
1414913   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1414914   +
1414915   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1414916   +
1414917   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1414918   +
1414919   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1414920   +
1414921   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1414922   +
1414923   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1414924   +
1414925   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1414926   +
1414927   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1414928   +
1414929   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1414930   +
1414931   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1414932   +
1414933   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1414934   +
1414935   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1414936   +
1414937   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1414938   +
1414939   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1414940   +
1414941   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1414942   +
1414943   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1414944   +
1414945   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1414946   +
1414947   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1414948   +
1414949   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1414950   +
1414951   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1414952   +
1414953   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1414954   +
1414955   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1414956   +
1414957   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1414958   +
1414959   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1414960   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1414961   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1414962   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1414963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1414964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414965   +end;
MPRINT(EM_DIAGRAM):   end;
1414966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1414967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1414968   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1414969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1414970   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1414971   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1414972   +   end;
MPRINT(EM_DIAGRAM):   end;
1414973   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1414974   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1414975   +   end;
MPRINT(EM_DIAGRAM):   end;
1414976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1414977   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1414978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1414979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414980   +   end;
MPRINT(EM_DIAGRAM):   end;
1414981   +end;
MPRINT(EM_DIAGRAM):   end;
1414982   +
1414983   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1414984   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1414985   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1414986   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1414987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1414988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1414989   +end;
MPRINT(EM_DIAGRAM):   end;
1414990   +else do;
MPRINT(EM_DIAGRAM):   else do;
1414991   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1414992   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1414993   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1414994   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1414995   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1414996   +   end;
MPRINT(EM_DIAGRAM):   end;
1414997   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1414998   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1414999   +   end;
MPRINT(EM_DIAGRAM):   end;
1415000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415001   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1415002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415004   +   end;
MPRINT(EM_DIAGRAM):   end;
1415005   +end;
MPRINT(EM_DIAGRAM):   end;
1415006   +
1415007   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1415008   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1415009   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1415010   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1415011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415013   +end;
MPRINT(EM_DIAGRAM):   end;
1415014   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1415016   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1415017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1415019   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1415020   +   end;
MPRINT(EM_DIAGRAM):   end;
1415021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1415022   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1415023   +   end;
MPRINT(EM_DIAGRAM):   end;
1415024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415025   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1415026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415028   +   end;
MPRINT(EM_DIAGRAM):   end;
1415029   +end;
MPRINT(EM_DIAGRAM):   end;
1415030   +
1415031   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1415032   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1415033   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1415034   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1415035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415037   +end;
MPRINT(EM_DIAGRAM):   end;
1415038   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1415040   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1415041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1415043   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1415044   +   end;
MPRINT(EM_DIAGRAM):   end;
1415045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1415046   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1415047   +   end;
MPRINT(EM_DIAGRAM):   end;
1415048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415049   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1415050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415052   +   end;
MPRINT(EM_DIAGRAM):   end;
1415053   +end;
MPRINT(EM_DIAGRAM):   end;
1415054   +
1415055   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1415056   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1415057   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1415058   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1415059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415061   +end;
MPRINT(EM_DIAGRAM):   end;
1415062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1415064   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1415065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1415067   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1415068   +   end;
MPRINT(EM_DIAGRAM):   end;
1415069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1415070   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1415071   +   end;
MPRINT(EM_DIAGRAM):   end;
1415072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415073   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1415074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415076   +   end;
MPRINT(EM_DIAGRAM):   end;
1415077   +end;
MPRINT(EM_DIAGRAM):   end;
1415078   +
1415079   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1415080   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1415081   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1415082   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1415083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415085   +end;
MPRINT(EM_DIAGRAM):   end;
1415086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1415088   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1415089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1415091   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1415092   +   end;
MPRINT(EM_DIAGRAM):   end;
1415093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1415094   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1415095   +   end;
MPRINT(EM_DIAGRAM):   end;
1415096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415097   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1415098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415100   +   end;
MPRINT(EM_DIAGRAM):   end;
1415101   +end;
MPRINT(EM_DIAGRAM):   end;
1415102   +
1415103   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1415104   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1415105   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1415106   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1415107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415109   +end;
MPRINT(EM_DIAGRAM):   end;
1415110   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1415112   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1415113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415114   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1415115   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1415116   +   end;
MPRINT(EM_DIAGRAM):   end;
1415117   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1415118   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1415119   +   end;
MPRINT(EM_DIAGRAM):   end;
1415120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415121   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1415122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415124   +   end;
MPRINT(EM_DIAGRAM):   end;
1415125   +end;
MPRINT(EM_DIAGRAM):   end;
1415126   +
1415127   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1415128   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1415129   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1415130   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1415131   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1415132   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1415133   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1415134   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1415135   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1415136   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1415137   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1415138   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1415139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415141   +end;
MPRINT(EM_DIAGRAM):   end;
1415142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415143   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1415144   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1415145   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415146   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1415147   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1415148   +   end;
MPRINT(EM_DIAGRAM):   end;
1415149   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1415150   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1415151   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1415152   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1415153   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1415154   +   end;
MPRINT(EM_DIAGRAM):   end;
1415155   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1415156   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1415157   +   end;
MPRINT(EM_DIAGRAM):   end;
1415158   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1415159   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1415160   +   end;
MPRINT(EM_DIAGRAM):   end;
1415161   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1415162   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1415163   +   end;
MPRINT(EM_DIAGRAM):   end;
1415164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415165   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1415166   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1415167   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1415168   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1415169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415171   +   end;
MPRINT(EM_DIAGRAM):   end;
1415172   +end;
MPRINT(EM_DIAGRAM):   end;
1415173   +
1415174   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1415175   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1415176   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1415177   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1415178   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1415179   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1415180   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1415181   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1415182   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1415183   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1415184   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1415185   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1415186   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1415187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415189   +end;
MPRINT(EM_DIAGRAM):   end;
1415190   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415191   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1415192   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1415193   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415194   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1415195   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1415196   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1415197   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1415198   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1415199   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1415200   +         end;
MPRINT(EM_DIAGRAM):   end;
1415201   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1415202   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1415203   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1415204   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1415205   +            end;
MPRINT(EM_DIAGRAM):   end;
1415206   +         end;
MPRINT(EM_DIAGRAM):   end;
1415207   +      end;
MPRINT(EM_DIAGRAM):   end;
1415208   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1415209   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1415210   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1415211   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1415212   +         end;
MPRINT(EM_DIAGRAM):   end;
1415213   +      end;
MPRINT(EM_DIAGRAM):   end;
1415214   +   end;
MPRINT(EM_DIAGRAM):   end;
1415215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415216   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1415217   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1415218   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1415219   +      end;
MPRINT(EM_DIAGRAM):   end;
1415220   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1415221   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1415222   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1415223   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1415224   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1415225   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1415226   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1415227   +         end;
MPRINT(EM_DIAGRAM):   end;
1415228   +      end;
MPRINT(EM_DIAGRAM):   end;
1415229   +   end;
MPRINT(EM_DIAGRAM):   end;
1415230   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1415231   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1415232   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1415233   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1415234   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1415235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415237   +   end;
MPRINT(EM_DIAGRAM):   end;
1415238   +end;
MPRINT(EM_DIAGRAM):   end;
1415239   +
1415240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415241   +*** Checking missing input Interval
1415242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1415243   +
1415244   +IF NMISS(
1415245   +   AcceptedCmpTotal ,
1415246   +   Age ,
1415247   +   Frq ,
1415248   +   Income ,
1415249   +   Kidhome ,
1415250   +   Mnt ,
1415251   +   MntFishProducts ,
1415252   +   MntFruits ,
1415253   +   MntGoldProds ,
1415254   +   MntMeatProducts ,
1415255   +   MntSweetProducts ,
1415256   +   MntWines ,
1415257   +   MonthsAsCustomer ,
1415258   +   NumCatalogPurchases ,
1415259   +   NumDealsPurchases ,
1415260   +   NumDistPurchases ,
1415261   +   NumStorePurchases ,
1415262   +   NumWebPurchases ,
1415263   +   NumWebVisitsMonth ,
1415264   +   RFMstat ,
1415265   +   RMntFrq ,
1415266   +   Recency ,
1415267   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1415268   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1415269   +
1415270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415271   +END;
MPRINT(EM_DIAGRAM):   END;
1415272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415273   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1415274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1415276   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1415277   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1415278   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1415279   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1415280   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1415281   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1415282   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1415283   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1415284   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1415285   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1415286   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1415287   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1415288   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1415289   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1415290   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1415291   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1415292   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1415293   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1415294   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1415295   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1415296   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1415297   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1415298   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1415299   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1415300   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1415301   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1415302   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1415303   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1415304   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1415305   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1415306   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1415307   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1415308   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1415309   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1415310   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1415311   +END;
MPRINT(EM_DIAGRAM):   END;
1415312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1415313   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1415314   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1415315   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1415316   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1415317   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1415318   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1415319   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1415320   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1415321   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1415322   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1415323   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1415324   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1415325   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1415326   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1415327   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1415328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1415329   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1415330   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1415331   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1415332   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1415333   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1415334   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1415335   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1415336   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1415337   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1415338   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1415339   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1415340   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1415341   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1415342   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1415343   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1415344   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1415345   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1415346   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1415347   +   ELSE S_NumCatalogPurchases
1415348   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1415349   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1415350   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1415351   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1415352   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1415353   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1415354   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1415355   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1415356   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1415357   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1415358   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1415359   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1415360   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1415361   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1415362   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1415363   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1415364   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1415365   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1415366   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1415367   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1415368   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1415369   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1415370   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1415371   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1415372   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1415373   +END;
MPRINT(EM_DIAGRAM):   END;
1415374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415375   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1415376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415378   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1415379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415381   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1415382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1415384   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1415385   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1415386   +        S_Income  +    -1.07733254688396 * S_Kidhome
1415387   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1415388   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1415389   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1415390   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1415391   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1415392   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1415393   +          +     0.34431711603003 * S_NumDealsPurchases
1415394   +          +      0.7134923732819 * S_NumDistPurchases
1415395   +          +     0.05901777448936 * S_NumStorePurchases
1415396   +          +    -0.19803026616936 * S_NumWebPurchases
1415397   +          +     1.34202846183228 * S_NumWebVisitsMonth
1415398   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1415399   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1415400   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age +
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome +
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 *
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts +
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 *
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 *
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 *
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 *
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq +
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1415401   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1415402   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1415403   +        S_Income  +    -0.00255151514163 * S_Kidhome
1415404   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1415405   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1415406   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1415407   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1415408   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1415409   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1415410   +          +     0.45752917132477 * S_NumDealsPurchases
1415411   +          +      0.1559495599293 * S_NumDistPurchases
1415412   +          +    -0.33402213718695 * S_NumStorePurchases
1415413   +          +    -0.39372662704902 * S_NumWebPurchases
1415414   +          +     0.52518189694069 * S_NumWebVisitsMonth
1415415   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1415416   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1415417   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome +
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 *
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts +
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 *
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 *
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 *
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 *
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq +
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1415418   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1415419   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1415420   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1415421   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1415422   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 *
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 +
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 *
HigherEducationBinary0 ;
1415423   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1415424   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1415425   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1415426   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1415427   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 *
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 +
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 *
HigherEducationBinary0 ;
1415428   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1415429   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1415430   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1415431   +          +     0.46710555357393 * Marital_StatusDivorced
1415432   +          +    -1.27560428667174 * Marital_StatusMarried
1415433   +          +      1.3147344073121 * Marital_StatusSingle
1415434   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 *
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried +
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1415435   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1415436   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1415437   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1415438   +          +     0.07422027097612 * Marital_StatusDivorced
1415439   +          +     0.00271855575037 * Marital_StatusMarried
1415440   +          +    -0.00749566028051 * Marital_StatusSingle
1415441   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 *
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster +
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried +
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1415442   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1415443   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1415444   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1415445   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1415446   +END;
MPRINT(EM_DIAGRAM):   END;
1415447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1415448   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1415449   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1415450   +END;
MPRINT(EM_DIAGRAM):   END;
1415451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415452   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1415453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415454   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1415455   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1415456   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1415457   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1415458   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1415459   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1415460   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1415461   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1415462   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1415463   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1415464   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1415465   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1415466   +END;
MPRINT(EM_DIAGRAM):   END;
1415467   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1415468   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1415469   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1415470   +END;
MPRINT(EM_DIAGRAM):   END;
1415471   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1415472   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1415473   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1415474   +END;
MPRINT(EM_DIAGRAM):   END;
1415475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415476   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1415477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1415478   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1415479   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1415480   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1415481   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1415482   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1415483   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1415484   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1415485   +END;
MPRINT(EM_DIAGRAM):   END;
1415486   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1415487   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1415488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1415489   +drop
1415490   +H11
1415491   +H12
1415492   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1415493   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1415494    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1415495    quit;
1415496    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1415497    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1415498    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1415499    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1415500    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1415501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415502    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1415503    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415505    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1415506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415508    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415509    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1415510    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1415511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415512    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1415513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1415514    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1415515    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415516    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415517    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415518    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1415519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415520    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415521    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1415522    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1415522  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
1415523    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415524    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1415525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415526    filename _pref
1415526  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1415527    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1415528    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1415529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1415530   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1415531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1415532   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1415533   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1415534   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1415535    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1415536    quit;
1415537    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1415538    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1415539    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1415540    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1415541    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1415542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415543    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1415544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415546    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1415547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415549    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415550    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1415551    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1415552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415553    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1415554    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1415555    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1415556    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415558    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415559    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1415560    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415561    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415562    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1415563    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1415563  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1415564    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415565    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1415566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415567    filename _pref
1415567  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1415568    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1415569    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1415570   +
1415571   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1415572   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1415572  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1415573   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1415574   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1415575   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1415576   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1415577   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1415578    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1415579    quit;
1415580    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1415581    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1415582    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1415583    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1415584    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1415585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415586    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1415587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415589    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1415590    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415592    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415593    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1415594    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1415595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415596    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1415597    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415598    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1415599    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415601    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415602    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1415603    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415604    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415605    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1415606    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1415606  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1415607    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415608    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1415609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415610    filename _pref
1415610  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1415611    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1415612    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1415613   +
1415614   +
1415615   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1415616   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1415617   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1415618   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1415619   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1415620   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415621   +
1415622   +
1415623   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1415624   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1415625   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1415626   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1415627   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1415628   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415629   +
1415630   +
1415631   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1415632   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1415633   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1415634   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1415635   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1415636   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415637   +
1415638   +
1415639   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1415640   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1415641   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1415642   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1415643   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1415644   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415645   +
1415646   +
1415647   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1415648   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1415649   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1415650   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1415651   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1415652   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415653   +
1415654   +
1415655   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1415656   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1415657   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1415658   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1415659   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1415660   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415661   +
1415662   +
1415663   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1415664   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1415665   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1415666   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1415667   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1415668   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415669   +
1415670   +
1415671   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1415672   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1415673   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1415674   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1415675   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1415676   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1415677   +if
1415678   +_FILTERNORM1 not in ( '.')
1415679   + and
1415680   +_FILTERNORM2 not in ( '.')
1415681   + and
1415682   +_FILTERNORM3 not in ( '.')
1415683   + and
1415684   +_FILTERNORM4 not in ( '.')
1415685   + and
1415686   +_FILTERNORM5 not in ( '.')
1415687   + and
1415688   +_FILTERNORM6 not in ( '.')
1415689   + and
1415690   +_FILTERNORM7 not in ( ' ')
1415691   + and
1415692   +_FILTERNORM8 not in ( ' ')
1415693   +and
1415694   +( Dt_Customer ne .)
1415695   +and ( Income ne . and (Income<=107000))
1415696   +and ( Kidhome ne .)
1415697   +and ( MntFishProducts ne .)
1415698   +and ( MntFruits ne .)
1415699   +and ( MntGoldProds ne .)
1415700   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1415701   +and ( MntSweetProducts ne .)
1415702   +and ( MntWines ne .)
1415703   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1415704   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1415705   +and ( NumStorePurchases ne .)
1415706   +and ( NumWebPurchases ne .)
1415707   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1415708   +and ( Recency ne .)
1415709   +and ( Teenhome ne .)
1415710   +and ( Year_Birth ne .)
1415711   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1415712   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1415713   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1415714   +end;
MPRINT(EM_DIAGRAM):   end;
1415715   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1415716   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1415717    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1415718    quit;
1415719    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1415720    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1415721    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1415722    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1415723    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1415724    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415725    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1415726    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415728    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1415729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415731    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415732    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1415733    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1415734    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415735    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1415736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1415737    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1415738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415740    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1415741    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1415742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1415743    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415744    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1415745    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1415745  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1415746    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415747    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1415748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415749    %macro varDept(fcmpdata=,id=);
1415750    %global nobs&id scoreFlag&id;
1415751    %let scoreFlag&id = 0;
1415752    %if &id=1 or ^&fcmpStart %then %do;
1415753    proc sort data=&fcmpdata out=_temp&id nodupkey;
1415754    by NAME;
1415755    where id=&id and LHS in( %let j=1;
1415756    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1415757    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1415758    "&var" %let j = %eval(&j+1);
1415759    %end;
1415760    );
1415761    run;
1415762    %let dsid = %sysfunc(open(_temp&id));
1415763    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1415764    %let dsid = %sysfunc(close(&dsid));
1415765    %if &&nobs&id %then %do;
1415766    %let scoreFlag&id = 1;
1415767    %let fcmpStart = 1;
1415768    %end;
1415769    %else %let fcmpStart = 0;
1415770    %end;
1415771    %else %do;
1415772    proc sort data=&fcmpdata out=_tempid;
1415773    where id=&id;
1415774    by LHS;
1415775    run;
1415776    %let dsid = %sysfunc(open(_tempid));
1415777    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1415778    %let dsid = %sysfunc(close(&dsid));
1415779    %if ^&&nobs&id %then %do;
1415780    proc datasets lib=work nolist;
1415781    delete _tempid;
1415782    run;
1415783    quit;
1415784    %end;
1415785    %else %do;
1415786    data _tempAll;
1415787    set %let j=%eval(&id-1);
1415788    %do x=1 %to &j;
1415789    %if &&nobs&x %then %do;
1415790    _temp&x %end;
1415791    %end;
1415792    ;
1415793    run;
1415794    proc sql;
1415795    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1415795  ! work._tempid p2 where p.name=p2.lhs;
1415796    quit;
1415797    data _temp&id;
1415798    set _temp&id;
1415799    where LHS ne '' and NAME ne '' and Node ne '';
1415800    run;
1415801    proc datasets lib=work nolist;
1415802    delete _tempAll;
1415803    run;
1415804    %let dsid = %sysfunc(open(_temp&id));
1415805    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1415806    %let dsid = %sysfunc(close(&dsid));
1415807    %if ^&&nobs&id %then %do;
1415808    proc datasets lib=work nolist;
1415809    delete _temp&id;
1415810    run;
1415811    quit;
1415812    %end;
1415813    %else %do;
1415814    %let scoreFlag&id = 1;
1415815    data _temp&id;
1415816    set _temp&id;
1415817    where LHS ne NAME and node ne '';
1415818    run;
1415819    %let dsid = %sysfunc(open(_temp&id));
1415820    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1415821    %let dsid = %sysfunc(close(&dsid));
1415822    %if ^&&nobs&id %then %do;
1415823    proc datasets lib=work nolist;
1415824    delete _temp&id;
1415825    run;
1415826    quit;
1415827    %end;
1415828    %else %do;
1415829    proc sort data=_temp&id nodupkey;
1415830    by LHS NAME;
1415831    run;
1415832    %end;
1415833    %end;
1415834    %end;
1415835    %end;
1415836    %mend varDept;
1415837    %macro optCode(outdata=fcmpdata);
1415838    %global fcmpStart;
1415839    %let fcmpStart = 0;
1415840    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1415841    %let NumNodes=9;
1415842    %do k=1 %to &NumNodes;
1415843    %vardept(fcmpdata=&outdata, id=&k);
1415844    %end;
1415845    %mend optCode;
1415846    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1415847    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1415848    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1415849    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1415850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415851    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1415852    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1415853    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1415854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1415855    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1415856    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1415856  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1415857    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1415858    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1415859    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1415860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1415861    filename _pref
1415861  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1415862    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1415863    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1415864   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1415865   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1415866   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1415867   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1415868   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1415869   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1415870   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1415871   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1415872   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1415873   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1415874   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1415875   +LENGTH _WARN_ $4
1415876   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1415877   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1415878   +
1415879   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1415880   +
1415881   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1415882   +
1415883   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1415884   +
1415885   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1415886   +
1415887   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1415888   +
1415889   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1415890   +
1415891   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1415892   +
1415893   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1415894   +
1415895   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1415896   +
1415897   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1415898   +
1415899   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1415900   +
1415901   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1415902   +
1415903   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1415904   +
1415905   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1415906   +
1415907   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1415908   +
1415909   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1415910   +
1415911   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1415912   +
1415913   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1415914   +
1415915   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1415916   +
1415917   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1415918   +
1415919   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1415920   +
1415921   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1415922   +
1415923   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1415924   +
1415925   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1415926   +
1415927   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1415928   +
1415929   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1415930   +
1415931   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1415932   +
1415933   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1415934   +
1415935   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1415936   +
1415937   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1415938   +
1415939   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1415940   +
1415941   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1415942   +
1415943   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1415944   +
1415945   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1415946   +
1415947   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1415948   +
1415949   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1415950   +
1415951   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1415952   +
1415953   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1415954   +
1415955   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1415956   +
1415957   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1415958   +
1415959   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1415960   +
1415961   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1415962   +
1415963   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1415964   +
1415965   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1415966   +
1415967   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1415968   +
1415969   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1415970   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1415971   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1415972   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1415973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415975   +end;
MPRINT(EM_DIAGRAM):   end;
1415976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1415977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1415978   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1415979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1415980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1415981   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1415982   +   end;
MPRINT(EM_DIAGRAM):   end;
1415983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1415984   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1415985   +   end;
MPRINT(EM_DIAGRAM):   end;
1415986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1415987   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1415988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1415989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415990   +   end;
MPRINT(EM_DIAGRAM):   end;
1415991   +end;
MPRINT(EM_DIAGRAM):   end;
1415992   +
1415993   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1415994   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1415995   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1415996   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1415997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1415998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1415999   +end;
MPRINT(EM_DIAGRAM):   end;
1416000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1416002   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1416003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1416005   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1416006   +   end;
MPRINT(EM_DIAGRAM):   end;
1416007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1416008   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1416009   +   end;
MPRINT(EM_DIAGRAM):   end;
1416010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416011   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1416012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416014   +   end;
MPRINT(EM_DIAGRAM):   end;
1416015   +end;
MPRINT(EM_DIAGRAM):   end;
1416016   +
1416017   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1416018   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1416019   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1416020   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1416021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416023   +end;
MPRINT(EM_DIAGRAM):   end;
1416024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1416026   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1416027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1416029   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1416030   +   end;
MPRINT(EM_DIAGRAM):   end;
1416031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1416032   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1416033   +   end;
MPRINT(EM_DIAGRAM):   end;
1416034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416035   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1416036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416038   +   end;
MPRINT(EM_DIAGRAM):   end;
1416039   +end;
MPRINT(EM_DIAGRAM):   end;
1416040   +
1416041   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1416042   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1416043   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1416044   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1416045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416047   +end;
MPRINT(EM_DIAGRAM):   end;
1416048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1416050   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1416051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1416053   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1416054   +   end;
MPRINT(EM_DIAGRAM):   end;
1416055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1416056   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1416057   +   end;
MPRINT(EM_DIAGRAM):   end;
1416058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416059   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1416060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416062   +   end;
MPRINT(EM_DIAGRAM):   end;
1416063   +end;
MPRINT(EM_DIAGRAM):   end;
1416064   +
1416065   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1416066   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1416067   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1416068   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1416069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416071   +end;
MPRINT(EM_DIAGRAM):   end;
1416072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1416074   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1416075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1416077   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1416078   +   end;
MPRINT(EM_DIAGRAM):   end;
1416079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1416080   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1416081   +   end;
MPRINT(EM_DIAGRAM):   end;
1416082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416083   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1416084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416086   +   end;
MPRINT(EM_DIAGRAM):   end;
1416087   +end;
MPRINT(EM_DIAGRAM):   end;
1416088   +
1416089   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1416090   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1416091   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1416092   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1416093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416095   +end;
MPRINT(EM_DIAGRAM):   end;
1416096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1416098   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1416099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1416101   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1416102   +   end;
MPRINT(EM_DIAGRAM):   end;
1416103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1416104   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1416105   +   end;
MPRINT(EM_DIAGRAM):   end;
1416106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416107   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1416108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416110   +   end;
MPRINT(EM_DIAGRAM):   end;
1416111   +end;
MPRINT(EM_DIAGRAM):   end;
1416112   +
1416113   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1416114   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1416115   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1416116   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1416117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416119   +end;
MPRINT(EM_DIAGRAM):   end;
1416120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1416122   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1416123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416124   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1416125   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1416126   +   end;
MPRINT(EM_DIAGRAM):   end;
1416127   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1416128   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1416129   +   end;
MPRINT(EM_DIAGRAM):   end;
1416130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416131   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1416132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416134   +   end;
MPRINT(EM_DIAGRAM):   end;
1416135   +end;
MPRINT(EM_DIAGRAM):   end;
1416136   +
1416137   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1416138   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1416139   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1416140   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1416141   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1416142   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1416143   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1416144   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1416145   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1416146   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1416147   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1416148   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1416149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416151   +end;
MPRINT(EM_DIAGRAM):   end;
1416152   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416153   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1416154   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1416155   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416156   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1416157   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1416158   +   end;
MPRINT(EM_DIAGRAM):   end;
1416159   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1416160   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1416161   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1416162   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1416163   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1416164   +   end;
MPRINT(EM_DIAGRAM):   end;
1416165   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1416166   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1416167   +   end;
MPRINT(EM_DIAGRAM):   end;
1416168   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1416169   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1416170   +   end;
MPRINT(EM_DIAGRAM):   end;
1416171   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1416172   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1416173   +   end;
MPRINT(EM_DIAGRAM):   end;
1416174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416175   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1416176   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1416177   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1416178   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1416179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416181   +   end;
MPRINT(EM_DIAGRAM):   end;
1416182   +end;
MPRINT(EM_DIAGRAM):   end;
1416183   +
1416184   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1416185   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1416186   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1416187   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1416188   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1416189   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1416190   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1416191   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1416192   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1416193   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1416194   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1416195   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1416196   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1416197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1416198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416199   +end;
MPRINT(EM_DIAGRAM):   end;
1416200   +else do;
MPRINT(EM_DIAGRAM):   else do;
1416201   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1416202   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1416203   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1416204   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1416205   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1416206   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1416207   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1416208   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1416209   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1416210   +         end;
MPRINT(EM_DIAGRAM):   end;
1416211   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1416212   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1416213   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1416214   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1416215   +            end;
MPRINT(EM_DIAGRAM):   end;
1416216   +         end;
MPRINT(EM_DIAGRAM):   end;
1416217   +      end;
MPRINT(EM_DIAGRAM):   end;
1416218   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1416219   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1416220   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1416221   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1416222   +         end;
MPRINT(EM_DIAGRAM):   end;
1416223   +      end;
MPRINT(EM_DIAGRAM):   end;
1416224   +   end;
MPRINT(EM_DIAGRAM):   end;
1416225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1416226   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1416227   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1416228   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1416229   +      end;
MPRINT(EM_DIAGRAM):   end;
1416230   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1416231   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1416232   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1416233   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1416234   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1416235   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1416236   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1416237   +         end;
MPRINT(EM_DIAGRAM):   end;
1416238   +      end;
MPRINT(EM_DIAGRAM):   end;
1416239   +   end;
MPRINT(EM_DIAGRAM):   end;
1416240   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1416241   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1416242   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1416243   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1416244   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1416245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1416246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416247   +   end;
MPRINT(EM_DIAGRAM):   end;
1416248   +end;
MPRINT(EM_DIAGRAM):   end;
1416249   +
1416250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416251   +*** Checking missing input Interval
1416252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1416253   +
1416254   +IF NMISS(
1416255   +   AcceptedCmpTotal ,
1416256   +   Age ,
1416257   +   Frq ,
1416258   +   Income ,
1416259   +   Kidhome ,
1416260   +   Mnt ,
1416261   +   MntFishProducts ,
1416262   +   MntFruits ,
1416263   +   MntGoldProds ,
1416264   +   MntMeatProducts ,
1416265   +   MntSweetProducts ,
1416266   +   MntWines ,
1416267   +   MonthsAsCustomer ,
1416268   +   NumCatalogPurchases ,
1416269   +   NumDealsPurchases ,
1416270   +   NumDistPurchases ,
1416271   +   NumStorePurchases ,
1416272   +   NumWebPurchases ,
1416273   +   NumWebVisitsMonth ,
1416274   +   RFMstat ,
1416275   +   RMntFrq ,
1416276   +   Recency ,
1416277   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1416278   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1416279   +
1416280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1416281   +END;
MPRINT(EM_DIAGRAM):   END;
1416282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416283   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1416284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416285   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1416286   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1416287   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1416288   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1416289   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1416290   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1416291   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1416292   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1416293   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1416294   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1416295   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1416296   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1416297   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1416298   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1416299   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1416300   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1416301   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1416302   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1416303   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1416304   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1416305   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1416306   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1416307   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1416308   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1416309   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1416310   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1416311   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1416312   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1416313   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1416314   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1416315   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1416316   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1416317   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1416318   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1416319   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1416320   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1416321   +END;
MPRINT(EM_DIAGRAM):   END;
1416322   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1416323   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1416324   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1416325   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1416326   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1416327   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1416328   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1416329   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1416330   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1416331   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1416332   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1416333   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1416334   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1416335   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1416336   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1416337   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1416338   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1416339   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1416340   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1416341   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1416342   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1416343   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1416344   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1416345   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1416346   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1416347   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1416348   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1416349   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1416350   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1416351   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1416352   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1416353   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1416354   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1416355   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1416356   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1416357   +   ELSE S_NumCatalogPurchases
1416358   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1416359   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1416360   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1416361   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1416362   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1416363   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1416364   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1416365   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1416366   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1416367   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1416368   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1416369   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1416370   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1416371   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1416372   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1416373   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1416374   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1416375   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1416376   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1416377   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1416378   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1416379   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1416380   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1416381   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1416382   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1416383   +END;
MPRINT(EM_DIAGRAM):   END;
1416384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416385   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1416386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416388   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1416389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416391   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1416392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416393   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1416394   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1416395   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1416396   +        S_Income  +     0.49557647195287 * S_Kidhome
1416397   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1416398   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1416399   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1416400   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1416401   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1416402   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1416403   +          +     1.29965538748336 * S_NumDealsPurchases
1416404   +          +     0.16818868463142 * S_NumDistPurchases
1416405   +          +    -0.64507792847411 * S_NumStorePurchases
1416406   +          +    -0.52243329275268 * S_NumWebPurchases
1416407   +          +     1.48521107923182 * S_NumWebVisitsMonth
1416408   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1416409   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1416410   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome +
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 *
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts +
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 *
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 *
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 *
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 *
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq +
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1416411   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1416412   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1416413   +        S_Income  +       0.536631748871 * S_Kidhome
1416414   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1416415   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1416416   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1416417   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1416418   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1416419   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1416420   +          +    -0.63220849663702 * S_NumDealsPurchases
1416421   +          +    -0.03517440588176 * S_NumDistPurchases
1416422   +          +     0.90435516280473 * S_NumStorePurchases
1416423   +          +     1.02540776095101 * S_NumWebPurchases
1416424   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1416425   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1416426   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1416427   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome +
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 *
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts +
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 *
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 *
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 *
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 *
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq +
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1416428   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1416429   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1416430   +        S_Income  +     0.45173611630992 * S_Kidhome
1416431   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1416432   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1416433   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1416434   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1416435   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1416436   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1416437   +          +     0.00572910064772 * S_NumDealsPurchases
1416438   +          +    -0.43545754325176 * S_NumDistPurchases
1416439   +          +     0.12831980635185 * S_NumStorePurchases
1416440   +          +     0.02223697618186 * S_NumWebPurchases
1416441   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1416442   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1416443   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1416444   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome +
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 *
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts +
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 *
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 *
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 *
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 *
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq +
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1416445   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1416446   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1416447   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1416448   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1416449   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 *
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 +
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 *
HigherEducationBinary0 ;
1416450   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1416451   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1416452   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1416453   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1416454   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 *
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 +
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 *
HigherEducationBinary0 ;
1416455   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1416456   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1416457   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1416458   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1416459   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 *
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 +
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 *
HigherEducationBinary0 ;
1416460   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1416461   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1416462   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1416463   +          +     0.14010081581672 * Marital_StatusDivorced
1416464   +          +     0.03574033044092 * Marital_StatusMarried
1416465   +          +    -0.14272769898675 * Marital_StatusSingle
1416466   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 *
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried +
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1416467   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1416468   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1416469   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1416470   +          +    -0.14878433798537 * Marital_StatusDivorced
1416471   +          +     0.14990226067603 * Marital_StatusMarried
1416472   +          +    -0.50903755449357 * Marital_StatusSingle
1416473   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 *
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried +
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1416474   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1416475   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1416476   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1416477   +          +    -0.52568922939912 * Marital_StatusDivorced
1416478   +          +     1.74121506979092 * Marital_StatusMarried
1416479   +          +    -1.16029880777095 * Marital_StatusSingle
1416480   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 *
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster +
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried +
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1416481   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1416482   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1416483   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1416484   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1416485   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1416486   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1416487   +END;
MPRINT(EM_DIAGRAM):   END;
1416488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1416489   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1416490   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1416491   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1416492   +END;
MPRINT(EM_DIAGRAM):   END;
1416493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416494   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1416495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416496   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1416497   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1416498   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 +
-3.01894159959464 * H13 ;
1416499   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1416500   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1416501   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1416502   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1416503   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1416504   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1416505   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1416506   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1416507   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1416508   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1416509   +END;
MPRINT(EM_DIAGRAM):   END;
1416510   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1416511   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1416512   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1416513   +END;
MPRINT(EM_DIAGRAM):   END;
1416514   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1416515   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1416516   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1416517   +END;
MPRINT(EM_DIAGRAM):   END;
1416518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416519   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1416520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1416521   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1416522   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1416523   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1416524   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1416525   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1416526   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1416527   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1416528   +END;
MPRINT(EM_DIAGRAM):   END;
1416529   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1416530   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1416531   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1416532   +drop
1416533   +H11
1416534   +H12
1416535   +H13
1416536   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1416537   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1416538    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1416539    quit;
1416540    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1416541    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1416542    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1416543    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1416544    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1416545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416546    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1416547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416549    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1416550    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416551    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416552    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416553    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1416554    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1416555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416556    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1416557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1416558    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1416559    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416560    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416561    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416562    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1416563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416564    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416565    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1416566    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1416566  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
1416567    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416568    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1416569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416570    filename _pref
1416570  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1416571    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1416572    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1416573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1416574   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1416575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1416576   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1416577   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1416578   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1416579    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1416580    quit;
1416581    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1416582    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1416583    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1416584    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1416585    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1416586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416587    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1416588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416590    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1416591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416593    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416594    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1416595    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1416596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416597    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1416598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1416599    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1416600    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416602    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416603    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1416604    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416605    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416606    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1416607    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1416607  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1416608    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416609    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1416610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416611    filename _pref
1416611  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1416612    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1416613    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1416614   +
1416615   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1416616   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1416616  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1416617   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1416618   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1416619   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1416620   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1416621   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1416622    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1416623    quit;
1416624    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1416625    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1416626    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1416627    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1416628    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1416629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416630    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1416631    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416633    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1416634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416635    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416636    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416637    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1416638    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1416639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416640    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1416641    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416642    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1416643    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416645    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416646    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1416647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416648    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416649    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1416650    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1416650  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1416651    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416652    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1416653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416654    filename _pref
1416654  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1416655    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1416656    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1416657   +
1416658   +
1416659   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1416660   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1416661   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1416662   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1416663   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1416664   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416665   +
1416666   +
1416667   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1416668   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1416669   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1416670   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1416671   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1416672   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416673   +
1416674   +
1416675   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1416676   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1416677   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1416678   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1416679   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1416680   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416681   +
1416682   +
1416683   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1416684   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1416685   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1416686   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1416687   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1416688   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416689   +
1416690   +
1416691   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1416692   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1416693   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1416694   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1416695   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1416696   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416697   +
1416698   +
1416699   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1416700   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1416701   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1416702   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1416703   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1416704   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416705   +
1416706   +
1416707   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1416708   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1416709   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1416710   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1416711   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1416712   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416713   +
1416714   +
1416715   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1416716   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1416717   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1416718   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1416719   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1416720   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1416721   +if
1416722   +_FILTERNORM1 not in ( '.')
1416723   + and
1416724   +_FILTERNORM2 not in ( '.')
1416725   + and
1416726   +_FILTERNORM3 not in ( '.')
1416727   + and
1416728   +_FILTERNORM4 not in ( '.')
1416729   + and
1416730   +_FILTERNORM5 not in ( '.')
1416731   + and
1416732   +_FILTERNORM6 not in ( '.')
1416733   + and
1416734   +_FILTERNORM7 not in ( ' ')
1416735   + and
1416736   +_FILTERNORM8 not in ( ' ')
1416737   +and
1416738   +( Dt_Customer ne .)
1416739   +and ( Income ne . and (Income<=107000))
1416740   +and ( Kidhome ne .)
1416741   +and ( MntFishProducts ne .)
1416742   +and ( MntFruits ne .)
1416743   +and ( MntGoldProds ne .)
1416744   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1416745   +and ( MntSweetProducts ne .)
1416746   +and ( MntWines ne .)
1416747   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1416748   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1416749   +and ( NumStorePurchases ne .)
1416750   +and ( NumWebPurchases ne .)
1416751   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1416752   +and ( Recency ne .)
1416753   +and ( Teenhome ne .)
1416754   +and ( Year_Birth ne .)
1416755   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1416756   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1416757   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1416758   +end;
MPRINT(EM_DIAGRAM):   end;
1416759   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1416760   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1416761    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1416762    quit;
1416763    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1416764    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1416765    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1416766    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1416767    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1416768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416769    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1416770    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416772    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1416773    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416775    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416776    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1416777    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1416778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416779    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1416780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1416781    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1416782    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416784    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1416785    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1416786    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1416787    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416788    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1416789    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1416789  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1416790    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416791    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1416792    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416793    %macro varDept(fcmpdata=,id=);
1416794    %global nobs&id scoreFlag&id;
1416795    %let scoreFlag&id = 0;
1416796    %if &id=1 or ^&fcmpStart %then %do;
1416797    proc sort data=&fcmpdata out=_temp&id nodupkey;
1416798    by NAME;
1416799    where id=&id and LHS in( %let j=1;
1416800    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1416801    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1416802    "&var" %let j = %eval(&j+1);
1416803    %end;
1416804    );
1416805    run;
1416806    %let dsid = %sysfunc(open(_temp&id));
1416807    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1416808    %let dsid = %sysfunc(close(&dsid));
1416809    %if &&nobs&id %then %do;
1416810    %let scoreFlag&id = 1;
1416811    %let fcmpStart = 1;
1416812    %end;
1416813    %else %let fcmpStart = 0;
1416814    %end;
1416815    %else %do;
1416816    proc sort data=&fcmpdata out=_tempid;
1416817    where id=&id;
1416818    by LHS;
1416819    run;
1416820    %let dsid = %sysfunc(open(_tempid));
1416821    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1416822    %let dsid = %sysfunc(close(&dsid));
1416823    %if ^&&nobs&id %then %do;
1416824    proc datasets lib=work nolist;
1416825    delete _tempid;
1416826    run;
1416827    quit;
1416828    %end;
1416829    %else %do;
1416830    data _tempAll;
1416831    set %let j=%eval(&id-1);
1416832    %do x=1 %to &j;
1416833    %if &&nobs&x %then %do;
1416834    _temp&x %end;
1416835    %end;
1416836    ;
1416837    run;
1416838    proc sql;
1416839    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1416839  ! work._tempid p2 where p.name=p2.lhs;
1416840    quit;
1416841    data _temp&id;
1416842    set _temp&id;
1416843    where LHS ne '' and NAME ne '' and Node ne '';
1416844    run;
1416845    proc datasets lib=work nolist;
1416846    delete _tempAll;
1416847    run;
1416848    %let dsid = %sysfunc(open(_temp&id));
1416849    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1416850    %let dsid = %sysfunc(close(&dsid));
1416851    %if ^&&nobs&id %then %do;
1416852    proc datasets lib=work nolist;
1416853    delete _temp&id;
1416854    run;
1416855    quit;
1416856    %end;
1416857    %else %do;
1416858    %let scoreFlag&id = 1;
1416859    data _temp&id;
1416860    set _temp&id;
1416861    where LHS ne NAME and node ne '';
1416862    run;
1416863    %let dsid = %sysfunc(open(_temp&id));
1416864    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1416865    %let dsid = %sysfunc(close(&dsid));
1416866    %if ^&&nobs&id %then %do;
1416867    proc datasets lib=work nolist;
1416868    delete _temp&id;
1416869    run;
1416870    quit;
1416871    %end;
1416872    %else %do;
1416873    proc sort data=_temp&id nodupkey;
1416874    by LHS NAME;
1416875    run;
1416876    %end;
1416877    %end;
1416878    %end;
1416879    %end;
1416880    %mend varDept;
1416881    %macro optCode(outdata=fcmpdata);
1416882    %global fcmpStart;
1416883    %let fcmpStart = 0;
1416884    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1416885    %let NumNodes=9;
1416886    %do k=1 %to &NumNodes;
1416887    %vardept(fcmpdata=&outdata, id=&k);
1416888    %end;
1416889    %mend optCode;
1416890    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1416891    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1416892    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1416893    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1416894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416895    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1416896    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1416897    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1416898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416899    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1416900    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1416900  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1416901    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1416902    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1416903    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1416904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1416905    filename _pref
1416905  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1416906    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1416907    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1416908   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1416909   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1416910   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1416911   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1416912   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1416913   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1416914   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1416915   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1416916   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1416917   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1416918   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1416919   +LENGTH _WARN_ $4
1416920   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1416921   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1416922   +
1416923   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1416924   +
1416925   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1416926   +
1416927   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1416928   +
1416929   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1416930   +
1416931   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1416932   +
1416933   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1416934   +
1416935   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1416936   +
1416937   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1416938   +
1416939   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1416940   +
1416941   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1416942   +
1416943   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1416944   +
1416945   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1416946   +
1416947   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1416948   +
1416949   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1416950   +
1416951   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1416952   +
1416953   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1416954   +
1416955   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1416956   +
1416957   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1416958   +
1416959   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1416960   +
1416961   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1416962   +
1416963   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1416964   +
1416965   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1416966   +
1416967   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1416968   +
1416969   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1416970   +
1416971   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1416972   +
1416973   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1416974   +
1416975   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1416976   +
1416977   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1416978   +
1416979   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1416980   +
1416981   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1416982   +
1416983   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1416984   +
1416985   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1416986   +
1416987   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1416988   +
1416989   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1416990   +
1416991   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1416992   +
1416993   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1416994   +
1416995   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1416996   +
1416997   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1416998   +
1416999   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1417000   +
1417001   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1417002   +
1417003   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1417004   +
1417005   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1417006   +
1417007   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1417008   +
1417009   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1417010   +
1417011   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1417012   +
1417013   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1417014   +
1417015   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1417016   +
1417017   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1417018   +
1417019   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1417020   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1417021   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1417022   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1417023   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417025   +end;
MPRINT(EM_DIAGRAM):   end;
1417026   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417027   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417028   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1417029   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417030   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1417031   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1417032   +   end;
MPRINT(EM_DIAGRAM):   end;
1417033   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1417034   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1417035   +   end;
MPRINT(EM_DIAGRAM):   end;
1417036   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417037   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1417038   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417039   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417040   +   end;
MPRINT(EM_DIAGRAM):   end;
1417041   +end;
MPRINT(EM_DIAGRAM):   end;
1417042   +
1417043   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1417044   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1417045   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1417046   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1417047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417049   +end;
MPRINT(EM_DIAGRAM):   end;
1417050   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417051   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417052   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1417053   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417054   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1417055   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1417056   +   end;
MPRINT(EM_DIAGRAM):   end;
1417057   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1417058   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1417059   +   end;
MPRINT(EM_DIAGRAM):   end;
1417060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417061   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1417062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417064   +   end;
MPRINT(EM_DIAGRAM):   end;
1417065   +end;
MPRINT(EM_DIAGRAM):   end;
1417066   +
1417067   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1417068   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1417069   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1417070   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1417071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417073   +end;
MPRINT(EM_DIAGRAM):   end;
1417074   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417075   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417076   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1417077   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417078   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1417079   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1417080   +   end;
MPRINT(EM_DIAGRAM):   end;
1417081   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1417082   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1417083   +   end;
MPRINT(EM_DIAGRAM):   end;
1417084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417085   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1417086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417088   +   end;
MPRINT(EM_DIAGRAM):   end;
1417089   +end;
MPRINT(EM_DIAGRAM):   end;
1417090   +
1417091   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1417092   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1417093   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1417094   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1417095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417097   +end;
MPRINT(EM_DIAGRAM):   end;
1417098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417100   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1417101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417102   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1417103   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1417104   +   end;
MPRINT(EM_DIAGRAM):   end;
1417105   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1417106   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1417107   +   end;
MPRINT(EM_DIAGRAM):   end;
1417108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417109   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1417110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417112   +   end;
MPRINT(EM_DIAGRAM):   end;
1417113   +end;
MPRINT(EM_DIAGRAM):   end;
1417114   +
1417115   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1417116   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1417117   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1417118   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1417119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417121   +end;
MPRINT(EM_DIAGRAM):   end;
1417122   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417123   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417124   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1417125   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417126   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1417127   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1417128   +   end;
MPRINT(EM_DIAGRAM):   end;
1417129   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1417130   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1417131   +   end;
MPRINT(EM_DIAGRAM):   end;
1417132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417133   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1417134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417136   +   end;
MPRINT(EM_DIAGRAM):   end;
1417137   +end;
MPRINT(EM_DIAGRAM):   end;
1417138   +
1417139   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1417140   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1417141   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1417142   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1417143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417145   +end;
MPRINT(EM_DIAGRAM):   end;
1417146   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417148   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1417149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417150   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1417151   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1417152   +   end;
MPRINT(EM_DIAGRAM):   end;
1417153   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1417154   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1417155   +   end;
MPRINT(EM_DIAGRAM):   end;
1417156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417157   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1417158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417160   +   end;
MPRINT(EM_DIAGRAM):   end;
1417161   +end;
MPRINT(EM_DIAGRAM):   end;
1417162   +
1417163   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1417164   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1417165   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1417166   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1417167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417169   +end;
MPRINT(EM_DIAGRAM):   end;
1417170   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417171   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1417172   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1417173   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417174   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1417175   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1417176   +   end;
MPRINT(EM_DIAGRAM):   end;
1417177   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1417178   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1417179   +   end;
MPRINT(EM_DIAGRAM):   end;
1417180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417181   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1417182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417184   +   end;
MPRINT(EM_DIAGRAM):   end;
1417185   +end;
MPRINT(EM_DIAGRAM):   end;
1417186   +
1417187   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1417188   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1417189   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1417190   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1417191   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1417192   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1417193   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1417194   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1417195   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1417196   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1417197   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1417198   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1417199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417201   +end;
MPRINT(EM_DIAGRAM):   end;
1417202   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417203   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1417204   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1417205   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417206   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1417207   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1417208   +   end;
MPRINT(EM_DIAGRAM):   end;
1417209   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1417210   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1417211   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1417212   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1417213   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1417214   +   end;
MPRINT(EM_DIAGRAM):   end;
1417215   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1417216   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1417217   +   end;
MPRINT(EM_DIAGRAM):   end;
1417218   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1417219   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1417220   +   end;
MPRINT(EM_DIAGRAM):   end;
1417221   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1417222   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1417223   +   end;
MPRINT(EM_DIAGRAM):   end;
1417224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417225   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1417226   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1417227   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1417228   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1417229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417231   +   end;
MPRINT(EM_DIAGRAM):   end;
1417232   +end;
MPRINT(EM_DIAGRAM):   end;
1417233   +
1417234   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1417235   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1417236   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1417237   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1417238   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1417239   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1417240   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1417241   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1417242   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1417243   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1417244   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1417245   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1417246   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1417247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1417248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417249   +end;
MPRINT(EM_DIAGRAM):   end;
1417250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1417251   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1417252   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1417253   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1417254   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1417255   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1417256   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1417257   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1417258   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1417259   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1417260   +         end;
MPRINT(EM_DIAGRAM):   end;
1417261   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1417262   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1417263   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1417264   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1417265   +            end;
MPRINT(EM_DIAGRAM):   end;
1417266   +         end;
MPRINT(EM_DIAGRAM):   end;
1417267   +      end;
MPRINT(EM_DIAGRAM):   end;
1417268   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1417269   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1417270   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1417271   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1417272   +         end;
MPRINT(EM_DIAGRAM):   end;
1417273   +      end;
MPRINT(EM_DIAGRAM):   end;
1417274   +   end;
MPRINT(EM_DIAGRAM):   end;
1417275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1417276   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1417277   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1417278   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1417279   +      end;
MPRINT(EM_DIAGRAM):   end;
1417280   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1417281   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1417282   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1417283   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1417284   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1417285   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1417286   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1417287   +         end;
MPRINT(EM_DIAGRAM):   end;
1417288   +      end;
MPRINT(EM_DIAGRAM):   end;
1417289   +   end;
MPRINT(EM_DIAGRAM):   end;
1417290   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1417291   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1417292   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1417293   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1417294   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1417295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1417296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417297   +   end;
MPRINT(EM_DIAGRAM):   end;
1417298   +end;
MPRINT(EM_DIAGRAM):   end;
1417299   +
1417300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417301   +*** Checking missing input Interval
1417302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1417303   +
1417304   +IF NMISS(
1417305   +   AcceptedCmpTotal ,
1417306   +   Age ,
1417307   +   Frq ,
1417308   +   Income ,
1417309   +   Kidhome ,
1417310   +   Mnt ,
1417311   +   MntFishProducts ,
1417312   +   MntFruits ,
1417313   +   MntGoldProds ,
1417314   +   MntMeatProducts ,
1417315   +   MntSweetProducts ,
1417316   +   MntWines ,
1417317   +   MonthsAsCustomer ,
1417318   +   NumCatalogPurchases ,
1417319   +   NumDealsPurchases ,
1417320   +   NumDistPurchases ,
1417321   +   NumStorePurchases ,
1417322   +   NumWebPurchases ,
1417323   +   NumWebVisitsMonth ,
1417324   +   RFMstat ,
1417325   +   RMntFrq ,
1417326   +   Recency ,
1417327   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1417328   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1417329   +
1417330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1417331   +END;
MPRINT(EM_DIAGRAM):   END;
1417332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417333   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1417334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1417336   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1417337   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1417338   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1417339   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1417340   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1417341   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1417342   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1417343   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1417344   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1417345   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1417346   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1417347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1417348   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1417349   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1417350   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1417351   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1417352   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1417353   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1417354   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1417355   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1417356   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1417357   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1417358   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1417359   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1417360   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1417361   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1417362   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1417363   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1417364   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1417365   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1417366   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1417367   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1417368   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1417369   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1417370   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1417371   +END;
MPRINT(EM_DIAGRAM):   END;
1417372   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1417373   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1417374   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1417375   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1417376   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1417377   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1417378   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1417379   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1417380   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1417381   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1417382   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1417383   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1417384   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1417385   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1417386   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1417387   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1417388   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1417389   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1417390   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1417391   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1417392   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1417393   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1417394   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1417395   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1417396   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1417397   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1417398   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1417399   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1417400   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1417401   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1417402   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1417403   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1417404   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1417405   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1417406   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1417407   +   ELSE S_NumCatalogPurchases
1417408   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1417409   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1417410   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1417411   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1417412   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1417413   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1417414   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1417415   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1417416   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1417417   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1417418   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1417419   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1417420   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1417421   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1417422   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1417423   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1417424   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1417425   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1417426   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1417427   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1417428   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1417429   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1417430   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1417431   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1417432   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1417433   +END;
MPRINT(EM_DIAGRAM):   END;
1417434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417435   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1417436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417438   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1417439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417441   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1417442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417443   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1417444   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1417445   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1417446   +        S_Income  +    -0.09693130155866 * S_Kidhome
1417447   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1417448   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1417449   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1417450   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1417451   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1417452   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1417453   +          +     0.87256063855463 * S_NumDealsPurchases
1417454   +          +     0.24228318068596 * S_NumDistPurchases
1417455   +          +    -0.65575177240856 * S_NumStorePurchases
1417456   +          +    -0.94105747825406 * S_NumWebPurchases
1417457   +          +     0.88098930350141 * S_NumWebVisitsMonth
1417458   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1417459   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1417460   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome +
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 *
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts +
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 *
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 *
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 *
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 *
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq +
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1417461   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1417462   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1417463   +        S_Income  +    -0.48351377369429 * S_Kidhome
1417464   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1417465   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1417466   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1417467   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1417468   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1417469   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1417470   +          +     0.19198092320653 * S_NumDealsPurchases
1417471   +          +    -0.01877290175933 * S_NumDistPurchases
1417472   +          +    -0.61698509852352 * S_NumStorePurchases
1417473   +          +    -0.36114842161331 * S_NumWebPurchases
1417474   +          +     0.87653599441887 * S_NumWebVisitsMonth
1417475   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1417476   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1417477   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age +
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome +
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 *
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts +
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 *
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 *
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 *
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 *
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq +
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1417478   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1417479   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1417480   +        S_Income  +    -0.03117320792997 * S_Kidhome
1417481   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1417482   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1417483   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1417484   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1417485   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1417486   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1417487   +          +    -0.17772008430544 * S_NumDealsPurchases
1417488   +          +    -0.24320624261016 * S_NumDistPurchases
1417489   +          +     0.42056923271106 * S_NumStorePurchases
1417490   +          +    -0.28718554863857 * S_NumWebPurchases
1417491   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1417492   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1417493   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1417494   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age +
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome +
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 *
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts +
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 *
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 *
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 *
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 *
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq +
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1417495   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1417496   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1417497   +        S_Income  +     -0.0433863245185 * S_Kidhome
1417498   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1417499   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1417500   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1417501   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1417502   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1417503   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1417504   +          +    -0.43652501997552 * S_NumDealsPurchases
1417505   +          +     0.17317052107867 * S_NumDistPurchases
1417506   +          +     0.23672921935551 * S_NumStorePurchases
1417507   +          +     0.49273989445476 * S_NumWebPurchases
1417508   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1417509   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1417510   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1417511   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age +
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome +
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 *
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts +
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 *
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 *
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 *
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 *
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq +
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1417512   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1417513   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1417514   +        S_Income  +     0.59347379159371 * S_Kidhome
1417515   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1417516   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1417517   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1417518   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1417519   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1417520   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1417521   +          +     0.06887104992711 * S_NumDealsPurchases
1417522   +          +    -0.03976087278251 * S_NumDistPurchases
1417523   +          +     -0.0289014951041 * S_NumStorePurchases
1417524   +          +    -0.08062500939119 * S_NumWebPurchases
1417525   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1417526   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1417527   +        S_RMntFrq  +       0.940313744576 * S_Recency
1417528   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome +
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 *
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts +
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 *
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 *
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 *
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 *
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq +
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1417529   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1417530   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1417531   +        S_Income  +    -0.55245961592835 * S_Kidhome
1417532   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1417533   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1417534   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1417535   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1417536   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1417537   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1417538   +          +    -0.50731731808528 * S_NumDealsPurchases
1417539   +          +     -0.4854662155502 * S_NumDistPurchases
1417540   +          +     0.21175181231244 * S_NumStorePurchases
1417541   +          +     0.04923223410585 * S_NumWebPurchases
1417542   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1417543   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1417544   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1417545   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome +
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 *
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts +
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 *
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 *
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 *
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 *
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq +
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1417546   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1417547   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1417548   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1417549   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1417550   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 *
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 +
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 *
HigherEducationBinary0 ;
1417551   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1417552   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1417553   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1417554   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1417555   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 *
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 +
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 *
HigherEducationBinary0 ;
1417556   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1417557   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1417558   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1417559   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1417560   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 *
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 +
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 *
HigherEducationBinary0 ;
1417561   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1417562   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1417563   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1417564   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1417565   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 *
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 +
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 *
HigherEducationBinary0 ;
1417566   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1417567   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1417568   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1417569   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1417570   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 *
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 +
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 *
HigherEducationBinary0 ;
1417571   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1417572   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1417573   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1417574   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1417575   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 *
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 +
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 *
HigherEducationBinary0 ;
1417576   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1417577   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1417578   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1417579   +          +     0.13102231169849 * Marital_StatusDivorced
1417580   +          +     0.13221932247035 * Marital_StatusMarried
1417581   +          +    -0.28666963919866 * Marital_StatusSingle
1417582   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 *
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster +
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried +
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1417583   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1417584   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1417585   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1417586   +          +     0.36873255525654 * Marital_StatusDivorced
1417587   +          +    -0.54422050380085 * Marital_StatusMarried
1417588   +          +     0.58130553469516 * Marital_StatusSingle
1417589   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 *
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried +
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1417590   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1417591   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1417592   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1417593   +          +    -0.07480235993304 * Marital_StatusDivorced
1417594   +          +     0.31705972445069 * Marital_StatusMarried
1417595   +          +    -0.08626328185895 * Marital_StatusSingle
1417596   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 *
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried +
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1417597   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1417598   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1417599   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1417600   +          +    -0.06733679615115 * Marital_StatusDivorced
1417601   +          +     0.23111557732379 * Marital_StatusMarried
1417602   +          +    -0.34379469870478 * Marital_StatusSingle
1417603   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 *
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried +
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1417604   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1417605   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1417606   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1417607   +          +    -0.07108588070668 * Marital_StatusDivorced
1417608   +          +     1.10060875265784 * Marital_StatusMarried
1417609   +          +    -0.74271327534863 * Marital_StatusSingle
1417610   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 *
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster +
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried +
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1417611   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1417612   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1417613   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1417614   +          +    -0.19461023827362 * Marital_StatusDivorced
1417615   +          +     -0.4165676037681 * Marital_StatusMarried
1417616   +          +     0.43379324993555 * Marital_StatusSingle
1417617   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 *
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried +
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1417618   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1417619   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1417620   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1417621   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1417622   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1417623   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1417624   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1417625   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1417626   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1417627   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1417628   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1417629   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1417630   +END;
MPRINT(EM_DIAGRAM):   END;
1417631   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1417632   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1417633   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1417634   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1417635   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1417636   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1417637   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1417638   +END;
MPRINT(EM_DIAGRAM):   END;
1417639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417640   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1417641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417642   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1417643   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1417644   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1417645   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 +
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 +
-2.08728996739757 * H16 ;
1417646   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1417647   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1417648   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1417649   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1417650   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1417651   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1417652   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1417653   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1417654   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1417655   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1417656   +END;
MPRINT(EM_DIAGRAM):   END;
1417657   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1417658   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1417659   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1417660   +END;
MPRINT(EM_DIAGRAM):   END;
1417661   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1417662   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1417663   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1417664   +END;
MPRINT(EM_DIAGRAM):   END;
1417665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417666   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1417667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1417668   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1417669   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1417670   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1417671   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1417672   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1417673   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1417674   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1417675   +END;
MPRINT(EM_DIAGRAM):   END;
1417676   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1417677   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1417678   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1417679   +drop
1417680   +H11
1417681   +H12
1417682   +H13
1417683   +H14
1417684   +H15
1417685   +H16
1417686   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1417687   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1417688    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1417689    quit;
1417690    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1417691    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1417692    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1417693    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1417694    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1417695    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417696    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1417697    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417698    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417699    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1417700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417701    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417702    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417703    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1417704    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1417705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417706    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1417707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1417708    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1417709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417711    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417712    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1417713    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417714    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417715    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1417716    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1417716  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
1417717    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417718    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1417719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417720    filename _pref
1417720  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1417721    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1417722    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1417723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1417724   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1417725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1417726   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1417727   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1417728   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1417729    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1417730    quit;
1417731    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1417732    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1417733    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1417734    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1417735    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1417736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417737    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1417738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417740    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1417741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417743    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417744    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1417745    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1417746    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417747    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1417748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1417749    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1417750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417752    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417753    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1417754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417755    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417756    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1417757    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1417757  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1417758    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417759    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1417760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417761    filename _pref
1417761  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1417762    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1417763    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1417764   +
1417765   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1417766   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1417766  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1417767   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1417768   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1417769   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1417770   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1417771   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1417772    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1417773    quit;
1417774    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1417775    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1417776    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1417777    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1417778    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1417779    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417780    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1417781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417783    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1417784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417786    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417787    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1417788    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1417789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417790    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1417791    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417792    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1417793    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417795    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417796    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1417797    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417798    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417799    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1417800    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1417800  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1417801    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417802    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1417803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417804    filename _pref
1417804  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1417805    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1417806    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1417807   +
1417808   +
1417809   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1417810   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1417811   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1417812   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1417813   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1417814   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417815   +
1417816   +
1417817   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1417818   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1417819   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1417820   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1417821   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1417822   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417823   +
1417824   +
1417825   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1417826   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1417827   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1417828   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1417829   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1417830   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417831   +
1417832   +
1417833   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1417834   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1417835   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1417836   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1417837   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1417838   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417839   +
1417840   +
1417841   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1417842   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1417843   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1417844   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1417845   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1417846   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417847   +
1417848   +
1417849   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1417850   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1417851   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1417852   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1417853   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1417854   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417855   +
1417856   +
1417857   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1417858   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1417859   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1417860   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1417861   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1417862   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417863   +
1417864   +
1417865   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1417866   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1417867   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1417868   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1417869   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1417870   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1417871   +if
1417872   +_FILTERNORM1 not in ( '.')
1417873   + and
1417874   +_FILTERNORM2 not in ( '.')
1417875   + and
1417876   +_FILTERNORM3 not in ( '.')
1417877   + and
1417878   +_FILTERNORM4 not in ( '.')
1417879   + and
1417880   +_FILTERNORM5 not in ( '.')
1417881   + and
1417882   +_FILTERNORM6 not in ( '.')
1417883   + and
1417884   +_FILTERNORM7 not in ( ' ')
1417885   + and
1417886   +_FILTERNORM8 not in ( ' ')
1417887   +and
1417888   +( Dt_Customer ne .)
1417889   +and ( Income ne . and (Income<=107000))
1417890   +and ( Kidhome ne .)
1417891   +and ( MntFishProducts ne .)
1417892   +and ( MntFruits ne .)
1417893   +and ( MntGoldProds ne .)
1417894   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1417895   +and ( MntSweetProducts ne .)
1417896   +and ( MntWines ne .)
1417897   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1417898   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1417899   +and ( NumStorePurchases ne .)
1417900   +and ( NumWebPurchases ne .)
1417901   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1417902   +and ( Recency ne .)
1417903   +and ( Teenhome ne .)
1417904   +and ( Year_Birth ne .)
1417905   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1417906   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1417907   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1417908   +end;
MPRINT(EM_DIAGRAM):   end;
1417909   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1417910   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1417911    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1417912    quit;
1417913    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1417914    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1417915    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1417916    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1417917    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1417918    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417919    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1417920    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417922    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1417923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417925    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417926    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1417927    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1417928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417929    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1417930    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1417931    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1417932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417934    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1417935    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1417936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1417937    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1417938    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1417939    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1417939  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1417940    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417941    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1417942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1417943    %macro varDept(fcmpdata=,id=);
1417944    %global nobs&id scoreFlag&id;
1417945    %let scoreFlag&id = 0;
1417946    %if &id=1 or ^&fcmpStart %then %do;
1417947    proc sort data=&fcmpdata out=_temp&id nodupkey;
1417948    by NAME;
1417949    where id=&id and LHS in( %let j=1;
1417950    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1417951    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1417952    "&var" %let j = %eval(&j+1);
1417953    %end;
1417954    );
1417955    run;
1417956    %let dsid = %sysfunc(open(_temp&id));
1417957    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1417958    %let dsid = %sysfunc(close(&dsid));
1417959    %if &&nobs&id %then %do;
1417960    %let scoreFlag&id = 1;
1417961    %let fcmpStart = 1;
1417962    %end;
1417963    %else %let fcmpStart = 0;
1417964    %end;
1417965    %else %do;
1417966    proc sort data=&fcmpdata out=_tempid;
1417967    where id=&id;
1417968    by LHS;
1417969    run;
1417970    %let dsid = %sysfunc(open(_tempid));
1417971    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1417972    %let dsid = %sysfunc(close(&dsid));
1417973    %if ^&&nobs&id %then %do;
1417974    proc datasets lib=work nolist;
1417975    delete _tempid;
1417976    run;
1417977    quit;
1417978    %end;
1417979    %else %do;
1417980    data _tempAll;
1417981    set %let j=%eval(&id-1);
1417982    %do x=1 %to &j;
1417983    %if &&nobs&x %then %do;
1417984    _temp&x %end;
1417985    %end;
1417986    ;
1417987    run;
1417988    proc sql;
1417989    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1417989  ! work._tempid p2 where p.name=p2.lhs;
1417990    quit;
1417991    data _temp&id;
1417992    set _temp&id;
1417993    where LHS ne '' and NAME ne '' and Node ne '';
1417994    run;
1417995    proc datasets lib=work nolist;
1417996    delete _tempAll;
1417997    run;
1417998    %let dsid = %sysfunc(open(_temp&id));
1417999    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1418000    %let dsid = %sysfunc(close(&dsid));
1418001    %if ^&&nobs&id %then %do;
1418002    proc datasets lib=work nolist;
1418003    delete _temp&id;
1418004    run;
1418005    quit;
1418006    %end;
1418007    %else %do;
1418008    %let scoreFlag&id = 1;
1418009    data _temp&id;
1418010    set _temp&id;
1418011    where LHS ne NAME and node ne '';
1418012    run;
1418013    %let dsid = %sysfunc(open(_temp&id));
1418014    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1418015    %let dsid = %sysfunc(close(&dsid));
1418016    %if ^&&nobs&id %then %do;
1418017    proc datasets lib=work nolist;
1418018    delete _temp&id;
1418019    run;
1418020    quit;
1418021    %end;
1418022    %else %do;
1418023    proc sort data=_temp&id nodupkey;
1418024    by LHS NAME;
1418025    run;
1418026    %end;
1418027    %end;
1418028    %end;
1418029    %end;
1418030    %mend varDept;
1418031    %macro optCode(outdata=fcmpdata);
1418032    %global fcmpStart;
1418033    %let fcmpStart = 0;
1418034    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1418035    %let NumNodes=9;
1418036    %do k=1 %to &NumNodes;
1418037    %vardept(fcmpdata=&outdata, id=&k);
1418038    %end;
1418039    %mend optCode;
1418040    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1418041    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1418042    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1418043    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1418044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418045    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1418046    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1418047    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1418048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1418050    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1418050  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1418051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418052    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1418053    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1418054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418055    filename _pref
1418055  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1418056    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1418057    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1418058   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1418059   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1418060   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1418061   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1418062   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1418063   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1418064   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1418065   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1418066   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1418067   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1418068   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1418069   +LENGTH _WARN_ $4
1418070   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1418071   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1418072   +
1418073   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1418074   +
1418075   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1418076   +
1418077   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1418078   +
1418079   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1418080   +
1418081   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1418082   +
1418083   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1418084   +
1418085   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1418086   +
1418087   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1418088   +
1418089   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1418090   +
1418091   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1418092   +
1418093   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1418094   +
1418095   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1418096   +
1418097   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1418098   +
1418099   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1418100   +
1418101   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1418102   +
1418103   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1418104   +
1418105   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1418106   +
1418107   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1418108   +
1418109   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1418110   +
1418111   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1418112   +
1418113   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1418114   +
1418115   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1418116   +
1418117   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1418118   +
1418119   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1418120   +
1418121   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1418122   +
1418123   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1418124   +
1418125   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1418126   +
1418127   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1418128   +
1418129   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1418130   +
1418131   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1418132   +
1418133   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1418134   +
1418135   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1418136   +
1418137   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1418138   +
1418139   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1418140   +
1418141   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1418142   +
1418143   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1418144   +
1418145   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1418146   +
1418147   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1418148   +
1418149   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1418150   +
1418151   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1418152   +
1418153   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1418154   +
1418155   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1418156   +
1418157   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1418158   +
1418159   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1418160   +
1418161   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1418162   +
1418163   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1418164   +
1418165   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1418166   +
1418167   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1418168   +
1418169   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1418170   +
1418171   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1418172   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1418173   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1418174   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1418175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418177   +end;
MPRINT(EM_DIAGRAM):   end;
1418178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418180   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1418181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1418183   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1418184   +   end;
MPRINT(EM_DIAGRAM):   end;
1418185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1418186   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1418187   +   end;
MPRINT(EM_DIAGRAM):   end;
1418188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418189   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1418190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418192   +   end;
MPRINT(EM_DIAGRAM):   end;
1418193   +end;
MPRINT(EM_DIAGRAM):   end;
1418194   +
1418195   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1418196   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1418197   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1418198   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1418199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418201   +end;
MPRINT(EM_DIAGRAM):   end;
1418202   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418204   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1418205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1418207   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1418208   +   end;
MPRINT(EM_DIAGRAM):   end;
1418209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1418210   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1418211   +   end;
MPRINT(EM_DIAGRAM):   end;
1418212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418213   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1418214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418216   +   end;
MPRINT(EM_DIAGRAM):   end;
1418217   +end;
MPRINT(EM_DIAGRAM):   end;
1418218   +
1418219   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1418220   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1418221   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1418222   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1418223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418225   +end;
MPRINT(EM_DIAGRAM):   end;
1418226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418228   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1418229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1418231   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1418232   +   end;
MPRINT(EM_DIAGRAM):   end;
1418233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1418234   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1418235   +   end;
MPRINT(EM_DIAGRAM):   end;
1418236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418237   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1418238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418240   +   end;
MPRINT(EM_DIAGRAM):   end;
1418241   +end;
MPRINT(EM_DIAGRAM):   end;
1418242   +
1418243   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1418244   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1418245   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1418246   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
The SAS System
 
1418247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418249   +end;
MPRINT(EM_DIAGRAM):   end;
1418250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418252   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1418253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418254   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1418255   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1418256   +   end;
MPRINT(EM_DIAGRAM):   end;
1418257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1418258   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1418259   +   end;
MPRINT(EM_DIAGRAM):   end;
1418260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418261   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1418262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418264   +   end;
MPRINT(EM_DIAGRAM):   end;
1418265   +end;
MPRINT(EM_DIAGRAM):   end;
1418266   +
1418267   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1418268   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1418269   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1418270   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1418271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418273   +end;
MPRINT(EM_DIAGRAM):   end;
1418274   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418275   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418276   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1418277   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418278   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1418279   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1418280   +   end;
MPRINT(EM_DIAGRAM):   end;
1418281   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1418282   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1418283   +   end;
MPRINT(EM_DIAGRAM):   end;
1418284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418285   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1418286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418288   +   end;
MPRINT(EM_DIAGRAM):   end;
1418289   +end;
MPRINT(EM_DIAGRAM):   end;
1418290   +
1418291   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1418292   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1418293   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1418294   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1418295   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418296   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418297   +end;
MPRINT(EM_DIAGRAM):   end;
1418298   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418299   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418300   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1418301   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418302   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1418303   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1418304   +   end;
MPRINT(EM_DIAGRAM):   end;
1418305   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1418306   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1418307   +   end;
MPRINT(EM_DIAGRAM):   end;
1418308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418309   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1418310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418312   +   end;
MPRINT(EM_DIAGRAM):   end;
1418313   +end;
MPRINT(EM_DIAGRAM):   end;
1418314   +
1418315   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1418316   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1418317   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1418318   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1418319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418321   +end;
MPRINT(EM_DIAGRAM):   end;
1418322   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1418324   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1418325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418326   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1418327   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1418328   +   end;
MPRINT(EM_DIAGRAM):   end;
1418329   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1418330   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1418331   +   end;
MPRINT(EM_DIAGRAM):   end;
1418332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418333   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1418334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418336   +   end;
MPRINT(EM_DIAGRAM):   end;
1418337   +end;
MPRINT(EM_DIAGRAM):   end;
1418338   +
1418339   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1418340   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1418341   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1418342   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1418343   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1418344   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1418345   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1418346   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1418347   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1418348   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1418349   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1418350   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1418351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418353   +end;
MPRINT(EM_DIAGRAM):   end;
1418354   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418355   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1418356   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1418357   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418358   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1418359   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1418360   +   end;
MPRINT(EM_DIAGRAM):   end;
1418361   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1418362   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1418363   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1418364   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1418365   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1418366   +   end;
MPRINT(EM_DIAGRAM):   end;
1418367   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1418368   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1418369   +   end;
MPRINT(EM_DIAGRAM):   end;
1418370   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1418371   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1418372   +   end;
MPRINT(EM_DIAGRAM):   end;
1418373   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1418374   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1418375   +   end;
MPRINT(EM_DIAGRAM):   end;
1418376   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418377   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1418378   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1418379   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1418380   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1418381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418383   +   end;
MPRINT(EM_DIAGRAM):   end;
1418384   +end;
MPRINT(EM_DIAGRAM):   end;
1418385   +
1418386   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1418387   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1418388   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1418389   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1418390   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1418391   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1418392   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1418393   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1418394   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1418395   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1418396   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1418397   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1418398   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1418399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1418400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418401   +end;
MPRINT(EM_DIAGRAM):   end;
1418402   +else do;
MPRINT(EM_DIAGRAM):   else do;
1418403   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1418404   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1418405   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1418406   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1418407   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1418408   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1418409   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1418410   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1418411   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1418412   +         end;
MPRINT(EM_DIAGRAM):   end;
1418413   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1418414   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1418415   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1418416   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1418417   +            end;
MPRINT(EM_DIAGRAM):   end;
1418418   +         end;
MPRINT(EM_DIAGRAM):   end;
1418419   +      end;
MPRINT(EM_DIAGRAM):   end;
1418420   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1418421   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1418422   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1418423   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1418424   +         end;
MPRINT(EM_DIAGRAM):   end;
1418425   +      end;
MPRINT(EM_DIAGRAM):   end;
1418426   +   end;
MPRINT(EM_DIAGRAM):   end;
1418427   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1418428   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1418429   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1418430   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1418431   +      end;
MPRINT(EM_DIAGRAM):   end;
1418432   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1418433   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1418434   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1418435   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1418436   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1418437   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1418438   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1418439   +         end;
MPRINT(EM_DIAGRAM):   end;
1418440   +      end;
MPRINT(EM_DIAGRAM):   end;
1418441   +   end;
MPRINT(EM_DIAGRAM):   end;
1418442   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1418443   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1418444   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1418445   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1418446   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1418447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1418448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418449   +   end;
MPRINT(EM_DIAGRAM):   end;
1418450   +end;
MPRINT(EM_DIAGRAM):   end;
1418451   +
1418452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418453   +*** Checking missing input Interval
1418454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1418455   +
1418456   +IF NMISS(
1418457   +   AcceptedCmpTotal ,
1418458   +   Age ,
1418459   +   Frq ,
1418460   +   Income ,
1418461   +   Kidhome ,
1418462   +   Mnt ,
1418463   +   MntFishProducts ,
1418464   +   MntFruits ,
1418465   +   MntGoldProds ,
1418466   +   MntMeatProducts ,
1418467   +   MntSweetProducts ,
1418468   +   MntWines ,
1418469   +   MonthsAsCustomer ,
1418470   +   NumCatalogPurchases ,
1418471   +   NumDealsPurchases ,
1418472   +   NumDistPurchases ,
1418473   +   NumStorePurchases ,
1418474   +   NumWebPurchases ,
1418475   +   NumWebVisitsMonth ,
1418476   +   RFMstat ,
1418477   +   RMntFrq ,
1418478   +   Recency ,
1418479   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1418480   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1418481   +
1418482   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1418483   +END;
MPRINT(EM_DIAGRAM):   END;
1418484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418485   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1418486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418487   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1418488   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1418489   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1418490   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1418491   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1418492   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1418493   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1418494   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1418495   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1418496   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1418497   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1418498   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1418499   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1418500   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1418501   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1418502   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1418503   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1418504   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1418505   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1418506   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1418507   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1418508   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1418509   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1418510   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1418511   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1418512   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1418513   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1418514   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1418515   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1418516   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1418517   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1418518   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1418519   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1418520   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1418521   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1418522   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1418523   +END;
MPRINT(EM_DIAGRAM):   END;
1418524   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1418525   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1418526   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1418527   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1418528   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1418529   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1418530   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1418531   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1418532   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1418533   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1418534   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1418535   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1418536   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1418537   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1418538   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1418539   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1418540   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1418541   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1418542   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1418543   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1418544   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1418545   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1418546   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1418547   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1418548   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1418549   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1418550   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1418551   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1418552   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1418553   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1418554   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1418555   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1418556   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1418557   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1418558   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1418559   +   ELSE S_NumCatalogPurchases
1418560   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1418561   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1418562   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1418563   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1418564   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1418565   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1418566   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1418567   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1418568   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1418569   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1418570   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1418571   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1418572   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1418573   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1418574   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1418575   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1418576   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1418577   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1418578   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1418579   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1418580   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1418581   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1418582   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1418583   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1418584   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1418585   +END;
MPRINT(EM_DIAGRAM):   END;
1418586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418587   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1418588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418590   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1418591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418593   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1418594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418595   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1418596   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1418597   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1418598   +        S_Income  +    -0.48552270697514 * S_Kidhome
1418599   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1418600   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1418601   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1418602   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1418603   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1418604   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1418605   +          +    -0.23083265836869 * S_NumDealsPurchases
1418606   +          +     0.18257445063797 * S_NumDistPurchases
1418607   +          +     0.38040778765927 * S_NumStorePurchases
1418608   +          +     0.25798779223068 * S_NumWebPurchases
1418609   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1418610   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1418611   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1418612   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome +
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 *
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts +
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 *
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 *
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 *
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 *
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq +
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1418613   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1418614   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1418615   +        S_Income  +     0.23694585796773 * S_Kidhome
1418616   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1418617   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1418618   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1418619   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1418620   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1418621   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1418622   +          +    -0.07783411363525 * S_NumDealsPurchases
1418623   +          +     0.41281579441285 * S_NumDistPurchases
1418624   +          +     0.22243606867939 * S_NumStorePurchases
1418625   +          +     0.27174952755013 * S_NumWebPurchases
1418626   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1418627   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1418628   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1418629   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome +
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 *
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts +
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 *
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 *
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 *
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 *
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq +
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1418630   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1418631   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1418632   +        S_Income  +     0.20802765248799 * S_Kidhome
1418633   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1418634   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1418635   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1418636   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1418637   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1418638   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1418639   +          +     0.09455783738093 * S_NumDealsPurchases
1418640   +          +    -0.06039304909585 * S_NumDistPurchases
1418641   +          +    -0.10306611685636 * S_NumStorePurchases
1418642   +          +    -0.00323837049664 * S_NumWebPurchases
1418643   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1418644   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1418645   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1418646   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome +
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 *
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts +
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 *
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 *
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 *
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 *
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq +
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1418647   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1418648   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1418649   +        S_Income  +     0.26381864865425 * S_Kidhome
1418650   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1418651   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1418652   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1418653   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1418654   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1418655   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1418656   +          +      0.8306613243419 * S_NumDealsPurchases
1418657   +          +     0.31439474207278 * S_NumDistPurchases
1418658   +          +    -0.62131474975756 * S_NumStorePurchases
1418659   +          +    -1.04845843654047 * S_NumWebPurchases
1418660   +          +     0.13255915506164 * S_NumWebVisitsMonth
1418661   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1418662   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1418663   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age +
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome +
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 *
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts +
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 *
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 *
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 *
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 *
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq +
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1418664   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1418665   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1418666   +        S_Income  +    -0.71599192201946 * S_Kidhome
1418667   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1418668   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1418669   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1418670   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1418671   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1418672   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1418673   +          +     0.63537278643623 * S_NumDealsPurchases
1418674   +          +     0.00410348485264 * S_NumDistPurchases
1418675   +          +    -0.78287523583925 * S_NumStorePurchases
1418676   +          +    -0.73614491225189 * S_NumWebPurchases
1418677   +          +      1.5997596522354 * S_NumWebVisitsMonth
1418678   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1418679   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1418680   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome +
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 *
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts +
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 *
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 *
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 *
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 *
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq +
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1418681   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1418682   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1418683   +        S_Income  +    -0.23853377939411 * S_Kidhome
1418684   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1418685   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1418686   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1418687   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1418688   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1418689   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1418690   +          +    -0.30899603957269 * S_NumDealsPurchases
1418691   +          +     0.11839581082877 * S_NumDistPurchases
1418692   +          +     0.20149797391098 * S_NumStorePurchases
1418693   +          +      0.1616654107491 * S_NumWebPurchases
1418694   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1418695   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1418696   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1418697   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome +
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 *
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts +
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 *
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 *
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 *
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 *
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq +
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1418698   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1418699   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1418700   +        S_Income  +    -0.48650790963695 * S_Kidhome
1418701   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1418702   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1418703   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1418704   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1418705   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1418706   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1418707   +          +    -0.18889005468777 * S_NumDealsPurchases
1418708   +          +     0.17240918361456 * S_NumDistPurchases
1418709   +          +     0.11704610685994 * S_NumStorePurchases
1418710   +          +     0.23031393640508 * S_NumWebPurchases
1418711   +          +     0.66002859819524 * S_NumWebVisitsMonth
1418712   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1418713   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1418714   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome +
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 *
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts +
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 *
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 *
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 *
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 *
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq +
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1418715   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1418716   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1418717   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1418718   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1418719   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 *
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 +
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 *
HigherEducationBinary0 ;
1418720   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1418721   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1418722   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1418723   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1418724   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 *
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 +
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 *
HigherEducationBinary0 ;
1418725   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1418726   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1418727   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1418728   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1418729   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 *
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 +
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 *
HigherEducationBinary0 ;
1418730   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1418731   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1418732   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1418733   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1418734   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 *
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 +
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 *
HigherEducationBinary0 ;
1418735   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1418736   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1418737   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1418738   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1418739   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 *
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 +
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 *
HigherEducationBinary0 ;
1418740   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1418741   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1418742   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1418743   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1418744   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 *
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 +
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 *
HigherEducationBinary0 ;
1418745   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1418746   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1418747   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1418748   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1418749   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 *
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 +
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 *
HigherEducationBinary0 ;
1418750   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1418751   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1418752   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1418753   +          +     0.43452164349556 * Marital_StatusDivorced
1418754   +          +    -0.46042593279944 * Marital_StatusMarried
1418755   +          +     0.45533323427801 * Marital_StatusSingle
1418756   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 *
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster +
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried +
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1418757   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1418758   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1418759   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1418760   +          +     0.11002244687305 * Marital_StatusDivorced
1418761   +          +     0.52424349905683 * Marital_StatusMarried
1418762   +          +     -0.3969250366321 * Marital_StatusSingle
1418763   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 *
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried +
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1418764   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1418765   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1418766   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1418767   +          +    -0.05300704180744 * Marital_StatusDivorced
1418768   +          +     0.07805487103106 * Marital_StatusMarried
1418769   +          +     0.20033339442958 * Marital_StatusSingle
1418770   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 *
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster +
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried +
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1418771   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1418772   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1418773   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1418774   +          +    -0.42379596543146 * Marital_StatusDivorced
1418775   +          +     0.66738351478416 * Marital_StatusMarried
1418776   +          +    -0.37324277578462 * Marital_StatusSingle
1418777   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 *
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster +
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried +
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1418778   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1418779   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1418780   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1418781   +          +     0.88761025578489 * Marital_StatusDivorced
1418782   +          +    -0.85905539883385 * Marital_StatusMarried
1418783   +          +     0.73467737758558 * Marital_StatusSingle
1418784   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 *
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried +
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1418785   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1418786   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1418787   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1418788   +          +    -0.11980818075461 * Marital_StatusDivorced
1418789   +          +    -0.16572953052582 * Marital_StatusMarried
1418790   +          +     0.34617421331983 * Marital_StatusSingle
1418791   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 *
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried +
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1418792   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1418793   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1418794   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1418795   +          +     0.14874886057777 * Marital_StatusDivorced
1418796   +          +     -1.0463076915992 * Marital_StatusMarried
1418797   +          +     0.72937563672763 * Marital_StatusSingle
1418798   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 *
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried +
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1418799   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1418800   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1418801   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1418802   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1418803   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1418804   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1418805   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1418806   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1418807   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1418808   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1418809   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1418810   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1418811   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1418812   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1418813   +END;
MPRINT(EM_DIAGRAM):   END;
1418814   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1418815   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1418816   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1418817   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1418818   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1418819   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1418820   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1418821   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1418822   +END;
MPRINT(EM_DIAGRAM):   END;
1418823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418824   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1418825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418826   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1418827   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1418828   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1418829   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1418830   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 +
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 *
H16 + 2.19267705077374 * H17 ;
1418831   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1418832   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1418833   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1418834   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1418835   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1418836   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1418837   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1418838   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1418839   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1418840   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1418841   +END;
MPRINT(EM_DIAGRAM):   END;
1418842   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1418843   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1418844   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1418845   +END;
MPRINT(EM_DIAGRAM):   END;
1418846   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1418847   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1418848   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1418849   +END;
MPRINT(EM_DIAGRAM):   END;
1418850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418851   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1418852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1418853   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1418854   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1418855   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1418856   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1418857   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1418858   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1418859   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1418860   +END;
MPRINT(EM_DIAGRAM):   END;
1418861   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1418862   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1418863   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1418864   +drop
1418865   +H11
1418866   +H12
1418867   +H13
1418868   +H14
1418869   +H15
1418870   +H16
1418871   +H17
1418872   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1418873   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1418874    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1418875    quit;
1418876    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1418877    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1418878    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1418879    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1418880    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1418881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418882    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1418883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418884    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418885    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1418886    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418887    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418888    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1418889    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1418890    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1418891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418892    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1418893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1418894    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1418895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418897    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1418898    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1418899    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418900    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418901    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1418902    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1418902  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
1418903    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418904    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1418905    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418906    filename _pref
1418906  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1418907    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1418908    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1418909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1418910   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1418911   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1418912   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1418913   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1418914   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1418915    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1418916    quit;
1418917    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1418918    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1418919    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1418920    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1418921    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1418922    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418923    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1418924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418925    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418926    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1418927    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418929    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1418930    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1418931    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1418932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418933    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1418934    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1418935    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1418936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418938    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1418939    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1418940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418941    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418942    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1418943    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1418943  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1418944    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418945    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1418946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418947    filename _pref
1418947  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1418948    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1418949    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1418950   +
1418951   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1418952   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1418952  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1418953   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1418954   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1418955   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1418956   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1418957   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1418958    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1418959    quit;
1418960    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1418961    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1418962    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1418963    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1418964    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1418965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418966    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1418967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418968    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418969    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1418970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418972    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1418973    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1418974    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1418975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418976    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1418977    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418978    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1418979    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418980    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418981    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1418982    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1418983    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1418984    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1418985    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1418986    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1418986  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1418987    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418988    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1418989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1418990    filename _pref
1418990  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1418991    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1418992    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1418993   +
1418994   +
1418995   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1418996   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1418997   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1418998   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1418999   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1419000   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419001   +
1419002   +
1419003   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1419004   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1419005   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1419006   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1419007   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1419008   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419009   +
1419010   +
1419011   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1419012   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1419013   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1419014   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1419015   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1419016   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419017   +
1419018   +
1419019   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1419020   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1419021   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1419022   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1419023   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1419024   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419025   +
1419026   +
1419027   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1419028   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1419029   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1419030   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1419031   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1419032   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419033   +
1419034   +
1419035   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1419036   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1419037   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1419038   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1419039   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1419040   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419041   +
1419042   +
1419043   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1419044   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1419045   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1419046   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1419047   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1419048   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419049   +
1419050   +
1419051   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1419052   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1419053   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1419054   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1419055   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1419056   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1419057   +if
1419058   +_FILTERNORM1 not in ( '.')
1419059   + and
1419060   +_FILTERNORM2 not in ( '.')
1419061   + and
1419062   +_FILTERNORM3 not in ( '.')
1419063   + and
1419064   +_FILTERNORM4 not in ( '.')
1419065   + and
1419066   +_FILTERNORM5 not in ( '.')
1419067   + and
1419068   +_FILTERNORM6 not in ( '.')
1419069   + and
1419070   +_FILTERNORM7 not in ( ' ')
1419071   + and
1419072   +_FILTERNORM8 not in ( ' ')
1419073   +and
1419074   +( Dt_Customer ne .)
1419075   +and ( Income ne . and (Income<=107000))
1419076   +and ( Kidhome ne .)
1419077   +and ( MntFishProducts ne .)
1419078   +and ( MntFruits ne .)
1419079   +and ( MntGoldProds ne .)
1419080   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1419081   +and ( MntSweetProducts ne .)
1419082   +and ( MntWines ne .)
1419083   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1419084   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1419085   +and ( NumStorePurchases ne .)
1419086   +and ( NumWebPurchases ne .)
1419087   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1419088   +and ( Recency ne .)
1419089   +and ( Teenhome ne .)
1419090   +and ( Year_Birth ne .)
1419091   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1419092   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1419093   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1419094   +end;
MPRINT(EM_DIAGRAM):   end;
1419095   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1419096   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1419097    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1419098    quit;
1419099    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1419100    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1419101    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1419102    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1419103    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1419104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419105    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1419106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419108    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1419109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1419112    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1419113    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1419114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419115    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1419116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1419117    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1419118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419120    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1419121    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1419122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419123    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419124    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1419125    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1419125  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1419126    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419127    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1419128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419129    %macro varDept(fcmpdata=,id=);
1419130    %global nobs&id scoreFlag&id;
1419131    %let scoreFlag&id = 0;
1419132    %if &id=1 or ^&fcmpStart %then %do;
1419133    proc sort data=&fcmpdata out=_temp&id nodupkey;
1419134    by NAME;
1419135    where id=&id and LHS in( %let j=1;
1419136    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1419137    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1419138    "&var" %let j = %eval(&j+1);
1419139    %end;
1419140    );
1419141    run;
1419142    %let dsid = %sysfunc(open(_temp&id));
1419143    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1419144    %let dsid = %sysfunc(close(&dsid));
1419145    %if &&nobs&id %then %do;
1419146    %let scoreFlag&id = 1;
1419147    %let fcmpStart = 1;
1419148    %end;
1419149    %else %let fcmpStart = 0;
1419150    %end;
1419151    %else %do;
1419152    proc sort data=&fcmpdata out=_tempid;
1419153    where id=&id;
1419154    by LHS;
1419155    run;
1419156    %let dsid = %sysfunc(open(_tempid));
1419157    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1419158    %let dsid = %sysfunc(close(&dsid));
1419159    %if ^&&nobs&id %then %do;
1419160    proc datasets lib=work nolist;
1419161    delete _tempid;
1419162    run;
1419163    quit;
1419164    %end;
1419165    %else %do;
1419166    data _tempAll;
1419167    set %let j=%eval(&id-1);
1419168    %do x=1 %to &j;
1419169    %if &&nobs&x %then %do;
1419170    _temp&x %end;
1419171    %end;
1419172    ;
1419173    run;
1419174    proc sql;
1419175    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1419175  ! work._tempid p2 where p.name=p2.lhs;
1419176    quit;
1419177    data _temp&id;
1419178    set _temp&id;
1419179    where LHS ne '' and NAME ne '' and Node ne '';
1419180    run;
1419181    proc datasets lib=work nolist;
1419182    delete _tempAll;
1419183    run;
1419184    %let dsid = %sysfunc(open(_temp&id));
1419185    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1419186    %let dsid = %sysfunc(close(&dsid));
1419187    %if ^&&nobs&id %then %do;
1419188    proc datasets lib=work nolist;
1419189    delete _temp&id;
1419190    run;
1419191    quit;
1419192    %end;
1419193    %else %do;
1419194    %let scoreFlag&id = 1;
1419195    data _temp&id;
1419196    set _temp&id;
1419197    where LHS ne NAME and node ne '';
1419198    run;
1419199    %let dsid = %sysfunc(open(_temp&id));
1419200    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1419201    %let dsid = %sysfunc(close(&dsid));
1419202    %if ^&&nobs&id %then %do;
1419203    proc datasets lib=work nolist;
1419204    delete _temp&id;
1419205    run;
1419206    quit;
1419207    %end;
1419208    %else %do;
1419209    proc sort data=_temp&id nodupkey;
1419210    by LHS NAME;
1419211    run;
1419212    %end;
1419213    %end;
1419214    %end;
1419215    %end;
1419216    %mend varDept;
1419217    %macro optCode(outdata=fcmpdata);
1419218    %global fcmpStart;
1419219    %let fcmpStart = 0;
1419220    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1419221    %let NumNodes=9;
1419222    %do k=1 %to &NumNodes;
1419223    %vardept(fcmpdata=&outdata, id=&k);
1419224    %end;
1419225    %mend optCode;
1419226    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1419227    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1419228    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1419229    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1419230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419231    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1419232    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1419233    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1419234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419235    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1419236    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1419236  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1419237    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419238    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1419239    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1419240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419241    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1419242    * Ensmbl14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing metadata for TRAIN data;
1419243    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl14_TRAIN out=WORK.M31JF5UU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31JF5UU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M31JF5UU(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31JF5UU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M31JF5UU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1QCHO__ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RIQCGF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   set WORK.M1QCHO__;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl14";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1419563    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1419564    set EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO;
1419565    where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1419566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_EMINFO.
      WHERE (DATA='Ensmbl14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419567    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMINFO;
1419568    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1419569    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1419570    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1419574    run;
1419575    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
1419576    set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
1419577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419578    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
1419579    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1419580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419581    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1419582    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1419583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419584    proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1419585    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1419586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419587    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
1419588    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1419589    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1419590    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1419591    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1419592    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1419593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1419594    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0Y7LS10
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0Y7LS10 new;
MPRINT(EM_DIAGRAM):   run;
1419618    data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMOUTFIT;
1419619    set EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMOUTFIT;
1419620    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1419621    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1419621  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1419622    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1419623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL14_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL14_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419624    proc sort data=EMWS8.Ensmbl14_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl14_EMREPORTFIT nothreads;
1419625    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1419626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL14_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL14_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419627    %let _EMwarndup = 0;
1419628    %let _EMtargetdup =;
1419629    %let _EMASEtargetdup =;
1419630    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1419631    set EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMOUTFIT;
1419632    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1419633    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1419634    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1419635    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1419636    end;
MPRINT(EM_DIAGRAM):   end;
1419637    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL14_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419638    proc sort data=EMWS8.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
1419639    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419640    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419641    proc sort data=EMWS8.Ensmbl14_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl14_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1419642    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL14_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419644    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1419645    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1419646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1419647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419648    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1419649    set EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_CMeta_TRAIN;
1419650    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1419650  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1419651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1419652    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1419653    set EMWS8.Ensmbl14_TRAIN(keep=
1419654    F_DepVar
1419655    I_DepVar
1419656    P_DepVar0
1419657    P_DepVar1
1419658    R_DepVar0
1419659    R_DepVar1
1419660    U_DepVar
1419661    _WARN_
1419662    DepVar
1419663    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1419664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG5_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL14_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl14_1K52XM5 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_1K52XM5;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1K52XM5(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1K52XM5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1K52XM5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000586182 OVLMAX 0.9999046789 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1423930    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1423931    set EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_CMeta_TRAIN;
1423932    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1423932  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1423933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1423934    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1423935    set EMWS8.Ensmbl14_VALIDATE(keep=
1423936    F_DepVar
1423937    I_DepVar
1423938    P_DepVar0
1423939    P_DepVar1
1423940    R_DepVar0
1423941    R_DepVar1
1423942    U_DepVar
1423943    _WARN_
1423944    DepVar
1423945    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1423946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG5_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL14_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl14_0666275 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_0666275;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_0666275(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMCLASSIFICATION WORK.Ensmbl14_0666275;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_0666275;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000583378 OVLMAX 0.999887896 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1428221    %let _cn = %sysfunc(getoption(CENTER));
1428222    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1428223    proc print data=EMWS8.Ensmbl14_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMREPORTFIT noobs label;
1428224    var STAT LABEL TRAIN
1428225    VALIDATE
1428226    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1428227    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1428228    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1428229    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1428230    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL14_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1744.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1428231    title10;
MPRINT(EM_DIAGRAM):   title10;
1428232    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1428233    proc sort data=EMWS8.Ensmbl14_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl14_EMCLASSIFICATION nothreads;
1428234    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1428235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL14_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1428236    %let _cn = %sysfunc(getoption(CENTER));
1428237    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1428238    proc print data=EMWS8.Ensmbl14_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMCLASSIFICATION noobs label;
1428239    var from into pct_row pct_col count percent
1428240    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1428241    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1428242    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1428243    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1428244    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1428245    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1428246    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1428247    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1428248    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1428249    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1428250    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1428251    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1745.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1428252    title9;
MPRINT(EM_DIAGRAM):   title9;
1428253    title10;
MPRINT(EM_DIAGRAM):   title10;
1428254    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1428255    %let _cn = %sysfunc(getoption(CENTER));
1428256    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1428257    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMEVENTREPORT;
1428258    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1428258  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1428259    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1428259  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1428259  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1428259  ! FALSEEVENT
1428260    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1428260  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1428260  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1428261       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1428262    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1428263    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1428264    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1428265    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1428266    set EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMEVENTREPORT;
1428267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL14_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL14_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1428268    proc print data=EMWS8.Ensmbl14_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMEVENTREPORT noobs label;
1428269    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1428270    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1428271    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1428272    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL14_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1746.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1428273    title10;
MPRINT(EM_DIAGRAM):   title10;
1428274    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1428275    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1428276    modify Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1428277    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1428278    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1428278  ! ;
MPRINT(EM_DIAGRAM):   run;
1428279    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL14_EMRANK.DATA.
1428280    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
1428281    %let _cn = %sysfunc(getoption(CENTER));
1428282    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1428283    proc print data=EMWS8.Ensmbl14_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMRANK label noobs;
1428284    var
1428285    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1428286    by
1428287    notsorted DATAROLE
1428288    notsorted TARGET
1428289    notsorted TARGETLABEL
1428290    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1428291    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1428292    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1428293    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL14_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1747.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1428294    title10;
MPRINT(EM_DIAGRAM):   title10;
1428295    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1428296    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1428297    modify Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1428298    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1428298  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1428299    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1428299  ! ;
MPRINT(EM_DIAGRAM):   run;
1428300    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL14_EMSCOREDIST.DATA.
1428301    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
