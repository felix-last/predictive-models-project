*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                13.30 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                13.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0E3EEJM
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0E3EEJM new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.30 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.30 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[99073] MAX=1 EXCEEDMAXVALUE='' )[99077] )[99071]
VALIDCHOICES=(CHOICE1='Y' )[99075] )[99359] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[99081]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[99085] )[99083] )[99079] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[99089]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[99095] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[99093] )[99091] )[99087] )[99069]
500597     proc freq data=EMWS8.Ensmbl14_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl14_VariableSet noprint;
500598     table ROLE*LEVEL/out=WORK.Ensmbl14META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl14META;
500599     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL14_VARIABLESET.
NOTE: The data set WORK.ENSMBL14META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
500600     proc print data=WORK.Ensmbl14META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14META label noobs;
500601     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
500602     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
500602   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
500602   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
500603     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
500604     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
500605     run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL14META.
NOTE: The PROCEDURE PRINT printed page 242.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
500606     title10;
MPRINT(EM_DIAGRAM):   title10;
500607     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN EMWS8 Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN EMWS8 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
500636     data WORK.Ensmbl14_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
500637     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
500638     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
500638   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
500638   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
500639        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
500639   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
500639   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
500640     set EMWS8.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
500641     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
500642     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
500643     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
500644     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
500645     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
500646     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
500647     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
500648     end;
MPRINT(EM_DIAGRAM):   end;
500649     output;
MPRINT(EM_DIAGRAM):   output;
500650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL14_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500651     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
500652     proc print data=WORK.Ensmbl14_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14_EVENT noobs label;
500653     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
500654     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
500655     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
500656     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL14_EVENT.
NOTE: The PROCEDURE PRINT printed page 243.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500657     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
500658     proc print data = EMWS8.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural2_DepVar_DM noobs label;
500659     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
500660     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
500661     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
500661   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
500661   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
500662     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
500663     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
500664     run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 244.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500665     title10;
MPRINT(EM_DIAGRAM):   title10;
500666     %let groupid =;
500667     %let endGroupid =;
500668     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500669     set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
500670     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500670   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500671     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500672     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500673     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500674     %let groupid =;
500675     %let endGroupid =;
500676     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500677     set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
500678     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500678   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500679     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500680     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500681     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500682     %let groupid =;
500683     %let endGroupid =;
500684     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500685     set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
500686     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500686   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500687     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500688     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500689     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500690     %let groupid =;
500691     %let endGroupid =;
500692     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500693     set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
500694     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500694   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500695     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500696     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500698     %let groupid =;
500699     %let endGroupid =;
500700     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500701     set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
500702     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500702   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500703     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500704     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500705     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500706     %let groupid =;
500707     %let endGroupid =;
500708     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500709     set EMWS8.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_EMINFO;
500710     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500710   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500711     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500712     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500713     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500714     %let groupid =;
500715     %let endGroupid =;
500716     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
500717     set EMWS8.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_EMINFO;
500718     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
500718   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
500719     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
500720     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
500721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
500722     data WORK.Ensmbl14;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14;
500723     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
500724     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
500724   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
500725     nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
500726     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
500727     output;
MPRINT(EM_DIAGRAM):   output;
500728     nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
500729     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
500730     output;
MPRINT(EM_DIAGRAM):   output;
500731     nodeid="NEURAL4";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL4";
500732     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
500733     output;
MPRINT(EM_DIAGRAM):   output;
500734     nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
500735     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
500736     output;
MPRINT(EM_DIAGRAM):   output;
500737     nodeid="NEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL10";
500738     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
500739     output;
MPRINT(EM_DIAGRAM):   output;
500740     nodeid="REG";
MPRINT(EM_DIAGRAM):   nodeid="REG";
500741     model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
500742     output;
MPRINT(EM_DIAGRAM):   output;
500743     nodeid="REG5";
MPRINT(EM_DIAGRAM):   nodeid="REG5";
500744     model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
500745     output;
MPRINT(EM_DIAGRAM):   output;
500746     ;
MPRINT(EM_DIAGRAM):   ;
500747     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL14 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500748     title;
MPRINT(EM_DIAGRAM):   title;
500749     proc print data=WORK.Ensmbl14 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14 label noobs;
500750     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
500751     title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
500752     run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL14.
NOTE: The PROCEDURE PRINT printed page 245.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
500753     title9;
MPRINT(EM_DIAGRAM):   title9;
500754     title10;
MPRINT(EM_DIAGRAM):   title10;
500755     data WORK.M162_H4A;
MPRINT(EM_DIAGRAM):    data WORK.M162_H4A;
500756     set WORK.M162_H4A;
MPRINT(EM_DIAGRAM):   set WORK.M162_H4A;
500757     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
500758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M162_H4A.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M162_H4A has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
500759     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
500760     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
500761     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
500762     %macro DMDBClass;
500763         DepVar(DESC)
500764     %mend DMDBClass;
500765     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
500766     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
500767     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
500768     %macro DMDBVar;
500769
500770     %mend DMDBVar;
500771     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500772     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
500773     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500774     proc dmdb batch data=EMWS8.Neural2_TRAIN
500775     dmdbcat=WORK.EM_DMDB
500776     maxlevel = 513
500777     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural2_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
500778     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
500779     target
500780     DepVar
500781     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
500782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL2_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
500783     quit;
500784     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                13.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0_VIS3E
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0_VIS3E new;
MPRINT(EM_DIAGRAM):   run;
500886     filename emflow
500886   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring NEURAL2_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500887     *------------------------------------------------------------*;
500888     * Ensmbl14: Scoring NEURAL2_TRAIN data;
500889     *------------------------------------------------------------*;
500890     data EMWS8.Ensmbl14_TRAIN
500891     / view=EMWS8.Ensmbl14_TRAIN
500892     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_TRAIN / view=EMWS8.Ensmbl14_TRAIN ;
500893     set EMWS8.Neural2_TRAIN
500894     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_TRAIN ;
500895     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
500896    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500897    +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
500898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500899    +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
500900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500902    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
500903    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
500904    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
500905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500907    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
500908    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
500909    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
500910    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500911    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500912    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
500913    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
500914    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
500915    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500916    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500917    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
500918    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
500919    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
500920    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500921    +
500922    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
500923    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
500923   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
500924    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
500925    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
500926    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
500927    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
500928    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
500929    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500930    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
500931    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
500932    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
500933    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500934    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500935    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
500936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500937    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
500938    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
500939    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
500940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500941    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
500942    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
500943    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
500944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500945    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500946    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
500947    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
500948    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
500949    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500950    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500951    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
500952    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
500953    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
500954    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500955    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500956    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
500957    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500958    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
500959    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
500960    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
500961    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
500962    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
500963    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
500964    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
500965    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
500966    +LENGTH _WARN_ $4
500967    +      F_DepVar  $ 12
500968    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
500969    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
500970    +
500971    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
500972    +
500973    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
500974    +
500975    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
500976    +
500977    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
500978    +
500979    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
500980    +
500981    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
500982    +
500983    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
500984    +
500985    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
500986    +
500987    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
500988    +
500989    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
500990    +
500991    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
500992    +
500993    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
500994    +
500995    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
500996    +
500997    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
500998    +
500999    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
501000    +
501001    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
501002    +
501003    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
501004    +
501005    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
501006    +
501007    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
501008    +
501009    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
501010    +
501011    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
501012    +
501013    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
501014    +
501015    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
501016    +
501017    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
501018    +
501019    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
501020    +
501021    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
501022    +
501023    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
501024    +
501025    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
501026    +
501027    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
501028    +
501029    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
501030    +
501031    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
501032    +
501033    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
501034    +
501035    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
501036    +
501037    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
501038    +
501039    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
501040    +
501041    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
501042    +
501043    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
501044    +
501045    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
501046    +
501047    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
501048    +
501049    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
501050    +
501051    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501052    +
501053    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
501054    +
501055    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
501056    +
501057    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
501058    +
501059    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
501060    +
501061    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
501062    +
501063    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
501064    +
501065    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
501066    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
501067    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
501068    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
501069    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501071    +end;
MPRINT(EM_DIAGRAM):   end;
501072    +else do;
MPRINT(EM_DIAGRAM):   else do;
501073    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501074    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
501075    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501076    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501077    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
501078    +   end;
MPRINT(EM_DIAGRAM):   end;
501079    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501080    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
501081    +   end;
MPRINT(EM_DIAGRAM):   end;
501082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501083    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
501084    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501085    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501086    +   end;
MPRINT(EM_DIAGRAM):   end;
501087    +end;
MPRINT(EM_DIAGRAM):   end;
501088    +
501089    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
501090    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
501091    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
501092    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
501093    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501094    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501095    +end;
MPRINT(EM_DIAGRAM):   end;
501096    +else do;
MPRINT(EM_DIAGRAM):   else do;
501097    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501098    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
501099    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501100    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501101    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
501102    +   end;
MPRINT(EM_DIAGRAM):   end;
501103    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501104    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
501105    +   end;
MPRINT(EM_DIAGRAM):   end;
501106    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501107    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
501108    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501109    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501110    +   end;
MPRINT(EM_DIAGRAM):   end;
501111    +end;
MPRINT(EM_DIAGRAM):   end;
501112    +
501113    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
501114    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
501115    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
501116    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501119    +end;
MPRINT(EM_DIAGRAM):   end;
501120    +else do;
MPRINT(EM_DIAGRAM):   else do;
501121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501122    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
501123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501124    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501125    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
501126    +   end;
MPRINT(EM_DIAGRAM):   end;
501127    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501128    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
501129    +   end;
MPRINT(EM_DIAGRAM):   end;
501130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501131    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501132    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501133    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501134    +   end;
MPRINT(EM_DIAGRAM):   end;
501135    +end;
MPRINT(EM_DIAGRAM):   end;
501136    +
501137    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
501138    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
501139    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
501140    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501141    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501142    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501143    +end;
MPRINT(EM_DIAGRAM):   end;
501144    +else do;
MPRINT(EM_DIAGRAM):   else do;
501145    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501146    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
501147    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501148    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501149    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
501150    +   end;
MPRINT(EM_DIAGRAM):   end;
501151    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501152    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
501153    +   end;
MPRINT(EM_DIAGRAM):   end;
501154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501155    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501156    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501157    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501158    +   end;
MPRINT(EM_DIAGRAM):   end;
501159    +end;
MPRINT(EM_DIAGRAM):   end;
501160    +
501161    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
501162    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
501163    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
501164    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501165    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501166    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501167    +end;
MPRINT(EM_DIAGRAM):   end;
501168    +else do;
MPRINT(EM_DIAGRAM):   else do;
501169    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501170    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
501171    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501172    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501173    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
501174    +   end;
MPRINT(EM_DIAGRAM):   end;
501175    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501176    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
501177    +   end;
MPRINT(EM_DIAGRAM):   end;
501178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501179    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501182    +   end;
MPRINT(EM_DIAGRAM):   end;
501183    +end;
MPRINT(EM_DIAGRAM):   end;
501184    +
501185    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
501186    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
501187    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
501188    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501191    +end;
MPRINT(EM_DIAGRAM):   end;
501192    +else do;
MPRINT(EM_DIAGRAM):   else do;
501193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501194    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
501195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501196    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501197    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
501198    +   end;
MPRINT(EM_DIAGRAM):   end;
501199    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501200    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
501201    +   end;
MPRINT(EM_DIAGRAM):   end;
501202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501203    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501206    +   end;
MPRINT(EM_DIAGRAM):   end;
501207    +end;
MPRINT(EM_DIAGRAM):   end;
501208    +
501209    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
501210    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
501211    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
501212    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501215    +end;
MPRINT(EM_DIAGRAM):   end;
501216    +else do;
MPRINT(EM_DIAGRAM):   else do;
501217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501218    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
501219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501220    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
501221    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
501222    +   end;
MPRINT(EM_DIAGRAM):   end;
501223    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
501224    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
501225    +   end;
MPRINT(EM_DIAGRAM):   end;
501226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501227    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501230    +   end;
MPRINT(EM_DIAGRAM):   end;
501231    +end;
MPRINT(EM_DIAGRAM):   end;
501232    +
501233    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
501234    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
501235    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
501236    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
501237    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
501238    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
501239    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
501240    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
501241    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
501242    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
501243    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
501244    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
501245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501247    +end;
MPRINT(EM_DIAGRAM):   end;
501248    +else do;
MPRINT(EM_DIAGRAM):   else do;
501249    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
501250    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
501251    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501252    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
501253    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
501254    +   end;
MPRINT(EM_DIAGRAM):   end;
501255    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
501256    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
501257    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
501258    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
501259    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
501260    +   end;
MPRINT(EM_DIAGRAM):   end;
501261    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
501262    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
501263    +   end;
MPRINT(EM_DIAGRAM):   end;
501264    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
501265    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
501266    +   end;
MPRINT(EM_DIAGRAM):   end;
501267    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
501268    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
501269    +   end;
MPRINT(EM_DIAGRAM):   end;
501270    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501271    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
501272    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
501273    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
501274    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
501275    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501276    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501277    +   end;
MPRINT(EM_DIAGRAM):   end;
501278    +end;
MPRINT(EM_DIAGRAM):   end;
501279    +
501280    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
501281    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
501282    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
501283    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
501284    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
501285    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
501286    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
501287    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
501288    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
501289    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
501290    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
501291    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
501292    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
501293    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501294    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501295    +end;
MPRINT(EM_DIAGRAM):   end;
501296    +else do;
MPRINT(EM_DIAGRAM):   else do;
501297    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
501298    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
501299    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501300    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
501301    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
501302    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
501303    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
501304    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
501305    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501306    +         end;
MPRINT(EM_DIAGRAM):   end;
501307    +         else do;
MPRINT(EM_DIAGRAM):   else do;
501308    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
501309    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
501310    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501311    +            end;
MPRINT(EM_DIAGRAM):   end;
501312    +         end;
MPRINT(EM_DIAGRAM):   end;
501313    +      end;
MPRINT(EM_DIAGRAM):   end;
501314    +      else do;
MPRINT(EM_DIAGRAM):   else do;
501315    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
501316    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
501317    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501318    +         end;
MPRINT(EM_DIAGRAM):   end;
501319    +      end;
MPRINT(EM_DIAGRAM):   end;
501320    +   end;
MPRINT(EM_DIAGRAM):   end;
501321    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501322    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
501323    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
501324    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501325    +      end;
MPRINT(EM_DIAGRAM):   end;
501326    +      else do;
MPRINT(EM_DIAGRAM):   else do;
501327    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
501328    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
501329    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
501330    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
501331    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
501332    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501333    +         end;
MPRINT(EM_DIAGRAM):   end;
501334    +      end;
MPRINT(EM_DIAGRAM):   end;
501335    +   end;
MPRINT(EM_DIAGRAM):   end;
501336    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
501337    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
501338    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
501339    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
501340    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
501341    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501342    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501343    +   end;
MPRINT(EM_DIAGRAM):   end;
501344    +end;
MPRINT(EM_DIAGRAM):   end;
501345    +
501346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501347    +*** Checking missing input Interval
501348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
501349    +
501350    +IF NMISS(
501351    +   AcceptedCmpTotal ,
501352    +   Age ,
501353    +   Frq ,
501354    +   Income ,
501355    +   Kidhome ,
501356    +   Mnt ,
501357    +   MntFishProducts ,
501358    +   MntFruits ,
501359    +   MntGoldProds ,
501360    +   MntMeatProducts ,
501361    +   MntSweetProducts ,
501362    +   MntWines ,
501363    +   MonthsAsCustomer ,
501364    +   NumCatalogPurchases ,
501365    +   NumDealsPurchases ,
501366    +   NumDistPurchases ,
501367    +   NumStorePurchases ,
501368    +   NumWebPurchases ,
501369    +   NumWebVisitsMonth ,
501370    +   RFMstat ,
501371    +   RMntFrq ,
501372    +   Recency ,
501373    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
501374    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
501375    +
501376    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501377    +END;
MPRINT(EM_DIAGRAM):   END;
501378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501379    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
501380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501382    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
501383    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
501384    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
501385    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
501386    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
501387    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
501388    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
501389    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
501390    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
501391    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
501392    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
501393    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
501394    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
501395    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
501396    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
501397    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
501398    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
501399    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
501400    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
501401    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
501402    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
501403    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
501404    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
501405    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
501406    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
501407    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
501408    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
501409    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
501410    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
501411    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
501412    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
501413    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
501414    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
501415    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
501416    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
501417    +END;
MPRINT(EM_DIAGRAM):   END;
501418    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501419    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
501420    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
501421    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
501422    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
501423    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
501424    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
501425    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
501426    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
501427    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
501428    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
501429    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
501430    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
501431    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
501432    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
501433    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
501434    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
501435    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
501436    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
501437    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
501438    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
501439    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
501440    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
501441    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
501442    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
501443    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
501444    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
501445    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
501446    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
501447    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
501448    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
501449    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
501450    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
501451    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
501452    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
501453    +   ELSE S_NumCatalogPurchases
501454    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
501455    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
501456    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
501457    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
501458    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
501459    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
501460    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
501461    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
501462    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
501463    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
501464    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
501465    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
501466    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
501467    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
501468    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
501469    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
501470    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
501471    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
501472    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
501473    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
501474    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
501475    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
501476    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
501477    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
501478    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
501479    +END;
MPRINT(EM_DIAGRAM):   END;
501480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501481    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
501482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501484    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
501485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501487    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
501488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501489    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501490    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
501491    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
501492    +        S_Income  +    -1.07615700855274 * S_Kidhome
501493    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
501494    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
501495    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
501496    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
501497    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
501498    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
501499    +          +      0.3429043319369 * S_NumDealsPurchases
501500    +          +     0.71313309767469 * S_NumDistPurchases
501501    +          +     0.06017757740083 * S_NumStorePurchases
501502    +          +    -0.19817724925068 * S_NumWebPurchases
501503    +          +     1.34164122205952 * S_NumWebVisitsMonth
501504    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
501505    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
501506    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
501507    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
501508    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
501509    +        S_Income  +     -0.0027232441092 * S_Kidhome
501510    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
501511    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
501512    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
501513    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
501514    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
501515    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
501516    +          +      0.4576973746858 * S_NumDealsPurchases
501517    +          +     0.15590877272659 * S_NumDistPurchases
501518    +          +    -0.33414539713736 * S_NumStorePurchases
501519    +          +    -0.39370244666257 * S_NumWebPurchases
501520    +          +     0.52596714886704 * S_NumWebVisitsMonth
501521    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
501522    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
501523    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
501524    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
501525    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
501526    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
501527    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
501528    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
501529    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
501530    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
501531    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
501532    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
501533    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
501534    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
501535    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
501536    +        EducationGraduation  +      -0.333138438339 * EducationMaster
501537    +          +      0.4663802937397 * Marital_StatusDivorced
501538    +          +    -1.27401898796099 * Marital_StatusMarried
501539    +          +      1.3125969368079 * Marital_StatusSingle
501540    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
501541    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
501542    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
501543    +        EducationGraduation  +     0.00771527138053 * EducationMaster
501544    +          +     0.07419179522004 * Marital_StatusDivorced
501545    +          +     0.00234615813337 * Marital_StatusMarried
501546    +          +    -0.00725460458412 * Marital_StatusSingle
501547    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
501548    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
501549    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
501550    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
501551    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
501552    +END;
MPRINT(EM_DIAGRAM):   END;
501553    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501554    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
501555    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
501556    +END;
MPRINT(EM_DIAGRAM):   END;
501557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501558    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
501559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501560    +
501561    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
501562    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
501563    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501564    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
501565    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
501566    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501567    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
501568    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501569    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501570    +end;
MPRINT(EM_DIAGRAM):   end;
501571    +else do;
MPRINT(EM_DIAGRAM):   else do;
501572    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
501573    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
501574    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
501575    +   end;
MPRINT(EM_DIAGRAM):   end;
501576    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
501577    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
501578    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
501579    +   end;
MPRINT(EM_DIAGRAM):   end;
501580    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501581    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501582    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501583    +   end;
MPRINT(EM_DIAGRAM):   end;
501584    +end;
MPRINT(EM_DIAGRAM):   end;
501585    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501586    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
501587    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
501588    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
501589    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
501590    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
501591    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
501592    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
501593    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
501594    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
501595    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
501596    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
501597    +END;
MPRINT(EM_DIAGRAM):   END;
501598    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501599    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
501600    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
501601    +END;
MPRINT(EM_DIAGRAM):   END;
501602    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
501603    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
501604    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
501605    +END;
MPRINT(EM_DIAGRAM):   END;
501606    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
501607    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
501608    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
501609    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
501610    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
501611    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
501612    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
501613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501614    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
501615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501616    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
501617    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
501618    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
501619    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
501620    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
501621    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
501622    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
501623    +END;
MPRINT(EM_DIAGRAM):   END;
501624    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501625    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
501626    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501627    +drop
501628    +H11
501629    +H12
501630    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
501631    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
501632    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
501633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501634    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
501635    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501636    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
501637    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
501638    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
501639    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
501640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501641    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
501642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501643    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
501644    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
501645    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
501646    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501647    +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
501648    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501650    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
501651    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
501652    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
501653    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501654    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
501655    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
501656    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
501657    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
501658    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
501659    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
501660    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
501661    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
501662    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
501663    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
501664    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
501665    +LENGTH _WARN_ $4
501666    +      F_DepVar  $ 12
501667    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
501668    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
501669    +
501670    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
501671    +
501672    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
501673    +
501674    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
501675    +
501676    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
501677    +
501678    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
501679    +
501680    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
501681    +
501682    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
501683    +
501684    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
501685    +
501686    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
501687    +
501688    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
501689    +
501690    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
501691    +
501692    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
501693    +
501694    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
501695    +
501696    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
501697    +
501698    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
501699    +
501700    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
501701    +
501702    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
501703    +
501704    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
501705    +
501706    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
501707    +
501708    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
501709    +
501710    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
501711    +
501712    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
501713    +
501714    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
501715    +
501716    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
501717    +
501718    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
501719    +
501720    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
501721    +
501722    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
501723    +
501724    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
501725    +
501726    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
501727    +
501728    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
501729    +
501730    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
501731    +
501732    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
501733    +
501734    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
501735    +
501736    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
501737    +
501738    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
501739    +
501740    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
501741    +
501742    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
501743    +
501744    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
501745    +
501746    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
501747    +
501748    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
501749    +
501750    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
501751    +
501752    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501753    +
501754    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
501755    +
501756    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
501757    +
501758    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
501759    +
501760    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
501761    +
501762    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
501763    +
501764    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
501765    +
501766    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
501767    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
501768    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
501769    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
501770    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501771    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501772    +end;
MPRINT(EM_DIAGRAM):   end;
501773    +else do;
MPRINT(EM_DIAGRAM):   else do;
501774    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501775    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
501776    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501777    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501778    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
501779    +   end;
MPRINT(EM_DIAGRAM):   end;
501780    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501781    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
501782    +   end;
MPRINT(EM_DIAGRAM):   end;
501783    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501784    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
501785    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501786    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501787    +   end;
MPRINT(EM_DIAGRAM):   end;
501788    +end;
MPRINT(EM_DIAGRAM):   end;
501789    +
501790    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
501791    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
501792    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
501793    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
501794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501796    +end;
MPRINT(EM_DIAGRAM):   end;
501797    +else do;
MPRINT(EM_DIAGRAM):   else do;
501798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501799    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
501800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501801    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501802    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
501803    +   end;
MPRINT(EM_DIAGRAM):   end;
501804    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501805    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
501806    +   end;
MPRINT(EM_DIAGRAM):   end;
501807    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501808    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
501809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501811    +   end;
MPRINT(EM_DIAGRAM):   end;
501812    +end;
MPRINT(EM_DIAGRAM):   end;
501813    +
501814    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
501815    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
501816    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
501817    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501820    +end;
MPRINT(EM_DIAGRAM):   end;
501821    +else do;
MPRINT(EM_DIAGRAM):   else do;
501822    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501823    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
501824    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501825    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501826    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
501827    +   end;
MPRINT(EM_DIAGRAM):   end;
501828    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501829    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
501830    +   end;
MPRINT(EM_DIAGRAM):   end;
501831    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501832    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501835    +   end;
MPRINT(EM_DIAGRAM):   end;
501836    +end;
MPRINT(EM_DIAGRAM):   end;
501837    +
501838    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
501839    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
501840    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
501841    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501842    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501843    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501844    +end;
MPRINT(EM_DIAGRAM):   end;
501845    +else do;
MPRINT(EM_DIAGRAM):   else do;
501846    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501847    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
501848    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501849    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501850    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
501851    +   end;
MPRINT(EM_DIAGRAM):   end;
501852    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501853    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
501854    +   end;
MPRINT(EM_DIAGRAM):   end;
501855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501856    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501857    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501858    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501859    +   end;
MPRINT(EM_DIAGRAM):   end;
501860    +end;
MPRINT(EM_DIAGRAM):   end;
501861    +
501862    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
501863    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
501864    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
501865    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501866    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501868    +end;
MPRINT(EM_DIAGRAM):   end;
501869    +else do;
MPRINT(EM_DIAGRAM):   else do;
501870    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501871    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
501872    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501873    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501874    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
501875    +   end;
MPRINT(EM_DIAGRAM):   end;
501876    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501877    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
501878    +   end;
MPRINT(EM_DIAGRAM):   end;
501879    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501880    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501881    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501882    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501883    +   end;
MPRINT(EM_DIAGRAM):   end;
501884    +end;
MPRINT(EM_DIAGRAM):   end;
501885    +
501886    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
501887    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
501888    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
501889    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501890    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501892    +end;
MPRINT(EM_DIAGRAM):   end;
501893    +else do;
MPRINT(EM_DIAGRAM):   else do;
501894    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501895    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
501896    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501897    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501898    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
501899    +   end;
MPRINT(EM_DIAGRAM):   end;
501900    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501901    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
501902    +   end;
MPRINT(EM_DIAGRAM):   end;
501903    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501904    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501905    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501906    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501907    +   end;
MPRINT(EM_DIAGRAM):   end;
501908    +end;
MPRINT(EM_DIAGRAM):   end;
501909    +
501910    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
501911    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
501912    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
501913    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501916    +end;
MPRINT(EM_DIAGRAM):   end;
501917    +else do;
MPRINT(EM_DIAGRAM):   else do;
501918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501919    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
501920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501921    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
501922    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
501923    +   end;
MPRINT(EM_DIAGRAM):   end;
501924    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
501925    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
501926    +   end;
MPRINT(EM_DIAGRAM):   end;
501927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501928    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501931    +   end;
MPRINT(EM_DIAGRAM):   end;
501932    +end;
MPRINT(EM_DIAGRAM):   end;
501933    +
501934    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
501935    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
501936    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
501937    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
501938    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
501939    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
501940    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
501941    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
501942    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
501943    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
501944    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
501945    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
501946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501948    +end;
MPRINT(EM_DIAGRAM):   end;
501949    +else do;
MPRINT(EM_DIAGRAM):   else do;
501950    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
501951    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
501952    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501953    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
501954    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
501955    +   end;
MPRINT(EM_DIAGRAM):   end;
501956    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
501957    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
501958    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
501959    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
501960    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
501961    +   end;
MPRINT(EM_DIAGRAM):   end;
501962    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
501963    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
501964    +   end;
MPRINT(EM_DIAGRAM):   end;
501965    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
501966    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
501967    +   end;
MPRINT(EM_DIAGRAM):   end;
501968    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
501969    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
501970    +   end;
MPRINT(EM_DIAGRAM):   end;
501971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501972    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
501973    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
501974    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
501975    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
501976    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501977    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501978    +   end;
MPRINT(EM_DIAGRAM):   end;
501979    +end;
MPRINT(EM_DIAGRAM):   end;
501980    +
501981    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
501982    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
501983    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
501984    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
501985    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
501986    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
501987    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
501988    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
501989    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
501990    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
501991    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
501992    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
501993    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
501994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501996    +end;
MPRINT(EM_DIAGRAM):   end;
501997    +else do;
MPRINT(EM_DIAGRAM):   else do;
501998    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
501999    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
502000    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502001    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
502002    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
502003    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
502004    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
502005    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
502006    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502007    +         end;
MPRINT(EM_DIAGRAM):   end;
502008    +         else do;
MPRINT(EM_DIAGRAM):   else do;
502009    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
502010    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
502011    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502012    +            end;
MPRINT(EM_DIAGRAM):   end;
502013    +         end;
MPRINT(EM_DIAGRAM):   end;
502014    +      end;
MPRINT(EM_DIAGRAM):   end;
502015    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502016    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
502017    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
502018    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502019    +         end;
MPRINT(EM_DIAGRAM):   end;
502020    +      end;
MPRINT(EM_DIAGRAM):   end;
502021    +   end;
MPRINT(EM_DIAGRAM):   end;
502022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502023    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
502024    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
502025    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502026    +      end;
MPRINT(EM_DIAGRAM):   end;
502027    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502028    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
502029    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
502030    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
502031    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
502032    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
502033    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502034    +         end;
MPRINT(EM_DIAGRAM):   end;
502035    +      end;
MPRINT(EM_DIAGRAM):   end;
502036    +   end;
MPRINT(EM_DIAGRAM):   end;
502037    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
502038    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502039    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502040    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502041    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502042    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502043    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502044    +   end;
MPRINT(EM_DIAGRAM):   end;
502045    +end;
MPRINT(EM_DIAGRAM):   end;
502046    +
502047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502048    +*** Checking missing input Interval
502049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
502050    +
502051    +IF NMISS(
502052    +   AcceptedCmpTotal ,
502053    +   Age ,
502054    +   Frq ,
502055    +   Income ,
502056    +   Kidhome ,
502057    +   Mnt ,
502058    +   MntFishProducts ,
502059    +   MntFruits ,
502060    +   MntGoldProds ,
502061    +   MntMeatProducts ,
502062    +   MntSweetProducts ,
502063    +   MntWines ,
502064    +   MonthsAsCustomer ,
502065    +   NumCatalogPurchases ,
502066    +   NumDealsPurchases ,
502067    +   NumDistPurchases ,
502068    +   NumStorePurchases ,
502069    +   NumWebPurchases ,
502070    +   NumWebVisitsMonth ,
502071    +   RFMstat ,
502072    +   RMntFrq ,
502073    +   Recency ,
502074    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
502075    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
502076    +
502077    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502078    +END;
MPRINT(EM_DIAGRAM):   END;
502079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502080    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
502081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502082    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502083    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
502084    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
502085    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
502086    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
502087    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
502088    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
502089    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
502090    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
502091    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
502092    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
502093    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
502094    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
502095    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
502096    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
502097    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
502098    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
502099    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
502100    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
502101    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
502102    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
502103    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
502104    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
502105    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
502106    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
502107    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
502108    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
502109    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
502110    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
502111    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
502112    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
502113    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
502114    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
502115    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
502116    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
502117    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
502118    +END;
MPRINT(EM_DIAGRAM):   END;
502119    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502120    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
502121    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
502122    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
502123    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
502124    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
502125    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
502126    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
502127    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
502128    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
502129    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
502130    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
502131    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
502132    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
502133    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
502134    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
502135    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
502136    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
502137    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
502138    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
502139    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
502140    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
502141    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
502142    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
502143    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
502144    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
502145    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
502146    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
502147    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
502148    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
502149    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
502150    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
502151    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
502152    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
502153    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
502154    +   ELSE S_NumCatalogPurchases
502155    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
502156    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
502157    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
502158    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
502159    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
502160    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
502161    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
502162    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
502163    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
502164    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
502165    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
502166    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
502167    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
502168    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
502169    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
502170    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
502171    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
502172    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
502173    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
502174    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
502175    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
502176    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
502177    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
502178    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
502179    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
502180    +END;
MPRINT(EM_DIAGRAM):   END;
502181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502182    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
502183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502185    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
502186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502188    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
502189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502190    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502191    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
502192    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
502193    +        S_Income  +     0.51123266106809 * S_Kidhome
502194    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
502195    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
502196    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
502197    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
502198    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
502199    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
502200    +          +     1.34095732961105 * S_NumDealsPurchases
502201    +          +     0.16605991333252 * S_NumDistPurchases
502202    +          +    -0.61746267736536 * S_NumStorePurchases
502203    +          +    -0.61812800689506 * S_NumWebPurchases
502204    +          +     1.44649145055387 * S_NumWebVisitsMonth
502205    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
502206    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
502207    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
502208    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
502209    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
502210    +        S_Income  +     0.52295323651199 * S_Kidhome
502211    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
502212    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
502213    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
502214    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
502215    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
502216    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
502217    +          +    -0.72543332317832 * S_NumDealsPurchases
502218    +          +    -0.05245472565117 * S_NumDistPurchases
502219    +          +     1.00667431585298 * S_NumStorePurchases
502220    +          +     1.02836701470962 * S_NumWebPurchases
502221    +          +    -1.25666606219201 * S_NumWebVisitsMonth
502222    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
502223    +        S_RMntFrq  +     1.50910531484632 * S_Recency
502224    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
502225    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
502226    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
502227    +        S_Income  +     0.58025720116696 * S_Kidhome
502228    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
502229    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
502230    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
502231    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
502232    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
502233    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
502234    +          +     0.12670438262487 * S_NumDealsPurchases
502235    +          +    -0.46113523834333 * S_NumDistPurchases
502236    +          +     0.07074818720567 * S_NumStorePurchases
502237    +          +    -0.05066645783537 * S_NumWebPurchases
502238    +          +    -0.65729410185804 * S_NumWebVisitsMonth
502239    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
502240    +        S_RMntFrq  +      1.4337242246086 * S_Recency
502241    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
502242    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
502243    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
502244    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
502245    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
502246    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
502247    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
502248    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
502249    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
502250    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
502251    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
502252    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
502253    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
502254    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
502255    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
502256    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
502257    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
502258    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
502259    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
502260    +          +     0.12692950862511 * Marital_StatusDivorced
502261    +          +     0.10026497666167 * Marital_StatusMarried
502262    +          +    -0.19893864592813 * Marital_StatusSingle
502263    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
502264    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
502265    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
502266    +        EducationGraduation  +     0.05580498138108 * EducationMaster
502267    +          +    -0.16785192490199 * Marital_StatusDivorced
502268    +          +     0.13153695130362 * Marital_StatusMarried
502269    +          +    -0.50411544587104 * Marital_StatusSingle
502270    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
502271    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
502272    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
502273    +        EducationGraduation  +     0.21882736952662 * EducationMaster
502274    +          +    -0.62654958087044 * Marital_StatusDivorced
502275    +          +     1.86250132393341 * Marital_StatusMarried
502276    +          +    -1.37067556451928 * Marital_StatusSingle
502277    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
502278    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
502279    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
502280    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
502281    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
502282    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
502283    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
502284    +END;
MPRINT(EM_DIAGRAM):   END;
502285    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502286    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
502287    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
502288    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
502289    +END;
MPRINT(EM_DIAGRAM):   END;
502290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502291    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
502292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502293    +
502294    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
502295    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
502296    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
502297    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
502298    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
502299    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502300    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
502301    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
502302    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
502303    +end;
MPRINT(EM_DIAGRAM):   end;
502304    +else do;
MPRINT(EM_DIAGRAM):   else do;
502305    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
502306    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
502307    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
502308    +   end;
MPRINT(EM_DIAGRAM):   end;
502309    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
502310    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
502311    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
502312    +   end;
MPRINT(EM_DIAGRAM):   end;
502313    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502314    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
502315    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
502316    +   end;
MPRINT(EM_DIAGRAM):   end;
502317    +end;
MPRINT(EM_DIAGRAM):   end;
502318    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502319    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
502320    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
502321    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
502322    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
502323    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
502324    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
502325    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
502326    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
502327    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
502328    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
502329    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
502330    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
502331    +END;
MPRINT(EM_DIAGRAM):   END;
502332    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502333    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
502334    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
502335    +END;
MPRINT(EM_DIAGRAM):   END;
502336    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
502337    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
502338    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
502339    +END;
MPRINT(EM_DIAGRAM):   END;
502340    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
502341    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
502342    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
502343    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
502344    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
502345    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
502346    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
502347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502348    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
502349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502350    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
502351    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
502352    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
502353    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
502354    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
502355    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
502356    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
502357    +END;
MPRINT(EM_DIAGRAM):   END;
502358    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
502359    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
502360    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
502361    +drop
502362    +H11
502363    +H12
502364    +H13
502365    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
502366    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
502367    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
502368    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502369    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
502370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502371    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
502372    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
502373    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
502374    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
502375    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502376    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
502377    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502378    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
502379    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
502380    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
502381    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502382    +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
502383    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502384    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502385    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
502386    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
502387    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
502388    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502389    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
502390    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
502391    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
502392    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
502393    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
502394    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
502395    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
502396    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
502397    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
502398    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
502399    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
502400    +LENGTH _WARN_ $4
502401    +      F_DepVar  $ 12
502402    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
502403    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
502404    +
502405    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
502406    +
502407    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
502408    +
502409    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
502410    +
502411    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
502412    +
502413    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
502414    +
502415    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
502416    +
502417    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
502418    +
502419    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
502420    +
502421    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
502422    +
502423    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
502424    +
502425    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
502426    +
502427    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
502428    +
502429    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
502430    +
502431    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
502432    +
502433    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
502434    +
502435    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
502436    +
502437    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
502438    +
502439    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
502440    +
502441    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
502442    +
502443    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
502444    +
502445    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
502446    +
502447    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
502448    +
502449    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
502450    +
502451    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
502452    +
502453    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
502454    +
502455    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
502456    +
502457    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
502458    +
502459    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
502460    +
502461    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
502462    +
502463    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
502464    +
502465    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
502466    +
502467    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
502468    +
502469    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
502470    +
502471    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
502472    +
502473    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
502474    +
502475    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
502476    +
502477    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
502478    +
502479    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
502480    +
502481    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
502482    +
502483    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
502484    +
502485    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
502486    +
502487    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
502488    +
502489    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
502490    +
502491    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
502492    +
502493    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
502494    +
502495    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
502496    +
502497    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
502498    +
502499    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
502500    +
502501    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
502502    +
502503    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
502504    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
502505    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
502506    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
502507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502509    +end;
MPRINT(EM_DIAGRAM):   end;
502510    +else do;
MPRINT(EM_DIAGRAM):   else do;
502511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502512    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
502513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502515    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
502516    +   end;
MPRINT(EM_DIAGRAM):   end;
502517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502518    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
502519    +   end;
MPRINT(EM_DIAGRAM):   end;
502520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502521    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
502522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502524    +   end;
MPRINT(EM_DIAGRAM):   end;
502525    +end;
MPRINT(EM_DIAGRAM):   end;
502526    +
502527    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
502528    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
502529    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
502530    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
502531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502533    +end;
MPRINT(EM_DIAGRAM):   end;
502534    +else do;
MPRINT(EM_DIAGRAM):   else do;
502535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502536    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
502537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502538    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502539    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
502540    +   end;
MPRINT(EM_DIAGRAM):   end;
502541    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502542    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
502543    +   end;
MPRINT(EM_DIAGRAM):   end;
502544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502545    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
502546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502548    +   end;
MPRINT(EM_DIAGRAM):   end;
502549    +end;
MPRINT(EM_DIAGRAM):   end;
502550    +
502551    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
502552    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
502553    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
502554    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
502555    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502557    +end;
MPRINT(EM_DIAGRAM):   end;
502558    +else do;
MPRINT(EM_DIAGRAM):   else do;
502559    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502560    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
502561    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502562    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502563    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
502564    +   end;
MPRINT(EM_DIAGRAM):   end;
502565    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502566    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
502567    +   end;
MPRINT(EM_DIAGRAM):   end;
502568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502569    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
502570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502572    +   end;
MPRINT(EM_DIAGRAM):   end;
502573    +end;
MPRINT(EM_DIAGRAM):   end;
502574    +
502575    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
502576    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
502577    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
502578    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
502579    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502580    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502581    +end;
MPRINT(EM_DIAGRAM):   end;
502582    +else do;
MPRINT(EM_DIAGRAM):   else do;
502583    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502584    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
502585    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502586    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502587    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
502588    +   end;
MPRINT(EM_DIAGRAM):   end;
502589    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502590    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
502591    +   end;
MPRINT(EM_DIAGRAM):   end;
502592    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502593    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
502594    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502595    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502596    +   end;
MPRINT(EM_DIAGRAM):   end;
502597    +end;
MPRINT(EM_DIAGRAM):   end;
502598    +
502599    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
502600    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
502601    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
502602    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
502603    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502605    +end;
MPRINT(EM_DIAGRAM):   end;
502606    +else do;
MPRINT(EM_DIAGRAM):   else do;
502607    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502608    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
502609    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502610    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502611    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
502612    +   end;
MPRINT(EM_DIAGRAM):   end;
502613    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502614    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
502615    +   end;
MPRINT(EM_DIAGRAM):   end;
502616    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502617    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
502618    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502619    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502620    +   end;
MPRINT(EM_DIAGRAM):   end;
502621    +end;
MPRINT(EM_DIAGRAM):   end;
502622    +
502623    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
502624    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
502625    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
The SAS System
 
502626    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
502627    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502628    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502629    +end;
MPRINT(EM_DIAGRAM):   end;
502630    +else do;
MPRINT(EM_DIAGRAM):   else do;
502631    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502632    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
502633    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502634    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502635    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
502636    +   end;
MPRINT(EM_DIAGRAM):   end;
502637    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502638    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
502639    +   end;
MPRINT(EM_DIAGRAM):   end;
502640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502641    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
502642    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502643    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502644    +   end;
MPRINT(EM_DIAGRAM):   end;
502645    +end;
MPRINT(EM_DIAGRAM):   end;
502646    +
502647    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
502648    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
502649    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
502650    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
502651    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502652    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502653    +end;
MPRINT(EM_DIAGRAM):   end;
502654    +else do;
MPRINT(EM_DIAGRAM):   else do;
502655    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502656    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
502657    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502658    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
502659    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
502660    +   end;
MPRINT(EM_DIAGRAM):   end;
502661    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
502662    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
502663    +   end;
MPRINT(EM_DIAGRAM):   end;
502664    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502665    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
502666    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502667    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502668    +   end;
MPRINT(EM_DIAGRAM):   end;
502669    +end;
MPRINT(EM_DIAGRAM):   end;
502670    +
502671    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
502672    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
502673    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
502674    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
502675    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
502676    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
502677    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
502678    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
502679    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
502680    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
502681    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
502682    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
502683    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502684    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502685    +end;
MPRINT(EM_DIAGRAM):   end;
502686    +else do;
MPRINT(EM_DIAGRAM):   else do;
502687    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
502688    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
502689    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502690    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
502691    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
502692    +   end;
MPRINT(EM_DIAGRAM):   end;
502693    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
502694    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
502695    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
502696    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
502697    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
502698    +   end;
MPRINT(EM_DIAGRAM):   end;
502699    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
502700    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
502701    +   end;
MPRINT(EM_DIAGRAM):   end;
502702    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
502703    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
502704    +   end;
MPRINT(EM_DIAGRAM):   end;
502705    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
502706    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
502707    +   end;
MPRINT(EM_DIAGRAM):   end;
502708    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502709    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
502710    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
502711    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
502712    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
502713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502715    +   end;
MPRINT(EM_DIAGRAM):   end;
502716    +end;
MPRINT(EM_DIAGRAM):   end;
502717    +
502718    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
502719    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
502720    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
502721    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
502722    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
502723    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
502724    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
502725    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
502726    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
502727    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502728    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502729    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502730    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502733    +end;
MPRINT(EM_DIAGRAM):   end;
502734    +else do;
MPRINT(EM_DIAGRAM):   else do;
502735    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
502736    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
502737    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502738    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
502739    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
502740    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
502741    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
502742    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
502743    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502744    +         end;
MPRINT(EM_DIAGRAM):   end;
502745    +         else do;
MPRINT(EM_DIAGRAM):   else do;
502746    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
502747    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
502748    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502749    +            end;
MPRINT(EM_DIAGRAM):   end;
502750    +         end;
MPRINT(EM_DIAGRAM):   end;
502751    +      end;
MPRINT(EM_DIAGRAM):   end;
502752    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502753    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
502754    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
502755    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502756    +         end;
MPRINT(EM_DIAGRAM):   end;
502757    +      end;
MPRINT(EM_DIAGRAM):   end;
502758    +   end;
MPRINT(EM_DIAGRAM):   end;
502759    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502760    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
502761    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
502762    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502763    +      end;
MPRINT(EM_DIAGRAM):   end;
502764    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502765    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
502766    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
502767    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
502768    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
502769    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
502770    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502771    +         end;
MPRINT(EM_DIAGRAM):   end;
502772    +      end;
MPRINT(EM_DIAGRAM):   end;
502773    +   end;
MPRINT(EM_DIAGRAM):   end;
502774    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
502775    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502776    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502777    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502778    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502779    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502780    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502781    +   end;
MPRINT(EM_DIAGRAM):   end;
502782    +end;
MPRINT(EM_DIAGRAM):   end;
502783    +
502784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502785    +*** Checking missing input Interval
502786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
502787    +
502788    +IF NMISS(
502789    +   AcceptedCmpTotal ,
502790    +   Age ,
502791    +   Frq ,
502792    +   Income ,
502793    +   Kidhome ,
502794    +   Mnt ,
502795    +   MntFishProducts ,
502796    +   MntFruits ,
502797    +   MntGoldProds ,
502798    +   MntMeatProducts ,
502799    +   MntSweetProducts ,
502800    +   MntWines ,
502801    +   MonthsAsCustomer ,
502802    +   NumCatalogPurchases ,
502803    +   NumDealsPurchases ,
502804    +   NumDistPurchases ,
502805    +   NumStorePurchases ,
502806    +   NumWebPurchases ,
502807    +   NumWebVisitsMonth ,
502808    +   RFMstat ,
502809    +   RMntFrq ,
502810    +   Recency ,
502811    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
502812    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
502813    +
502814    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502815    +END;
MPRINT(EM_DIAGRAM):   END;
502816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502817    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
502818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502820    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
502821    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
502822    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
502823    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
502824    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
502825    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
502826    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
502827    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
502828    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
502829    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
502830    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
502831    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
502832    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
502833    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
502834    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
502835    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
502836    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
502837    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
502838    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
502839    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
502840    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
502841    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
502842    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
502843    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
502844    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
502845    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
502846    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
502847    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
502848    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
502849    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
502850    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
502851    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
502852    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
502853    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
502854    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
502855    +END;
MPRINT(EM_DIAGRAM):   END;
502856    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502857    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
502858    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
502859    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
502860    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
502861    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
502862    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
502863    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
502864    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
502865    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
502866    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
502867    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
502868    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
502869    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
502870    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
502871    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
502872    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
502873    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
502874    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
502875    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
502876    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
502877    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
502878    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
502879    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
502880    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
502881    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
502882    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
502883    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
502884    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
502885    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
502886    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
502887    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
502888    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
502889    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
502890    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
502891    +   ELSE S_NumCatalogPurchases
502892    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
502893    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
502894    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
502895    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
502896    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
502897    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
502898    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
502899    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
502900    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
502901    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
502902    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
502903    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
502904    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
502905    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
502906    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
502907    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
502908    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
502909    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
502910    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
502911    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
502912    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
502913    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
502914    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
502915    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
502916    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
502917    +END;
MPRINT(EM_DIAGRAM):   END;
502918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502919    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
502920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502922    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
502923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502925    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
502926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502927    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502928    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
502929    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
502930    +        S_Income  +    -0.27053363011695 * S_Kidhome
502931    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
502932    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
502933    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
502934    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
502935    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
502936    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
502937    +          +    -1.35624485206227 * S_NumDealsPurchases
502938    +          +    -0.54646115734684 * S_NumDistPurchases
502939    +          +     1.29794225108321 * S_NumStorePurchases
502940    +          +      1.8453064081809 * S_NumWebPurchases
502941    +          +    -0.92747144824026 * S_NumWebVisitsMonth
502942    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
502943    +        S_RMntFrq  +     0.73207333681971 * S_Recency
502944    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome +
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 *
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts +
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 *
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 *
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 *
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 *
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq +
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
502945    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
502946    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
502947    +        S_Income  +    -0.79821220724157 * S_Kidhome
502948    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
502949    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
502950    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
502951    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
502952    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
502953    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
502954    +          +     0.72513216556859 * S_NumDealsPurchases
502955    +          +    -0.15566774650584 * S_NumDistPurchases
502956    +          +     -0.8847675798982 * S_NumStorePurchases
502957    +          +    -0.79405200318252 * S_NumWebPurchases
502958    +          +     1.74003779802254 * S_NumWebVisitsMonth
502959    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
502960    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
502961    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome +
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 *
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts +
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 *
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 *
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 *
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 *
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq +
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
502962    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
502963    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
502964    +        S_Income  +    -0.58596240450544 * S_Kidhome
502965    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
502966    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
502967    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
502968    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
502969    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
502970    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
502971    +          +     0.17466385502192 * S_NumDealsPurchases
502972    +          +    -0.06219545947203 * S_NumDistPurchases
502973    +          +     0.16637546838853 * S_NumStorePurchases
502974    +          +    -0.06908729397635 * S_NumWebPurchases
502975    +          +     1.44269772444244 * S_NumWebVisitsMonth
502976    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
502977    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
502978    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age +
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome +
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 *
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts +
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 *
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 *
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 *
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 *
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq +
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
502979    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
502980    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
502981    +        S_Income  +    -0.42454238091412 * S_Kidhome
502982    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
502983    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
502984    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
502985    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
502986    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
502987    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
502988    +          +     0.77329078721398 * S_NumDealsPurchases
502989    +          +     0.31693324305765 * S_NumDistPurchases
502990    +          +    -1.08524196373091 * S_NumStorePurchases
502991    +          +    -0.96945384922979 * S_NumWebPurchases
502992    +          +     1.24659288571587 * S_NumWebVisitsMonth
502993    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
502994    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
502995    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age +
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome +
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 *
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts +
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 *
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 *
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 *
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 *
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq +
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
502996    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
502997    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
502998    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
502999    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
503000    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 *
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 +
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 *
HigherEducationBinary0 ;
503001    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
503002    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
503003    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
503004    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
503005    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 *
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 +
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 *
HigherEducationBinary0 ;
503006    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
503007    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
503008    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
503009    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
503010    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 *
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 +
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 *
HigherEducationBinary0 ;
503011    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
503012    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
503013    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
503014    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
503015    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 *
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 +
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 *
HigherEducationBinary0 ;
503016    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
503017    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
503018    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
503019    +          +     0.36788499721115 * Marital_StatusDivorced
503020    +          +    -0.16988636986433 * Marital_StatusMarried
503021    +          +    -0.24560973256761 * Marital_StatusSingle
503022    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 *
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried +
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
503023    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
503024    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
503025    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
503026    +          +     0.24497797058028 * Marital_StatusDivorced
503027    +          +    -1.44410245434424 * Marital_StatusMarried
503028    +          +     1.47441310087392 * Marital_StatusSingle
503029    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 *
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried +
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
503030    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
503031    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
503032    +        EducationGraduation  +     0.04653963359475 * EducationMaster
503033    +          +     0.15823225296452 * Marital_StatusDivorced
503034    +          +    -0.39129434667884 * Marital_StatusMarried
503035    +          +     0.84414069966504 * Marital_StatusSingle
503036    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 *
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried +
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
503037    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
503038    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
503039    +        EducationGraduation  +     0.40030852414737 * EducationMaster
503040    +          +     1.22039169814542 * Marital_StatusDivorced
503041    +          +     0.91592976063128 * Marital_StatusMarried
503042    +          +    -1.51267332883308 * Marital_StatusSingle
503043    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 *
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried +
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
503044    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
503045    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
503046    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
503047    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
503048    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
503049    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
503050    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
503051    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
503052    +END;
MPRINT(EM_DIAGRAM):   END;
503053    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503054    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
503055    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
503056    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
503057    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
503058    +END;
MPRINT(EM_DIAGRAM):   END;
503059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503060    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
503061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503062    +
503063    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
503064    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
503065    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
503066    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
503067    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
503068    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503069    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
503070    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
503071    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
503072    +end;
MPRINT(EM_DIAGRAM):   end;
503073    +else do;
MPRINT(EM_DIAGRAM):   else do;
503074    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
503075    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
503076    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
503077    +   end;
MPRINT(EM_DIAGRAM):   end;
503078    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
503079    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
503080    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
503081    +   end;
MPRINT(EM_DIAGRAM):   end;
503082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503083    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
503084    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
503085    +   end;
MPRINT(EM_DIAGRAM):   end;
503086    +end;
MPRINT(EM_DIAGRAM):   end;
503087    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503088    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
503089    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 +
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
503090    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
503091    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
503092    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
503093    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
503094    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
503095    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
503096    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
503097    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
503098    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
503099    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
503100    +END;
MPRINT(EM_DIAGRAM):   END;
503101    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503102    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
503103    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
503104    +END;
MPRINT(EM_DIAGRAM):   END;
503105    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
503106    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
503107    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
503108    +END;
MPRINT(EM_DIAGRAM):   END;
503109    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
503110    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
503111    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
503112    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
503113    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
503114    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
503115    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
503116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503117    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
503118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503119    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
503120    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
503121    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
503122    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
503123    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
503124    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
503125    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
503126    +END;
MPRINT(EM_DIAGRAM):   END;
503127    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
503128    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
503129    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
503130    +drop
503131    +H11
503132    +H12
503133    +H13
503134    +H14
503135    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
503136    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
503137    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
503138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503139    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
503140    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503141    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
503142    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
503143    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
503144    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
503145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503146    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
503147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503148    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
503149    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
503150    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
503151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503152    +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
503153    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503155    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
503156    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
503157    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
503158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503159    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
503160    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
503161    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
503162    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
503163    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
503164    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
503165    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
503166    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
503167    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
503168    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
503169    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
503170    +LENGTH _WARN_ $4
503171    +      F_DepVar  $ 12
503172    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
503173    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
503174    +
503175    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
503176    +
503177    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
503178    +
503179    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
503180    +
503181    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
503182    +
503183    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
503184    +
503185    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
503186    +
503187    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
503188    +
503189    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
503190    +
503191    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
503192    +
503193    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
503194    +
503195    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
503196    +
503197    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
503198    +
503199    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
503200    +
503201    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
503202    +
503203    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
503204    +
503205    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
503206    +
503207    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
503208    +
503209    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
503210    +
503211    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
503212    +
503213    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
503214    +
503215    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
503216    +
503217    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
503218    +
503219    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
503220    +
503221    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
503222    +
503223    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
503224    +
503225    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
503226    +
503227    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
503228    +
503229    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
503230    +
503231    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
503232    +
503233    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
503234    +
503235    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
503236    +
503237    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
503238    +
503239    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
503240    +
503241    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
503242    +
503243    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
503244    +
503245    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
503246    +
503247    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
503248    +
503249    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
503250    +
503251    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
503252    +
503253    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
503254    +
503255    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
503256    +
503257    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
503258    +
503259    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
503260    +
503261    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
503262    +
503263    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
503264    +
503265    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
503266    +
503267    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
503268    +
503269    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
503270    +
503271    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
503272    +
503273    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
503274    +
503275    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
503276    +
503277    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
503278    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
503279    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
503280    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
503281    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503282    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503283    +end;
MPRINT(EM_DIAGRAM):   end;
503284    +else do;
MPRINT(EM_DIAGRAM):   else do;
503285    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503286    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
503287    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503288    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503289    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
503290    +   end;
MPRINT(EM_DIAGRAM):   end;
503291    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503292    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
503293    +   end;
MPRINT(EM_DIAGRAM):   end;
503294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503295    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
503296    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503297    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503298    +   end;
MPRINT(EM_DIAGRAM):   end;
503299    +end;
MPRINT(EM_DIAGRAM):   end;
503300    +
503301    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
503302    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
503303    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
503304    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
503305    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503306    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503307    +end;
MPRINT(EM_DIAGRAM):   end;
503308    +else do;
MPRINT(EM_DIAGRAM):   else do;
503309    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503310    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
503311    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503312    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503313    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
503314    +   end;
MPRINT(EM_DIAGRAM):   end;
503315    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503316    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
503317    +   end;
MPRINT(EM_DIAGRAM):   end;
503318    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503319    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
503320    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503321    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503322    +   end;
MPRINT(EM_DIAGRAM):   end;
503323    +end;
MPRINT(EM_DIAGRAM):   end;
503324    +
503325    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
503326    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
503327    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
503328    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
503329    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503331    +end;
MPRINT(EM_DIAGRAM):   end;
503332    +else do;
MPRINT(EM_DIAGRAM):   else do;
503333    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503334    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
503335    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503336    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503337    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
503338    +   end;
MPRINT(EM_DIAGRAM):   end;
503339    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503340    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
503341    +   end;
MPRINT(EM_DIAGRAM):   end;
503342    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503343    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
503344    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503345    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503346    +   end;
MPRINT(EM_DIAGRAM):   end;
503347    +end;
MPRINT(EM_DIAGRAM):   end;
503348    +
503349    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
503350    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
503351    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
503352    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
503353    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503354    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503355    +end;
MPRINT(EM_DIAGRAM):   end;
503356    +else do;
MPRINT(EM_DIAGRAM):   else do;
503357    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503358    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
503359    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503360    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503361    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
503362    +   end;
MPRINT(EM_DIAGRAM):   end;
503363    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503364    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
503365    +   end;
MPRINT(EM_DIAGRAM):   end;
503366    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503367    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
503368    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503369    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503370    +   end;
MPRINT(EM_DIAGRAM):   end;
503371    +end;
MPRINT(EM_DIAGRAM):   end;
503372    +
503373    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
503374    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
503375    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
503376    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
503377    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503378    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503379    +end;
MPRINT(EM_DIAGRAM):   end;
503380    +else do;
MPRINT(EM_DIAGRAM):   else do;
503381    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503382    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
503383    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503384    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503385    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
503386    +   end;
MPRINT(EM_DIAGRAM):   end;
503387    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503388    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
503389    +   end;
MPRINT(EM_DIAGRAM):   end;
503390    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503391    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
503392    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503393    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503394    +   end;
MPRINT(EM_DIAGRAM):   end;
503395    +end;
MPRINT(EM_DIAGRAM):   end;
503396    +
503397    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
503398    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
503399    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
503400    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
503401    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503402    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503403    +end;
MPRINT(EM_DIAGRAM):   end;
503404    +else do;
MPRINT(EM_DIAGRAM):   else do;
503405    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503406    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
503407    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503408    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503409    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
503410    +   end;
MPRINT(EM_DIAGRAM):   end;
503411    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503412    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
503413    +   end;
MPRINT(EM_DIAGRAM):   end;
503414    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503415    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
503416    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503417    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503418    +   end;
MPRINT(EM_DIAGRAM):   end;
503419    +end;
MPRINT(EM_DIAGRAM):   end;
503420    +
503421    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
503422    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
503423    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
503424    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
503425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503427    +end;
MPRINT(EM_DIAGRAM):   end;
503428    +else do;
MPRINT(EM_DIAGRAM):   else do;
503429    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503430    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
503431    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503432    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
503433    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
503434    +   end;
MPRINT(EM_DIAGRAM):   end;
503435    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
503436    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
503437    +   end;
MPRINT(EM_DIAGRAM):   end;
503438    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503439    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
503440    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503441    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503442    +   end;
MPRINT(EM_DIAGRAM):   end;
503443    +end;
MPRINT(EM_DIAGRAM):   end;
503444    +
503445    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
503446    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
503447    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
503448    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
503449    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
503450    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
503451    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
503452    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
503453    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
503454    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
503455    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
503456    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
503457    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503459    +end;
MPRINT(EM_DIAGRAM):   end;
503460    +else do;
MPRINT(EM_DIAGRAM):   else do;
503461    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
503462    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
503463    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503464    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
503465    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
503466    +   end;
MPRINT(EM_DIAGRAM):   end;
503467    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
503468    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
503469    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
503470    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
503471    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
503472    +   end;
MPRINT(EM_DIAGRAM):   end;
503473    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
503474    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
503475    +   end;
MPRINT(EM_DIAGRAM):   end;
503476    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
503477    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
503478    +   end;
MPRINT(EM_DIAGRAM):   end;
503479    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
503480    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
503481    +   end;
MPRINT(EM_DIAGRAM):   end;
503482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503483    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
503484    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
503485    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
503486    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
503487    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503488    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503489    +   end;
MPRINT(EM_DIAGRAM):   end;
503490    +end;
MPRINT(EM_DIAGRAM):   end;
503491    +
503492    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
503493    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
503494    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
503495    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
503496    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
503497    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
503498    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
503499    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
503500    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
503501    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
503502    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
503503    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
503504    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
503505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503507    +end;
MPRINT(EM_DIAGRAM):   end;
503508    +else do;
MPRINT(EM_DIAGRAM):   else do;
503509    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
503510    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
503511    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503512    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
503513    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
503514    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
503515    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
503516    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
503517    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
503518    +         end;
MPRINT(EM_DIAGRAM):   end;
503519    +         else do;
MPRINT(EM_DIAGRAM):   else do;
503520    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
503521    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
503522    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
503523    +            end;
MPRINT(EM_DIAGRAM):   end;
503524    +         end;
MPRINT(EM_DIAGRAM):   end;
503525    +      end;
MPRINT(EM_DIAGRAM):   end;
503526    +      else do;
MPRINT(EM_DIAGRAM):   else do;
503527    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
503528    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
503529    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
503530    +         end;
MPRINT(EM_DIAGRAM):   end;
503531    +      end;
MPRINT(EM_DIAGRAM):   end;
503532    +   end;
MPRINT(EM_DIAGRAM):   end;
503533    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503534    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
503535    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
503536    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
503537    +      end;
MPRINT(EM_DIAGRAM):   end;
503538    +      else do;
MPRINT(EM_DIAGRAM):   else do;
503539    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
503540    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
503541    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
503542    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
503543    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
503544    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
503545    +         end;
MPRINT(EM_DIAGRAM):   end;
503546    +      end;
MPRINT(EM_DIAGRAM):   end;
503547    +   end;
MPRINT(EM_DIAGRAM):   end;
503548    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
503549    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
503550    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
503551    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
503552    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
503553    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503554    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503555    +   end;
MPRINT(EM_DIAGRAM):   end;
503556    +end;
MPRINT(EM_DIAGRAM):   end;
503557    +
503558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503559    +*** Checking missing input Interval
503560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
503561    +
503562    +IF NMISS(
503563    +   AcceptedCmpTotal ,
503564    +   Age ,
503565    +   Frq ,
503566    +   Income ,
503567    +   Kidhome ,
503568    +   Mnt ,
503569    +   MntFishProducts ,
503570    +   MntFruits ,
503571    +   MntGoldProds ,
503572    +   MntMeatProducts ,
503573    +   MntSweetProducts ,
503574    +   MntWines ,
503575    +   MonthsAsCustomer ,
503576    +   NumCatalogPurchases ,
503577    +   NumDealsPurchases ,
503578    +   NumDistPurchases ,
503579    +   NumStorePurchases ,
503580    +   NumWebPurchases ,
503581    +   NumWebVisitsMonth ,
503582    +   RFMstat ,
503583    +   RMntFrq ,
503584    +   Recency ,
503585    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
503586    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
503587    +
503588    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503589    +END;
MPRINT(EM_DIAGRAM):   END;
503590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503591    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
503592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503593    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503594    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
503595    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
503596    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
503597    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
503598    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
503599    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
503600    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
503601    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
503602    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
503603    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
503604    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
503605    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
503606    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
503607    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
503608    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
503609    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
503610    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
503611    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
503612    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
503613    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
503614    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
503615    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
503616    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
503617    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
503618    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
503619    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
503620    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
503621    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
503622    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
503623    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
503624    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
503625    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
503626    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
503627    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
503628    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
503629    +END;
MPRINT(EM_DIAGRAM):   END;
503630    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503631    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
503632    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
503633    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
503634    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
503635    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
503636    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
503637    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
503638    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
503639    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
503640    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
503641    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
503642    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
503643    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
503644    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
503645    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
503646    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
503647    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
503648    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
503649    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
503650    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
503651    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
503652    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
503653    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
503654    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
503655    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
503656    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
503657    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
503658    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
503659    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
503660    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
503661    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
503662    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
503663    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
503664    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
503665    +   ELSE S_NumCatalogPurchases
503666    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
503667    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
503668    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
503669    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
503670    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
503671    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
503672    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
503673    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
503674    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
503675    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
503676    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
503677    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
503678    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
503679    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
503680    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
503681    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
503682    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
503683    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
503684    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
503685    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
503686    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
503687    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
503688    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
503689    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
503690    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
503691    +END;
MPRINT(EM_DIAGRAM):   END;
503692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503693    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
503694    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503696    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
503697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503699    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
503700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503701    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503702    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
503703    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
503704    +        S_Income  +    -0.14142658616971 * S_Kidhome
503705    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
503706    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
503707    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
503708    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
503709    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
503710    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
503711    +          +     0.96837841774168 * S_NumDealsPurchases
503712    +          +      0.2846105381881 * S_NumDistPurchases
503713    +          +    -0.69514041792943 * S_NumStorePurchases
503714    +          +    -0.96425407351749 * S_NumWebPurchases
503715    +          +     0.79545449599683 * S_NumWebVisitsMonth
503716    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
503717    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
503718    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
503719    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
503720    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
503721    +        S_Income  +    -0.55432195959203 * S_Kidhome
503722    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
503723    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
503724    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
503725    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
503726    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
503727    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
503728    +          +      0.2190184330724 * S_NumDealsPurchases
503729    +          +    -0.01682909442896 * S_NumDistPurchases
503730    +          +    -0.70244951048552 * S_NumStorePurchases
503731    +          +     -0.3057457659316 * S_NumWebPurchases
503732    +          +     0.95928538762715 * S_NumWebVisitsMonth
503733    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
503734    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
503735    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
503736    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
503737    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
503738    +        S_Income  +    -0.06354861159882 * S_Kidhome
503739    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
503740    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
503741    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
503742    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
503743    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
503744    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
503745    +          +    -0.21394230159696 * S_NumDealsPurchases
503746    +          +    -0.23833771124663 * S_NumDistPurchases
503747    +          +     0.45832031017813 * S_NumStorePurchases
503748    +          +    -0.30226952040179 * S_NumWebPurchases
503749    +          +    -0.29796387184481 * S_NumWebVisitsMonth
503750    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
503751    +        S_RMntFrq  +     0.87067423045258 * S_Recency
503752    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
503753    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
503754    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
503755    +        S_Income  +    -0.04839586846715 * S_Kidhome
503756    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
503757    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
503758    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
503759    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
503760    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
503761    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
503762    +          +    -0.43749647771198 * S_NumDealsPurchases
503763    +          +     0.21263473847472 * S_NumDistPurchases
503764    +          +     0.26102168039141 * S_NumStorePurchases
503765    +          +     0.54921725943657 * S_NumWebPurchases
503766    +          +    -0.75685843498122 * S_NumWebVisitsMonth
503767    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
503768    +        S_RMntFrq  +     0.80536256822347 * S_Recency
503769    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
503770    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
503771    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
503772    +        S_Income  +     0.71499527198653 * S_Kidhome
503773    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
503774    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
503775    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
503776    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
503777    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
503778    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
503779    +          +     0.09436067776126 * S_NumDealsPurchases
503780    +          +    -0.02824201859641 * S_NumDistPurchases
503781    +          +    -0.06770433780564 * S_NumStorePurchases
503782    +          +    -0.07177620319715 * S_NumWebPurchases
503783    +          +    -0.75589979685266 * S_NumWebVisitsMonth
503784    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
503785    +        S_RMntFrq  +     0.94408788011429 * S_Recency
503786    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
503787    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
503788    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
503789    +        S_Income  +    -0.63474522042341 * S_Kidhome
503790    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
503791    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
503792    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
503793    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
503794    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
503795    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
503796    +          +    -0.51154511343396 * S_NumDealsPurchases
503797    +          +    -0.52422915823572 * S_NumDistPurchases
503798    +          +     0.30305498422357 * S_NumStorePurchases
503799    +          +     0.12197321559338 * S_NumWebPurchases
503800    +          +    -0.10520335422769 * S_NumWebVisitsMonth
503801    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
503802    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
503803    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
503804    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
503805    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
503806    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
503807    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
503808    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
503809    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
503810    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
503811    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
503812    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
503813    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
503814    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
503815    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
503816    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
503817    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
503818    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
503819    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
503820    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
503821    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
503822    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
503823    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
503824    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
503825    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
503826    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
503827    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
503828    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
503829    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
503830    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
503831    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
503832    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
503833    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
503834    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
503835    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
503836    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
503837    +          +     0.10234616400375 * Marital_StatusDivorced
503838    +          +     0.27961650739075 * Marital_StatusMarried
503839    +          +    -0.40239488723767 * Marital_StatusSingle
503840    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
503841    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
503842    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
503843    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
503844    +          +     0.46385792428023 * Marital_StatusDivorced
503845    +          +    -0.62344590646391 * Marital_StatusMarried
503846    +          +     0.61767209252062 * Marital_StatusSingle
503847    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
503848    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
503849    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
503850    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
503851    +          +    -0.07839612590836 * Marital_StatusDivorced
503852    +          +     0.35316864062221 * Marital_StatusMarried
503853    +          +    -0.10730136429834 * Marital_StatusSingle
503854    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
503855    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
503856    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
503857    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
503858    +          +    -0.09942175269886 * Marital_StatusDivorced
503859    +          +     0.24385460865335 * Marital_StatusMarried
503860    +          +    -0.33658955096296 * Marital_StatusSingle
503861    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
503862    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
503863    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
503864    +        EducationGraduation  +     0.37352174719748 * EducationMaster
503865    +          +    -0.08047852561096 * Marital_StatusDivorced
503866    +          +     1.16485862694561 * Marital_StatusMarried
503867    +          +    -0.94140251178566 * Marital_StatusSingle
503868    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
503869    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
503870    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
503871    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
503872    +          +    -0.16621963893391 * Marital_StatusDivorced
503873    +          +    -0.44542186297324 * Marital_StatusMarried
503874    +          +     0.42176133228308 * Marital_StatusSingle
503875    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
503876    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
503877    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
503878    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
503879    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
503880    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
503881    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
503882    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
503883    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
503884    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
503885    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
503886    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
503887    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
503888    +END;
MPRINT(EM_DIAGRAM):   END;
503889    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503890    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
503891    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
503892    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
503893    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
503894    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
503895    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
503896    +END;
MPRINT(EM_DIAGRAM):   END;
503897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503898    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
503899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503900    +
503901    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
503902    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
503903    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
503904    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
503905    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
503906    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503907    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
503908    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
503909    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
503910    +end;
MPRINT(EM_DIAGRAM):   end;
503911    +else do;
MPRINT(EM_DIAGRAM):   else do;
503912    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
503913    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
503914    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
503915    +   end;
MPRINT(EM_DIAGRAM):   end;
503916    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
503917    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
503918    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
503919    +   end;
MPRINT(EM_DIAGRAM):   end;
503920    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503921    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
503922    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
503923    +   end;
MPRINT(EM_DIAGRAM):   end;
503924    +end;
MPRINT(EM_DIAGRAM):   end;
503925    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503926    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
503927    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
503928    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
503929    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
503930    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
503931    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
503932    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
503933    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
503934    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
503935    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
503936    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
503937    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
503938    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
503939    +END;
MPRINT(EM_DIAGRAM):   END;
503940    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503941    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
503942    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
503943    +END;
MPRINT(EM_DIAGRAM):   END;
503944    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
503945    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
503946    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
503947    +END;
MPRINT(EM_DIAGRAM):   END;
503948    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
503949    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
503950    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
503951    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
503952    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
503953    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
503954    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
503955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503956    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
503957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503958    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
503959    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
503960    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
503961    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
503962    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
503963    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
503964    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
503965    +END;
MPRINT(EM_DIAGRAM):   END;
503966    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
503967    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
503968    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
503969    +drop
503970    +H11
503971    +H12
503972    +H13
503973    +H14
503974    +H15
503975    +H16
503976    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
503977    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
503978    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
503979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503980    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
503981    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503982    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
503983    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
503984    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
503985    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
503986    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503987    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
503988    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503989    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
503990    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
503991    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
503992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503993    +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
503994    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503995    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503996    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
503997    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
503998    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
503999    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504000    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
504001    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
504002    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
504003    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
504004    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
504005    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
504006    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
504007    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
504008    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
504009    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
504010    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
504011    +LENGTH _WARN_ $4
504012    +      F_DepVar  $ 12
504013    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
504014    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
504015    +
504016    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
504017    +
504018    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
504019    +
504020    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
504021    +
504022    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
504023    +
504024    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
504025    +
504026    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
504027    +
504028    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
504029    +
504030    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
504031    +
504032    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
504033    +
504034    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
504035    +
504036    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
504037    +
504038    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
504039    +
504040    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
504041    +
504042    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
504043    +
504044    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
504045    +
504046    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
504047    +
504048    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
504049    +
504050    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
504051    +
504052    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
504053    +
504054    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
504055    +
504056    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
504057    +
504058    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
504059    +
504060    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
504061    +
504062    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
504063    +
504064    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
504065    +
504066    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
504067    +
504068    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
504069    +
504070    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
504071    +
504072    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
504073    +
504074    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
504075    +
504076    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
504077    +
504078    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
504079    +
504080    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
504081    +
504082    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
504083    +
504084    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
504085    +
504086    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
504087    +
504088    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
504089    +
504090    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
504091    +
504092    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
504093    +
504094    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
504095    +
504096    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
504097    +
504098    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
504099    +
504100    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
504101    +
504102    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
504103    +
504104    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
504105    +
504106    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
504107    +
504108    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
504109    +
504110    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
504111    +
504112    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
504113    +
504114    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
504115    +
504116    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
504117    +
504118    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
504119    +
504120    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
504121    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
504122    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
504123    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
504124    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504125    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504126    +end;
MPRINT(EM_DIAGRAM):   end;
504127    +else do;
MPRINT(EM_DIAGRAM):   else do;
504128    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504129    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
504130    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504131    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504132    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
504133    +   end;
MPRINT(EM_DIAGRAM):   end;
504134    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504135    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
504136    +   end;
MPRINT(EM_DIAGRAM):   end;
504137    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504138    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
504139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504141    +   end;
MPRINT(EM_DIAGRAM):   end;
504142    +end;
MPRINT(EM_DIAGRAM):   end;
504143    +
504144    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
504145    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
504146    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
504147    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
504148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504150    +end;
MPRINT(EM_DIAGRAM):   end;
504151    +else do;
MPRINT(EM_DIAGRAM):   else do;
504152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504153    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
504154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504156    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
504157    +   end;
MPRINT(EM_DIAGRAM):   end;
504158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504159    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
504160    +   end;
MPRINT(EM_DIAGRAM):   end;
504161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504162    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
504163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504165    +   end;
MPRINT(EM_DIAGRAM):   end;
504166    +end;
MPRINT(EM_DIAGRAM):   end;
504167    +
504168    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
504169    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
504170    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
504171    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
504172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504174    +end;
MPRINT(EM_DIAGRAM):   end;
504175    +else do;
MPRINT(EM_DIAGRAM):   else do;
504176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504177    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
504178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504179    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504180    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
504181    +   end;
MPRINT(EM_DIAGRAM):   end;
504182    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504183    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
504184    +   end;
MPRINT(EM_DIAGRAM):   end;
504185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504186    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
504187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504189    +   end;
MPRINT(EM_DIAGRAM):   end;
504190    +end;
MPRINT(EM_DIAGRAM):   end;
504191    +
504192    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
504193    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
504194    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
504195    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
504196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504198    +end;
MPRINT(EM_DIAGRAM):   end;
504199    +else do;
MPRINT(EM_DIAGRAM):   else do;
504200    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504201    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
504202    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504203    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504204    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
504205    +   end;
MPRINT(EM_DIAGRAM):   end;
504206    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504207    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
504208    +   end;
MPRINT(EM_DIAGRAM):   end;
504209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504210    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
504211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504213    +   end;
MPRINT(EM_DIAGRAM):   end;
504214    +end;
MPRINT(EM_DIAGRAM):   end;
504215    +
504216    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
504217    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
504218    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
504219    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
504220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504222    +end;
MPRINT(EM_DIAGRAM):   end;
504223    +else do;
MPRINT(EM_DIAGRAM):   else do;
504224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504225    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
504226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504227    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504228    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
504229    +   end;
MPRINT(EM_DIAGRAM):   end;
504230    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504231    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
504232    +   end;
MPRINT(EM_DIAGRAM):   end;
504233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504234    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
504235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504237    +   end;
MPRINT(EM_DIAGRAM):   end;
504238    +end;
MPRINT(EM_DIAGRAM):   end;
504239    +
504240    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
504241    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
504242    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
504243    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
504244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504246    +end;
MPRINT(EM_DIAGRAM):   end;
504247    +else do;
MPRINT(EM_DIAGRAM):   else do;
504248    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504249    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
504250    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504251    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504252    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
504253    +   end;
MPRINT(EM_DIAGRAM):   end;
504254    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504255    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
504256    +   end;
MPRINT(EM_DIAGRAM):   end;
504257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504258    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
504259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504261    +   end;
MPRINT(EM_DIAGRAM):   end;
504262    +end;
MPRINT(EM_DIAGRAM):   end;
504263    +
504264    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
504265    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
504266    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
504267    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
504268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504270    +end;
MPRINT(EM_DIAGRAM):   end;
504271    +else do;
MPRINT(EM_DIAGRAM):   else do;
504272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504273    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
504274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504275    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
504276    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
504277    +   end;
MPRINT(EM_DIAGRAM):   end;
504278    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
504279    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
504280    +   end;
MPRINT(EM_DIAGRAM):   end;
504281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504282    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
504283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504285    +   end;
MPRINT(EM_DIAGRAM):   end;
504286    +end;
MPRINT(EM_DIAGRAM):   end;
504287    +
504288    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
504289    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
504290    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
504291    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
504292    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
504293    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
504294    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
504295    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
504296    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
504297    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
504298    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
504299    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
504300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504302    +end;
MPRINT(EM_DIAGRAM):   end;
504303    +else do;
MPRINT(EM_DIAGRAM):   else do;
504304    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
504305    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
504306    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504307    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
504308    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
504309    +   end;
MPRINT(EM_DIAGRAM):   end;
504310    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
504311    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
504312    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
504313    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
504314    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
504315    +   end;
MPRINT(EM_DIAGRAM):   end;
504316    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
504317    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
504318    +   end;
MPRINT(EM_DIAGRAM):   end;
504319    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
504320    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
504321    +   end;
MPRINT(EM_DIAGRAM):   end;
504322    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
504323    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
504324    +   end;
MPRINT(EM_DIAGRAM):   end;
504325    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504326    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
504327    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
504328    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
504329    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
504330    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504331    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504332    +   end;
MPRINT(EM_DIAGRAM):   end;
504333    +end;
MPRINT(EM_DIAGRAM):   end;
504334    +
504335    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
504336    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
504337    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
504338    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
504339    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
504340    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
504341    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
504342    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
504343    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
504344    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
504345    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
504346    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
504347    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
504348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504350    +end;
MPRINT(EM_DIAGRAM):   end;
504351    +else do;
MPRINT(EM_DIAGRAM):   else do;
504352    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
504353    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
504354    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504355    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
504356    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
504357    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
504358    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
504359    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
504360    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504361    +         end;
MPRINT(EM_DIAGRAM):   end;
504362    +         else do;
MPRINT(EM_DIAGRAM):   else do;
504363    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
504364    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
504365    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504366    +            end;
MPRINT(EM_DIAGRAM):   end;
504367    +         end;
MPRINT(EM_DIAGRAM):   end;
504368    +      end;
MPRINT(EM_DIAGRAM):   end;
504369    +      else do;
MPRINT(EM_DIAGRAM):   else do;
504370    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
504371    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
504372    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504373    +         end;
MPRINT(EM_DIAGRAM):   end;
504374    +      end;
MPRINT(EM_DIAGRAM):   end;
504375    +   end;
MPRINT(EM_DIAGRAM):   end;
504376    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504377    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
504378    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
504379    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504380    +      end;
MPRINT(EM_DIAGRAM):   end;
504381    +      else do;
MPRINT(EM_DIAGRAM):   else do;
504382    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
504383    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
504384    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
504385    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
504386    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
504387    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504388    +         end;
MPRINT(EM_DIAGRAM):   end;
504389    +      end;
MPRINT(EM_DIAGRAM):   end;
504390    +   end;
MPRINT(EM_DIAGRAM):   end;
504391    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
504392    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
504393    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
504394    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
504395    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
504396    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504397    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504398    +   end;
MPRINT(EM_DIAGRAM):   end;
504399    +end;
MPRINT(EM_DIAGRAM):   end;
504400    +
504401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504402    +*** Checking missing input Interval
504403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
504404    +
504405    +IF NMISS(
504406    +   AcceptedCmpTotal ,
504407    +   Age ,
504408    +   Frq ,
504409    +   Income ,
504410    +   Kidhome ,
504411    +   Mnt ,
504412    +   MntFishProducts ,
504413    +   MntFruits ,
504414    +   MntGoldProds ,
504415    +   MntMeatProducts ,
504416    +   MntSweetProducts ,
504417    +   MntWines ,
504418    +   MonthsAsCustomer ,
504419    +   NumCatalogPurchases ,
504420    +   NumDealsPurchases ,
504421    +   NumDistPurchases ,
504422    +   NumStorePurchases ,
504423    +   NumWebPurchases ,
504424    +   NumWebVisitsMonth ,
504425    +   RFMstat ,
504426    +   RMntFrq ,
504427    +   Recency ,
504428    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
504429    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
504430    +
504431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504432    +END;
MPRINT(EM_DIAGRAM):   END;
504433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504434    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
504435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504436    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504437    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
504438    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
504439    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
504440    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
504441    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
504442    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
504443    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
504444    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
504445    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
504446    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
504447    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
504448    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
504449    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
504450    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
504451    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
504452    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
504453    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
504454    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
504455    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
504456    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
504457    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
504458    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
504459    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
504460    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
504461    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
504462    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
504463    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
504464    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
504465    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
504466    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
504467    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
504468    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
504469    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
504470    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
504471    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
504472    +END;
MPRINT(EM_DIAGRAM):   END;
504473    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
504474    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
504475    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
504476    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
504477    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
504478    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
504479    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
504480    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
504481    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
504482    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
504483    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
504484    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
504485    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
504486    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
504487    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
504488    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
504489    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
504490    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
504491    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
504492    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
504493    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
504494    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
504495    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
504496    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
504497    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
504498    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
504499    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
504500    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
504501    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
504502    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
504503    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
504504    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
504505    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
504506    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
504507    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
504508    +   ELSE S_NumCatalogPurchases
504509    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
504510    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
504511    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
504512    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
504513    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
504514    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
504515    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
504516    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
504517    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
504518    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
504519    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
504520    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
504521    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
504522    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
504523    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
504524    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
504525    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
504526    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
504527    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
504528    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
504529    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
504530    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
504531    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
504532    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
504533    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
504534    +END;
MPRINT(EM_DIAGRAM):   END;
504535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504536    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
504537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504539    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
504540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504541    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504542    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
504543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504544    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504545    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
504546    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
504547    +        S_Income  +    -0.43070069114587 * S_Kidhome
504548    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
504549    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
504550    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
504551    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
504552    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
504553    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
504554    +          +    -0.21858146166244 * S_NumDealsPurchases
504555    +          +     0.18409991080913 * S_NumDistPurchases
504556    +          +     0.35683163455594 * S_NumStorePurchases
504557    +          +     0.24429183714976 * S_NumWebPurchases
504558    +          +     -0.1263739191616 * S_NumWebVisitsMonth
504559    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
504560    +        S_RMntFrq  +      0.3452503815146 * S_Recency
504561    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome +
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 *
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts +
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 *
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 *
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 *
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 *
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq +
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
504562    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
504563    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
504564    +        S_Income  +     0.24623934031778 * S_Kidhome
504565    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
504566    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
504567    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
504568    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
504569    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
504570    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
504571    +          +    -0.08125614129909 * S_NumDealsPurchases
504572    +          +     0.38003696656333 * S_NumDistPurchases
504573    +          +     0.22006494588298 * S_NumStorePurchases
504574    +          +     0.26217639358993 * S_NumWebPurchases
504575    +          +    -0.56905781005459 * S_NumWebVisitsMonth
504576    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
504577    +        S_RMntFrq  +     0.33060213336674 * S_Recency
504578    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome +
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 *
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts +
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 *
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 *
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 *
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 *
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq +
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
504579    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
504580    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
504581    +        S_Income  +     0.18597632724783 * S_Kidhome
504582    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
504583    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
504584    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
504585    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
504586    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
504587    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
504588    +          +     0.08121213946217 * S_NumDealsPurchases
504589    +          +    -0.04963282234139 * S_NumDistPurchases
504590    +          +    -0.09521586837775 * S_NumStorePurchases
504591    +          +     0.00630626523742 * S_NumWebPurchases
504592    +          +    -0.03891587920939 * S_NumWebVisitsMonth
504593    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
504594    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
504595    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome +
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 *
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts +
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 *
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 *
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 *
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 *
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq +
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
504596    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
504597    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
504598    +        S_Income  +     0.25356767518099 * S_Kidhome
504599    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
504600    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
504601    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
504602    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
504603    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
504604    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
504605    +          +     0.83749876944877 * S_NumDealsPurchases
504606    +          +     0.29636537008068 * S_NumDistPurchases
504607    +          +    -0.61202052257506 * S_NumStorePurchases
504608    +          +    -0.96921731415369 * S_NumWebPurchases
504609    +          +     0.10056455703323 * S_NumWebVisitsMonth
504610    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
504611    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
504612    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age +
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome +
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 *
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts +
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 *
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 *
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 *
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 *
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq +
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
504613    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
504614    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
504615    +        S_Income  +    -0.66239517276633 * S_Kidhome
504616    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
504617    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
504618    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
504619    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
504620    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
504621    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
504622    +          +     0.63122884753912 * S_NumDealsPurchases
504623    +          +     0.00285388491049 * S_NumDistPurchases
504624    +          +    -0.76222252593182 * S_NumStorePurchases
504625    +          +    -0.71485070772733 * S_NumWebPurchases
504626    +          +     1.59020450778179 * S_NumWebVisitsMonth
504627    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
504628    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
504629    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome +
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 *
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts +
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 *
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 *
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 *
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 *
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq +
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
504630    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
504631    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
504632    +        S_Income  +    -0.22662005590555 * S_Kidhome
504633    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
504634    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
504635    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
504636    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
504637    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
504638    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
504639    +          +    -0.28143084367284 * S_NumDealsPurchases
504640    +          +     0.09640746756361 * S_NumDistPurchases
504641    +          +      0.1754994442449 * S_NumStorePurchases
504642    +          +     0.14321475617403 * S_NumWebPurchases
504643    +          +     -0.1908048876137 * S_NumWebVisitsMonth
504644    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
504645    +        S_RMntFrq  +     0.02280616139018 * S_Recency
504646    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age +
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome +
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 *
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts +
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 *
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 *
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 *
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 *
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq +
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
504647    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
504648    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
504649    +        S_Income  +    -0.45643247613458 * S_Kidhome
504650    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
504651    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
504652    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
504653    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
504654    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
504655    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
504656    +          +    -0.14623073736275 * S_NumDealsPurchases
504657    +          +      0.1591142102614 * S_NumDistPurchases
504658    +          +     0.10364624011419 * S_NumStorePurchases
504659    +          +     0.21545343951201 * S_NumWebPurchases
504660    +          +     0.61096997379603 * S_NumWebVisitsMonth
504661    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
504662    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
504663    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome +
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 *
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts +
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 *
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 *
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 *
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 *
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq +
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
504664    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
504665    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
504666    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
504667    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
504668    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 *
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 +
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 *
HigherEducationBinary0 ;
504669    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
504670    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
504671    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
504672    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
504673    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 *
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 +
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 *
HigherEducationBinary0 ;
504674    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
504675    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
504676    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
504677    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
504678    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 *
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 +
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 *
HigherEducationBinary0 ;
504679    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
504680    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
504681    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
504682    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
504683    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 *
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 +
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 *
HigherEducationBinary0 ;
504684    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
504685    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
504686    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
504687    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
504688    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 *
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 +
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 *
HigherEducationBinary0 ;
504689    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
504690    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
504691    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
504692    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
504693    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 *
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 +
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 *
HigherEducationBinary0 ;
504694    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
504695    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
504696    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
504697    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
504698    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 *
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 +
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 *
HigherEducationBinary0 ;
504699    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
504700    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
504701    +        EducationGraduation  +     0.00389495660452 * EducationMaster
504702    +          +     0.39856598367829 * Marital_StatusDivorced
504703    +          +    -0.45922754552461 * Marital_StatusMarried
504704    +          +     0.41270195301891 * Marital_StatusSingle
504705    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 *
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster +
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried +
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
504706    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
504707    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
504708    +        EducationGraduation  +      0.2609956614651 * EducationMaster
504709    +          +     0.12002180366932 * Marital_StatusDivorced
504710    +          +     0.50693056076018 * Marital_StatusMarried
504711    +          +    -0.40828651697464 * Marital_StatusSingle
504712    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 *
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster +
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried +
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
504713    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
504714    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
504715    +        EducationGraduation  +     0.20017847825938 * EducationMaster
504716    +          +    -0.05075621283629 * Marital_StatusDivorced
504717    +          +     0.06731276969307 * Marital_StatusMarried
504718    +          +     0.20458391966582 * Marital_StatusSingle
504719    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 *
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster +
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried +
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
504720    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
504721    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
504722    +        EducationGraduation  +     0.28829384238085 * EducationMaster
504723    +          +    -0.37925185401218 * Marital_StatusDivorced
504724    +          +     0.62971134740586 * Marital_StatusMarried
504725    +          +    -0.36562351730859 * Marital_StatusSingle
504726    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 *
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried +
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
504727    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
504728    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
504729    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
504730    +          +     0.84382044664305 * Marital_StatusDivorced
504731    +          +    -0.84062627203871 * Marital_StatusMarried
504732    +          +     0.74100406031127 * Marital_StatusSingle
504733    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 *
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried +
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
504734    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
504735    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
504736    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
504737    +          +     -0.1195105091383 * Marital_StatusDivorced
504738    +          +    -0.13486422945269 * Marital_StatusMarried
504739    +          +     0.33592403429156 * Marital_StatusSingle
504740    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 *
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried +
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
504741    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
504742    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
504743    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
504744    +          +     0.14792293029589 * Marital_StatusDivorced
504745    +          +    -0.96003393582564 * Marital_StatusMarried
504746    +          +     0.64637652355384 * Marital_StatusSingle
504747    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 *
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried +
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
504748    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
504749    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
504750    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
504751    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
504752    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
504753    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
504754    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
504755    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
504756    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
504757    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
504758    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
504759    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
504760    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
504761    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
504762    +END;
MPRINT(EM_DIAGRAM):   END;
504763    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
504764    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
504765    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
504766    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
504767    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
504768    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
504769    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
504770    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
504771    +END;
MPRINT(EM_DIAGRAM):   END;
504772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504773    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
504774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504775    +
504776    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
504777    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
504778    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
504779    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
504780    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
504781    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504782    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
504783    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
504784    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
504785    +end;
MPRINT(EM_DIAGRAM):   end;
504786    +else do;
MPRINT(EM_DIAGRAM):   else do;
504787    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
504788    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
504789    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
504790    +   end;
MPRINT(EM_DIAGRAM):   end;
504791    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
504792    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
504793    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
504794    +   end;
MPRINT(EM_DIAGRAM):   end;
504795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504796    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
504797    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
504798    +   end;
MPRINT(EM_DIAGRAM):   end;
504799    +end;
MPRINT(EM_DIAGRAM):   end;
504800    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504801    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
504802    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
504803    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
504804    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 +
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 *
H16 + 2.0380168893605 * H17 ;
504805    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
504806    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
504807    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
504808    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
504809    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
504810    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
504811    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
504812    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
504813    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
504814    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
504815    +END;
MPRINT(EM_DIAGRAM):   END;
504816    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
504817    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
504818    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
504819    +END;
MPRINT(EM_DIAGRAM):   END;
504820    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
504821    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
504822    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
504823    +END;
MPRINT(EM_DIAGRAM):   END;
504824    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
504825    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
504826    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
504827    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
504828    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
504829    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
504830    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
504831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504832    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
504833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504834    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
504835    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
504836    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
504837    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
504838    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
504839    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
504840    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
504841    +END;
MPRINT(EM_DIAGRAM):   END;
504842    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
504843    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
504844    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
504845    +drop
504846    +H11
504847    +H12
504848    +H13
504849    +H14
504850    +H15
504851    +H16
504852    +H17
504853    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
504854    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
504855    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
504856    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504857    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
504858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504859    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
504860    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
504861    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
504862    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
504863    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504864    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
504865    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504866    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
504867    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
504868    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
504869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504870    +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
504871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504872    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504873    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
504874    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
504875    +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
504876    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504877    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
504878    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
504879    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
504880    +
504881    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
504882    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
504883    +
504884    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
504885    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
504886    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
504887    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
504888    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
504889    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
504890    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
504891    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
504892    +
504893    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
504894    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
504895    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
504896    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
504897    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
504898    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504899    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
504900    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
504901    +end;
MPRINT(EM_DIAGRAM):   end;
504902    +else do;
MPRINT(EM_DIAGRAM):   else do;
504903    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
504904    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
504905    +   end;
MPRINT(EM_DIAGRAM):   end;
504906    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
504907    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
504908    +   end;
MPRINT(EM_DIAGRAM):   end;
504909    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504910    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
504911    +   end;
MPRINT(EM_DIAGRAM):   end;
504912    +end;
MPRINT(EM_DIAGRAM):   end;
504913    +
504914    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
504915    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
504916    +
504917    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
504918    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
504919    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504920    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504921    +end;
MPRINT(EM_DIAGRAM):   end;
504922    +
504923    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
504924    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
504925    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504926    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504927    +end;
MPRINT(EM_DIAGRAM):   end;
504928    +
504929    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
504930    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
504931    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504932    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504933    +end;
MPRINT(EM_DIAGRAM):   end;
504934    +
504935    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
504936    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
504937    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504938    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504939    +end;
MPRINT(EM_DIAGRAM):   end;
504940    +
504941    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
504942    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
504943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504945    +end;
MPRINT(EM_DIAGRAM):   end;
504946    +
504947    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
504948    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
504949    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504950    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504951    +end;
MPRINT(EM_DIAGRAM):   end;
504952    +
504953    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
504954    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
504955    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504956    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504957    +end;
MPRINT(EM_DIAGRAM):   end;
504958    +
504959    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
504960    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
504961    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504962    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504963    +end;
MPRINT(EM_DIAGRAM):   end;
504964    +
504965    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
504966    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
504967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504969    +end;
MPRINT(EM_DIAGRAM):   end;
504970    +
504971    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
504972    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
504973    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504974    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504975    +end;
MPRINT(EM_DIAGRAM):   end;
504976    +
504977    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
504978    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
504979    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504980    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504981    +end;
MPRINT(EM_DIAGRAM):   end;
504982    +
504983    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
504984    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
504985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504987    +end;
MPRINT(EM_DIAGRAM):   end;
504988    +
504989    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
504990    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
504991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504993    +end;
MPRINT(EM_DIAGRAM):   end;
504994    +
504995    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
504996    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
504997    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
504998    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
504999    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
505000    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
505001    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
505002    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
505003    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
505004    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
505005    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
505006    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
505007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505009    +end;
MPRINT(EM_DIAGRAM):   end;
505010    +else do;
MPRINT(EM_DIAGRAM):   else do;
505011    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
505012    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
505013    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505014    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
505015    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
505016    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
505017    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
505018    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
505019    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505020    +         end;
MPRINT(EM_DIAGRAM):   end;
505021    +         else do;
MPRINT(EM_DIAGRAM):   else do;
505022    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
505023    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
505024    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505025    +            end;
MPRINT(EM_DIAGRAM):   end;
505026    +         end;
MPRINT(EM_DIAGRAM):   end;
505027    +      end;
MPRINT(EM_DIAGRAM):   end;
505028    +      else do;
MPRINT(EM_DIAGRAM):   else do;
505029    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
505030    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
505031    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505032    +         end;
MPRINT(EM_DIAGRAM):   end;
505033    +      end;
MPRINT(EM_DIAGRAM):   end;
505034    +   end;
MPRINT(EM_DIAGRAM):   end;
505035    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505036    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
505037    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
505038    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505039    +      end;
MPRINT(EM_DIAGRAM):   end;
505040    +      else do;
MPRINT(EM_DIAGRAM):   else do;
505041    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
505042    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
505043    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
505044    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
505045    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
505046    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505047    +         end;
MPRINT(EM_DIAGRAM):   end;
505048    +      end;
MPRINT(EM_DIAGRAM):   end;
505049    +   end;
MPRINT(EM_DIAGRAM):   end;
505050    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
505051    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
505052    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
505053    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
505054    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
505055    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505056    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505057    +   end;
MPRINT(EM_DIAGRAM):   end;
505058    +end;
MPRINT(EM_DIAGRAM):   end;
505059    +
505060    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
505061    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
505062    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
505063    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
505064    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
505065    +end;
MPRINT(EM_DIAGRAM):   end;
505066    +
505067    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
505068    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
505069    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
505070    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
505071    +
505072    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
505073    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
505074    +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
505075    +
505076    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
505077    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
505078    +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
505079    +
505080    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
505081    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
505082    +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
505083    +
505084    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
505085    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
505086    +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
505087    +
505088    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
505089    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
505090    +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
505091    +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
505092    +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
505093    +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
505094    +
505095    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
505096    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
505097    +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
505098    +
505099    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
505100    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
505101    +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
505102    +
505103    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
505104    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
505105    +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
505106    +
505107    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
505108    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
505109    +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
505110    +
505111    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
505112    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
505113    +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
505114    +
505115    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
505116    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
505117    +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
505118    +
505119    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
505120    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
505121    +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
505122    +
505123    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
505124    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
505125    +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
505126    +
505127    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
505128    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
505129    +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
505130    +
505131    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
505132    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
505133    +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
505134    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
505135    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
505136    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
505137    +end;
MPRINT(EM_DIAGRAM):   end;
505138    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
505139    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
505140    +
505141    +REGDR1:
505142    +
505143    +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
505144    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
505145    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
505146    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
505147    +end;
MPRINT(EM_DIAGRAM):   end;
505148    +else do;
MPRINT(EM_DIAGRAM):   else do;
505149    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
505150    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
505151    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
505152    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
505153    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
505154    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
505155    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
505156    +   end;
MPRINT(EM_DIAGRAM):   end;
505157    +end;
MPRINT(EM_DIAGRAM):   end;
505158    +
505159    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
505160    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
505161    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
505162    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
505163    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
505164    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
505165    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
505166    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
505167    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
505168    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
505169    +end;
MPRINT(EM_DIAGRAM):   end;
505170    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
505171    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
505172    +
505173    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
505174    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
505175    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
505176    +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
505177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505178    +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
505179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505180    +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
505181    +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
505182    +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
505183    +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
505184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505185    +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
505186    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505187    +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
505188    +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
505189    +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
505190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505191    +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
505192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505194    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
505195    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
505196    +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
505197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505198    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
505199    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
505200    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
505201    +
505202    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
505203    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
505204    +
505205    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
505206    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
505207    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
505208    +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
505209    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
505210    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
505211    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
505212    +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
505213    +
505214    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
505215    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
505216    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
505217    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
505218    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
505219    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505220    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
505221    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
505222    +end;
MPRINT(EM_DIAGRAM):   end;
505223    +else do;
MPRINT(EM_DIAGRAM):   else do;
505224    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
505225    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
505226    +   end;
MPRINT(EM_DIAGRAM):   end;
505227    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
505228    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
505229    +   end;
MPRINT(EM_DIAGRAM):   end;
505230    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505231    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
505232    +   end;
MPRINT(EM_DIAGRAM):   end;
505233    +end;
MPRINT(EM_DIAGRAM):   end;
505234    +
505235    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
505236    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
505237    +
505238    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
505239    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
505240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505242    +end;
MPRINT(EM_DIAGRAM):   end;
505243    +
505244    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
505245    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
505246    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505247    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505248    +end;
MPRINT(EM_DIAGRAM):   end;
505249    +
505250    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
505251    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
505252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505254    +end;
MPRINT(EM_DIAGRAM):   end;
505255    +
505256    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
505257    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
505258    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505260    +end;
MPRINT(EM_DIAGRAM):   end;
505261    +
505262    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
505263    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
505264    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505266    +end;
MPRINT(EM_DIAGRAM):   end;
505267    +
505268    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
505269    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
505270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505272    +end;
MPRINT(EM_DIAGRAM):   end;
505273    +
505274    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
505275    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
505276    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505277    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505278    +end;
MPRINT(EM_DIAGRAM):   end;
505279    +
505280    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
505281    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
505282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505284    +end;
MPRINT(EM_DIAGRAM):   end;
505285    +
505286    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
505287    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
505288    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505289    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505290    +end;
MPRINT(EM_DIAGRAM):   end;
505291    +
505292    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
505293    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
505294    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505295    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505296    +end;
MPRINT(EM_DIAGRAM):   end;
505297    +
505298    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
505299    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
505300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505302    +end;
MPRINT(EM_DIAGRAM):   end;
505303    +
505304    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
505305    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
505306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505308    +end;
MPRINT(EM_DIAGRAM):   end;
505309    +
505310    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
505311    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
505312    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
505313    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
505314    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
505315    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
505316    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
505317    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
505318    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
505319    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
505320    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
505321    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
505322    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505323    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505324    +end;
MPRINT(EM_DIAGRAM):   end;
505325    +else do;
MPRINT(EM_DIAGRAM):   else do;
505326    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
505327    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
505328    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505329    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
505330    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
505331    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
505332    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
505333    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
505334    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505335    +         end;
MPRINT(EM_DIAGRAM):   end;
505336    +         else do;
MPRINT(EM_DIAGRAM):   else do;
505337    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
505338    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
505339    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505340    +            end;
MPRINT(EM_DIAGRAM):   end;
505341    +         end;
MPRINT(EM_DIAGRAM):   end;
505342    +      end;
MPRINT(EM_DIAGRAM):   end;
505343    +      else do;
MPRINT(EM_DIAGRAM):   else do;
505344    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
505345    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
505346    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505347    +         end;
MPRINT(EM_DIAGRAM):   end;
505348    +      end;
MPRINT(EM_DIAGRAM):   end;
505349    +   end;
MPRINT(EM_DIAGRAM):   end;
505350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505351    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
505352    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
505353    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505354    +      end;
MPRINT(EM_DIAGRAM):   end;
505355    +      else do;
MPRINT(EM_DIAGRAM):   else do;
505356    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
505357    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
505358    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
505359    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
505360    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
505361    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505362    +         end;
MPRINT(EM_DIAGRAM):   end;
505363    +      end;
MPRINT(EM_DIAGRAM):   end;
505364    +   end;
MPRINT(EM_DIAGRAM):   end;
505365    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
505366    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
505367    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
505368    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
505369    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
505370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505372    +   end;
MPRINT(EM_DIAGRAM):   end;
505373    +end;
MPRINT(EM_DIAGRAM):   end;
505374    +
505375    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
505376    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
505377    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
505378    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
505379    +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
505380    +end;
MPRINT(EM_DIAGRAM):   end;
505381    +
505382    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
505383    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
505384    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
505385    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
505386    +
505387    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
505388    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
505389    +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
505390    +
505391    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
505392    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
505393    +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
505394    +
505395    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
505396    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
505397    +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
505398    +
505399    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
505400    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
505401    +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
505402    +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
505403    +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
505404    +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
505405    +
505406    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
505407    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
505408    +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
505409    +
505410    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
505411    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
505412    +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
505413    +
505414    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
505415    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
505416    +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
505417    +
505418    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
505419    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
505420    +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
505421    +
505422    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
505423    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
505424    +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
505425    +
505426    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
505427    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
505428    +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
505429    +
505430    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
505431    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
505432    +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
505433    +
505434    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
505435    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
505436    +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
505437    +
505438    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
505439    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
505440    +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
505441    +
505442    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
505443    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
505444    +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
505445    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
505446    +
505447    +REG5DR1:
505448    +
505449    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
505450    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
505451    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
505452    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
505453    +end;
MPRINT(EM_DIAGRAM):   end;
505454    +else do;
MPRINT(EM_DIAGRAM):   else do;
505455    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
505456    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
505457    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
505458    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
505459    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
505460    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
505461    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
505462    +   end;
MPRINT(EM_DIAGRAM):   end;
505463    +end;
MPRINT(EM_DIAGRAM):   end;
505464    +
505465    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
505466    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
505467    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
505468    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
505469    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
505470    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
505471    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
505472    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
505473    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
505474    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
505475    +end;
MPRINT(EM_DIAGRAM):   end;
505476    +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
505477    +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
505478    +
505479    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
505480    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
505481    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
505482    +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
505483    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505484    +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
505485    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505486    +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
505487    +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
505488    +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
505489    +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
505490    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505491    +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
505492    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505493    +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
505494    +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
505495    +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
505496    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505497    +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
505498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505499    +P_DepVar1 = (
505500    +Neural2_P_DepVar1 +
505501    +Neural3_P_DepVar1 +
505502    +Neural4_P_DepVar1 +
505503    +Neural9_P_DepVar1 +
505504    +Neural10_P_DepVar1 +
505505    +Reg_P_DepVar1 +
505506    +Reg5_P_DepVar1
505507    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural4_P_DepVar1
+ Neural9_P_DepVar1 + Neural10_P_DepVar1 + Reg_P_DepVar1 + Reg5_P_DepVar1 )/7;
505508    +P_DepVar0 = (
505509    +Neural2_P_DepVar0 +
505510    +Neural3_P_DepVar0 +
505511    +Neural4_P_DepVar0 +
505512    +Neural9_P_DepVar0 +
505513    +Neural10_P_DepVar0 +
505514    +Reg_P_DepVar0 +
505515    +Reg5_P_DepVar0
505516    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural4_P_DepVar0
+ Neural9_P_DepVar0 + Neural10_P_DepVar0 + Reg_P_DepVar0 + Reg5_P_DepVar0 )/7;
505517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505518    +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
505519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505520    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
505521    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
505522    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
505523    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
505524    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
505525    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
505526    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
505527    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
505528    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
505529    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
505530    +end;
MPRINT(EM_DIAGRAM):   end;
505531    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
505532    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
505533    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
505534    +end;
MPRINT(EM_DIAGRAM):   end;
505535    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
505536    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505537    +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
505538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505539    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
505540    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
505541    +else
505542    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
505543    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505544    +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
505545    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505546    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
505547    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
505548    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
505549    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
505550    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
505551    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
505552    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
505553    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
505554    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
505555    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
505556    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
505557    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
505558    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
505559    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
505560    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
505561    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
505562    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
505563    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
505564    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
505565    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
505565   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
505566    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
505566   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
505567    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
505567   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
505568    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
505568   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
505569    +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
505570    +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
505571    +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
505572    +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
505573    +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
505574    +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
505575    +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
505576    +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
505577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505578    +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
505579    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505580    +if
505581    +F_DepVar NE '1'
505582    +AND F_DepVar NE '0'
505583    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
505584    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
505585    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
505586    +end;
MPRINT(EM_DIAGRAM):   end;
505587    +else do;
MPRINT(EM_DIAGRAM):   else do;
505588    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
505589    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
505590    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
505591    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
505592    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
505593    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
505594    +END;
MPRINT(EM_DIAGRAM):   END;
505595    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
505596     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
505597     quit;
505598     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
505599     filename emflow
505599   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring NEURAL2_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505600     *------------------------------------------------------------*;
505601     * Ensmbl14: Scoring NEURAL2_VALIDATE data;
505602     *------------------------------------------------------------*;
505603     data EMWS8.Ensmbl14_VALIDATE
505604     / view=EMWS8.Ensmbl14_VALIDATE
505605     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_VALIDATE / view=EMWS8.Ensmbl14_VALIDATE ;
505606     set EMWS8.Neural2_VALIDATE
505607     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_VALIDATE ;
505608     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
505609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505610    +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
505611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505612    +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
505613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505614    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505615    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
505616    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
505617    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
505618    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505619    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505620    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
505621    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
505622    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
505623    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505624    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505625    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
505626    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
505627    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
505628    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505629    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505630    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
505631    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
505632    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
505633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505634    +
505635    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
505636    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
505636   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
505637    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
505638    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
505639    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
505640    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
505641    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
505642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505643    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
505644    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
505645    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
505646    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505648    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
505649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505650    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
505651    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
505652    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
505653    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505654    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
505655    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
505656    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
505657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505659    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
505660    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
505661    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
505662    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505664    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
505665    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
505666    +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
505667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505668    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
505669    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
505670    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
505671    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
505672    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
505673    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
505674    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
505675    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
505676    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
505677    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
505678    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
505679    +LENGTH _WARN_ $4
505680    +      F_DepVar  $ 12
505681    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
505682    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
505683    +
505684    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
505685    +
505686    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
505687    +
505688    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
505689    +
505690    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
505691    +
505692    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
505693    +
505694    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
505695    +
505696    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
505697    +
505698    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
505699    +
505700    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
505701    +
505702    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
505703    +
505704    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
505705    +
505706    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
505707    +
505708    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
505709    +
505710    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
505711    +
505712    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
505713    +
505714    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
505715    +
505716    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
505717    +
505718    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
505719    +
505720    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
505721    +
505722    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
505723    +
505724    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
505725    +
505726    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
505727    +
505728    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
505729    +
505730    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
505731    +
505732    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
505733    +
505734    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
505735    +
505736    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
505737    +
505738    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
505739    +
505740    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
505741    +
505742    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
505743    +
505744    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
505745    +
505746    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
505747    +
505748    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
505749    +
505750    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
505751    +
505752    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
505753    +
505754    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
505755    +
505756    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
505757    +
505758    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
505759    +
505760    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
505761    +
505762    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
505763    +
505764    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
505765    +
505766    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
505767    +
505768    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
505769    +
505770    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
505771    +
505772    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
505773    +
505774    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
505775    +
505776    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
505777    +
505778    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
505779    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
505780    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
505781    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
505782    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505783    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505784    +end;
MPRINT(EM_DIAGRAM):   end;
505785    +else do;
MPRINT(EM_DIAGRAM):   else do;
505786    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505787    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
505788    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505789    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505790    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
505791    +   end;
MPRINT(EM_DIAGRAM):   end;
505792    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505793    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
505794    +   end;
MPRINT(EM_DIAGRAM):   end;
505795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505796    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
505797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505799    +   end;
MPRINT(EM_DIAGRAM):   end;
505800    +end;
MPRINT(EM_DIAGRAM):   end;
505801    +
505802    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
505803    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
505804    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
505805    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
505806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505808    +end;
MPRINT(EM_DIAGRAM):   end;
505809    +else do;
MPRINT(EM_DIAGRAM):   else do;
505810    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505811    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
505812    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505813    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505814    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
505815    +   end;
MPRINT(EM_DIAGRAM):   end;
505816    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505817    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
505818    +   end;
MPRINT(EM_DIAGRAM):   end;
505819    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505820    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
505821    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505822    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505823    +   end;
MPRINT(EM_DIAGRAM):   end;
505824    +end;
MPRINT(EM_DIAGRAM):   end;
505825    +
505826    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
505827    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
505828    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
505829    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
505830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505832    +end;
MPRINT(EM_DIAGRAM):   end;
505833    +else do;
MPRINT(EM_DIAGRAM):   else do;
505834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505835    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
505836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505837    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505838    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
505839    +   end;
MPRINT(EM_DIAGRAM):   end;
505840    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505841    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
505842    +   end;
MPRINT(EM_DIAGRAM):   end;
505843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505844    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
505845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505847    +   end;
MPRINT(EM_DIAGRAM):   end;
505848    +end;
MPRINT(EM_DIAGRAM):   end;
505849    +
505850    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
505851    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
505852    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
505853    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
505854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505856    +end;
MPRINT(EM_DIAGRAM):   end;
505857    +else do;
MPRINT(EM_DIAGRAM):   else do;
505858    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505859    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
505860    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505861    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505862    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
505863    +   end;
MPRINT(EM_DIAGRAM):   end;
505864    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505865    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
505866    +   end;
MPRINT(EM_DIAGRAM):   end;
505867    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505868    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
505869    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505870    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505871    +   end;
MPRINT(EM_DIAGRAM):   end;
505872    +end;
MPRINT(EM_DIAGRAM):   end;
505873    +
505874    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
505875    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
505876    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
505877    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
505878    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505879    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505880    +end;
MPRINT(EM_DIAGRAM):   end;
505881    +else do;
MPRINT(EM_DIAGRAM):   else do;
505882    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505883    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
505884    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505885    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505886    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
505887    +   end;
MPRINT(EM_DIAGRAM):   end;
505888    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505889    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
505890    +   end;
MPRINT(EM_DIAGRAM):   end;
505891    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505892    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
505893    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505894    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505895    +   end;
MPRINT(EM_DIAGRAM):   end;
505896    +end;
MPRINT(EM_DIAGRAM):   end;
505897    +
505898    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
505899    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
505900    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
505901    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
505902    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505903    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505904    +end;
MPRINT(EM_DIAGRAM):   end;
505905    +else do;
MPRINT(EM_DIAGRAM):   else do;
505906    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505907    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
505908    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505909    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505910    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
505911    +   end;
MPRINT(EM_DIAGRAM):   end;
505912    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505913    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
505914    +   end;
MPRINT(EM_DIAGRAM):   end;
505915    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505916    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
505917    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505918    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505919    +   end;
MPRINT(EM_DIAGRAM):   end;
505920    +end;
MPRINT(EM_DIAGRAM):   end;
505921    +
505922    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
505923    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
505924    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
505925    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
505926    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505928    +end;
MPRINT(EM_DIAGRAM):   end;
505929    +else do;
MPRINT(EM_DIAGRAM):   else do;
505930    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505931    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
505932    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505933    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
505934    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
505935    +   end;
MPRINT(EM_DIAGRAM):   end;
505936    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
505937    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
505938    +   end;
MPRINT(EM_DIAGRAM):   end;
505939    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505940    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
505941    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505942    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505943    +   end;
MPRINT(EM_DIAGRAM):   end;
505944    +end;
MPRINT(EM_DIAGRAM):   end;
505945    +
505946    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
505947    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
505948    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
505949    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
505950    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
505951    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
505952    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
505953    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
505954    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
505955    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
505956    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
505957    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
505958    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505959    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505960    +end;
MPRINT(EM_DIAGRAM):   end;
505961    +else do;
MPRINT(EM_DIAGRAM):   else do;
505962    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
505963    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
505964    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505965    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
505966    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
505967    +   end;
MPRINT(EM_DIAGRAM):   end;
505968    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
505969    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
505970    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
505971    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
505972    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
505973    +   end;
MPRINT(EM_DIAGRAM):   end;
505974    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
505975    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
505976    +   end;
MPRINT(EM_DIAGRAM):   end;
505977    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
505978    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
505979    +   end;
MPRINT(EM_DIAGRAM):   end;
505980    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
505981    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
505982    +   end;
MPRINT(EM_DIAGRAM):   end;
505983    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505984    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
505985    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
505986    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
505987    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
505988    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505989    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505990    +   end;
MPRINT(EM_DIAGRAM):   end;
505991    +end;
MPRINT(EM_DIAGRAM):   end;
505992    +
505993    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
505994    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
505995    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
505996    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
505997    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
505998    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
505999    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
506000    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
506001    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
506002    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
506003    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
506004    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
506005    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
506006    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506008    +end;
MPRINT(EM_DIAGRAM):   end;
506009    +else do;
MPRINT(EM_DIAGRAM):   else do;
506010    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
506011    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
506012    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506013    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
506014    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
506015    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
506016    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
506017    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
506018    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506019    +         end;
MPRINT(EM_DIAGRAM):   end;
506020    +         else do;
MPRINT(EM_DIAGRAM):   else do;
506021    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
506022    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
506023    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506024    +            end;
MPRINT(EM_DIAGRAM):   end;
506025    +         end;
MPRINT(EM_DIAGRAM):   end;
506026    +      end;
MPRINT(EM_DIAGRAM):   end;
506027    +      else do;
MPRINT(EM_DIAGRAM):   else do;
506028    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
506029    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
506030    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506031    +         end;
MPRINT(EM_DIAGRAM):   end;
506032    +      end;
MPRINT(EM_DIAGRAM):   end;
506033    +   end;
MPRINT(EM_DIAGRAM):   end;
506034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506035    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
506036    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
506037    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506038    +      end;
MPRINT(EM_DIAGRAM):   end;
506039    +      else do;
MPRINT(EM_DIAGRAM):   else do;
506040    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
506041    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
506042    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
506043    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
506044    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
506045    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506046    +         end;
MPRINT(EM_DIAGRAM):   end;
506047    +      end;
MPRINT(EM_DIAGRAM):   end;
506048    +   end;
MPRINT(EM_DIAGRAM):   end;
506049    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
506050    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
506051    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
506052    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
506053    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
506054    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506055    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506056    +   end;
MPRINT(EM_DIAGRAM):   end;
506057    +end;
MPRINT(EM_DIAGRAM):   end;
506058    +
506059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506060    +*** Checking missing input Interval
506061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
506062    +
506063    +IF NMISS(
506064    +   AcceptedCmpTotal ,
506065    +   Age ,
506066    +   Frq ,
506067    +   Income ,
506068    +   Kidhome ,
506069    +   Mnt ,
506070    +   MntFishProducts ,
506071    +   MntFruits ,
506072    +   MntGoldProds ,
506073    +   MntMeatProducts ,
506074    +   MntSweetProducts ,
506075    +   MntWines ,
506076    +   MonthsAsCustomer ,
506077    +   NumCatalogPurchases ,
506078    +   NumDealsPurchases ,
506079    +   NumDistPurchases ,
506080    +   NumStorePurchases ,
506081    +   NumWebPurchases ,
506082    +   NumWebVisitsMonth ,
506083    +   RFMstat ,
506084    +   RMntFrq ,
506085    +   Recency ,
506086    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
506087    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
506088    +
506089    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506090    +END;
MPRINT(EM_DIAGRAM):   END;
506091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506092    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
506093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506095    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
506096    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
506097    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
506098    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
506099    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
506100    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
506101    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
506102    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
506103    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
506104    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
506105    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
506106    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
506107    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
506108    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
506109    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
506110    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
506111    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
506112    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
506113    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
506114    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
506115    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
506116    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
506117    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
506118    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
506119    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
506120    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
506121    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
506122    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
506123    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
506124    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
506125    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
506126    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
506127    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
506128    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
506129    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
506130    +END;
MPRINT(EM_DIAGRAM):   END;
506131    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506132    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
506133    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
506134    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
506135    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
506136    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
506137    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
506138    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
506139    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
506140    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
506141    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
506142    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
506143    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
506144    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
506145    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
506146    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
506147    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
506148    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
506149    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
506150    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
506151    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
506152    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
506153    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
506154    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
506155    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
506156    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
506157    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
506158    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
506159    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
506160    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
506161    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
506162    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
506163    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
506164    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
506165    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
506166    +   ELSE S_NumCatalogPurchases
506167    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
506168    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
506169    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
506170    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
506171    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
506172    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
506173    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
506174    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
506175    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
506176    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
506177    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
506178    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
506179    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
506180    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
506181    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
506182    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
506183    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
506184    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
506185    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
506186    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
506187    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
506188    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
506189    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
506190    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
506191    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
506192    +END;
MPRINT(EM_DIAGRAM):   END;
506193    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506194    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
506195    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506197    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
506198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506200    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
506201    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506202    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506203    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
506204    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
506205    +        S_Income  +    -1.07615700855274 * S_Kidhome
506206    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
506207    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
506208    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
506209    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
506210    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
506211    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
506212    +          +      0.3429043319369 * S_NumDealsPurchases
506213    +          +     0.71313309767469 * S_NumDistPurchases
506214    +          +     0.06017757740083 * S_NumStorePurchases
506215    +          +    -0.19817724925068 * S_NumWebPurchases
506216    +          +     1.34164122205952 * S_NumWebVisitsMonth
506217    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
506218    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
506219    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
506220    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
506221    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
506222    +        S_Income  +     -0.0027232441092 * S_Kidhome
506223    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
506224    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
506225    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
506226    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
506227    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
506228    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
506229    +          +      0.4576973746858 * S_NumDealsPurchases
506230    +          +     0.15590877272659 * S_NumDistPurchases
506231    +          +    -0.33414539713736 * S_NumStorePurchases
506232    +          +    -0.39370244666257 * S_NumWebPurchases
506233    +          +     0.52596714886704 * S_NumWebVisitsMonth
506234    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
506235    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
506236    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
506237    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
506238    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
506239    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
506240    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
506241    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
506242    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
506243    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
506244    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
506245    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
506246    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
506247    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
506248    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
506249    +        EducationGraduation  +      -0.333138438339 * EducationMaster
506250    +          +      0.4663802937397 * Marital_StatusDivorced
506251    +          +    -1.27401898796099 * Marital_StatusMarried
506252    +          +      1.3125969368079 * Marital_StatusSingle
506253    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
506254    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
506255    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
506256    +        EducationGraduation  +     0.00771527138053 * EducationMaster
506257    +          +     0.07419179522004 * Marital_StatusDivorced
506258    +          +     0.00234615813337 * Marital_StatusMarried
506259    +          +    -0.00725460458412 * Marital_StatusSingle
506260    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
506261    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
506262    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
506263    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
506264    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
506265    +END;
MPRINT(EM_DIAGRAM):   END;
506266    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506267    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
506268    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
506269    +END;
MPRINT(EM_DIAGRAM):   END;
506270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506271    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
506272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506273    +
506274    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
506275    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
506276    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
506277    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
506278    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
506279    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506280    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
506281    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
506282    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
506283    +end;
MPRINT(EM_DIAGRAM):   end;
506284    +else do;
MPRINT(EM_DIAGRAM):   else do;
506285    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
506286    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
506287    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
506288    +   end;
MPRINT(EM_DIAGRAM):   end;
506289    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
506290    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
506291    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
506292    +   end;
MPRINT(EM_DIAGRAM):   end;
506293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506294    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
506295    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
506296    +   end;
MPRINT(EM_DIAGRAM):   end;
506297    +end;
MPRINT(EM_DIAGRAM):   end;
506298    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506299    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
506300    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
506301    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
506302    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
506303    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
506304    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
506305    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
506306    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
506307    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
506308    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
506309    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
506310    +END;
MPRINT(EM_DIAGRAM):   END;
506311    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506312    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
506313    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
506314    +END;
MPRINT(EM_DIAGRAM):   END;
506315    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
506316    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
506317    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
506318    +END;
MPRINT(EM_DIAGRAM):   END;
506319    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
506320    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
506321    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
506322    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
506323    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
506324    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
506325    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
506326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506327    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
506328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506329    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
506330    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
506331    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
506332    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
506333    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
506334    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
506335    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
506336    +END;
MPRINT(EM_DIAGRAM):   END;
506337    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
506338    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
506339    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
506340    +drop
506341    +H11
506342    +H12
506343    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
506344    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
506345    +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
506346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506347    +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
506348    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506349    +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
506350    +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
506351    +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
506352    +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
506353    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506354    +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
506355    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506356    +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
506357    +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
506358    +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
506359    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506360    +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
506361    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506363    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
506364    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
506365    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
506366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
506367    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
506368    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
506369    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
506370    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
506371    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
506372    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
506373    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
506374    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
506375    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
506376    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
506377    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
506378    +LENGTH _WARN_ $4
506379    +      F_DepVar  $ 12
506380    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
506381    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
506382    +
506383    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
506384    +
506385    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
506386    +
506387    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
506388    +
506389    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
506390    +
506391    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
506392    +
506393    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
506394    +
506395    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
506396    +
506397    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
506398    +
506399    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
506400    +
506401    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
506402    +
506403    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
506404    +
506405    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
506406    +
506407    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
506408    +
506409    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
506410    +
506411    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
506412    +
506413    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
506414    +
506415    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
506416    +
506417    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
506418    +
506419    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
506420    +
506421    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
506422    +
506423    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
506424    +
506425    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
506426    +
506427    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
506428    +
506429    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
506430    +
506431    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
506432    +
506433    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
506434    +
506435    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
506436    +
506437    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
506438    +
506439    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
506440    +
506441    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
506442    +
506443    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
506444    +
506445    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
506446    +
506447    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
506448    +
506449    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
506450    +
506451    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
506452    +
506453    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
506454    +
506455    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
506456    +
506457    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
506458    +
506459    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
506460    +
506461    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
506462    +
506463    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
506464    +
506465    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
506466    +
506467    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
506468    +
506469    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
506470    +
506471    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
506472    +
506473    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
506474    +
506475    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
506476    +
506477    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
506478    +
506479    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
506480    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
506481    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
506482    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
506483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506485    +end;
MPRINT(EM_DIAGRAM):   end;
506486    +else do;
MPRINT(EM_DIAGRAM):   else do;
506487    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506488    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
506489    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506490    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506491    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
506492    +   end;
MPRINT(EM_DIAGRAM):   end;
506493    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506494    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
506495    +   end;
MPRINT(EM_DIAGRAM):   end;
506496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506497    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
506498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506500    +   end;
MPRINT(EM_DIAGRAM):   end;
506501    +end;
MPRINT(EM_DIAGRAM):   end;
506502    +
506503    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
506504    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
506505    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
506506    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
506507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506509    +end;
MPRINT(EM_DIAGRAM):   end;
506510    +else do;
MPRINT(EM_DIAGRAM):   else do;
506511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506512    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
506513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506515    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
506516    +   end;
MPRINT(EM_DIAGRAM):   end;
506517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506518    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
506519    +   end;
MPRINT(EM_DIAGRAM):   end;
506520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506521    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
506522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506524    +   end;
MPRINT(EM_DIAGRAM):   end;
506525    +end;
MPRINT(EM_DIAGRAM):   end;
506526    +
506527    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
506528    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
506529    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
506530    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
506531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506533    +end;
MPRINT(EM_DIAGRAM):   end;
506534    +else do;
MPRINT(EM_DIAGRAM):   else do;
506535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506536    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
506537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506538    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506539    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
506540    +   end;
MPRINT(EM_DIAGRAM):   end;
506541    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506542    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
506543    +   end;
MPRINT(EM_DIAGRAM):   end;
506544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506545    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
506546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506548    +   end;
MPRINT(EM_DIAGRAM):   end;
506549    +end;
MPRINT(EM_DIAGRAM):   end;
506550    +
506551    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
506552    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
506553    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
506554    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
506555    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506557    +end;
MPRINT(EM_DIAGRAM):   end;
506558    +else do;
MPRINT(EM_DIAGRAM):   else do;
506559    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506560    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
506561    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506562    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506563    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
506564    +   end;
MPRINT(EM_DIAGRAM):   end;
506565    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506566    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
506567    +   end;
MPRINT(EM_DIAGRAM):   end;
506568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506569    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
506570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506572    +   end;
MPRINT(EM_DIAGRAM):   end;
506573    +end;
MPRINT(EM_DIAGRAM):   end;
506574    +
506575    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
506576    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
506577    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
506578    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
506579    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506580    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506581    +end;
MPRINT(EM_DIAGRAM):   end;
506582    +else do;
MPRINT(EM_DIAGRAM):   else do;
506583    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506584    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
506585    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506586    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506587    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
506588    +   end;
MPRINT(EM_DIAGRAM):   end;
506589    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506590    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
506591    +   end;
MPRINT(EM_DIAGRAM):   end;
506592    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506593    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
506594    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506595    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506596    +   end;
MPRINT(EM_DIAGRAM):   end;
506597    +end;
MPRINT(EM_DIAGRAM):   end;
506598    +
506599    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
506600    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
506601    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
506602    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
506603    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506605    +end;
MPRINT(EM_DIAGRAM):   end;
506606    +else do;
MPRINT(EM_DIAGRAM):   else do;
506607    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506608    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
506609    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506610    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506611    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
506612    +   end;
MPRINT(EM_DIAGRAM):   end;
506613    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506614    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
506615    +   end;
MPRINT(EM_DIAGRAM):   end;
506616    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506617    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
506618    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506619    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506620    +   end;
MPRINT(EM_DIAGRAM):   end;
506621    +end;
MPRINT(EM_DIAGRAM):   end;
506622    +
506623    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
506624    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
506625    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
506626    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
506627    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506628    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506629    +end;
MPRINT(EM_DIAGRAM):   end;
506630    +else do;
MPRINT(EM_DIAGRAM):   else do;
506631    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506632    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
506633    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506634    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
506635    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
506636    +   end;
MPRINT(EM_DIAGRAM):   end;
506637    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
506638    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
506639    +   end;
MPRINT(EM_DIAGRAM):   end;
506640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506641    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
506642    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506643    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506644    +   end;
MPRINT(EM_DIAGRAM):   end;
506645    +end;
MPRINT(EM_DIAGRAM):   end;
506646    +
506647    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
506648    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
506649    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
506650    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
506651    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
506652    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
506653    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
506654    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
506655    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
506656    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
506657    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
506658    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
506659    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506660    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506661    +end;
MPRINT(EM_DIAGRAM):   end;
506662    +else do;
MPRINT(EM_DIAGRAM):   else do;
506663    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
506664    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
506665    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506666    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
506667    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
506668    +   end;
MPRINT(EM_DIAGRAM):   end;
506669    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
506670    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
506671    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
506672    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
506673    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
506674    +   end;
MPRINT(EM_DIAGRAM):   end;
506675    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
506676    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
506677    +   end;
MPRINT(EM_DIAGRAM):   end;
506678    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
506679    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
506680    +   end;
MPRINT(EM_DIAGRAM):   end;
506681    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
506682    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
506683    +   end;
MPRINT(EM_DIAGRAM):   end;
506684    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506685    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
506686    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
506687    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
506688    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
506689    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506690    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506691    +   end;
MPRINT(EM_DIAGRAM):   end;
506692    +end;
MPRINT(EM_DIAGRAM):   end;
506693    +
506694    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
506695    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
506696    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
506697    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
506698    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
506699    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
506700    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
506701    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
506702    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
506703    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
506704    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
506705    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
506706    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
506707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506709    +end;
MPRINT(EM_DIAGRAM):   end;
506710    +else do;
MPRINT(EM_DIAGRAM):   else do;
506711    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
506712    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
506713    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506714    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
506715    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
506716    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
506717    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
506718    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
506719    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506720    +         end;
MPRINT(EM_DIAGRAM):   end;
506721    +         else do;
MPRINT(EM_DIAGRAM):   else do;
506722    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
506723    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
506724    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506725    +            end;
MPRINT(EM_DIAGRAM):   end;
506726    +         end;
MPRINT(EM_DIAGRAM):   end;
506727    +      end;
MPRINT(EM_DIAGRAM):   end;
506728    +      else do;
MPRINT(EM_DIAGRAM):   else do;
506729    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
506730    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
506731    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506732    +         end;
MPRINT(EM_DIAGRAM):   end;
506733    +      end;
MPRINT(EM_DIAGRAM):   end;
506734    +   end;
MPRINT(EM_DIAGRAM):   end;
506735    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506736    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
506737    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
506738    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506739    +      end;
MPRINT(EM_DIAGRAM):   end;
506740    +      else do;
MPRINT(EM_DIAGRAM):   else do;
506741    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
506742    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
506743    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
506744    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
506745    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
506746    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506747    +         end;
MPRINT(EM_DIAGRAM):   end;
506748    +      end;
MPRINT(EM_DIAGRAM):   end;
506749    +   end;
MPRINT(EM_DIAGRAM):   end;
506750    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
506751    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
506752    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
506753    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
506754    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
506755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506757    +   end;
MPRINT(EM_DIAGRAM):   end;
506758    +end;
MPRINT(EM_DIAGRAM):   end;
506759    +
506760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506761    +*** Checking missing input Interval
506762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
506763    +
506764    +IF NMISS(
506765    +   AcceptedCmpTotal ,
506766    +   Age ,
506767    +   Frq ,
506768    +   Income ,
506769    +   Kidhome ,
506770    +   Mnt ,
506771    +   MntFishProducts ,
506772    +   MntFruits ,
506773    +   MntGoldProds ,
506774    +   MntMeatProducts ,
506775    +   MntSweetProducts ,
506776    +   MntWines ,
506777    +   MonthsAsCustomer ,
506778    +   NumCatalogPurchases ,
506779    +   NumDealsPurchases ,
506780    +   NumDistPurchases ,
506781    +   NumStorePurchases ,
506782    +   NumWebPurchases ,
506783    +   NumWebVisitsMonth ,
506784    +   RFMstat ,
506785    +   RMntFrq ,
506786    +   Recency ,
506787    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
506788    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
506789    +
506790    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506791    +END;
MPRINT(EM_DIAGRAM):   END;
506792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506793    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
506794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506795    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506796    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
506797    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
506798    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
506799    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
506800    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
506801    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
506802    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
506803    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
506804    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
506805    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
506806    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
506807    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
506808    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
506809    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
506810    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
506811    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
506812    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
506813    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
506814    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
506815    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
506816    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
506817    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
506818    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
506819    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
506820    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
506821    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
506822    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
506823    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
506824    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
506825    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
506826    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
506827    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
506828    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
506829    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
506830    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
506831    +END;
MPRINT(EM_DIAGRAM):   END;
506832    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506833    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
506834    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
506835    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
506836    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
506837    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
506838    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
506839    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
506840    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
506841    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
506842    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
506843    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
506844    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
506845    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
506846    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
506847    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
506848    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
506849    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
506850    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
506851    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
506852    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
506853    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
506854    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
506855    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
506856    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
506857    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
506858    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
506859    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
506860    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
506861    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
506862    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
506863    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
506864    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
506865    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
506866    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
506867    +   ELSE S_NumCatalogPurchases
506868    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
506869    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
506870    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
506871    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
506872    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
506873    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
506874    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
506875    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
506876    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
506877    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
506878    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
506879    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
506880    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
506881    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
506882    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
506883    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
506884    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
506885    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
506886    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
506887    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
506888    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
506889    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
506890    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
506891    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
506892    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
506893    +END;
MPRINT(EM_DIAGRAM):   END;
506894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506895    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
506896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506898    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
506899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506901    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
506902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506903    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506904    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
506905    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
506906    +        S_Income  +     0.51123266106809 * S_Kidhome
506907    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
506908    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
506909    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
506910    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
506911    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
506912    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
506913    +          +     1.34095732961105 * S_NumDealsPurchases
506914    +          +     0.16605991333252 * S_NumDistPurchases
506915    +          +    -0.61746267736536 * S_NumStorePurchases
506916    +          +    -0.61812800689506 * S_NumWebPurchases
506917    +          +     1.44649145055387 * S_NumWebVisitsMonth
506918    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
506919    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
506920    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
506921    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
506922    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
506923    +        S_Income  +     0.52295323651199 * S_Kidhome
506924    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
506925    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
506926    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
506927    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
506928    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
506929    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
506930    +          +    -0.72543332317832 * S_NumDealsPurchases
506931    +          +    -0.05245472565117 * S_NumDistPurchases
506932    +          +     1.00667431585298 * S_NumStorePurchases
506933    +          +     1.02836701470962 * S_NumWebPurchases
506934    +          +    -1.25666606219201 * S_NumWebVisitsMonth
506935    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
506936    +        S_RMntFrq  +     1.50910531484632 * S_Recency
506937    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
506938    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
506939    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
506940    +        S_Income  +     0.58025720116696 * S_Kidhome
506941    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
506942    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
506943    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
506944    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
506945    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
506946    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
506947    +          +     0.12670438262487 * S_NumDealsPurchases
506948    +          +    -0.46113523834333 * S_NumDistPurchases
506949    +          +     0.07074818720567 * S_NumStorePurchases
506950    +          +    -0.05066645783537 * S_NumWebPurchases
506951    +          +    -0.65729410185804 * S_NumWebVisitsMonth
506952    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
506953    +        S_RMntFrq  +      1.4337242246086 * S_Recency
506954    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
506955    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
506956    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
506957    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
506958    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
506959    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
506960    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
506961    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
506962    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
506963    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
506964    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
506965    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
506966    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
506967    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
506968    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
506969    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
506970    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
506971    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
506972    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
506973    +          +     0.12692950862511 * Marital_StatusDivorced
506974    +          +     0.10026497666167 * Marital_StatusMarried
506975    +          +    -0.19893864592813 * Marital_StatusSingle
506976    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
506977    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
506978    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
506979    +        EducationGraduation  +     0.05580498138108 * EducationMaster
506980    +          +    -0.16785192490199 * Marital_StatusDivorced
506981    +          +     0.13153695130362 * Marital_StatusMarried
506982    +          +    -0.50411544587104 * Marital_StatusSingle
506983    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
506984    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
506985    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
506986    +        EducationGraduation  +     0.21882736952662 * EducationMaster
506987    +          +    -0.62654958087044 * Marital_StatusDivorced
506988    +          +     1.86250132393341 * Marital_StatusMarried
506989    +          +    -1.37067556451928 * Marital_StatusSingle
506990    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
506991    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
506992    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
506993    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
506994    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
506995    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
506996    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
506997    +END;
MPRINT(EM_DIAGRAM):   END;
506998    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506999    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
507000    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
507001    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
507002    +END;
MPRINT(EM_DIAGRAM):   END;
507003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507004    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
507005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507006    +
507007    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
507008    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
507009    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507010    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
507011    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
507012    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507013    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
507014    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507015    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507016    +end;
MPRINT(EM_DIAGRAM):   end;
507017    +else do;
MPRINT(EM_DIAGRAM):   else do;
507018    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
507019    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
507020    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
507021    +   end;
MPRINT(EM_DIAGRAM):   end;
507022    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
507023    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
507024    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
507025    +   end;
MPRINT(EM_DIAGRAM):   end;
507026    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507027    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507028    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507029    +   end;
MPRINT(EM_DIAGRAM):   end;
507030    +end;
MPRINT(EM_DIAGRAM):   end;
507031    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507032    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
507033    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
507034    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
507035    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
507036    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
507037    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
507038    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
507039    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
507040    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
507041    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
507042    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
507043    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
507044    +END;
MPRINT(EM_DIAGRAM):   END;
507045    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507046    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
507047    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
507048    +END;
MPRINT(EM_DIAGRAM):   END;
507049    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
507050    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
507051    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
507052    +END;
MPRINT(EM_DIAGRAM):   END;
507053    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
507054    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
507055    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
507056    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
507057    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
507058    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
507059    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
507060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507061    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
507062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507063    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
507064    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
507065    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
507066    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
507067    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
507068    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
507069    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
507070    +END;
MPRINT(EM_DIAGRAM):   END;
507071    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
507072    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
507073    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
507074    +drop
507075    +H11
507076    +H12
507077    +H13
507078    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
507079    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
507080    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
507081    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507082    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
507083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507084    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
507085    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
507086    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
507087    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
507088    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507089    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
507090    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507091    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
507092    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
507093    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
507094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507095    +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
507096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507098    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
507099    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
507100    +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
507101    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507102    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
507103    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
507104    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
507105    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
507106    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
507107    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
507108    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
507109    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
507110    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
507111    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
507112    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
507113    +LENGTH _WARN_ $4
507114    +      F_DepVar  $ 12
507115    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
507116    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
507117    +
507118    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
507119    +
507120    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
507121    +
507122    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
507123    +
507124    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
507125    +
507126    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
507127    +
507128    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
507129    +
507130    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
507131    +
507132    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
507133    +
507134    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
507135    +
507136    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
507137    +
507138    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
507139    +
507140    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
507141    +
507142    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
507143    +
507144    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
507145    +
507146    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
507147    +
507148    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
507149    +
507150    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
507151    +
507152    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
507153    +
507154    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
507155    +
507156    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
507157    +
507158    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
507159    +
507160    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
507161    +
507162    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
507163    +
507164    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
507165    +
507166    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
507167    +
507168    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
507169    +
507170    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
507171    +
507172    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
507173    +
507174    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
507175    +
507176    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
507177    +
507178    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
507179    +
507180    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
507181    +
507182    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
507183    +
507184    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
507185    +
507186    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
507187    +
507188    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
507189    +
507190    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
507191    +
507192    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
507193    +
507194    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
507195    +
507196    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
507197    +
507198    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
507199    +
507200    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
507201    +
507202    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507203    +
507204    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
507205    +
507206    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
507207    +
507208    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
507209    +
507210    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
507211    +
507212    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
507213    +
507214    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
507215    +
507216    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
507217    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
507218    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
507219    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
507220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507222    +end;
MPRINT(EM_DIAGRAM):   end;
507223    +else do;
MPRINT(EM_DIAGRAM):   else do;
507224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507225    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
507226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507227    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507228    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
507229    +   end;
MPRINT(EM_DIAGRAM):   end;
507230    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507231    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
507232    +   end;
MPRINT(EM_DIAGRAM):   end;
507233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507234    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
507235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507237    +   end;
MPRINT(EM_DIAGRAM):   end;
507238    +end;
MPRINT(EM_DIAGRAM):   end;
507239    +
507240    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
507241    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
507242    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
507243    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
507244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507246    +end;
MPRINT(EM_DIAGRAM):   end;
507247    +else do;
MPRINT(EM_DIAGRAM):   else do;
507248    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507249    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
507250    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507251    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507252    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
507253    +   end;
MPRINT(EM_DIAGRAM):   end;
507254    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507255    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
507256    +   end;
MPRINT(EM_DIAGRAM):   end;
507257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507258    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
507259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507261    +   end;
MPRINT(EM_DIAGRAM):   end;
507262    +end;
MPRINT(EM_DIAGRAM):   end;
507263    +
507264    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
507265    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
507266    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
507267    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
507268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507270    +end;
MPRINT(EM_DIAGRAM):   end;
507271    +else do;
MPRINT(EM_DIAGRAM):   else do;
507272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507273    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
507274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507275    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507276    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
507277    +   end;
MPRINT(EM_DIAGRAM):   end;
507278    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507279    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
507280    +   end;
MPRINT(EM_DIAGRAM):   end;
507281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507282    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
507283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507285    +   end;
MPRINT(EM_DIAGRAM):   end;
507286    +end;
MPRINT(EM_DIAGRAM):   end;
507287    +
507288    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
507289    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
507290    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
507291    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
507292    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507293    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507294    +end;
MPRINT(EM_DIAGRAM):   end;
507295    +else do;
MPRINT(EM_DIAGRAM):   else do;
507296    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507297    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
507298    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507299    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507300    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
507301    +   end;
MPRINT(EM_DIAGRAM):   end;
507302    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507303    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
507304    +   end;
MPRINT(EM_DIAGRAM):   end;
507305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507306    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
507307    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507308    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507309    +   end;
MPRINT(EM_DIAGRAM):   end;
507310    +end;
MPRINT(EM_DIAGRAM):   end;
507311    +
507312    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
507313    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
507314    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
507315    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
507316    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507317    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507318    +end;
MPRINT(EM_DIAGRAM):   end;
507319    +else do;
MPRINT(EM_DIAGRAM):   else do;
507320    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507321    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
507322    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507323    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507324    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
507325    +   end;
MPRINT(EM_DIAGRAM):   end;
507326    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507327    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
507328    +   end;
MPRINT(EM_DIAGRAM):   end;
507329    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507330    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
507331    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507332    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507333    +   end;
MPRINT(EM_DIAGRAM):   end;
507334    +end;
MPRINT(EM_DIAGRAM):   end;
507335    +
507336    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
507337    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
507338    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
507339    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
507340    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507341    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507342    +end;
MPRINT(EM_DIAGRAM):   end;
507343    +else do;
MPRINT(EM_DIAGRAM):   else do;
507344    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507345    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
507346    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507347    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507348    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
507349    +   end;
MPRINT(EM_DIAGRAM):   end;
507350    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507351    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
507352    +   end;
MPRINT(EM_DIAGRAM):   end;
507353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507354    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
507355    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507356    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507357    +   end;
MPRINT(EM_DIAGRAM):   end;
507358    +end;
MPRINT(EM_DIAGRAM):   end;
507359    +
507360    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
507361    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
507362    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
507363    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
507364    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507365    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507366    +end;
MPRINT(EM_DIAGRAM):   end;
507367    +else do;
MPRINT(EM_DIAGRAM):   else do;
507368    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507369    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
507370    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507371    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
507372    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
507373    +   end;
MPRINT(EM_DIAGRAM):   end;
507374    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
507375    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
507376    +   end;
MPRINT(EM_DIAGRAM):   end;
507377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507378    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
507379    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507380    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507381    +   end;
MPRINT(EM_DIAGRAM):   end;
507382    +end;
MPRINT(EM_DIAGRAM):   end;
507383    +
507384    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
507385    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
507386    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
507387    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
507388    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
507389    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
507390    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
507391    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
507392    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
507393    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
507394    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
507395    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
507396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507398    +end;
MPRINT(EM_DIAGRAM):   end;
507399    +else do;
MPRINT(EM_DIAGRAM):   else do;
507400    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
507401    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
507402    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507403    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
507404    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
507405    +   end;
MPRINT(EM_DIAGRAM):   end;
507406    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
507407    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
507408    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
507409    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
507410    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
507411    +   end;
MPRINT(EM_DIAGRAM):   end;
507412    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
507413    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
507414    +   end;
MPRINT(EM_DIAGRAM):   end;
507415    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
507416    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
507417    +   end;
MPRINT(EM_DIAGRAM):   end;
507418    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
507419    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
507420    +   end;
MPRINT(EM_DIAGRAM):   end;
507421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507422    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
507423    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
507424    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
507425    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
507426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507428    +   end;
MPRINT(EM_DIAGRAM):   end;
507429    +end;
MPRINT(EM_DIAGRAM):   end;
507430    +
507431    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
507432    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
507433    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
507434    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
507435    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
507436    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
507437    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
507438    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
507439    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
507440    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
507441    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
507442    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
507443    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
507444    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507445    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507446    +end;
MPRINT(EM_DIAGRAM):   end;
507447    +else do;
MPRINT(EM_DIAGRAM):   else do;
507448    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
507449    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
507450    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507451    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
507452    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
507453    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
507454    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
507455    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
507456    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507457    +         end;
MPRINT(EM_DIAGRAM):   end;
507458    +         else do;
MPRINT(EM_DIAGRAM):   else do;
507459    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
507460    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
507461    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507462    +            end;
MPRINT(EM_DIAGRAM):   end;
507463    +         end;
MPRINT(EM_DIAGRAM):   end;
507464    +      end;
MPRINT(EM_DIAGRAM):   end;
507465    +      else do;
MPRINT(EM_DIAGRAM):   else do;
507466    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
507467    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
507468    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507469    +         end;
MPRINT(EM_DIAGRAM):   end;
507470    +      end;
MPRINT(EM_DIAGRAM):   end;
507471    +   end;
MPRINT(EM_DIAGRAM):   end;
507472    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507473    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
507474    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
507475    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507476    +      end;
MPRINT(EM_DIAGRAM):   end;
507477    +      else do;
MPRINT(EM_DIAGRAM):   else do;
507478    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
507479    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
507480    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
507481    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
507482    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
507483    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507484    +         end;
MPRINT(EM_DIAGRAM):   end;
507485    +      end;
MPRINT(EM_DIAGRAM):   end;
507486    +   end;
MPRINT(EM_DIAGRAM):   end;
507487    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
507488    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
507489    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
507490    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
507491    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
507492    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507493    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507494    +   end;
MPRINT(EM_DIAGRAM):   end;
507495    +end;
MPRINT(EM_DIAGRAM):   end;
507496    +
507497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507498    +*** Checking missing input Interval
507499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
507500    +
507501    +IF NMISS(
507502    +   AcceptedCmpTotal ,
507503    +   Age ,
507504    +   Frq ,
507505    +   Income ,
507506    +   Kidhome ,
507507    +   Mnt ,
507508    +   MntFishProducts ,
507509    +   MntFruits ,
507510    +   MntGoldProds ,
507511    +   MntMeatProducts ,
507512    +   MntSweetProducts ,
507513    +   MntWines ,
507514    +   MonthsAsCustomer ,
507515    +   NumCatalogPurchases ,
507516    +   NumDealsPurchases ,
507517    +   NumDistPurchases ,
507518    +   NumStorePurchases ,
507519    +   NumWebPurchases ,
507520    +   NumWebVisitsMonth ,
507521    +   RFMstat ,
507522    +   RMntFrq ,
507523    +   Recency ,
507524    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
507525    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
507526    +
507527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507528    +END;
MPRINT(EM_DIAGRAM):   END;
507529    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507530    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
507531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507532    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507533    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
507534    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
507535    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
507536    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
507537    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
507538    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
507539    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
507540    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
507541    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
507542    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
507543    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
507544    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
507545    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
507546    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
507547    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
507548    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
507549    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
507550    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
507551    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
507552    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
507553    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
507554    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
507555    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
507556    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
507557    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
507558    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
507559    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
507560    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
507561    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
507562    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
507563    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
507564    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
507565    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
507566    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
507567    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
507568    +END;
MPRINT(EM_DIAGRAM):   END;
507569    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507570    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
507571    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
507572    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
507573    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
507574    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
507575    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
507576    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
507577    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
507578    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
507579    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
507580    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
507581    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
507582    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
507583    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
507584    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
507585    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
507586    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
507587    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
507588    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
507589    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
507590    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
507591    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
507592    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
507593    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
507594    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
507595    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
507596    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
507597    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
507598    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
507599    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
507600    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
507601    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
507602    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
507603    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
507604    +   ELSE S_NumCatalogPurchases
507605    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
507606    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
507607    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
507608    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
507609    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
507610    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
507611    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
507612    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
507613    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
507614    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
507615    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
507616    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
507617    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
507618    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
507619    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
507620    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
507621    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
507622    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
507623    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
507624    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
507625    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
507626    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
507627    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
507628    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
507629    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
507630    +END;
MPRINT(EM_DIAGRAM):   END;
507631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507632    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
507633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507635    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
507636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507638    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
507639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507640    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507641    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
507642    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
507643    +        S_Income  +    -0.27053363011695 * S_Kidhome
507644    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
507645    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
507646    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
507647    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
507648    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
507649    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
507650    +          +    -1.35624485206227 * S_NumDealsPurchases
507651    +          +    -0.54646115734684 * S_NumDistPurchases
507652    +          +     1.29794225108321 * S_NumStorePurchases
507653    +          +      1.8453064081809 * S_NumWebPurchases
507654    +          +    -0.92747144824026 * S_NumWebVisitsMonth
507655    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
507656    +        S_RMntFrq  +     0.73207333681971 * S_Recency
507657    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome +
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 *
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts +
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 *
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 *
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 *
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 *
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq +
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
507658    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
507659    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
507660    +        S_Income  +    -0.79821220724157 * S_Kidhome
507661    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
507662    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
507663    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
507664    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
507665    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
507666    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
507667    +          +     0.72513216556859 * S_NumDealsPurchases
507668    +          +    -0.15566774650584 * S_NumDistPurchases
507669    +          +     -0.8847675798982 * S_NumStorePurchases
507670    +          +    -0.79405200318252 * S_NumWebPurchases
507671    +          +     1.74003779802254 * S_NumWebVisitsMonth
507672    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
507673    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
507674    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome +
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 *
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts +
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 *
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 *
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 *
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 *
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq +
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
507675    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
507676    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
507677    +        S_Income  +    -0.58596240450544 * S_Kidhome
507678    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
507679    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
507680    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
507681    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
507682    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
507683    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
507684    +          +     0.17466385502192 * S_NumDealsPurchases
507685    +          +    -0.06219545947203 * S_NumDistPurchases
507686    +          +     0.16637546838853 * S_NumStorePurchases
507687    +          +    -0.06908729397635 * S_NumWebPurchases
507688    +          +     1.44269772444244 * S_NumWebVisitsMonth
507689    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
507690    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
507691    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age +
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome +
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 *
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts +
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 *
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 *
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 *
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 *
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq +
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
507692    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
507693    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
507694    +        S_Income  +    -0.42454238091412 * S_Kidhome
507695    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
507696    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
507697    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
507698    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
507699    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
507700    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
507701    +          +     0.77329078721398 * S_NumDealsPurchases
507702    +          +     0.31693324305765 * S_NumDistPurchases
507703    +          +    -1.08524196373091 * S_NumStorePurchases
507704    +          +    -0.96945384922979 * S_NumWebPurchases
507705    +          +     1.24659288571587 * S_NumWebVisitsMonth
507706    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
507707    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
507708    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age +
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome +
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 *
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts +
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 *
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 *
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 *
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 *
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq +
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
507709    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
507710    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
507711    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
507712    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
507713    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 *
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 +
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 *
HigherEducationBinary0 ;
507714    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
507715    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
507716    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
507717    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
507718    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 *
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 +
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 *
HigherEducationBinary0 ;
507719    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
507720    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
507721    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
507722    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
507723    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 *
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 +
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 *
HigherEducationBinary0 ;
507724    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
507725    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
507726    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
507727    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
507728    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 *
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 +
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 *
HigherEducationBinary0 ;
507729    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
507730    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
507731    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
507732    +          +     0.36788499721115 * Marital_StatusDivorced
507733    +          +    -0.16988636986433 * Marital_StatusMarried
507734    +          +    -0.24560973256761 * Marital_StatusSingle
507735    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 *
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried +
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
507736    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
507737    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
507738    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
507739    +          +     0.24497797058028 * Marital_StatusDivorced
507740    +          +    -1.44410245434424 * Marital_StatusMarried
507741    +          +     1.47441310087392 * Marital_StatusSingle
507742    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 *
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried +
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
507743    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
507744    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
507745    +        EducationGraduation  +     0.04653963359475 * EducationMaster
507746    +          +     0.15823225296452 * Marital_StatusDivorced
507747    +          +    -0.39129434667884 * Marital_StatusMarried
507748    +          +     0.84414069966504 * Marital_StatusSingle
507749    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 *
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried +
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
507750    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
507751    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
507752    +        EducationGraduation  +     0.40030852414737 * EducationMaster
507753    +          +     1.22039169814542 * Marital_StatusDivorced
507754    +          +     0.91592976063128 * Marital_StatusMarried
507755    +          +    -1.51267332883308 * Marital_StatusSingle
507756    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 *
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried +
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
507757    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
507758    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
507759    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
507760    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
507761    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
507762    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
507763    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
507764    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
507765    +END;
MPRINT(EM_DIAGRAM):   END;
507766    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507767    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
507768    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
507769    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
507770    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
507771    +END;
MPRINT(EM_DIAGRAM):   END;
507772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507773    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
507774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507775    +
507776    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
507777    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
507778    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507779    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
507780    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
507781    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507782    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
507783    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507784    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507785    +end;
MPRINT(EM_DIAGRAM):   end;
507786    +else do;
MPRINT(EM_DIAGRAM):   else do;
507787    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
507788    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
507789    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
507790    +   end;
MPRINT(EM_DIAGRAM):   end;
507791    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
507792    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
507793    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
507794    +   end;
MPRINT(EM_DIAGRAM):   end;
507795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507796    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507797    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507798    +   end;
MPRINT(EM_DIAGRAM):   end;
507799    +end;
MPRINT(EM_DIAGRAM):   end;
507800    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507801    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
507802    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 +
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
507803    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
507804    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
507805    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
507806    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
507807    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
507808    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
507809    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
507810    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
507811    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
507812    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
507813    +END;
MPRINT(EM_DIAGRAM):   END;
507814    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507815    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
507816    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
507817    +END;
MPRINT(EM_DIAGRAM):   END;
507818    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
507819    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
507820    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
507821    +END;
MPRINT(EM_DIAGRAM):   END;
507822    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
507823    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
507824    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
507825    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
507826    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
507827    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
507828    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
507829    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507830    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
507831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507832    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
507833    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
507834    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
507835    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
507836    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
507837    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
507838    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
507839    +END;
MPRINT(EM_DIAGRAM):   END;
507840    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
507841    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
507842    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
507843    +drop
507844    +H11
507845    +H12
507846    +H13
507847    +H14
507848    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
507849    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
507850    +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
507851    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507852    +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
507853    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507854    +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
507855    +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
507856    +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
507857    +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
507858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507859    +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
507860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507861    +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
507862    +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
507863    +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
507864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507865    +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
507866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507867    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507868    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
507869    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
507870    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
507871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507872    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
507873    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
507874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
507875    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
507876    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
507877    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
507878    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
507879    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
507880    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
507881    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
507882    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
507883    +LENGTH _WARN_ $4
507884    +      F_DepVar  $ 12
507885    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
507886    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
507887    +
507888    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
507889    +
507890    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
507891    +
507892    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
507893    +
507894    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
507895    +
507896    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
507897    +
507898    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
507899    +
507900    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
507901    +
507902    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
507903    +
507904    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
507905    +
507906    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
507907    +
507908    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
507909    +
507910    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
507911    +
507912    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
507913    +
507914    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
507915    +
507916    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
507917    +
507918    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
507919    +
507920    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
507921    +
507922    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
507923    +
507924    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
507925    +
507926    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
507927    +
507928    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
507929    +
507930    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
507931    +
507932    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
507933    +
507934    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
507935    +
507936    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
507937    +
507938    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
507939    +
507940    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
507941    +
507942    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
507943    +
507944    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
507945    +
507946    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
507947    +
507948    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
507949    +
507950    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
507951    +
507952    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
507953    +
507954    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
507955    +
507956    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
507957    +
507958    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
507959    +
507960    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
507961    +
507962    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
507963    +
507964    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
507965    +
507966    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
507967    +
507968    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
The SAS System
 
507969    +
507970    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
507971    +
507972    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
507973    +
507974    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
507975    +
507976    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507977    +
507978    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
507979    +
507980    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
507981    +
507982    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
507983    +
507984    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
507985    +
507986    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
507987    +
507988    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
507989    +
507990    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
507991    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
507992    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
507993    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
507994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507996    +end;
MPRINT(EM_DIAGRAM):   end;
507997    +else do;
MPRINT(EM_DIAGRAM):   else do;
507998    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507999    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
508000    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508001    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508002    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
508003    +   end;
MPRINT(EM_DIAGRAM):   end;
508004    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508005    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
508006    +   end;
MPRINT(EM_DIAGRAM):   end;
508007    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508008    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
508009    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508010    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508011    +   end;
MPRINT(EM_DIAGRAM):   end;
508012    +end;
MPRINT(EM_DIAGRAM):   end;
508013    +
508014    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
508015    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
508016    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
508017    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
508018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508020    +end;
MPRINT(EM_DIAGRAM):   end;
508021    +else do;
MPRINT(EM_DIAGRAM):   else do;
508022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508023    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
508024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508025    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508026    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
508027    +   end;
MPRINT(EM_DIAGRAM):   end;
508028    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508029    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
508030    +   end;
MPRINT(EM_DIAGRAM):   end;
508031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508032    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
508033    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508034    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508035    +   end;
MPRINT(EM_DIAGRAM):   end;
508036    +end;
MPRINT(EM_DIAGRAM):   end;
508037    +
508038    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
508039    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
508040    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
508041    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
508042    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508043    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508044    +end;
MPRINT(EM_DIAGRAM):   end;
508045    +else do;
MPRINT(EM_DIAGRAM):   else do;
508046    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508047    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
508048    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508049    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508050    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
508051    +   end;
MPRINT(EM_DIAGRAM):   end;
508052    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508053    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
508054    +   end;
MPRINT(EM_DIAGRAM):   end;
508055    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508056    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
508057    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508058    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508059    +   end;
MPRINT(EM_DIAGRAM):   end;
508060    +end;
MPRINT(EM_DIAGRAM):   end;
508061    +
508062    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
508063    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
508064    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
508065    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
508066    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508068    +end;
MPRINT(EM_DIAGRAM):   end;
508069    +else do;
MPRINT(EM_DIAGRAM):   else do;
508070    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508071    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
508072    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508073    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508074    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
508075    +   end;
MPRINT(EM_DIAGRAM):   end;
508076    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508077    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
508078    +   end;
MPRINT(EM_DIAGRAM):   end;
508079    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508080    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
508081    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508082    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508083    +   end;
MPRINT(EM_DIAGRAM):   end;
508084    +end;
MPRINT(EM_DIAGRAM):   end;
508085    +
508086    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
508087    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
508088    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
508089    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
508090    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508091    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508092    +end;
MPRINT(EM_DIAGRAM):   end;
508093    +else do;
MPRINT(EM_DIAGRAM):   else do;
508094    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508095    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
508096    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508097    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508098    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
508099    +   end;
MPRINT(EM_DIAGRAM):   end;
508100    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508101    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
508102    +   end;
MPRINT(EM_DIAGRAM):   end;
508103    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508104    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
508105    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508106    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508107    +   end;
MPRINT(EM_DIAGRAM):   end;
508108    +end;
MPRINT(EM_DIAGRAM):   end;
508109    +
508110    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
508111    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
508112    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
508113    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
508114    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508115    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508116    +end;
MPRINT(EM_DIAGRAM):   end;
508117    +else do;
MPRINT(EM_DIAGRAM):   else do;
508118    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508119    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
508120    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508121    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508122    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
508123    +   end;
MPRINT(EM_DIAGRAM):   end;
508124    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508125    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
508126    +   end;
MPRINT(EM_DIAGRAM):   end;
508127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508128    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
508129    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508130    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508131    +   end;
MPRINT(EM_DIAGRAM):   end;
508132    +end;
MPRINT(EM_DIAGRAM):   end;
508133    +
508134    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
508135    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
508136    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
508137    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
508138    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508139    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508140    +end;
MPRINT(EM_DIAGRAM):   end;
508141    +else do;
MPRINT(EM_DIAGRAM):   else do;
508142    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508143    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
508144    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508145    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
508146    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
508147    +   end;
MPRINT(EM_DIAGRAM):   end;
508148    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
508149    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
508150    +   end;
MPRINT(EM_DIAGRAM):   end;
508151    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508152    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
508153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508155    +   end;
MPRINT(EM_DIAGRAM):   end;
508156    +end;
MPRINT(EM_DIAGRAM):   end;
508157    +
508158    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
508159    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
508160    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
508161    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
508162    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
508163    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
508164    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
508165    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
508166    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
508167    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
508168    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
508169    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
508170    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508171    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508172    +end;
MPRINT(EM_DIAGRAM):   end;
508173    +else do;
MPRINT(EM_DIAGRAM):   else do;
508174    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
508175    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
508176    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508177    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
508178    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
508179    +   end;
MPRINT(EM_DIAGRAM):   end;
508180    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
508181    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
508182    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
508183    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
508184    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
508185    +   end;
MPRINT(EM_DIAGRAM):   end;
508186    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
508187    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
508188    +   end;
MPRINT(EM_DIAGRAM):   end;
508189    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
508190    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
508191    +   end;
MPRINT(EM_DIAGRAM):   end;
508192    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
508193    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
508194    +   end;
MPRINT(EM_DIAGRAM):   end;
508195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508196    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
508197    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
508198    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
508199    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
508200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508202    +   end;
MPRINT(EM_DIAGRAM):   end;
508203    +end;
MPRINT(EM_DIAGRAM):   end;
508204    +
508205    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
508206    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
508207    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
508208    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
508209    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
508210    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
508211    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
508212    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
508213    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
508214    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
508215    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
508216    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
508217    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
508218    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508219    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508220    +end;
MPRINT(EM_DIAGRAM):   end;
508221    +else do;
MPRINT(EM_DIAGRAM):   else do;
508222    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
508223    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
508224    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508225    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
508226    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
508227    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
508228    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
508229    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
508230    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508231    +         end;
MPRINT(EM_DIAGRAM):   end;
508232    +         else do;
MPRINT(EM_DIAGRAM):   else do;
508233    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
508234    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
508235    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508236    +            end;
MPRINT(EM_DIAGRAM):   end;
508237    +         end;
MPRINT(EM_DIAGRAM):   end;
508238    +      end;
MPRINT(EM_DIAGRAM):   end;
508239    +      else do;
MPRINT(EM_DIAGRAM):   else do;
508240    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
508241    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
508242    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508243    +         end;
MPRINT(EM_DIAGRAM):   end;
508244    +      end;
MPRINT(EM_DIAGRAM):   end;
508245    +   end;
MPRINT(EM_DIAGRAM):   end;
508246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508247    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
508248    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
508249    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508250    +      end;
MPRINT(EM_DIAGRAM):   end;
508251    +      else do;
MPRINT(EM_DIAGRAM):   else do;
508252    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
508253    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
508254    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
508255    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
508256    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
508257    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508258    +         end;
MPRINT(EM_DIAGRAM):   end;
508259    +      end;
MPRINT(EM_DIAGRAM):   end;
508260    +   end;
MPRINT(EM_DIAGRAM):   end;
508261    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
508262    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
508263    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
508264    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
508265    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
508266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508268    +   end;
MPRINT(EM_DIAGRAM):   end;
508269    +end;
MPRINT(EM_DIAGRAM):   end;
508270    +
508271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508272    +*** Checking missing input Interval
508273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
508274    +
508275    +IF NMISS(
508276    +   AcceptedCmpTotal ,
508277    +   Age ,
508278    +   Frq ,
508279    +   Income ,
508280    +   Kidhome ,
508281    +   Mnt ,
508282    +   MntFishProducts ,
508283    +   MntFruits ,
508284    +   MntGoldProds ,
508285    +   MntMeatProducts ,
508286    +   MntSweetProducts ,
508287    +   MntWines ,
508288    +   MonthsAsCustomer ,
508289    +   NumCatalogPurchases ,
508290    +   NumDealsPurchases ,
508291    +   NumDistPurchases ,
508292    +   NumStorePurchases ,
508293    +   NumWebPurchases ,
508294    +   NumWebVisitsMonth ,
508295    +   RFMstat ,
508296    +   RMntFrq ,
508297    +   Recency ,
508298    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
508299    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
508300    +
508301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508302    +END;
MPRINT(EM_DIAGRAM):   END;
508303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508304    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
508305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508306    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
508307    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
508308    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
508309    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
508310    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
508311    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
508312    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
508313    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
508314    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
508315    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
508316    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
508317    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
508318    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
508319    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
508320    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
508321    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
508322    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
508323    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
508324    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
508325    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
508326    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
508327    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
508328    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
508329    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
508330    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
508331    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
508332    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
508333    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
508334    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
508335    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
508336    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
508337    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
508338    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
508339    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
508340    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
508341    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
508342    +END;
MPRINT(EM_DIAGRAM):   END;
508343    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508344    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
508345    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
508346    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
508347    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
508348    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
508349    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
508350    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
508351    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
508352    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
508353    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
508354    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
508355    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
508356    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
508357    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
508358    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
508359    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
508360    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
508361    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
508362    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
508363    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
508364    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
508365    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
508366    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
508367    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
508368    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
508369    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
508370    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
508371    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
508372    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
508373    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
508374    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
508375    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
508376    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
508377    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
508378    +   ELSE S_NumCatalogPurchases
508379    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
508380    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
508381    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
508382    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
508383    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
508384    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
508385    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
508386    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
508387    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
508388    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
508389    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
508390    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
508391    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
508392    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
508393    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
508394    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
508395    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
508396    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
508397    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
508398    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
508399    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
508400    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
508401    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
508402    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
508403    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
508404    +END;
MPRINT(EM_DIAGRAM):   END;
508405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508406    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
508407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508409    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
508410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508412    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
508413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508414    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
508415    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
508416    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
508417    +        S_Income  +    -0.14142658616971 * S_Kidhome
508418    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
508419    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
508420    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
508421    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
508422    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
508423    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
508424    +          +     0.96837841774168 * S_NumDealsPurchases
508425    +          +      0.2846105381881 * S_NumDistPurchases
508426    +          +    -0.69514041792943 * S_NumStorePurchases
508427    +          +    -0.96425407351749 * S_NumWebPurchases
508428    +          +     0.79545449599683 * S_NumWebVisitsMonth
508429    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
508430    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
508431    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
508432    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
508433    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
508434    +        S_Income  +    -0.55432195959203 * S_Kidhome
508435    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
508436    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
508437    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
508438    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
508439    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
508440    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
508441    +          +      0.2190184330724 * S_NumDealsPurchases
508442    +          +    -0.01682909442896 * S_NumDistPurchases
508443    +          +    -0.70244951048552 * S_NumStorePurchases
508444    +          +     -0.3057457659316 * S_NumWebPurchases
508445    +          +     0.95928538762715 * S_NumWebVisitsMonth
508446    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
508447    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
508448    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
508449    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
508450    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
508451    +        S_Income  +    -0.06354861159882 * S_Kidhome
508452    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
508453    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
508454    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
508455    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
508456    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
508457    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
508458    +          +    -0.21394230159696 * S_NumDealsPurchases
508459    +          +    -0.23833771124663 * S_NumDistPurchases
508460    +          +     0.45832031017813 * S_NumStorePurchases
508461    +          +    -0.30226952040179 * S_NumWebPurchases
508462    +          +    -0.29796387184481 * S_NumWebVisitsMonth
508463    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
508464    +        S_RMntFrq  +     0.87067423045258 * S_Recency
508465    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
508466    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
508467    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
508468    +        S_Income  +    -0.04839586846715 * S_Kidhome
508469    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
508470    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
508471    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
508472    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
508473    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
508474    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
508475    +          +    -0.43749647771198 * S_NumDealsPurchases
508476    +          +     0.21263473847472 * S_NumDistPurchases
508477    +          +     0.26102168039141 * S_NumStorePurchases
508478    +          +     0.54921725943657 * S_NumWebPurchases
508479    +          +    -0.75685843498122 * S_NumWebVisitsMonth
508480    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
508481    +        S_RMntFrq  +     0.80536256822347 * S_Recency
508482    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
508483    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
508484    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
508485    +        S_Income  +     0.71499527198653 * S_Kidhome
508486    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
508487    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
508488    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
508489    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
508490    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
508491    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
508492    +          +     0.09436067776126 * S_NumDealsPurchases
508493    +          +    -0.02824201859641 * S_NumDistPurchases
508494    +          +    -0.06770433780564 * S_NumStorePurchases
508495    +          +    -0.07177620319715 * S_NumWebPurchases
508496    +          +    -0.75589979685266 * S_NumWebVisitsMonth
508497    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
508498    +        S_RMntFrq  +     0.94408788011429 * S_Recency
508499    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
508500    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
508501    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
508502    +        S_Income  +    -0.63474522042341 * S_Kidhome
508503    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
508504    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
508505    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
508506    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
508507    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
508508    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
508509    +          +    -0.51154511343396 * S_NumDealsPurchases
508510    +          +    -0.52422915823572 * S_NumDistPurchases
508511    +          +     0.30305498422357 * S_NumStorePurchases
508512    +          +     0.12197321559338 * S_NumWebPurchases
508513    +          +    -0.10520335422769 * S_NumWebVisitsMonth
508514    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
508515    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
508516    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
508517    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
508518    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
508519    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
508520    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
508521    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
508522    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
508523    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
508524    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
508525    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
508526    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
508527    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
508528    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
508529    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
508530    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
508531    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
508532    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
508533    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
508534    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
508535    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
508536    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
508537    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
508538    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
508539    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
508540    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
508541    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
508542    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
508543    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
508544    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
508545    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
508546    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
508547    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
508548    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
508549    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
508550    +          +     0.10234616400375 * Marital_StatusDivorced
508551    +          +     0.27961650739075 * Marital_StatusMarried
508552    +          +    -0.40239488723767 * Marital_StatusSingle
508553    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
508554    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
508555    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
508556    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
508557    +          +     0.46385792428023 * Marital_StatusDivorced
508558    +          +    -0.62344590646391 * Marital_StatusMarried
508559    +          +     0.61767209252062 * Marital_StatusSingle
508560    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
508561    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
508562    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
508563    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
508564    +          +    -0.07839612590836 * Marital_StatusDivorced
508565    +          +     0.35316864062221 * Marital_StatusMarried
508566    +          +    -0.10730136429834 * Marital_StatusSingle
508567    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
508568    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
508569    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
508570    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
508571    +          +    -0.09942175269886 * Marital_StatusDivorced
508572    +          +     0.24385460865335 * Marital_StatusMarried
508573    +          +    -0.33658955096296 * Marital_StatusSingle
508574    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
508575    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
508576    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
508577    +        EducationGraduation  +     0.37352174719748 * EducationMaster
508578    +          +    -0.08047852561096 * Marital_StatusDivorced
508579    +          +     1.16485862694561 * Marital_StatusMarried
508580    +          +    -0.94140251178566 * Marital_StatusSingle
508581    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
508582    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
508583    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
508584    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
508585    +          +    -0.16621963893391 * Marital_StatusDivorced
508586    +          +    -0.44542186297324 * Marital_StatusMarried
508587    +          +     0.42176133228308 * Marital_StatusSingle
508588    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
508589    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
508590    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
508591    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
508592    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
508593    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
508594    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
508595    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
508596    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
508597    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
508598    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
508599    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
508600    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
508601    +END;
MPRINT(EM_DIAGRAM):   END;
508602    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508603    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
508604    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
508605    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
508606    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
508607    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
508608    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
508609    +END;
MPRINT(EM_DIAGRAM):   END;
508610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508611    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
508612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508613    +
508614    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
508615    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
508616    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
508617    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
508618    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
508619    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508620    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
508621    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
508622    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
508623    +end;
MPRINT(EM_DIAGRAM):   end;
508624    +else do;
MPRINT(EM_DIAGRAM):   else do;
508625    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
508626    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
508627    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
508628    +   end;
MPRINT(EM_DIAGRAM):   end;
508629    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
508630    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
508631    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
508632    +   end;
MPRINT(EM_DIAGRAM):   end;
508633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508634    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
508635    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
508636    +   end;
MPRINT(EM_DIAGRAM):   end;
508637    +end;
MPRINT(EM_DIAGRAM):   end;
508638    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
508639    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
508640    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
508641    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
508642    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
508643    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
508644    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
508645    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
508646    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
508647    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
508648    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
508649    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
508650    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
508651    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
508652    +END;
MPRINT(EM_DIAGRAM):   END;
508653    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508654    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
508655    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
508656    +END;
MPRINT(EM_DIAGRAM):   END;
508657    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
508658    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
508659    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
508660    +END;
MPRINT(EM_DIAGRAM):   END;
508661    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
508662    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
508663    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
508664    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
508665    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
508666    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
508667    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
508668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508669    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
508670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508671    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
508672    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
508673    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
508674    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
508675    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
508676    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
508677    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
508678    +END;
MPRINT(EM_DIAGRAM):   END;
508679    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
508680    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
508681    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
508682    +drop
508683    +H11
508684    +H12
508685    +H13
508686    +H14
508687    +H15
508688    +H16
508689    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
508690    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
508691    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
508692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508693    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
508694    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508695    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
508696    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
508697    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
508698    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
508699    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508700    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
508701    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508702    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
508703    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
508704    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
508705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508706    +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
508707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508709    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
508710    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
508711    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
508712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508713    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
508714    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
508715    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
508716    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
508717    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
508718    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
508719    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
508720    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
508721    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
508722    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
508723    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
508724    +LENGTH _WARN_ $4
508725    +      F_DepVar  $ 12
508726    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
508727    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
508728    +
508729    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
508730    +
508731    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
508732    +
508733    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
508734    +
508735    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
508736    +
508737    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
508738    +
508739    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
508740    +
508741    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
508742    +
508743    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
508744    +
508745    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
508746    +
508747    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
508748    +
508749    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
508750    +
508751    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
508752    +
508753    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
508754    +
508755    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
508756    +
508757    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
508758    +
508759    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
508760    +
508761    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
508762    +
508763    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
508764    +
508765    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
508766    +
508767    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
508768    +
508769    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
508770    +
508771    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
508772    +
508773    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
508774    +
508775    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
508776    +
508777    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
508778    +
508779    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
508780    +
508781    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
508782    +
508783    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
508784    +
508785    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
508786    +
508787    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
508788    +
508789    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
508790    +
508791    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
508792    +
508793    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
508794    +
508795    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
508796    +
508797    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
508798    +
508799    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
508800    +
508801    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
508802    +
508803    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
508804    +
508805    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
508806    +
508807    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
508808    +
508809    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
508810    +
508811    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
508812    +
508813    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
508814    +
508815    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
508816    +
508817    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
508818    +
508819    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
508820    +
508821    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
508822    +
508823    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
508824    +
508825    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
508826    +
508827    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
508828    +
508829    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
508830    +
508831    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
508832    +
508833    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
508834    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
508835    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
508836    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
508837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508839    +end;
MPRINT(EM_DIAGRAM):   end;
508840    +else do;
MPRINT(EM_DIAGRAM):   else do;
508841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508842    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
508843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508844    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508845    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
508846    +   end;
MPRINT(EM_DIAGRAM):   end;
508847    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508848    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
508849    +   end;
MPRINT(EM_DIAGRAM):   end;
508850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508851    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
508852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508854    +   end;
MPRINT(EM_DIAGRAM):   end;
508855    +end;
MPRINT(EM_DIAGRAM):   end;
508856    +
508857    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
508858    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
508859    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
508860    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
508861    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508862    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508863    +end;
MPRINT(EM_DIAGRAM):   end;
508864    +else do;
MPRINT(EM_DIAGRAM):   else do;
508865    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508866    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
508867    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508868    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508869    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
508870    +   end;
MPRINT(EM_DIAGRAM):   end;
508871    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508872    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
508873    +   end;
MPRINT(EM_DIAGRAM):   end;
508874    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508875    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
508876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508878    +   end;
MPRINT(EM_DIAGRAM):   end;
508879    +end;
MPRINT(EM_DIAGRAM):   end;
508880    +
508881    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
508882    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
508883    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
508884    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
508885    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508886    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508887    +end;
MPRINT(EM_DIAGRAM):   end;
508888    +else do;
MPRINT(EM_DIAGRAM):   else do;
508889    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508890    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
508891    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508892    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508893    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
508894    +   end;
MPRINT(EM_DIAGRAM):   end;
508895    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508896    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
508897    +   end;
MPRINT(EM_DIAGRAM):   end;
508898    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508899    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
508900    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508901    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508902    +   end;
MPRINT(EM_DIAGRAM):   end;
508903    +end;
MPRINT(EM_DIAGRAM):   end;
508904    +
508905    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
508906    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
508907    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
508908    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
508909    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508910    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508911    +end;
MPRINT(EM_DIAGRAM):   end;
508912    +else do;
MPRINT(EM_DIAGRAM):   else do;
508913    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508914    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
508915    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508916    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508917    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
508918    +   end;
MPRINT(EM_DIAGRAM):   end;
508919    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508920    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
508921    +   end;
MPRINT(EM_DIAGRAM):   end;
508922    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508923    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
508924    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508925    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508926    +   end;
MPRINT(EM_DIAGRAM):   end;
508927    +end;
MPRINT(EM_DIAGRAM):   end;
508928    +
508929    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
508930    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
508931    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
508932    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
508933    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508934    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508935    +end;
MPRINT(EM_DIAGRAM):   end;
508936    +else do;
MPRINT(EM_DIAGRAM):   else do;
508937    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508938    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
508939    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508940    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508941    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
508942    +   end;
MPRINT(EM_DIAGRAM):   end;
508943    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508944    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
508945    +   end;
MPRINT(EM_DIAGRAM):   end;
508946    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508947    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
508948    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508949    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508950    +   end;
MPRINT(EM_DIAGRAM):   end;
508951    +end;
MPRINT(EM_DIAGRAM):   end;
508952    +
508953    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
508954    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
508955    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
508956    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
508957    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508958    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508959    +end;
MPRINT(EM_DIAGRAM):   end;
508960    +else do;
MPRINT(EM_DIAGRAM):   else do;
508961    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508962    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
508963    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508964    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508965    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
508966    +   end;
MPRINT(EM_DIAGRAM):   end;
508967    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508968    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
508969    +   end;
MPRINT(EM_DIAGRAM):   end;
508970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508971    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
508972    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508973    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508974    +   end;
MPRINT(EM_DIAGRAM):   end;
508975    +end;
MPRINT(EM_DIAGRAM):   end;
508976    +
508977    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
508978    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
508979    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
508980    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
508981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508983    +end;
MPRINT(EM_DIAGRAM):   end;
508984    +else do;
MPRINT(EM_DIAGRAM):   else do;
508985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508986    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
508987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508988    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
508989    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
508990    +   end;
MPRINT(EM_DIAGRAM):   end;
508991    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
508992    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
508993    +   end;
MPRINT(EM_DIAGRAM):   end;
508994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508995    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
508996    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508997    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508998    +   end;
MPRINT(EM_DIAGRAM):   end;
508999    +end;
MPRINT(EM_DIAGRAM):   end;
509000    +
509001    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
509002    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
509003    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
509004    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
509005    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
509006    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
509007    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
509008    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
509009    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
509010    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
509011    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
509012    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
509013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509015    +end;
MPRINT(EM_DIAGRAM):   end;
509016    +else do;
MPRINT(EM_DIAGRAM):   else do;
509017    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
509018    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
509019    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509020    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
509021    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
509022    +   end;
MPRINT(EM_DIAGRAM):   end;
509023    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
509024    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
509025    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
509026    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
509027    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
509028    +   end;
MPRINT(EM_DIAGRAM):   end;
509029    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
509030    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
509031    +   end;
MPRINT(EM_DIAGRAM):   end;
509032    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
509033    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
509034    +   end;
MPRINT(EM_DIAGRAM):   end;
509035    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
509036    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
509037    +   end;
MPRINT(EM_DIAGRAM):   end;
509038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509039    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
509040    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
509041    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
509042    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
509043    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509044    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509045    +   end;
MPRINT(EM_DIAGRAM):   end;
509046    +end;
MPRINT(EM_DIAGRAM):   end;
509047    +
509048    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
509049    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
509050    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
509051    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
509052    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
509053    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
509054    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
509055    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
509056    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
509057    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
509058    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
509059    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
509060    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
509061    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509062    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509063    +end;
MPRINT(EM_DIAGRAM):   end;
509064    +else do;
MPRINT(EM_DIAGRAM):   else do;
509065    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
509066    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
509067    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509068    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
509069    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
509070    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
509071    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
509072    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
509073    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509074    +         end;
MPRINT(EM_DIAGRAM):   end;
509075    +         else do;
MPRINT(EM_DIAGRAM):   else do;
509076    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
509077    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
509078    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509079    +            end;
MPRINT(EM_DIAGRAM):   end;
509080    +         end;
MPRINT(EM_DIAGRAM):   end;
509081    +      end;
MPRINT(EM_DIAGRAM):   end;
509082    +      else do;
MPRINT(EM_DIAGRAM):   else do;
509083    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
509084    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
509085    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509086    +         end;
MPRINT(EM_DIAGRAM):   end;
509087    +      end;
MPRINT(EM_DIAGRAM):   end;
509088    +   end;
MPRINT(EM_DIAGRAM):   end;
509089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509090    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
509091    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
509092    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509093    +      end;
MPRINT(EM_DIAGRAM):   end;
509094    +      else do;
MPRINT(EM_DIAGRAM):   else do;
509095    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
509096    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
509097    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
509098    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
509099    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
509100    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509101    +         end;
MPRINT(EM_DIAGRAM):   end;
509102    +      end;
MPRINT(EM_DIAGRAM):   end;
509103    +   end;
MPRINT(EM_DIAGRAM):   end;
509104    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
509105    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
509106    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
509107    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
509108    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
509109    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509110    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509111    +   end;
MPRINT(EM_DIAGRAM):   end;
509112    +end;
MPRINT(EM_DIAGRAM):   end;
509113    +
509114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509115    +*** Checking missing input Interval
509116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
509117    +
509118    +IF NMISS(
509119    +   AcceptedCmpTotal ,
509120    +   Age ,
509121    +   Frq ,
509122    +   Income ,
509123    +   Kidhome ,
509124    +   Mnt ,
509125    +   MntFishProducts ,
509126    +   MntFruits ,
509127    +   MntGoldProds ,
509128    +   MntMeatProducts ,
509129    +   MntSweetProducts ,
509130    +   MntWines ,
509131    +   MonthsAsCustomer ,
509132    +   NumCatalogPurchases ,
509133    +   NumDealsPurchases ,
509134    +   NumDistPurchases ,
509135    +   NumStorePurchases ,
509136    +   NumWebPurchases ,
509137    +   NumWebVisitsMonth ,
509138    +   RFMstat ,
509139    +   RMntFrq ,
509140    +   Recency ,
509141    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
509142    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
509143    +
509144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509145    +END;
MPRINT(EM_DIAGRAM):   END;
509146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509147    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
509148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509149    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509150    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
509151    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
509152    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
509153    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
509154    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
509155    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
509156    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
509157    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
509158    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
509159    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
509160    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
509161    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
509162    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
509163    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
509164    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
509165    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
509166    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
509167    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
509168    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
509169    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
509170    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
509171    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
509172    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
509173    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
509174    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
509175    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
509176    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
509177    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
509178    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
509179    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
509180    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
509181    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
509182    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
509183    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
509184    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
509185    +END;
MPRINT(EM_DIAGRAM):   END;
509186    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509187    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
509188    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
509189    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
509190    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
509191    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
509192    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
509193    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
509194    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
509195    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
509196    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
509197    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
509198    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
509199    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
509200    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
509201    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
509202    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
509203    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
509204    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
509205    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
509206    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
509207    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
509208    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
509209    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
509210    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
509211    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
509212    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
509213    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
509214    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
509215    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
509216    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
509217    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
509218    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
509219    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
509220    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
509221    +   ELSE S_NumCatalogPurchases
509222    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
509223    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
509224    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
509225    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
509226    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
509227    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
509228    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
509229    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
509230    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
509231    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
509232    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
509233    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
509234    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
509235    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
509236    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
509237    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
509238    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
509239    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
509240    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
509241    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
509242    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
509243    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
509244    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
509245    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
509246    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
509247    +END;
MPRINT(EM_DIAGRAM):   END;
509248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509249    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
509250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509252    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
509253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509255    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
509256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509257    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509258    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
509259    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
509260    +        S_Income  +    -0.43070069114587 * S_Kidhome
509261    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
509262    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
509263    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
509264    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
509265    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
509266    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
509267    +          +    -0.21858146166244 * S_NumDealsPurchases
509268    +          +     0.18409991080913 * S_NumDistPurchases
509269    +          +     0.35683163455594 * S_NumStorePurchases
509270    +          +     0.24429183714976 * S_NumWebPurchases
509271    +          +     -0.1263739191616 * S_NumWebVisitsMonth
509272    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
509273    +        S_RMntFrq  +      0.3452503815146 * S_Recency
509274    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome +
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 *
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts +
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 *
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 *
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 *
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 *
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq +
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
509275    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
509276    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
509277    +        S_Income  +     0.24623934031778 * S_Kidhome
509278    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
509279    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
509280    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
509281    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
509282    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
509283    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
509284    +          +    -0.08125614129909 * S_NumDealsPurchases
509285    +          +     0.38003696656333 * S_NumDistPurchases
509286    +          +     0.22006494588298 * S_NumStorePurchases
509287    +          +     0.26217639358993 * S_NumWebPurchases
509288    +          +    -0.56905781005459 * S_NumWebVisitsMonth
509289    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
509290    +        S_RMntFrq  +     0.33060213336674 * S_Recency
509291    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome +
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 *
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts +
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 *
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 *
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 *
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 *
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq +
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
509292    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
509293    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
509294    +        S_Income  +     0.18597632724783 * S_Kidhome
509295    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
509296    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
509297    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
509298    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
509299    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
509300    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
509301    +          +     0.08121213946217 * S_NumDealsPurchases
509302    +          +    -0.04963282234139 * S_NumDistPurchases
509303    +          +    -0.09521586837775 * S_NumStorePurchases
509304    +          +     0.00630626523742 * S_NumWebPurchases
509305    +          +    -0.03891587920939 * S_NumWebVisitsMonth
509306    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
509307    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
509308    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome +
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 *
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts +
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 *
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 *
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 *
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 *
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq +
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
509309    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
509310    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
509311    +        S_Income  +     0.25356767518099 * S_Kidhome
509312    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
509313    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
509314    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
509315    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
509316    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
509317    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
509318    +          +     0.83749876944877 * S_NumDealsPurchases
509319    +          +     0.29636537008068 * S_NumDistPurchases
509320    +          +    -0.61202052257506 * S_NumStorePurchases
509321    +          +    -0.96921731415369 * S_NumWebPurchases
509322    +          +     0.10056455703323 * S_NumWebVisitsMonth
509323    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
509324    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
509325    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age +
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome +
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 *
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts +
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 *
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 *
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 *
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 *
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq +
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
509326    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
509327    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
509328    +        S_Income  +    -0.66239517276633 * S_Kidhome
509329    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
509330    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
509331    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
509332    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
509333    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
509334    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
509335    +          +     0.63122884753912 * S_NumDealsPurchases
509336    +          +     0.00285388491049 * S_NumDistPurchases
509337    +          +    -0.76222252593182 * S_NumStorePurchases
509338    +          +    -0.71485070772733 * S_NumWebPurchases
509339    +          +     1.59020450778179 * S_NumWebVisitsMonth
509340    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
509341    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
509342    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome +
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 *
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts +
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 *
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 *
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 *
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 *
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq +
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
509343    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
509344    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
509345    +        S_Income  +    -0.22662005590555 * S_Kidhome
509346    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
509347    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
509348    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
509349    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
509350    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
509351    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
509352    +          +    -0.28143084367284 * S_NumDealsPurchases
509353    +          +     0.09640746756361 * S_NumDistPurchases
509354    +          +      0.1754994442449 * S_NumStorePurchases
509355    +          +     0.14321475617403 * S_NumWebPurchases
509356    +          +     -0.1908048876137 * S_NumWebVisitsMonth
509357    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
509358    +        S_RMntFrq  +     0.02280616139018 * S_Recency
509359    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age +
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome +
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 *
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts +
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 *
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 *
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 *
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 *
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq +
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
509360    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
509361    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
509362    +        S_Income  +    -0.45643247613458 * S_Kidhome
509363    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
509364    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
509365    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
509366    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
509367    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
509368    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
509369    +          +    -0.14623073736275 * S_NumDealsPurchases
509370    +          +      0.1591142102614 * S_NumDistPurchases
509371    +          +     0.10364624011419 * S_NumStorePurchases
509372    +          +     0.21545343951201 * S_NumWebPurchases
509373    +          +     0.61096997379603 * S_NumWebVisitsMonth
509374    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
509375    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
509376    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome +
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 *
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts +
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 *
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 *
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 *
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 *
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq +
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
509377    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
509378    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
509379    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
509380    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
509381    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 *
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 +
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 *
HigherEducationBinary0 ;
509382    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
509383    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
509384    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
509385    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
509386    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 *
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 +
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 *
HigherEducationBinary0 ;
509387    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
509388    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
509389    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
509390    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
509391    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 *
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 +
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 *
HigherEducationBinary0 ;
509392    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
509393    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
509394    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
509395    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
509396    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 *
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 +
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 *
HigherEducationBinary0 ;
509397    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
509398    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
509399    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
509400    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
509401    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 *
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 +
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 *
HigherEducationBinary0 ;
509402    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
509403    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
509404    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
509405    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
509406    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 *
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 +
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 *
HigherEducationBinary0 ;
509407    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
509408    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
509409    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
509410    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
509411    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 *
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 +
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 *
HigherEducationBinary0 ;
509412    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
509413    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
509414    +        EducationGraduation  +     0.00389495660452 * EducationMaster
509415    +          +     0.39856598367829 * Marital_StatusDivorced
509416    +          +    -0.45922754552461 * Marital_StatusMarried
509417    +          +     0.41270195301891 * Marital_StatusSingle
509418    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 *
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster +
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried +
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
509419    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
509420    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
509421    +        EducationGraduation  +      0.2609956614651 * EducationMaster
509422    +          +     0.12002180366932 * Marital_StatusDivorced
509423    +          +     0.50693056076018 * Marital_StatusMarried
509424    +          +    -0.40828651697464 * Marital_StatusSingle
509425    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 *
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster +
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried +
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
509426    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
509427    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
509428    +        EducationGraduation  +     0.20017847825938 * EducationMaster
509429    +          +    -0.05075621283629 * Marital_StatusDivorced
509430    +          +     0.06731276969307 * Marital_StatusMarried
509431    +          +     0.20458391966582 * Marital_StatusSingle
509432    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 *
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster +
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried +
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
509433    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
509434    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
509435    +        EducationGraduation  +     0.28829384238085 * EducationMaster
509436    +          +    -0.37925185401218 * Marital_StatusDivorced
509437    +          +     0.62971134740586 * Marital_StatusMarried
509438    +          +    -0.36562351730859 * Marital_StatusSingle
509439    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 *
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried +
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
509440    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
509441    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
509442    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
509443    +          +     0.84382044664305 * Marital_StatusDivorced
509444    +          +    -0.84062627203871 * Marital_StatusMarried
509445    +          +     0.74100406031127 * Marital_StatusSingle
509446    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 *
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried +
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
509447    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
509448    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
509449    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
509450    +          +     -0.1195105091383 * Marital_StatusDivorced
509451    +          +    -0.13486422945269 * Marital_StatusMarried
509452    +          +     0.33592403429156 * Marital_StatusSingle
509453    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 *
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried +
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
509454    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
509455    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
509456    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
509457    +          +     0.14792293029589 * Marital_StatusDivorced
509458    +          +    -0.96003393582564 * Marital_StatusMarried
509459    +          +     0.64637652355384 * Marital_StatusSingle
509460    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 *
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried +
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
509461    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
509462    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
509463    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
509464    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
509465    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
509466    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
509467    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
509468    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
509469    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
509470    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
509471    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
509472    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
509473    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
509474    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
509475    +END;
MPRINT(EM_DIAGRAM):   END;
509476    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509477    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
509478    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
509479    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
509480    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
509481    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
509482    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
509483    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
509484    +END;
MPRINT(EM_DIAGRAM):   END;
509485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509486    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
509487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509488    +
509489    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
509490    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
509491    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
509492    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
509493    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
509494    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509495    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
509496    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
509497    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
509498    +end;
MPRINT(EM_DIAGRAM):   end;
509499    +else do;
MPRINT(EM_DIAGRAM):   else do;
509500    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
509501    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
509502    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
509503    +   end;
MPRINT(EM_DIAGRAM):   end;
509504    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
509505    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
509506    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
509507    +   end;
MPRINT(EM_DIAGRAM):   end;
509508    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509509    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
509510    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
509511    +   end;
MPRINT(EM_DIAGRAM):   end;
509512    +end;
MPRINT(EM_DIAGRAM):   end;
509513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509514    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
509515    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
509516    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
509517    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 +
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 *
H16 + 2.0380168893605 * H17 ;
509518    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
509519    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
509520    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
509521    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
509522    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
509523    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
509524    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
509525    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
509526    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
509527    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
509528    +END;
MPRINT(EM_DIAGRAM):   END;
509529    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509530    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
509531    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
509532    +END;
MPRINT(EM_DIAGRAM):   END;
509533    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
509534    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
509535    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
509536    +END;
MPRINT(EM_DIAGRAM):   END;
509537    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
509538    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
509539    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
509540    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
509541    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
509542    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
509543    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
509544    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509545    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
509546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509547    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
509548    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
509549    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
509550    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
509551    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
509552    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
509553    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
509554    +END;
MPRINT(EM_DIAGRAM):   END;
509555    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
509556    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
509557    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
509558    +drop
509559    +H11
509560    +H12
509561    +H13
509562    +H14
509563    +H15
509564    +H16
509565    +H17
509566    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
509567    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
509568    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
509569    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509570    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
509571    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509572    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
509573    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
509574    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
509575    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
509576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509577    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
509578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509579    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
509580    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
509581    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
509582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509583    +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
509584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509586    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
509587    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
509588    +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
509589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509590    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
509591    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
509592    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
509593    +
509594    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
509595    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
509596    +
509597    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
509598    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
509599    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
509600    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
509601    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
509602    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
509603    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
509604    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
509605    +
509606    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
509607    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
509608    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
509609    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
509610    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
509611    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509612    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
509613    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
509614    +end;
MPRINT(EM_DIAGRAM):   end;
509615    +else do;
MPRINT(EM_DIAGRAM):   else do;
509616    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
509617    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
509618    +   end;
MPRINT(EM_DIAGRAM):   end;
509619    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
509620    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
509621    +   end;
MPRINT(EM_DIAGRAM):   end;
509622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509623    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
509624    +   end;
MPRINT(EM_DIAGRAM):   end;
509625    +end;
MPRINT(EM_DIAGRAM):   end;
509626    +
509627    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
509628    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
509629    +
509630    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
509631    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
509632    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509633    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509634    +end;
MPRINT(EM_DIAGRAM):   end;
509635    +
509636    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
509637    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
509638    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509639    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509640    +end;
MPRINT(EM_DIAGRAM):   end;
509641    +
509642    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
509643    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
509644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509646    +end;
MPRINT(EM_DIAGRAM):   end;
509647    +
509648    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
509649    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
509650    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509651    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509652    +end;
MPRINT(EM_DIAGRAM):   end;
509653    +
509654    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
509655    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
509656    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509657    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509658    +end;
MPRINT(EM_DIAGRAM):   end;
509659    +
509660    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
509661    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
509662    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509663    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509664    +end;
MPRINT(EM_DIAGRAM):   end;
509665    +
509666    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
509667    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
509668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509670    +end;
MPRINT(EM_DIAGRAM):   end;
509671    +
509672    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
509673    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
509674    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509675    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509676    +end;
MPRINT(EM_DIAGRAM):   end;
509677    +
509678    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
509679    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
509680    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509681    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509682    +end;
MPRINT(EM_DIAGRAM):   end;
509683    +
509684    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
509685    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
509686    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509688    +end;
MPRINT(EM_DIAGRAM):   end;
509689    +
509690    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
509691    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
509692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509694    +end;
MPRINT(EM_DIAGRAM):   end;
509695    +
509696    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
509697    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
509698    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509700    +end;
MPRINT(EM_DIAGRAM):   end;
509701    +
509702    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
509703    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
509704    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509706    +end;
MPRINT(EM_DIAGRAM):   end;
509707    +
509708    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
509709    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
509710    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
509711    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
509712    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
509713    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
509714    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
509715    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
509716    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
509717    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
509718    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
509719    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
509720    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509721    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509722    +end;
MPRINT(EM_DIAGRAM):   end;
509723    +else do;
MPRINT(EM_DIAGRAM):   else do;
509724    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
509725    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
509726    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509727    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
509728    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
509729    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
509730    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
509731    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
509732    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509733    +         end;
MPRINT(EM_DIAGRAM):   end;
509734    +         else do;
MPRINT(EM_DIAGRAM):   else do;
509735    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
509736    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
509737    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509738    +            end;
MPRINT(EM_DIAGRAM):   end;
509739    +         end;
MPRINT(EM_DIAGRAM):   end;
509740    +      end;
MPRINT(EM_DIAGRAM):   end;
509741    +      else do;
MPRINT(EM_DIAGRAM):   else do;
509742    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
509743    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
509744    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509745    +         end;
MPRINT(EM_DIAGRAM):   end;
509746    +      end;
MPRINT(EM_DIAGRAM):   end;
509747    +   end;
MPRINT(EM_DIAGRAM):   end;
509748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509749    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
509750    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
509751    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509752    +      end;
MPRINT(EM_DIAGRAM):   end;
509753    +      else do;
MPRINT(EM_DIAGRAM):   else do;
509754    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
509755    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
509756    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
509757    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
509758    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
509759    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509760    +         end;
MPRINT(EM_DIAGRAM):   end;
509761    +      end;
MPRINT(EM_DIAGRAM):   end;
509762    +   end;
MPRINT(EM_DIAGRAM):   end;
509763    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
509764    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
509765    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
509766    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
509767    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
509768    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509769    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509770    +   end;
MPRINT(EM_DIAGRAM):   end;
509771    +end;
MPRINT(EM_DIAGRAM):   end;
509772    +
509773    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
509774    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
509775    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
509776    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
509777    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
509778    +end;
MPRINT(EM_DIAGRAM):   end;
509779    +
509780    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
509781    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
509782    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
509783    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
509784    +
509785    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
509786    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
509787    +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
509788    +
509789    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
509790    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
509791    +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
509792    +
509793    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
509794    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
509795    +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
509796    +
509797    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
509798    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
509799    +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
509800    +
509801    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
509802    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
509803    +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
509804    +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
509805    +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
509806    +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
509807    +
509808    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
509809    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
509810    +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
509811    +
509812    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
509813    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
509814    +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
509815    +
509816    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
509817    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
509818    +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
509819    +
509820    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
509821    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
509822    +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
509823    +
509824    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
509825    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
509826    +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
509827    +
509828    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
509829    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
509830    +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
509831    +
509832    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
509833    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
509834    +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
509835    +
509836    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
509837    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
509838    +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
509839    +
509840    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
509841    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
509842    +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
509843    +
509844    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
509845    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
509846    +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
509847    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
509848    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
509849    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
509850    +end;
MPRINT(EM_DIAGRAM):   end;
509851    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
509852    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
509853    +
509854    +REGDR1:
509855    +
509856    +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
509857    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
509858    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
509859    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
509860    +end;
MPRINT(EM_DIAGRAM):   end;
509861    +else do;
MPRINT(EM_DIAGRAM):   else do;
509862    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
509863    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
509864    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
509865    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
509866    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
509867    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
509868    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
509869    +   end;
MPRINT(EM_DIAGRAM):   end;
509870    +end;
MPRINT(EM_DIAGRAM):   end;
509871    +
509872    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
509873    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
509874    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
509875    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
509876    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
509877    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
509878    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
509879    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
509880    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
509881    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
509882    +end;
MPRINT(EM_DIAGRAM):   end;
509883    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
509884    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
509885    +
509886    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
509887    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
509888    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
509889    +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
509890    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509891    +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
509892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509893    +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
509894    +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
509895    +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
509896    +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
509897    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509898    +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
509899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509900    +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
509901    +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
509902    +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
509903    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509904    +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
509905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509907    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
509908    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
509909    +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
509910    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509911    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
509912    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
509913    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
509914    +
509915    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
509916    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
509917    +
509918    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
509919    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
509920    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
509921    +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
509922    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
509923    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
509924    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
509925    +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
509926    +
509927    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
509928    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
509929    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
509930    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
509931    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
509932    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509933    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
509934    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
509935    +end;
MPRINT(EM_DIAGRAM):   end;
509936    +else do;
MPRINT(EM_DIAGRAM):   else do;
509937    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
509938    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
509939    +   end;
MPRINT(EM_DIAGRAM):   end;
509940    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
509941    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
509942    +   end;
MPRINT(EM_DIAGRAM):   end;
509943    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509944    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
509945    +   end;
MPRINT(EM_DIAGRAM):   end;
509946    +end;
MPRINT(EM_DIAGRAM):   end;
509947    +
509948    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
509949    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
509950    +
509951    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
509952    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
509953    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509954    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509955    +end;
MPRINT(EM_DIAGRAM):   end;
509956    +
509957    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
509958    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
509959    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509960    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509961    +end;
MPRINT(EM_DIAGRAM):   end;
509962    +
509963    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
509964    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
509965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509967    +end;
MPRINT(EM_DIAGRAM):   end;
509968    +
509969    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
509970    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
509971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509973    +end;
MPRINT(EM_DIAGRAM):   end;
509974    +
509975    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
509976    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
509977    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509978    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509979    +end;
MPRINT(EM_DIAGRAM):   end;
509980    +
509981    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
509982    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
509983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509985    +end;
MPRINT(EM_DIAGRAM):   end;
509986    +
509987    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
509988    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
509989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509991    +end;
MPRINT(EM_DIAGRAM):   end;
509992    +
509993    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
509994    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
509995    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509996    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509997    +end;
MPRINT(EM_DIAGRAM):   end;
509998    +
509999    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
510000    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
510001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510003    +end;
MPRINT(EM_DIAGRAM):   end;
510004    +
510005    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
510006    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
510007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510009    +end;
MPRINT(EM_DIAGRAM):   end;
510010    +
510011    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
510012    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
510013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510015    +end;
MPRINT(EM_DIAGRAM):   end;
510016    +
510017    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
510018    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
510019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510021    +end;
MPRINT(EM_DIAGRAM):   end;
510022    +
510023    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
510024    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
510025    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
510026    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
510027    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
510028    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
510029    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
510030    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
510031    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
510032    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
510033    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
510034    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
510035    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510037    +end;
MPRINT(EM_DIAGRAM):   end;
510038    +else do;
MPRINT(EM_DIAGRAM):   else do;
510039    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
510040    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
510041    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510042    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
510043    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
510044    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
510045    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
510046    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
510047    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510048    +         end;
MPRINT(EM_DIAGRAM):   end;
510049    +         else do;
MPRINT(EM_DIAGRAM):   else do;
510050    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
510051    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
510052    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510053    +            end;
MPRINT(EM_DIAGRAM):   end;
510054    +         end;
MPRINT(EM_DIAGRAM):   end;
510055    +      end;
MPRINT(EM_DIAGRAM):   end;
510056    +      else do;
MPRINT(EM_DIAGRAM):   else do;
510057    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
510058    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
510059    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510060    +         end;
MPRINT(EM_DIAGRAM):   end;
510061    +      end;
MPRINT(EM_DIAGRAM):   end;
510062    +   end;
MPRINT(EM_DIAGRAM):   end;
510063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510064    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
510065    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
510066    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510067    +      end;
MPRINT(EM_DIAGRAM):   end;
510068    +      else do;
MPRINT(EM_DIAGRAM):   else do;
510069    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
510070    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
510071    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
510072    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
510073    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
510074    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510075    +         end;
MPRINT(EM_DIAGRAM):   end;
510076    +      end;
MPRINT(EM_DIAGRAM):   end;
510077    +   end;
MPRINT(EM_DIAGRAM):   end;
510078    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
510079    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
510080    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
510081    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
510082    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
510083    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510084    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510085    +   end;
MPRINT(EM_DIAGRAM):   end;
510086    +end;
MPRINT(EM_DIAGRAM):   end;
510087    +
510088    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
510089    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
510090    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
510091    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
510092    +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
510093    +end;
MPRINT(EM_DIAGRAM):   end;
510094    +
510095    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
510096    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
510097    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
510098    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
510099    +
510100    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
510101    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
510102    +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
510103    +
510104    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
510105    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
510106    +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
510107    +
510108    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
510109    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
510110    +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
510111    +
510112    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
510113    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
510114    +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
510115    +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
510116    +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
510117    +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
510118    +
510119    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
510120    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
510121    +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
510122    +
510123    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
510124    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
510125    +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
510126    +
510127    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
510128    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
510129    +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
510130    +
510131    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
510132    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
510133    +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
510134    +
510135    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
510136    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
510137    +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
510138    +
510139    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
510140    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
510141    +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
510142    +
510143    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
510144    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
510145    +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
510146    +
510147    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
510148    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
510149    +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
510150    +
510151    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
510152    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
510153    +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
510154    +
510155    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
510156    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
510157    +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
510158    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
510159    +
510160    +REG5DR1:
510161    +
510162    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
510163    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
510164    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
510165    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
510166    +end;
MPRINT(EM_DIAGRAM):   end;
510167    +else do;
MPRINT(EM_DIAGRAM):   else do;
510168    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
510169    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
510170    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
510171    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
510172    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
510173    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
510174    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
510175    +   end;
MPRINT(EM_DIAGRAM):   end;
510176    +end;
MPRINT(EM_DIAGRAM):   end;
510177    +
510178    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
510179    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
510180    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
510181    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
510182    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
510183    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
510184    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
510185    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
510186    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
510187    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
510188    +end;
MPRINT(EM_DIAGRAM):   end;
510189    +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
510190    +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
510191    +
510192    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
510193    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
510194    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
510195    +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
510196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510197    +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
510198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510199    +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
510200    +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
510201    +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
510202    +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
510203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510204    +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
510205    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510206    +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
510207    +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
510208    +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
510209    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510210    +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
510211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510212    +P_DepVar1 = (
510213    +Neural2_P_DepVar1 +
510214    +Neural3_P_DepVar1 +
510215    +Neural4_P_DepVar1 +
510216    +Neural9_P_DepVar1 +
510217    +Neural10_P_DepVar1 +
510218    +Reg_P_DepVar1 +
510219    +Reg5_P_DepVar1
510220    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural4_P_DepVar1
+ Neural9_P_DepVar1 + Neural10_P_DepVar1 + Reg_P_DepVar1 + Reg5_P_DepVar1 )/7;
510221    +P_DepVar0 = (
510222    +Neural2_P_DepVar0 +
510223    +Neural3_P_DepVar0 +
510224    +Neural4_P_DepVar0 +
510225    +Neural9_P_DepVar0 +
510226    +Neural10_P_DepVar0 +
510227    +Reg_P_DepVar0 +
510228    +Reg5_P_DepVar0
510229    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural4_P_DepVar0
+ Neural9_P_DepVar0 + Neural10_P_DepVar0 + Reg_P_DepVar0 + Reg5_P_DepVar0 )/7;
510230    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510231    +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
510232    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510233    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
510234    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
510235    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
510236    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
510237    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
510238    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
510239    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
510240    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
510241    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
510242    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
510243    +end;
MPRINT(EM_DIAGRAM):   end;
510244    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
510245    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
510246    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
510247    +end;
MPRINT(EM_DIAGRAM):   end;
510248    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
510249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510250    +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
510251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510252    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
510253    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
510254    +else
510255    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
510256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510257    +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
510258    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510259    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
510260    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
510261    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
510262    +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
510263    +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
510264    +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
510265    +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
510266    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
510267    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
510268    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
510269    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
510270    +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
510271    +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
510272    +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
510273    +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
510274    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
510275    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
510276    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
510277    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
510278    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
510278   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
510279    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
510279   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
510280    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
510280   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
510281    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
510281   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
510282    +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
510283    +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
510284    +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
510285    +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
510286    +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
510287    +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
510288    +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
510289    +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
510290    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510291    +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
510292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510293    +if
510294    +F_DepVar NE '1'
510295    +AND F_DepVar NE '0'
510296    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
510297    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
510298    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
510299    +end;
MPRINT(EM_DIAGRAM):   end;
510300    +else do;
MPRINT(EM_DIAGRAM):   else do;
510301    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
510302    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
510303    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
510304    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
510305    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
510306    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
510307    +END;
MPRINT(EM_DIAGRAM):   END;
510308    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
510309     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
510310     quit;
510311     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl14_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
510371     filename _pref
510371   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
510372     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
510373     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
510374    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
510375    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
510376    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
510377    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
510378    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
510379    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
510380    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
510381    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
510382    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
510383    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
510384    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
510385    +LENGTH _WARN_ $4
510386    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
510387    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
510388    +
510389    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
510390    +
510391    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
510392    +
510393    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
510394    +
510395    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
510396    +
510397    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
510398    +
510399    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
510400    +
510401    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
510402    +
510403    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
510404    +
510405    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
510406    +
510407    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
510408    +
510409    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
510410    +
510411    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
510412    +
510413    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
510414    +
510415    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
510416    +
510417    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
510418    +
510419    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
510420    +
510421    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
510422    +
510423    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
510424    +
510425    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
510426    +
510427    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
510428    +
510429    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
510430    +
510431    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
510432    +
510433    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
510434    +
510435    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
510436    +
510437    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
510438    +
510439    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
510440    +
510441    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
510442    +
510443    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
510444    +
510445    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
510446    +
510447    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
510448    +
510449    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
510450    +
510451    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
510452    +
510453    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
510454    +
510455    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
510456    +
510457    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
510458    +
510459    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
510460    +
510461    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
510462    +
510463    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
510464    +
510465    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
510466    +
510467    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
510468    +
510469    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
510470    +
510471    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
510472    +
510473    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
510474    +
510475    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
510476    +
510477    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
510478    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
510479    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
510480    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
510481    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510483    +end;
MPRINT(EM_DIAGRAM):   end;
510484    +else do;
MPRINT(EM_DIAGRAM):   else do;
510485    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510486    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
510487    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510488    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510489    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
510490    +   end;
MPRINT(EM_DIAGRAM):   end;
510491    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510492    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
510493    +   end;
MPRINT(EM_DIAGRAM):   end;
510494    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510495    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
510496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510498    +   end;
MPRINT(EM_DIAGRAM):   end;
510499    +end;
MPRINT(EM_DIAGRAM):   end;
510500    +
510501    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
510502    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
510503    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
510504    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
510505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510507    +end;
MPRINT(EM_DIAGRAM):   end;
510508    +else do;
MPRINT(EM_DIAGRAM):   else do;
510509    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510510    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
510511    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510512    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510513    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
510514    +   end;
MPRINT(EM_DIAGRAM):   end;
510515    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510516    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
510517    +   end;
MPRINT(EM_DIAGRAM):   end;
510518    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510519    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
510520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510522    +   end;
MPRINT(EM_DIAGRAM):   end;
510523    +end;
MPRINT(EM_DIAGRAM):   end;
510524    +
510525    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
510526    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
510527    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
510528    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
510529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510531    +end;
MPRINT(EM_DIAGRAM):   end;
510532    +else do;
MPRINT(EM_DIAGRAM):   else do;
510533    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510534    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
510535    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510536    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510537    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
510538    +   end;
MPRINT(EM_DIAGRAM):   end;
510539    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510540    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
510541    +   end;
MPRINT(EM_DIAGRAM):   end;
510542    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510543    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
510544    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510545    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510546    +   end;
MPRINT(EM_DIAGRAM):   end;
510547    +end;
MPRINT(EM_DIAGRAM):   end;
510548    +
510549    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
510550    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
510551    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
510552    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
510553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510555    +end;
MPRINT(EM_DIAGRAM):   end;
510556    +else do;
MPRINT(EM_DIAGRAM):   else do;
510557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510558    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
510559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510560    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510561    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
510562    +   end;
MPRINT(EM_DIAGRAM):   end;
510563    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510564    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
510565    +   end;
MPRINT(EM_DIAGRAM):   end;
510566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510567    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
510568    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510569    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510570    +   end;
MPRINT(EM_DIAGRAM):   end;
510571    +end;
MPRINT(EM_DIAGRAM):   end;
510572    +
510573    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
510574    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
510575    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
510576    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
510577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510579    +end;
MPRINT(EM_DIAGRAM):   end;
510580    +else do;
MPRINT(EM_DIAGRAM):   else do;
510581    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510582    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
510583    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510584    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510585    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
510586    +   end;
MPRINT(EM_DIAGRAM):   end;
510587    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510588    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
510589    +   end;
MPRINT(EM_DIAGRAM):   end;
510590    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510591    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
510592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510594    +   end;
MPRINT(EM_DIAGRAM):   end;
510595    +end;
MPRINT(EM_DIAGRAM):   end;
510596    +
510597    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
510598    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
510599    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
510600    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
510601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510603    +end;
MPRINT(EM_DIAGRAM):   end;
510604    +else do;
MPRINT(EM_DIAGRAM):   else do;
510605    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510606    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
510607    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510608    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510609    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
510610    +   end;
MPRINT(EM_DIAGRAM):   end;
510611    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510612    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
510613    +   end;
MPRINT(EM_DIAGRAM):   end;
510614    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510615    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
510616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510618    +   end;
MPRINT(EM_DIAGRAM):   end;
510619    +end;
MPRINT(EM_DIAGRAM):   end;
510620    +
510621    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
510622    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
510623    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
510624    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
510625    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510627    +end;
MPRINT(EM_DIAGRAM):   end;
510628    +else do;
MPRINT(EM_DIAGRAM):   else do;
510629    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510630    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
510631    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510632    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
510633    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
510634    +   end;
MPRINT(EM_DIAGRAM):   end;
510635    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
510636    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
510637    +   end;
MPRINT(EM_DIAGRAM):   end;
510638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510639    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
510640    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510641    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510642    +   end;
MPRINT(EM_DIAGRAM):   end;
510643    +end;
MPRINT(EM_DIAGRAM):   end;
510644    +
510645    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
510646    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
510647    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
510648    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
510649    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
510650    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
510651    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
510652    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
510653    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
510654    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
510655    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
510656    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
510657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510659    +end;
MPRINT(EM_DIAGRAM):   end;
510660    +else do;
MPRINT(EM_DIAGRAM):   else do;
510661    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
510662    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
510663    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510664    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
510665    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
510666    +   end;
MPRINT(EM_DIAGRAM):   end;
510667    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
510668    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
510669    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
510670    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
510671    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
510672    +   end;
MPRINT(EM_DIAGRAM):   end;
510673    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
510674    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
510675    +   end;
MPRINT(EM_DIAGRAM):   end;
510676    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
510677    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
510678    +   end;
MPRINT(EM_DIAGRAM):   end;
510679    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
510680    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
510681    +   end;
MPRINT(EM_DIAGRAM):   end;
510682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510683    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
510684    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
510685    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
510686    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
510687    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510688    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510689    +   end;
MPRINT(EM_DIAGRAM):   end;
510690    +end;
MPRINT(EM_DIAGRAM):   end;
510691    +
510692    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
510693    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
510694    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
510695    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
510696    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
510697    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
510698    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
510699    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
510700    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
510701    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
510702    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
510703    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
510704    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
510705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510707    +end;
MPRINT(EM_DIAGRAM):   end;
510708    +else do;
MPRINT(EM_DIAGRAM):   else do;
510709    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
510710    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
510711    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510712    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
510713    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
510714    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
510715    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
510716    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
510717    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510718    +         end;
MPRINT(EM_DIAGRAM):   end;
510719    +         else do;
MPRINT(EM_DIAGRAM):   else do;
510720    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
510721    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
510722    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510723    +            end;
MPRINT(EM_DIAGRAM):   end;
510724    +         end;
MPRINT(EM_DIAGRAM):   end;
510725    +      end;
MPRINT(EM_DIAGRAM):   end;
510726    +      else do;
MPRINT(EM_DIAGRAM):   else do;
510727    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
510728    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
510729    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510730    +         end;
MPRINT(EM_DIAGRAM):   end;
510731    +      end;
MPRINT(EM_DIAGRAM):   end;
510732    +   end;
MPRINT(EM_DIAGRAM):   end;
510733    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510734    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
510735    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
510736    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510737    +      end;
MPRINT(EM_DIAGRAM):   end;
510738    +      else do;
MPRINT(EM_DIAGRAM):   else do;
510739    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
510740    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
510741    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
510742    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
510743    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
510744    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510745    +         end;
MPRINT(EM_DIAGRAM):   end;
510746    +      end;
MPRINT(EM_DIAGRAM):   end;
510747    +   end;
MPRINT(EM_DIAGRAM):   end;
510748    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
510749    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
510750    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
510751    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
510752    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
510753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510755    +   end;
MPRINT(EM_DIAGRAM):   end;
510756    +end;
MPRINT(EM_DIAGRAM):   end;
510757    +
510758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510759    +*** Checking missing input Interval
510760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
510761    +
510762    +IF NMISS(
510763    +   AcceptedCmpTotal ,
510764    +   Age ,
510765    +   Frq ,
510766    +   Income ,
510767    +   Kidhome ,
510768    +   Mnt ,
510769    +   MntFishProducts ,
510770    +   MntFruits ,
510771    +   MntGoldProds ,
510772    +   MntMeatProducts ,
510773    +   MntSweetProducts ,
510774    +   MntWines ,
510775    +   MonthsAsCustomer ,
510776    +   NumCatalogPurchases ,
510777    +   NumDealsPurchases ,
510778    +   NumDistPurchases ,
510779    +   NumStorePurchases ,
510780    +   NumWebPurchases ,
510781    +   NumWebVisitsMonth ,
510782    +   RFMstat ,
510783    +   RMntFrq ,
510784    +   Recency ,
510785    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
510786    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
510787    +
510788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510789    +END;
MPRINT(EM_DIAGRAM):   END;
510790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510791    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
510792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510793    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
510794    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
510795    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
510796    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
510797    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
510798    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
510799    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
510800    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
510801    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
510802    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
510803    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
510804    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
510805    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
510806    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
510807    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
510808    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
510809    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
510810    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
510811    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
510812    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
510813    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
510814    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
510815    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
510816    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
510817    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
510818    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
510819    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
510820    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
510821    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
510822    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
510823    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
510824    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
510825    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
510826    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
510827    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
510828    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
510829    +END;
MPRINT(EM_DIAGRAM):   END;
510830    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
510831    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
510832    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
510833    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
510834    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
510835    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
510836    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
510837    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
510838    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
510839    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
510840    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
510841    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
510842    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
510843    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
510844    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
510845    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
510846    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
510847    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
510848    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
510849    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
510850    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
510851    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
510852    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
510853    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
510854    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
510855    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
510856    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
510857    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
510858    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
510859    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
510860    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
510861    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
510862    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
510863    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
510864    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
510865    +   ELSE S_NumCatalogPurchases
510866    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
510867    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
510868    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
510869    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
510870    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
510871    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
510872    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
510873    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
510874    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
510875    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
510876    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
510877    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
510878    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
510879    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
510880    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
510881    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
510882    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
510883    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
510884    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
510885    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
510886    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
510887    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
510888    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
510889    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
510890    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
510891    +END;
MPRINT(EM_DIAGRAM):   END;
510892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510893    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
510894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510896    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
510897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510899    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
510900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510901    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
510902    +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
510903    +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
510904    +        S_Income  +    -1.07615700855274 * S_Kidhome
510905    +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
510906    +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
510907    +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
510908    +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
510909    +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
510910    +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
510911    +          +      0.3429043319369 * S_NumDealsPurchases
510912    +          +     0.71313309767469 * S_NumDistPurchases
510913    +          +     0.06017757740083 * S_NumStorePurchases
510914    +          +    -0.19817724925068 * S_NumWebPurchases
510915    +          +     1.34164122205952 * S_NumWebVisitsMonth
510916    +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
510917    +        S_RMntFrq  +     -1.5774263784376 * S_Recency
510918    +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
510919    +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
510920    +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
510921    +        S_Income  +     -0.0027232441092 * S_Kidhome
510922    +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
510923    +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
510924    +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
510925    +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
510926    +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
510927    +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
510928    +          +      0.4576973746858 * S_NumDealsPurchases
510929    +          +     0.15590877272659 * S_NumDistPurchases
510930    +          +    -0.33414539713736 * S_NumStorePurchases
510931    +          +    -0.39370244666257 * S_NumWebPurchases
510932    +          +     0.52596714886704 * S_NumWebVisitsMonth
510933    +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
510934    +        S_RMntFrq  +    -0.55973256565759 * S_Recency
510935    +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
510936    +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
510937    +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
510938    +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
510939    +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
510940    +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
510941    +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
510942    +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
510943    +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
510944    +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
510945    +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
510946    +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
510947    +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
510948    +        EducationGraduation  +      -0.333138438339 * EducationMaster
510949    +          +      0.4663802937397 * Marital_StatusDivorced
510950    +          +    -1.27401898796099 * Marital_StatusMarried
510951    +          +      1.3125969368079 * Marital_StatusSingle
510952    +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
510953    +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
510954    +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
510955    +        EducationGraduation  +     0.00771527138053 * EducationMaster
510956    +          +     0.07419179522004 * Marital_StatusDivorced
510957    +          +     0.00234615813337 * Marital_StatusMarried
510958    +          +    -0.00725460458412 * Marital_StatusSingle
510959    +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
510960    +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
510961    +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
510962    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
510963    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
510964    +END;
MPRINT(EM_DIAGRAM):   END;
510965    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
510966    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
510967    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
510968    +END;
MPRINT(EM_DIAGRAM):   END;
510969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510970    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
510971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510972    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
510973    +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
510974    +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
510975    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
510976    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
510977    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
510978    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
510979    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
510980    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
510981    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
510982    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
510983    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
510984    +END;
MPRINT(EM_DIAGRAM):   END;
510985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
510986    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
510987    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
510988    +END;
MPRINT(EM_DIAGRAM):   END;
510989    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
510990    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
510991    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
510992    +END;
MPRINT(EM_DIAGRAM):   END;
510993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510994    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
510995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510996    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
510997    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
510998    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
510999    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
511000    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
511001    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
511002    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
511003    +END;
MPRINT(EM_DIAGRAM):   END;
511004    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
511005    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
511006    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
511007    +drop
511008    +H11
511009    +H12
511010    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
511011    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511012     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
511013     quit;
511014     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511015     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511016     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511017     retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
511018     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511019     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511020     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511022     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511023     proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
511024     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511025     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511026     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511027     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511028     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511030     proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
511031     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511032     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511033     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511034     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
511035     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511036     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511037     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511038     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511039     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511040     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511040   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
511041     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511042     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
511044     filename _pref
511044   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
511045     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511046     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
511047    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
511048    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
511049    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
511050    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
511051    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
511052    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511053     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
511054     quit;
511055     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511056     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511057     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511058     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
511059     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511061     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511062     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511064     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
511065     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511067     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511068     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511069     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511071     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
511072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511073     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511074     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511075     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511076     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511077     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511078     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511079     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511080     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511081     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511081   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
511082     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511083     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511085     filename _pref
511085   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
511086     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511087     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
511088    +
511089    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
511090    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
511090   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
511091    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
511092    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
511093    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
511094    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
511095    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511096     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
511097     quit;
511098     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511099     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511100     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511101     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
511102     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511104     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511106     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511107     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
511108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511110     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511111     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511112     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511113     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511114     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
511115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511116     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511118     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511119     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511120     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511121     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511122     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511123     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511124     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511124   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
511125     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511126     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511127     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511128     filename _pref
511128   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
511129     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511130     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
511131    +
511132    +
511133    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
511134    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
511135    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
511136    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
511137    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
511138    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511139    +
511140    +
511141    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
511142    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
511143    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
511144    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
511145    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
511146    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511147    +
511148    +
511149    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
511150    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
511151    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
511152    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
511153    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
511154    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511155    +
511156    +
511157    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
511158    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
511159    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
511160    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
511161    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
511162    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511163    +
511164    +
511165    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
511166    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
511167    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
511168    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
511169    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
511170    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511171    +
511172    +
511173    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
511174    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
511175    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
511176    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
511177    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
511178    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511179    +
511180    +
511181    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
511182    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
511183    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
511184    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
511185    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
511186    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511187    +
511188    +
511189    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
511190    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
511191    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
511192    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
511193    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
511194    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511195    +if
511196    +_FILTERNORM1 not in ( '.')
511197    + and
511198    +_FILTERNORM2 not in ( '.')
511199    + and
511200    +_FILTERNORM3 not in ( '.')
511201    + and
511202    +_FILTERNORM4 not in ( '.')
511203    + and
511204    +_FILTERNORM5 not in ( '.')
511205    + and
511206    +_FILTERNORM6 not in ( '.')
511207    + and
511208    +_FILTERNORM7 not in ( ' ')
511209    + and
511210    +_FILTERNORM8 not in ( ' ')
511211    +and
511212    +( Dt_Customer ne .)
511213    +and ( Income ne . and (Income<=107000))
511214    +and ( Kidhome ne .)
511215    +and ( MntFishProducts ne .)
511216    +and ( MntFruits ne .)
511217    +and ( MntGoldProds ne .)
511218    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
511219    +and ( MntSweetProducts ne .)
511220    +and ( MntWines ne .)
511221    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
511222    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
511223    +and ( NumStorePurchases ne .)
511224    +and ( NumWebPurchases ne .)
511225    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
511226    +and ( Recency ne .)
511227    +and ( Teenhome ne .)
511228    +and ( Year_Birth ne .)
511229    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
511230    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
511231    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
511232    +end;
MPRINT(EM_DIAGRAM):   end;
511233    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
511234    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511235     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
511236     quit;
511237     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511238     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511239     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511240     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
511241     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511243     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511244     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511246     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
511247     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511248     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511249     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511250     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511251     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511253     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
511254     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511255     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511256     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511257     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511258     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511259     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511260     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511261     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511262     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511263     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511263   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
511264     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511265     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511267     %macro varDept(fcmpdata=,id=);
511268     %global nobs&id scoreFlag&id;
511269     %let scoreFlag&id = 0;
511270     %if &id=1 or ^&fcmpStart %then %do;
511271     proc sort data=&fcmpdata out=_temp&id nodupkey;
511272     by NAME;
511273     where id=&id and LHS in( %let j=1;
511274     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
511275     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
511276     "&var" %let j = %eval(&j+1);
511277     %end;
511278     );
511279     run;
511280     %let dsid = %sysfunc(open(_temp&id));
511281     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511282     %let dsid = %sysfunc(close(&dsid));
511283     %if &&nobs&id %then %do;
511284     %let scoreFlag&id = 1;
511285     %let fcmpStart = 1;
511286     %end;
511287     %else %let fcmpStart = 0;
511288     %end;
511289     %else %do;
511290     proc sort data=&fcmpdata out=_tempid;
511291     where id=&id;
511292     by LHS;
511293     run;
511294     %let dsid = %sysfunc(open(_tempid));
511295     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511296     %let dsid = %sysfunc(close(&dsid));
511297     %if ^&&nobs&id %then %do;
511298     proc datasets lib=work nolist;
511299     delete _tempid;
511300     run;
511301     quit;
511302     %end;
511303     %else %do;
511304     data _tempAll;
511305     set %let j=%eval(&id-1);
511306     %do x=1 %to &j;
511307     %if &&nobs&x %then %do;
511308     _temp&x %end;
511309     %end;
511310     ;
511311     run;
511312     proc sql;
511313     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
511313   ! work._tempid p2 where p.name=p2.lhs;
511314     quit;
511315     data _temp&id;
511316     set _temp&id;
511317     where LHS ne '' and NAME ne '' and Node ne '';
511318     run;
511319     proc datasets lib=work nolist;
511320     delete _tempAll;
511321     run;
511322     %let dsid = %sysfunc(open(_temp&id));
511323     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511324     %let dsid = %sysfunc(close(&dsid));
511325     %if ^&&nobs&id %then %do;
511326     proc datasets lib=work nolist;
511327     delete _temp&id;
511328     run;
511329     quit;
511330     %end;
511331     %else %do;
511332     %let scoreFlag&id = 1;
511333     data _temp&id;
511334     set _temp&id;
511335     where LHS ne NAME and node ne '';
511336     run;
511337     %let dsid = %sysfunc(open(_temp&id));
511338     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511339     %let dsid = %sysfunc(close(&dsid));
511340     %if ^&&nobs&id %then %do;
511341     proc datasets lib=work nolist;
511342     delete _temp&id;
511343     run;
511344     quit;
511345     %end;
511346     %else %do;
511347     proc sort data=_temp&id nodupkey;
511348     by LHS NAME;
511349     run;
511350     %end;
511351     %end;
511352     %end;
511353     %end;
511354     %mend varDept;
511355     %macro optCode(outdata=fcmpdata);
511356     %global fcmpStart;
511357     %let fcmpStart = 0;
511358     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
511359     %let NumNodes=9;
511360     %do k=1 %to &NumNodes;
511361     %vardept(fcmpdata=&outdata, id=&k);
511362     %end;
511363     %mend optCode;
511364     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
511365     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
511366     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
511367     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
511368     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511369     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
511370     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
511371     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
511372     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511373     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511374     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
511374   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
511375     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
511376     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
511377     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
511378     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
511379     filename _pref
511379   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
511380     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511381     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
511382    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
511383    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
511384    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
511385    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
511386    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
511387    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
511388    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
511389    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
511390    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
511391    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
511392    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
511393    +LENGTH _WARN_ $4
511394    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
511395    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
511396    +
511397    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
511398    +
511399    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
511400    +
511401    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
511402    +
511403    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
511404    +
511405    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
511406    +
511407    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
511408    +
511409    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
511410    +
511411    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
511412    +
511413    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
511414    +
511415    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
511416    +
511417    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
511418    +
511419    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
511420    +
511421    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
511422    +
511423    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
511424    +
511425    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
511426    +
511427    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
511428    +
511429    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
511430    +
511431    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
511432    +
511433    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
511434    +
511435    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
511436    +
511437    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
511438    +
511439    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
511440    +
511441    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
511442    +
511443    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
511444    +
511445    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
511446    +
511447    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
511448    +
511449    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
511450    +
511451    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
511452    +
511453    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
511454    +
511455    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
511456    +
511457    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
511458    +
511459    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
511460    +
511461    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
511462    +
511463    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
511464    +
511465    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
511466    +
511467    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
511468    +
511469    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
511470    +
511471    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
511472    +
511473    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
511474    +
511475    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
511476    +
511477    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
511478    +
511479    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
511480    +
511481    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
511482    +
511483    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
511484    +
511485    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
511486    +
511487    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
511488    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
511489    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
511490    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
511491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511493    +end;
MPRINT(EM_DIAGRAM):   end;
511494    +else do;
MPRINT(EM_DIAGRAM):   else do;
511495    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511496    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
511497    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511498    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511499    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
511500    +   end;
MPRINT(EM_DIAGRAM):   end;
511501    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511502    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
511503    +   end;
MPRINT(EM_DIAGRAM):   end;
511504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511505    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
511506    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511507    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511508    +   end;
MPRINT(EM_DIAGRAM):   end;
511509    +end;
MPRINT(EM_DIAGRAM):   end;
511510    +
511511    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
511512    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
511513    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
511514    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
511515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511517    +end;
MPRINT(EM_DIAGRAM):   end;
511518    +else do;
MPRINT(EM_DIAGRAM):   else do;
511519    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511520    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
511521    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511522    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511523    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
511524    +   end;
MPRINT(EM_DIAGRAM):   end;
511525    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511526    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
511527    +   end;
MPRINT(EM_DIAGRAM):   end;
511528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511529    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
511530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511532    +   end;
MPRINT(EM_DIAGRAM):   end;
511533    +end;
MPRINT(EM_DIAGRAM):   end;
511534    +
511535    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
511536    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
511537    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
511538    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
511539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511541    +end;
MPRINT(EM_DIAGRAM):   end;
511542    +else do;
MPRINT(EM_DIAGRAM):   else do;
511543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511544    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
511545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511546    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511547    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
511548    +   end;
MPRINT(EM_DIAGRAM):   end;
511549    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511550    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
511551    +   end;
MPRINT(EM_DIAGRAM):   end;
511552    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511553    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
511554    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511555    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511556    +   end;
MPRINT(EM_DIAGRAM):   end;
511557    +end;
MPRINT(EM_DIAGRAM):   end;
511558    +
511559    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
511560    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
511561    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
511562    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
511563    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511565    +end;
MPRINT(EM_DIAGRAM):   end;
511566    +else do;
MPRINT(EM_DIAGRAM):   else do;
511567    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511568    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
511569    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511570    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511571    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
511572    +   end;
MPRINT(EM_DIAGRAM):   end;
511573    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511574    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
511575    +   end;
MPRINT(EM_DIAGRAM):   end;
511576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511577    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
511578    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511579    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511580    +   end;
MPRINT(EM_DIAGRAM):   end;
511581    +end;
MPRINT(EM_DIAGRAM):   end;
511582    +
511583    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
511584    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
511585    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
511586    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
511587    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511588    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511589    +end;
MPRINT(EM_DIAGRAM):   end;
511590    +else do;
MPRINT(EM_DIAGRAM):   else do;
511591    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511592    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
511593    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511594    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511595    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
511596    +   end;
MPRINT(EM_DIAGRAM):   end;
511597    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511598    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
511599    +   end;
MPRINT(EM_DIAGRAM):   end;
511600    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511601    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
511602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511604    +   end;
MPRINT(EM_DIAGRAM):   end;
511605    +end;
MPRINT(EM_DIAGRAM):   end;
511606    +
511607    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
511608    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
511609    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
511610    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
511611    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511613    +end;
MPRINT(EM_DIAGRAM):   end;
511614    +else do;
MPRINT(EM_DIAGRAM):   else do;
511615    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511616    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
511617    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511618    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511619    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
511620    +   end;
MPRINT(EM_DIAGRAM):   end;
511621    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511622    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
511623    +   end;
MPRINT(EM_DIAGRAM):   end;
511624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511625    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
511626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511628    +   end;
MPRINT(EM_DIAGRAM):   end;
511629    +end;
MPRINT(EM_DIAGRAM):   end;
511630    +
511631    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
511632    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
511633    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
511634    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
511635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511637    +end;
MPRINT(EM_DIAGRAM):   end;
511638    +else do;
MPRINT(EM_DIAGRAM):   else do;
511639    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511640    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
511641    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511642    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
511643    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
511644    +   end;
MPRINT(EM_DIAGRAM):   end;
511645    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
511646    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
511647    +   end;
MPRINT(EM_DIAGRAM):   end;
511648    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511649    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
511650    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511651    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511652    +   end;
MPRINT(EM_DIAGRAM):   end;
511653    +end;
MPRINT(EM_DIAGRAM):   end;
511654    +
511655    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
511656    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
511657    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
511658    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
511659    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
511660    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
511661    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
511662    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
511663    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
511664    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
511665    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
511666    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
511667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511669    +end;
MPRINT(EM_DIAGRAM):   end;
511670    +else do;
MPRINT(EM_DIAGRAM):   else do;
511671    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
511672    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
511673    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511674    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
511675    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
511676    +   end;
MPRINT(EM_DIAGRAM):   end;
511677    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
511678    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
511679    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
511680    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
511681    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
511682    +   end;
MPRINT(EM_DIAGRAM):   end;
511683    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
511684    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
511685    +   end;
MPRINT(EM_DIAGRAM):   end;
511686    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
511687    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
511688    +   end;
MPRINT(EM_DIAGRAM):   end;
511689    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
511690    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
511691    +   end;
MPRINT(EM_DIAGRAM):   end;
511692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511693    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
511694    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
511695    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
511696    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
511697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511699    +   end;
MPRINT(EM_DIAGRAM):   end;
511700    +end;
MPRINT(EM_DIAGRAM):   end;
511701    +
511702    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
511703    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
511704    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
511705    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
511706    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
511707    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
511708    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
511709    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
511710    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
511711    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
511712    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
511713    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
511714    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
511715    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511716    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511717    +end;
MPRINT(EM_DIAGRAM):   end;
511718    +else do;
MPRINT(EM_DIAGRAM):   else do;
511719    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
511720    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
511721    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511722    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
511723    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
511724    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
511725    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
511726    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
511727    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511728    +         end;
MPRINT(EM_DIAGRAM):   end;
511729    +         else do;
MPRINT(EM_DIAGRAM):   else do;
511730    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
511731    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
511732    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511733    +            end;
MPRINT(EM_DIAGRAM):   end;
511734    +         end;
MPRINT(EM_DIAGRAM):   end;
511735    +      end;
MPRINT(EM_DIAGRAM):   end;
511736    +      else do;
MPRINT(EM_DIAGRAM):   else do;
511737    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
511738    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
511739    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511740    +         end;
MPRINT(EM_DIAGRAM):   end;
511741    +      end;
MPRINT(EM_DIAGRAM):   end;
511742    +   end;
MPRINT(EM_DIAGRAM):   end;
511743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511744    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
511745    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
511746    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511747    +      end;
MPRINT(EM_DIAGRAM):   end;
511748    +      else do;
MPRINT(EM_DIAGRAM):   else do;
511749    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
511750    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
511751    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
511752    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
511753    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
511754    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511755    +         end;
MPRINT(EM_DIAGRAM):   end;
511756    +      end;
MPRINT(EM_DIAGRAM):   end;
511757    +   end;
MPRINT(EM_DIAGRAM):   end;
511758    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
511759    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
511760    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
511761    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
511762    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
511763    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511764    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511765    +   end;
MPRINT(EM_DIAGRAM):   end;
511766    +end;
MPRINT(EM_DIAGRAM):   end;
511767    +
511768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511769    +*** Checking missing input Interval
511770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
511771    +
511772    +IF NMISS(
511773    +   AcceptedCmpTotal ,
511774    +   Age ,
511775    +   Frq ,
511776    +   Income ,
511777    +   Kidhome ,
511778    +   Mnt ,
511779    +   MntFishProducts ,
511780    +   MntFruits ,
511781    +   MntGoldProds ,
511782    +   MntMeatProducts ,
511783    +   MntSweetProducts ,
511784    +   MntWines ,
511785    +   MonthsAsCustomer ,
511786    +   NumCatalogPurchases ,
511787    +   NumDealsPurchases ,
511788    +   NumDistPurchases ,
511789    +   NumStorePurchases ,
511790    +   NumWebPurchases ,
511791    +   NumWebVisitsMonth ,
511792    +   RFMstat ,
511793    +   RMntFrq ,
511794    +   Recency ,
511795    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
511796    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
511797    +
511798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511799    +END;
MPRINT(EM_DIAGRAM):   END;
511800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511801    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
511802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
511804    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
511805    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
511806    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
511807    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
511808    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
511809    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
511810    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
511811    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
511812    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
511813    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
511814    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
511815    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
511816    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
511817    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
511818    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
511819    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
511820    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
511821    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
511822    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
511823    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
511824    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
511825    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
511826    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
511827    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
511828    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
511829    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
511830    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
511831    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
511832    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
511833    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
511834    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
511835    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
511836    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
511837    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
511838    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
511839    +END;
MPRINT(EM_DIAGRAM):   END;
511840    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
511841    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
511842    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
511843    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
511844    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
511845    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
511846    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
511847    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
511848    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
511849    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
511850    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
511851    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
511852    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
511853    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
511854    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
511855    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
511856    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
511857    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
511858    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
511859    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
511860    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
511861    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
511862    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
511863    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
511864    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
511865    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
511866    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
511867    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
511868    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
511869    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
511870    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
511871    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
511872    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
511873    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
511874    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
511875    +   ELSE S_NumCatalogPurchases
511876    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
511877    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
511878    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
511879    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
511880    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
511881    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
511882    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
511883    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
511884    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
511885    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
511886    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
511887    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
511888    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
511889    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
511890    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
511891    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
511892    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
511893    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
511894    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
511895    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
511896    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
511897    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
511898    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
511899    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
511900    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
511901    +END;
MPRINT(EM_DIAGRAM):   END;
511902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511903    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
511904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511906    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
511907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511909    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
511910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511911    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
511912    +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
511913    +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
511914    +        S_Income  +     0.51123266106809 * S_Kidhome
511915    +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
511916    +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
511917    +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
511918    +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
511919    +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
511920    +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
511921    +          +     1.34095732961105 * S_NumDealsPurchases
511922    +          +     0.16605991333252 * S_NumDistPurchases
511923    +          +    -0.61746267736536 * S_NumStorePurchases
511924    +          +    -0.61812800689506 * S_NumWebPurchases
511925    +          +     1.44649145055387 * S_NumWebVisitsMonth
511926    +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
511927    +        S_RMntFrq  +     -0.9427457293884 * S_Recency
511928    +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
511929    +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
511930    +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
511931    +        S_Income  +     0.52295323651199 * S_Kidhome
511932    +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
511933    +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
511934    +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
511935    +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
511936    +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
511937    +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
511938    +          +    -0.72543332317832 * S_NumDealsPurchases
511939    +          +    -0.05245472565117 * S_NumDistPurchases
511940    +          +     1.00667431585298 * S_NumStorePurchases
511941    +          +     1.02836701470962 * S_NumWebPurchases
511942    +          +    -1.25666606219201 * S_NumWebVisitsMonth
511943    +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
511944    +        S_RMntFrq  +     1.50910531484632 * S_Recency
511945    +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
511946    +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
511947    +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
511948    +        S_Income  +     0.58025720116696 * S_Kidhome
511949    +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
511950    +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
511951    +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
511952    +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
511953    +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
511954    +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
511955    +          +     0.12670438262487 * S_NumDealsPurchases
511956    +          +    -0.46113523834333 * S_NumDistPurchases
511957    +          +     0.07074818720567 * S_NumStorePurchases
511958    +          +    -0.05066645783537 * S_NumWebPurchases
511959    +          +    -0.65729410185804 * S_NumWebVisitsMonth
511960    +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
511961    +        S_RMntFrq  +      1.4337242246086 * S_Recency
511962    +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
511963    +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
511964    +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
511965    +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
511966    +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
511967    +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
511968    +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
511969    +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
511970    +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
511971    +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
511972    +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
511973    +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
511974    +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
511975    +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
511976    +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
511977    +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
511978    +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
511979    +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
511980    +        EducationGraduation  +    -0.04429611151736 * EducationMaster
511981    +          +     0.12692950862511 * Marital_StatusDivorced
511982    +          +     0.10026497666167 * Marital_StatusMarried
511983    +          +    -0.19893864592813 * Marital_StatusSingle
511984    +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
511985    +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
511986    +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
511987    +        EducationGraduation  +     0.05580498138108 * EducationMaster
511988    +          +    -0.16785192490199 * Marital_StatusDivorced
511989    +          +     0.13153695130362 * Marital_StatusMarried
511990    +          +    -0.50411544587104 * Marital_StatusSingle
511991    +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
511992    +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
511993    +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
511994    +        EducationGraduation  +     0.21882736952662 * EducationMaster
511995    +          +    -0.62654958087044 * Marital_StatusDivorced
511996    +          +     1.86250132393341 * Marital_StatusMarried
511997    +          +    -1.37067556451928 * Marital_StatusSingle
511998    +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
511999    +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
512000    +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
512001    +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
512002    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
512003    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
512004    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
512005    +END;
MPRINT(EM_DIAGRAM):   END;
512006    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
512007    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
512008    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
512009    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
512010    +END;
MPRINT(EM_DIAGRAM):   END;
512011    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512012    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
512013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512014    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
512015    +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
512016    +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
512017    +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
512018    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
512019    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
512020    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
512021    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
512022    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
512023    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
512024    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
512025    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
512026    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
512027    +END;
MPRINT(EM_DIAGRAM):   END;
512028    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
512029    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
512030    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
512031    +END;
MPRINT(EM_DIAGRAM):   END;
512032    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
512033    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
512034    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
512035    +END;
MPRINT(EM_DIAGRAM):   END;
512036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512037    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
512038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512039    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
512040    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
512041    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
512042    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
512043    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
512044    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
512045    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
512046    +END;
MPRINT(EM_DIAGRAM):   END;
512047    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
512048    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
512049    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
512050    +drop
512051    +H11
512052    +H12
512053    +H13
512054    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
512055    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512056     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
512057     quit;
512058     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512059     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512060     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512061     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
512062     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512064     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512065     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512067     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
512068     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512069     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512070     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512071     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512072     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512073     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512074     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
512075     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512076     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512077     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512078     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512079     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512080     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512081     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512082     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512083     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512084     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512084   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
512085     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512086     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512088     filename _pref
512088   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
512089     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512090     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
512091    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
512092    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
512093    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
512094    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
512095    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
512096    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512097     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
512098     quit;
512099     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512100     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512101     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512102     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
512103     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512105     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512106     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512107     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512108     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
512109     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512110     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512111     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512112     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512113     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.01 seconds
 
 
512115     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
512116     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512117     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512118     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512119     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512120     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512121     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512122     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512123     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512124     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512125     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512125   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
512126     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512127     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512128     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512129     filename _pref
512129   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
512130     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512131     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
512132    +
512133    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
512134    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
512134   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
512135    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
512136    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
512137    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
512138    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
512139    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512140     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
512141     quit;
512142     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512143     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512144     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512145     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
512146     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512147     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512148     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512149     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512150     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512151     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
512152     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512153     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512154     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512155     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512156     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512157     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512158     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
512159     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512160     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512161     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512162     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512163     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512164     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512165     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512166     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512167     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512168     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512168   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
512169     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512170     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512172     filename _pref
512172   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
512173     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512174     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
512175    +
512176    +
512177    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
512178    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
512179    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
512180    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
512181    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
512182    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512183    +
512184    +
512185    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
512186    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
512187    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
512188    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
512189    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
512190    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512191    +
512192    +
512193    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
512194    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
512195    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
512196    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
512197    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
512198    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512199    +
512200    +
512201    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
512202    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
512203    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
512204    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
512205    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
512206    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512207    +
512208    +
512209    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
512210    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
512211    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
512212    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
512213    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
512214    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512215    +
512216    +
512217    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
512218    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
512219    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
512220    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
512221    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
512222    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512223    +
512224    +
512225    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
512226    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
512227    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
512228    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
512229    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
512230    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512231    +
512232    +
512233    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
512234    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
512235    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
512236    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
512237    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
512238    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512239    +if
512240    +_FILTERNORM1 not in ( '.')
512241    + and
512242    +_FILTERNORM2 not in ( '.')
512243    + and
512244    +_FILTERNORM3 not in ( '.')
512245    + and
512246    +_FILTERNORM4 not in ( '.')
512247    + and
512248    +_FILTERNORM5 not in ( '.')
512249    + and
512250    +_FILTERNORM6 not in ( '.')
512251    + and
512252    +_FILTERNORM7 not in ( ' ')
512253    + and
512254    +_FILTERNORM8 not in ( ' ')
512255    +and
512256    +( Dt_Customer ne .)
512257    +and ( Income ne . and (Income<=107000))
512258    +and ( Kidhome ne .)
512259    +and ( MntFishProducts ne .)
512260    +and ( MntFruits ne .)
512261    +and ( MntGoldProds ne .)
512262    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
512263    +and ( MntSweetProducts ne .)
512264    +and ( MntWines ne .)
512265    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
512266    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
512267    +and ( NumStorePurchases ne .)
512268    +and ( NumWebPurchases ne .)
512269    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
512270    +and ( Recency ne .)
512271    +and ( Teenhome ne .)
512272    +and ( Year_Birth ne .)
512273    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
512274    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
512275    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
512276    +end;
MPRINT(EM_DIAGRAM):   end;
512277    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
512278    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512279     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
512280     quit;
512281     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512282     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512283     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512284     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
512285     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512286     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
512287     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512288     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512290     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
512291     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512293     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512294     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512295     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512296     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512297     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
512298     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
512299     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512300     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512301     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512302     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512303     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512304     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512305     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512306     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512307     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512307   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
512308     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512309     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512311     %macro varDept(fcmpdata=,id=);
512312     %global nobs&id scoreFlag&id;
512313     %let scoreFlag&id = 0;
512314     %if &id=1 or ^&fcmpStart %then %do;
512315     proc sort data=&fcmpdata out=_temp&id nodupkey;
512316     by NAME;
512317     where id=&id and LHS in( %let j=1;
512318     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
512319     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
512320     "&var" %let j = %eval(&j+1);
512321     %end;
512322     );
512323     run;
512324     %let dsid = %sysfunc(open(_temp&id));
512325     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512326     %let dsid = %sysfunc(close(&dsid));
512327     %if &&nobs&id %then %do;
512328     %let scoreFlag&id = 1;
512329     %let fcmpStart = 1;
512330     %end;
512331     %else %let fcmpStart = 0;
512332     %end;
512333     %else %do;
512334     proc sort data=&fcmpdata out=_tempid;
512335     where id=&id;
512336     by LHS;
512337     run;
512338     %let dsid = %sysfunc(open(_tempid));
512339     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512340     %let dsid = %sysfunc(close(&dsid));
512341     %if ^&&nobs&id %then %do;
512342     proc datasets lib=work nolist;
512343     delete _tempid;
512344     run;
512345     quit;
512346     %end;
512347     %else %do;
512348     data _tempAll;
512349     set %let j=%eval(&id-1);
512350     %do x=1 %to &j;
512351     %if &&nobs&x %then %do;
512352     _temp&x %end;
512353     %end;
512354     ;
512355     run;
512356     proc sql;
512357     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
512357   ! work._tempid p2 where p.name=p2.lhs;
512358     quit;
512359     data _temp&id;
512360     set _temp&id;
512361     where LHS ne '' and NAME ne '' and Node ne '';
512362     run;
512363     proc datasets lib=work nolist;
512364     delete _tempAll;
512365     run;
512366     %let dsid = %sysfunc(open(_temp&id));
512367     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512368     %let dsid = %sysfunc(close(&dsid));
512369     %if ^&&nobs&id %then %do;
512370     proc datasets lib=work nolist;
512371     delete _temp&id;
512372     run;
512373     quit;
512374     %end;
512375     %else %do;
512376     %let scoreFlag&id = 1;
512377     data _temp&id;
512378     set _temp&id;
512379     where LHS ne NAME and node ne '';
512380     run;
512381     %let dsid = %sysfunc(open(_temp&id));
512382     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512383     %let dsid = %sysfunc(close(&dsid));
512384     %if ^&&nobs&id %then %do;
512385     proc datasets lib=work nolist;
512386     delete _temp&id;
512387     run;
512388     quit;
512389     %end;
512390     %else %do;
512391     proc sort data=_temp&id nodupkey;
512392     by LHS NAME;
512393     run;
512394     %end;
512395     %end;
512396     %end;
512397     %end;
512398     %mend varDept;
512399     %macro optCode(outdata=fcmpdata);
512400     %global fcmpStart;
512401     %let fcmpStart = 0;
512402     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
512403     %let NumNodes=9;
512404     %do k=1 %to &NumNodes;
512405     %vardept(fcmpdata=&outdata, id=&k);
512406     %end;
512407     %mend optCode;
512408     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
512409     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
512410     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
512411     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
512412     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512413     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
512414     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
512415     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
512416     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512417     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512418     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
512418   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
512419     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
512420     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
512421     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
512422     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
512423     filename _pref
512423   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
512424     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512425     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
512426    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
512427    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
512428    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
512429    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
512430    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
512431    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
512432    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
512433    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
512434    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
512435    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
512436    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
512437    +LENGTH _WARN_ $4
512438    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
512439    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
512440    +
512441    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
512442    +
512443    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
512444    +
512445    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
512446    +
512447    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
512448    +
512449    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
512450    +
512451    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
512452    +
512453    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
512454    +
512455    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
512456    +
512457    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
512458    +
512459    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
512460    +
512461    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
512462    +
512463    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
512464    +
512465    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
512466    +
512467    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
512468    +
512469    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
512470    +
512471    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
512472    +
512473    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
512474    +
512475    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
512476    +
512477    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
512478    +
512479    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
512480    +
512481    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
512482    +
512483    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
512484    +
512485    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
512486    +
512487    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
512488    +
512489    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
512490    +
512491    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
512492    +
512493    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
512494    +
512495    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
512496    +
512497    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
512498    +
512499    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
512500    +
512501    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
512502    +
512503    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
512504    +
512505    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
512506    +
512507    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
512508    +
512509    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
512510    +
512511    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
512512    +
512513    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
512514    +
512515    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
512516    +
512517    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
512518    +
512519    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
512520    +
512521    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
512522    +
512523    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
512524    +
512525    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
512526    +
512527    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
512528    +
512529    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
512530    +
512531    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
512532    +
512533    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
512534    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
512535    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
512536    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
512537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512539    +end;
MPRINT(EM_DIAGRAM):   end;
512540    +else do;
MPRINT(EM_DIAGRAM):   else do;
512541    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512542    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
512543    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
The SAS System
 
512544    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512545    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
512546    +   end;
MPRINT(EM_DIAGRAM):   end;
512547    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512548    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
512549    +   end;
MPRINT(EM_DIAGRAM):   end;
512550    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512551    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
512552    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512553    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512554    +   end;
MPRINT(EM_DIAGRAM):   end;
512555    +end;
MPRINT(EM_DIAGRAM):   end;
512556    +
512557    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
512558    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
512559    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
512560    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
512561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512563    +end;
MPRINT(EM_DIAGRAM):   end;
512564    +else do;
MPRINT(EM_DIAGRAM):   else do;
512565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512566    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
512567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512568    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512569    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
512570    +   end;
MPRINT(EM_DIAGRAM):   end;
512571    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512572    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
512573    +   end;
MPRINT(EM_DIAGRAM):   end;
512574    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512575    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
512576    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512577    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512578    +   end;
MPRINT(EM_DIAGRAM):   end;
512579    +end;
MPRINT(EM_DIAGRAM):   end;
512580    +
512581    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
512582    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
512583    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
512584    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
512585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512587    +end;
MPRINT(EM_DIAGRAM):   end;
512588    +else do;
MPRINT(EM_DIAGRAM):   else do;
512589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512590    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
512591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512592    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512593    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
512594    +   end;
MPRINT(EM_DIAGRAM):   end;
512595    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512596    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
512597    +   end;
MPRINT(EM_DIAGRAM):   end;
512598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512599    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
512600    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512601    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512602    +   end;
MPRINT(EM_DIAGRAM):   end;
512603    +end;
MPRINT(EM_DIAGRAM):   end;
512604    +
512605    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
512606    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
512607    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
512608    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
512609    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512610    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512611    +end;
MPRINT(EM_DIAGRAM):   end;
512612    +else do;
MPRINT(EM_DIAGRAM):   else do;
512613    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512614    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
512615    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512616    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512617    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
512618    +   end;
MPRINT(EM_DIAGRAM):   end;
512619    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512620    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
512621    +   end;
MPRINT(EM_DIAGRAM):   end;
512622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512623    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
512624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512626    +   end;
MPRINT(EM_DIAGRAM):   end;
512627    +end;
MPRINT(EM_DIAGRAM):   end;
512628    +
512629    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
512630    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
512631    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
512632    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
512633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512635    +end;
MPRINT(EM_DIAGRAM):   end;
512636    +else do;
MPRINT(EM_DIAGRAM):   else do;
512637    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512638    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
512639    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512640    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512641    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
512642    +   end;
MPRINT(EM_DIAGRAM):   end;
512643    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512644    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
512645    +   end;
MPRINT(EM_DIAGRAM):   end;
512646    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512647    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
512648    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512649    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512650    +   end;
MPRINT(EM_DIAGRAM):   end;
512651    +end;
MPRINT(EM_DIAGRAM):   end;
512652    +
512653    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
512654    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
512655    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
512656    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
512657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512659    +end;
MPRINT(EM_DIAGRAM):   end;
512660    +else do;
MPRINT(EM_DIAGRAM):   else do;
512661    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512662    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
512663    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512664    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512665    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
512666    +   end;
MPRINT(EM_DIAGRAM):   end;
512667    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512668    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
512669    +   end;
MPRINT(EM_DIAGRAM):   end;
512670    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512671    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
512672    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512673    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512674    +   end;
MPRINT(EM_DIAGRAM):   end;
512675    +end;
MPRINT(EM_DIAGRAM):   end;
512676    +
512677    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
512678    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
512679    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
512680    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
512681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512683    +end;
MPRINT(EM_DIAGRAM):   end;
512684    +else do;
MPRINT(EM_DIAGRAM):   else do;
512685    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512686    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
512687    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512688    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
512689    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
512690    +   end;
MPRINT(EM_DIAGRAM):   end;
512691    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
512692    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
512693    +   end;
MPRINT(EM_DIAGRAM):   end;
512694    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512695    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
512696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512698    +   end;
MPRINT(EM_DIAGRAM):   end;
512699    +end;
MPRINT(EM_DIAGRAM):   end;
512700    +
512701    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
512702    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
512703    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
512704    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
512705    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
512706    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
512707    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
512708    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
512709    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
512710    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
512711    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
512712    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
512713    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512714    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512715    +end;
MPRINT(EM_DIAGRAM):   end;
512716    +else do;
MPRINT(EM_DIAGRAM):   else do;
512717    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
512718    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
512719    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512720    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
512721    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
512722    +   end;
MPRINT(EM_DIAGRAM):   end;
512723    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
512724    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
512725    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
512726    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
512727    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
512728    +   end;
MPRINT(EM_DIAGRAM):   end;
512729    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
512730    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
512731    +   end;
MPRINT(EM_DIAGRAM):   end;
512732    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
512733    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
512734    +   end;
MPRINT(EM_DIAGRAM):   end;
512735    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
512736    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
512737    +   end;
MPRINT(EM_DIAGRAM):   end;
512738    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512739    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
512740    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
512741    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
512742    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
512743    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512744    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512745    +   end;
MPRINT(EM_DIAGRAM):   end;
512746    +end;
MPRINT(EM_DIAGRAM):   end;
512747    +
512748    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
512749    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
512750    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
512751    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
512752    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
512753    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
512754    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
512755    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
512756    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
512757    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
512758    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
512759    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
512760    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
512761    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512762    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512763    +end;
MPRINT(EM_DIAGRAM):   end;
512764    +else do;
MPRINT(EM_DIAGRAM):   else do;
512765    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
512766    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
512767    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512768    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
512769    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
512770    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
512771    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
512772    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
512773    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512774    +         end;
MPRINT(EM_DIAGRAM):   end;
512775    +         else do;
MPRINT(EM_DIAGRAM):   else do;
512776    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
512777    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
512778    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512779    +            end;
MPRINT(EM_DIAGRAM):   end;
512780    +         end;
MPRINT(EM_DIAGRAM):   end;
512781    +      end;
MPRINT(EM_DIAGRAM):   end;
512782    +      else do;
MPRINT(EM_DIAGRAM):   else do;
512783    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
512784    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
512785    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512786    +         end;
MPRINT(EM_DIAGRAM):   end;
512787    +      end;
MPRINT(EM_DIAGRAM):   end;
512788    +   end;
MPRINT(EM_DIAGRAM):   end;
512789    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512790    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
512791    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
512792    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512793    +      end;
MPRINT(EM_DIAGRAM):   end;
512794    +      else do;
MPRINT(EM_DIAGRAM):   else do;
512795    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
512796    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
512797    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
512798    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
512799    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
512800    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512801    +         end;
MPRINT(EM_DIAGRAM):   end;
512802    +      end;
MPRINT(EM_DIAGRAM):   end;
512803    +   end;
MPRINT(EM_DIAGRAM):   end;
512804    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
512805    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
512806    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
512807    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
512808    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
512809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512811    +   end;
MPRINT(EM_DIAGRAM):   end;
512812    +end;
MPRINT(EM_DIAGRAM):   end;
512813    +
512814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512815    +*** Checking missing input Interval
512816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
512817    +
512818    +IF NMISS(
512819    +   AcceptedCmpTotal ,
512820    +   Age ,
512821    +   Frq ,
512822    +   Income ,
512823    +   Kidhome ,
512824    +   Mnt ,
512825    +   MntFishProducts ,
512826    +   MntFruits ,
512827    +   MntGoldProds ,
512828    +   MntMeatProducts ,
512829    +   MntSweetProducts ,
512830    +   MntWines ,
512831    +   MonthsAsCustomer ,
512832    +   NumCatalogPurchases ,
512833    +   NumDealsPurchases ,
512834    +   NumDistPurchases ,
512835    +   NumStorePurchases ,
512836    +   NumWebPurchases ,
512837    +   NumWebVisitsMonth ,
512838    +   RFMstat ,
512839    +   RMntFrq ,
512840    +   Recency ,
512841    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
512842    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
512843    +
512844    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512845    +END;
MPRINT(EM_DIAGRAM):   END;
512846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512847    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
512848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512849    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
512850    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
512851    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
512852    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
512853    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
512854    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
512855    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
512856    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
512857    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
512858    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
512859    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
512860    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
512861    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
512862    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
512863    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
512864    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
512865    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
512866    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
512867    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
512868    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
512869    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
512870    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
512871    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
512872    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
512873    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
512874    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
512875    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
512876    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
512877    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
512878    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
512879    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
512880    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
512881    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
512882    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
512883    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
512884    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
512885    +END;
MPRINT(EM_DIAGRAM):   END;
512886    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
512887    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
512888    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
512889    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
512890    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
512891    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
512892    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
512893    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
512894    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
512895    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
512896    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
512897    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
512898    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
512899    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
512900    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
512901    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
512902    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
512903    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
512904    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
512905    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
512906    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
512907    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
512908    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
512909    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
512910    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
512911    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
512912    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
512913    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
512914    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
512915    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
512916    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
512917    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
512918    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
512919    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
512920    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
512921    +   ELSE S_NumCatalogPurchases
512922    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
512923    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
512924    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
512925    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
512926    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
512927    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
512928    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
512929    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
512930    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
512931    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
512932    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
512933    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
512934    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
512935    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
512936    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
512937    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
512938    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
512939    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
512940    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
512941    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
512942    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
512943    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
512944    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
512945    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
512946    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
512947    +END;
MPRINT(EM_DIAGRAM):   END;
512948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512949    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
512950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512952    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
512953    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512955    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
512956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512957    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
512958    +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
512959    +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
512960    +        S_Income  +    -0.27053363011695 * S_Kidhome
512961    +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
512962    +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
512963    +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
512964    +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
512965    +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
512966    +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
512967    +          +    -1.35624485206227 * S_NumDealsPurchases
512968    +          +    -0.54646115734684 * S_NumDistPurchases
512969    +          +     1.29794225108321 * S_NumStorePurchases
512970    +          +      1.8453064081809 * S_NumWebPurchases
512971    +          +    -0.92747144824026 * S_NumWebVisitsMonth
512972    +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
512973    +        S_RMntFrq  +     0.73207333681971 * S_Recency
512974    +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome +
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 *
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts +
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 *
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 *
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 *
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 *
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq +
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
512975    +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
512976    +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
512977    +        S_Income  +    -0.79821220724157 * S_Kidhome
512978    +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
512979    +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
512980    +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
512981    +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
512982    +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
512983    +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
512984    +          +     0.72513216556859 * S_NumDealsPurchases
512985    +          +    -0.15566774650584 * S_NumDistPurchases
512986    +          +     -0.8847675798982 * S_NumStorePurchases
512987    +          +    -0.79405200318252 * S_NumWebPurchases
512988    +          +     1.74003779802254 * S_NumWebVisitsMonth
512989    +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
512990    +        S_RMntFrq  +    -1.54235932941708 * S_Recency
512991    +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome +
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 *
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts +
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 *
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 *
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 *
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 *
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq +
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
512992    +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
512993    +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
512994    +        S_Income  +    -0.58596240450544 * S_Kidhome
512995    +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
512996    +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
512997    +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
512998    +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
512999    +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
513000    +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
513001    +          +     0.17466385502192 * S_NumDealsPurchases
513002    +          +    -0.06219545947203 * S_NumDistPurchases
513003    +          +     0.16637546838853 * S_NumStorePurchases
513004    +          +    -0.06908729397635 * S_NumWebPurchases
513005    +          +     1.44269772444244 * S_NumWebVisitsMonth
513006    +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
513007    +        S_RMntFrq  +    -1.38739950871333 * S_Recency
513008    +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age +
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome +
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 *
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts +
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 *
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 *
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 *
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 *
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq +
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
513009    +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
513010    +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
513011    +        S_Income  +    -0.42454238091412 * S_Kidhome
513012    +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
513013    +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
513014    +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
513015    +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
513016    +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
513017    +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
513018    +          +     0.77329078721398 * S_NumDealsPurchases
513019    +          +     0.31693324305765 * S_NumDistPurchases
513020    +          +    -1.08524196373091 * S_NumStorePurchases
513021    +          +    -0.96945384922979 * S_NumWebPurchases
513022    +          +     1.24659288571587 * S_NumWebVisitsMonth
513023    +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
513024    +        S_RMntFrq  +    -2.48250049927721 * S_Recency
513025    +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age +
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome +
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 *
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts +
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 *
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 *
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 *
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 *
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq +
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
513026    +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
513027    +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
513028    +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
513029    +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
513030    +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 *
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 +
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 *
HigherEducationBinary0 ;
513031    +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
513032    +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
513033    +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
513034    +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
513035    +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 *
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 +
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 *
HigherEducationBinary0 ;
513036    +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
513037    +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
513038    +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
513039    +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
513040    +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 *
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 +
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 *
HigherEducationBinary0 ;
513041    +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
513042    +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
513043    +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
513044    +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
513045    +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 *
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 +
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 *
HigherEducationBinary0 ;
513046    +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
513047    +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
513048    +        EducationGraduation  +    -0.11075159631637 * EducationMaster
513049    +          +     0.36788499721115 * Marital_StatusDivorced
513050    +          +    -0.16988636986433 * Marital_StatusMarried
513051    +          +    -0.24560973256761 * Marital_StatusSingle
513052    +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 *
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried +
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
513053    +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
513054    +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
513055    +        EducationGraduation  +    -0.56430222714946 * EducationMaster
513056    +          +     0.24497797058028 * Marital_StatusDivorced
513057    +          +    -1.44410245434424 * Marital_StatusMarried
513058    +          +     1.47441310087392 * Marital_StatusSingle
513059    +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 *
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried +
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
513060    +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
513061    +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
513062    +        EducationGraduation  +     0.04653963359475 * EducationMaster
513063    +          +     0.15823225296452 * Marital_StatusDivorced
513064    +          +    -0.39129434667884 * Marital_StatusMarried
513065    +          +     0.84414069966504 * Marital_StatusSingle
513066    +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 *
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried +
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
513067    +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
513068    +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
513069    +        EducationGraduation  +     0.40030852414737 * EducationMaster
513070    +          +     1.22039169814542 * Marital_StatusDivorced
513071    +          +     0.91592976063128 * Marital_StatusMarried
513072    +          +    -1.51267332883308 * Marital_StatusSingle
513073    +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 *
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried +
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
513074    +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
513075    +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
513076    +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
513077    +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
513078    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
513079    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
513080    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
513081    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
513082    +END;
MPRINT(EM_DIAGRAM):   END;
513083    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
513084    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
513085    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
513086    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
513087    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
513088    +END;
MPRINT(EM_DIAGRAM):   END;
513089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513090    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
513091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513092    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
513093    +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
513094    +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 +
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
513095    +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
513096    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
513097    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
513098    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
513099    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
513100    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
513101    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
513102    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
513103    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
513104    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
513105    +END;
MPRINT(EM_DIAGRAM):   END;
513106    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
513107    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
513108    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
513109    +END;
MPRINT(EM_DIAGRAM):   END;
513110    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
513111    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
513112    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
513113    +END;
MPRINT(EM_DIAGRAM):   END;
513114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513115    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
513116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513117    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
513118    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
513119    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
513120    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
513121    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
513122    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
513123    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
513124    +END;
MPRINT(EM_DIAGRAM):   END;
513125    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
513126    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
513127    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
513128    +drop
513129    +H11
513130    +H12
513131    +H13
513132    +H14
513133    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
513134    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
513135     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
513136     quit;
513137     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
513138     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
513139     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
513140     retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
513141     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
513142     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513143     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
513144     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513145     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513146     proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
513147     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513148     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513149     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513150     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
513151     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
513152     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513153     proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
513154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513155     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
513156     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513157     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513158     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513159     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
513160     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513161     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513162     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
513163     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
513163   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.
 
513164     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513165     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
513166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513167     filename _pref
513167   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
513168     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
513169     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
513170    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
513171    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
513172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
513173    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
513174    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
513175    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
513176     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
513177     quit;
513178     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
513179     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
513180     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
513181     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
513182     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
513183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
513184     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
513185     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513186     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513187     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
513188     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513189     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513190     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513191     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
513192     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
513193     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513194     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
513195     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
513196     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
513197     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513199     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513200     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
513201     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513202     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513203     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
513204     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
513204   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
513205     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513206     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
513207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513208     filename _pref
513208   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
513209     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
513210     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
513211    +
513212    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
513213    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
513213   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
513214    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
513215    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
513216    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
513217    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
513218    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
513219     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
513220     quit;
513221     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
513222     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
513223     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
513224     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
513225     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
513226     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513227     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
513228     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513229     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
513230     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
513231     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513232     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513233     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513234     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
513235     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
513236     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513237     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
513238     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513239     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
513240     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513241     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513242     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513243     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
513244     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513245     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513246     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
513247     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
513247   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
513248     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513249     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
513250     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513251     filename _pref
513251   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
513252     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
513253     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
513254    +
513255    +
513256    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
513257    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
513258    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
513259    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
513260    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
513261    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513262    +
513263    +
513264    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
513265    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
513266    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
513267    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
513268    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
513269    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513270    +
513271    +
513272    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
513273    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
513274    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
513275    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
513276    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
513277    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513278    +
513279    +
513280    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
513281    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
513282    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
513283    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
513284    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
513285    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513286    +
513287    +
513288    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
513289    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
513290    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
513291    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
513292    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
513293    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513294    +
513295    +
513296    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
513297    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
513298    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
513299    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
513300    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
513301    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513302    +
513303    +
513304    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
513305    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
513306    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
513307    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
513308    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
513309    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513310    +
513311    +
513312    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
513313    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
513314    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
513315    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
513316    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
513317    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
513318    +if
513319    +_FILTERNORM1 not in ( '.')
513320    + and
513321    +_FILTERNORM2 not in ( '.')
513322    + and
513323    +_FILTERNORM3 not in ( '.')
513324    + and
513325    +_FILTERNORM4 not in ( '.')
513326    + and
513327    +_FILTERNORM5 not in ( '.')
513328    + and
513329    +_FILTERNORM6 not in ( '.')
513330    + and
513331    +_FILTERNORM7 not in ( ' ')
513332    + and
513333    +_FILTERNORM8 not in ( ' ')
513334    +and
513335    +( Dt_Customer ne .)
513336    +and ( Income ne . and (Income<=107000))
513337    +and ( Kidhome ne .)
513338    +and ( MntFishProducts ne .)
513339    +and ( MntFruits ne .)
513340    +and ( MntGoldProds ne .)
513341    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
513342    +and ( MntSweetProducts ne .)
513343    +and ( MntWines ne .)
513344    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
513345    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
513346    +and ( NumStorePurchases ne .)
513347    +and ( NumWebPurchases ne .)
513348    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
513349    +and ( Recency ne .)
513350    +and ( Teenhome ne .)
513351    +and ( Year_Birth ne .)
513352    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
513353    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
513354    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
513355    +end;
MPRINT(EM_DIAGRAM):   end;
513356    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
513357    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
513358     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
513359     quit;
513360     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
513361     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
513362     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
513363     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
513364     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
513365     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513366     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
513367     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513368     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513369     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
513370     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513371     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513372     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513373     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
513374     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
513375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513376     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
513377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513378     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
513379     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513380     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513381     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
513382     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
513383     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
513384     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513385     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
513386     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
513386   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
513387     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513388     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
513389     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513390     %macro varDept(fcmpdata=,id=);
513391     %global nobs&id scoreFlag&id;
513392     %let scoreFlag&id = 0;
513393     %if &id=1 or ^&fcmpStart %then %do;
513394     proc sort data=&fcmpdata out=_temp&id nodupkey;
513395     by NAME;
513396     where id=&id and LHS in( %let j=1;
513397     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
513398     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
513399     "&var" %let j = %eval(&j+1);
513400     %end;
513401     );
513402     run;
513403     %let dsid = %sysfunc(open(_temp&id));
513404     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
513405     %let dsid = %sysfunc(close(&dsid));
513406     %if &&nobs&id %then %do;
513407     %let scoreFlag&id = 1;
513408     %let fcmpStart = 1;
513409     %end;
513410     %else %let fcmpStart = 0;
513411     %end;
513412     %else %do;
513413     proc sort data=&fcmpdata out=_tempid;
513414     where id=&id;
513415     by LHS;
513416     run;
513417     %let dsid = %sysfunc(open(_tempid));
513418     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
513419     %let dsid = %sysfunc(close(&dsid));
513420     %if ^&&nobs&id %then %do;
513421     proc datasets lib=work nolist;
513422     delete _tempid;
513423     run;
513424     quit;
513425     %end;
513426     %else %do;
513427     data _tempAll;
513428     set %let j=%eval(&id-1);
513429     %do x=1 %to &j;
513430     %if &&nobs&x %then %do;
513431     _temp&x %end;
513432     %end;
513433     ;
513434     run;
513435     proc sql;
513436     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
513436   ! work._tempid p2 where p.name=p2.lhs;
513437     quit;
513438     data _temp&id;
513439     set _temp&id;
513440     where LHS ne '' and NAME ne '' and Node ne '';
513441     run;
513442     proc datasets lib=work nolist;
513443     delete _tempAll;
513444     run;
513445     %let dsid = %sysfunc(open(_temp&id));
513446     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
513447     %let dsid = %sysfunc(close(&dsid));
513448     %if ^&&nobs&id %then %do;
513449     proc datasets lib=work nolist;
513450     delete _temp&id;
513451     run;
513452     quit;
513453     %end;
513454     %else %do;
513455     %let scoreFlag&id = 1;
513456     data _temp&id;
513457     set _temp&id;
513458     where LHS ne NAME and node ne '';
513459     run;
513460     %let dsid = %sysfunc(open(_temp&id));
513461     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
513462     %let dsid = %sysfunc(close(&dsid));
513463     %if ^&&nobs&id %then %do;
513464     proc datasets lib=work nolist;
513465     delete _temp&id;
513466     run;
513467     quit;
513468     %end;
513469     %else %do;
513470     proc sort data=_temp&id nodupkey;
513471     by LHS NAME;
513472     run;
513473     %end;
513474     %end;
513475     %end;
513476     %end;
513477     %mend varDept;
513478     %macro optCode(outdata=fcmpdata);
513479     %global fcmpStart;
513480     %let fcmpStart = 0;
513481     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
513482     %let NumNodes=9;
513483     %do k=1 %to &NumNodes;
513484     %vardept(fcmpdata=&outdata, id=&k);
513485     %end;
513486     %mend optCode;
513487     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
513488     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
513489     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
513490     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
513491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513492     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
513493     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
513494     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
513495     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513496     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
513497     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
513497   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
513498     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
513499     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
513500     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
513501     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
513502     filename _pref
513502   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
513503     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
513504     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
513505    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
513506    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
513507    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
513508    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
513509    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
513510    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
513511    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
513512    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
513513    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
513514    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
513515    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
513516    +LENGTH _WARN_ $4
513517    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
513518    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
513519    +
513520    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
513521    +
513522    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
513523    +
513524    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
513525    +
513526    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
513527    +
513528    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
513529    +
513530    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
513531    +
513532    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
513533    +
513534    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
513535    +
513536    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
513537    +
513538    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
513539    +
513540    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
513541    +
513542    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
513543    +
513544    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
513545    +
513546    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
513547    +
513548    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
513549    +
513550    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
513551    +
513552    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
513553    +
513554    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
513555    +
513556    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
513557    +
513558    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
513559    +
513560    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
513561    +
513562    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
513563    +
513564    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
513565    +
513566    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
513567    +
513568    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
513569    +
513570    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
513571    +
513572    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
513573    +
513574    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
513575    +
513576    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
513577    +
513578    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
513579    +
513580    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
513581    +
513582    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
513583    +
513584    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
513585    +
513586    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
513587    +
513588    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
513589    +
513590    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
513591    +
513592    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
513593    +
513594    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
513595    +
513596    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
513597    +
513598    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
513599    +
513600    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
513601    +
513602    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
513603    +
513604    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
513605    +
513606    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
513607    +
513608    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
513609    +
513610    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
513611    +
513612    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
513613    +
513614    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
513615    +
513616    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
513617    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
513618    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
513619    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
513620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513622    +end;
MPRINT(EM_DIAGRAM):   end;
513623    +else do;
MPRINT(EM_DIAGRAM):   else do;
513624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513625    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
513626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513627    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513628    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
513629    +   end;
MPRINT(EM_DIAGRAM):   end;
513630    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513631    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
513632    +   end;
MPRINT(EM_DIAGRAM):   end;
513633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513634    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
513635    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513636    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513637    +   end;
MPRINT(EM_DIAGRAM):   end;
513638    +end;
MPRINT(EM_DIAGRAM):   end;
513639    +
513640    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
513641    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
513642    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
513643    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
513644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513646    +end;
MPRINT(EM_DIAGRAM):   end;
513647    +else do;
MPRINT(EM_DIAGRAM):   else do;
513648    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513649    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
513650    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513651    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513652    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
513653    +   end;
MPRINT(EM_DIAGRAM):   end;
513654    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513655    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
513656    +   end;
MPRINT(EM_DIAGRAM):   end;
513657    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513658    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
513659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513661    +   end;
MPRINT(EM_DIAGRAM):   end;
513662    +end;
MPRINT(EM_DIAGRAM):   end;
513663    +
513664    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
513665    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
513666    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
513667    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
513668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513670    +end;
MPRINT(EM_DIAGRAM):   end;
513671    +else do;
MPRINT(EM_DIAGRAM):   else do;
513672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513673    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
513674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513675    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513676    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
513677    +   end;
MPRINT(EM_DIAGRAM):   end;
513678    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513679    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
513680    +   end;
MPRINT(EM_DIAGRAM):   end;
513681    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513682    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
513683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513685    +   end;
MPRINT(EM_DIAGRAM):   end;
513686    +end;
MPRINT(EM_DIAGRAM):   end;
513687    +
513688    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
513689    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
513690    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
513691    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
513692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513694    +end;
MPRINT(EM_DIAGRAM):   end;
513695    +else do;
MPRINT(EM_DIAGRAM):   else do;
513696    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513697    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
513698    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513699    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513700    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
513701    +   end;
MPRINT(EM_DIAGRAM):   end;
513702    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513703    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
513704    +   end;
MPRINT(EM_DIAGRAM):   end;
513705    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513706    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
513707    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513708    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513709    +   end;
MPRINT(EM_DIAGRAM):   end;
513710    +end;
MPRINT(EM_DIAGRAM):   end;
513711    +
513712    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
513713    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
513714    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
513715    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
513716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513718    +end;
MPRINT(EM_DIAGRAM):   end;
513719    +else do;
MPRINT(EM_DIAGRAM):   else do;
513720    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513721    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
513722    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513723    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513724    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
513725    +   end;
MPRINT(EM_DIAGRAM):   end;
513726    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513727    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
513728    +   end;
MPRINT(EM_DIAGRAM):   end;
513729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513730    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
513731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513733    +   end;
MPRINT(EM_DIAGRAM):   end;
513734    +end;
MPRINT(EM_DIAGRAM):   end;
513735    +
513736    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
513737    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
513738    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
513739    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
513740    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513742    +end;
MPRINT(EM_DIAGRAM):   end;
513743    +else do;
MPRINT(EM_DIAGRAM):   else do;
513744    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513745    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
513746    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513747    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513748    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
513749    +   end;
MPRINT(EM_DIAGRAM):   end;
513750    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513751    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
513752    +   end;
MPRINT(EM_DIAGRAM):   end;
513753    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513754    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
513755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513757    +   end;
MPRINT(EM_DIAGRAM):   end;
513758    +end;
MPRINT(EM_DIAGRAM):   end;
513759    +
513760    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
513761    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
513762    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
513763    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
513764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513766    +end;
MPRINT(EM_DIAGRAM):   end;
513767    +else do;
MPRINT(EM_DIAGRAM):   else do;
513768    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513769    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
513770    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513771    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
513772    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
513773    +   end;
MPRINT(EM_DIAGRAM):   end;
513774    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
513775    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
513776    +   end;
MPRINT(EM_DIAGRAM):   end;
513777    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513778    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
513779    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513780    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513781    +   end;
MPRINT(EM_DIAGRAM):   end;
513782    +end;
MPRINT(EM_DIAGRAM):   end;
513783    +
513784    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
513785    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
513786    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
513787    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
513788    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
513789    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
513790    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
513791    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
513792    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
513793    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
513794    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
513795    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
513796    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513797    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513798    +end;
MPRINT(EM_DIAGRAM):   end;
513799    +else do;
MPRINT(EM_DIAGRAM):   else do;
513800    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
513801    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
513802    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513803    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
513804    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
513805    +   end;
MPRINT(EM_DIAGRAM):   end;
513806    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
513807    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
513808    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
513809    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
513810    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
513811    +   end;
MPRINT(EM_DIAGRAM):   end;
513812    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
513813    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
513814    +   end;
MPRINT(EM_DIAGRAM):   end;
513815    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
513816    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
513817    +   end;
MPRINT(EM_DIAGRAM):   end;
513818    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
513819    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
513820    +   end;
MPRINT(EM_DIAGRAM):   end;
513821    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513822    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
513823    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
513824    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
513825    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
513826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513828    +   end;
MPRINT(EM_DIAGRAM):   end;
513829    +end;
MPRINT(EM_DIAGRAM):   end;
513830    +
513831    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
513832    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
513833    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
513834    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
513835    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
513836    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
513837    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
513838    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
513839    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
513840    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
513841    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
513842    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
513843    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
513844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513846    +end;
MPRINT(EM_DIAGRAM):   end;
513847    +else do;
MPRINT(EM_DIAGRAM):   else do;
513848    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
513849    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
513850    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513851    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
513852    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
513853    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
513854    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
513855    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
513856    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513857    +         end;
MPRINT(EM_DIAGRAM):   end;
513858    +         else do;
MPRINT(EM_DIAGRAM):   else do;
513859    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
513860    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
513861    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513862    +            end;
MPRINT(EM_DIAGRAM):   end;
513863    +         end;
MPRINT(EM_DIAGRAM):   end;
513864    +      end;
MPRINT(EM_DIAGRAM):   end;
513865    +      else do;
MPRINT(EM_DIAGRAM):   else do;
513866    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
513867    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
513868    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513869    +         end;
MPRINT(EM_DIAGRAM):   end;
513870    +      end;
MPRINT(EM_DIAGRAM):   end;
513871    +   end;
MPRINT(EM_DIAGRAM):   end;
513872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513873    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
513874    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
513875    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513876    +      end;
MPRINT(EM_DIAGRAM):   end;
513877    +      else do;
MPRINT(EM_DIAGRAM):   else do;
513878    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
513879    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
513880    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
513881    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
513882    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
513883    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513884    +         end;
MPRINT(EM_DIAGRAM):   end;
513885    +      end;
MPRINT(EM_DIAGRAM):   end;
513886    +   end;
MPRINT(EM_DIAGRAM):   end;
513887    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
513888    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
513889    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
513890    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
513891    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
513892    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513893    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513894    +   end;
MPRINT(EM_DIAGRAM):   end;
513895    +end;
MPRINT(EM_DIAGRAM):   end;
513896    +
513897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513898    +*** Checking missing input Interval
513899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
513900    +
513901    +IF NMISS(
513902    +   AcceptedCmpTotal ,
513903    +   Age ,
513904    +   Frq ,
513905    +   Income ,
513906    +   Kidhome ,
513907    +   Mnt ,
513908    +   MntFishProducts ,
513909    +   MntFruits ,
513910    +   MntGoldProds ,
513911    +   MntMeatProducts ,
513912    +   MntSweetProducts ,
513913    +   MntWines ,
513914    +   MonthsAsCustomer ,
513915    +   NumCatalogPurchases ,
513916    +   NumDealsPurchases ,
513917    +   NumDistPurchases ,
513918    +   NumStorePurchases ,
513919    +   NumWebPurchases ,
513920    +   NumWebVisitsMonth ,
513921    +   RFMstat ,
513922    +   RMntFrq ,
513923    +   Recency ,
513924    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
513925    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
513926    +
513927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513928    +END;
MPRINT(EM_DIAGRAM):   END;
513929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513930    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
513931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513932    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
513933    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
513934    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
513935    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
513936    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
513937    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
513938    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
513939    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
513940    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
513941    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
513942    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
513943    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
513944    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
513945    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
513946    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
513947    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
513948    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
513949    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
513950    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
513951    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
513952    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
513953    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
513954    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
513955    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
513956    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
513957    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
513958    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
513959    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
513960    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
513961    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
513962    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
513963    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
513964    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
513965    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
513966    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
513967    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
513968    +END;
MPRINT(EM_DIAGRAM):   END;
513969    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
513970    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
513971    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
513972    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
513973    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
513974    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
513975    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
513976    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
513977    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
513978    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
513979    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
513980    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
513981    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
513982    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
513983    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
513984    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
513985    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
513986    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
513987    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
513988    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
513989    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
513990    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
513991    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
513992    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
513993    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
513994    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
513995    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
513996    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
513997    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
513998    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
513999    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
514000    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
514001    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
514002    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
514003    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
514004    +   ELSE S_NumCatalogPurchases
514005    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
514006    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
514007    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
514008    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
514009    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
514010    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
514011    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
514012    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
514013    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
514014    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
514015    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
514016    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
514017    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
514018    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
514019    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
514020    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
514021    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
514022    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
514023    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
514024    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
514025    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
514026    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
514027    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
514028    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
514029    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
514030    +END;
MPRINT(EM_DIAGRAM):   END;
514031    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514032    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
514033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514035    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
514036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514038    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
514039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514040    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
514041    +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
514042    +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
514043    +        S_Income  +    -0.14142658616971 * S_Kidhome
514044    +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
514045    +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
514046    +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
514047    +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
514048    +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
514049    +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
514050    +          +     0.96837841774168 * S_NumDealsPurchases
514051    +          +      0.2846105381881 * S_NumDistPurchases
514052    +          +    -0.69514041792943 * S_NumStorePurchases
514053    +          +    -0.96425407351749 * S_NumWebPurchases
514054    +          +     0.79545449599683 * S_NumWebVisitsMonth
514055    +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
514056    +        S_RMntFrq  +    -0.86057075960565 * S_Recency
514057    +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
514058    +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
514059    +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
514060    +        S_Income  +    -0.55432195959203 * S_Kidhome
514061    +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
514062    +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
514063    +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
514064    +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
514065    +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
514066    +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
514067    +          +      0.2190184330724 * S_NumDealsPurchases
514068    +          +    -0.01682909442896 * S_NumDistPurchases
514069    +          +    -0.70244951048552 * S_NumStorePurchases
514070    +          +     -0.3057457659316 * S_NumWebPurchases
514071    +          +     0.95928538762715 * S_NumWebVisitsMonth
514072    +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
514073    +        S_RMntFrq  +     -0.8406665241206 * S_Recency
514074    +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
514075    +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
514076    +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
514077    +        S_Income  +    -0.06354861159882 * S_Kidhome
514078    +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
514079    +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
514080    +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
514081    +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
514082    +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
514083    +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
514084    +          +    -0.21394230159696 * S_NumDealsPurchases
514085    +          +    -0.23833771124663 * S_NumDistPurchases
514086    +          +     0.45832031017813 * S_NumStorePurchases
514087    +          +    -0.30226952040179 * S_NumWebPurchases
514088    +          +    -0.29796387184481 * S_NumWebVisitsMonth
514089    +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
514090    +        S_RMntFrq  +     0.87067423045258 * S_Recency
514091    +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
514092    +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
514093    +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
514094    +        S_Income  +    -0.04839586846715 * S_Kidhome
514095    +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
514096    +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
514097    +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
514098    +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
514099    +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
514100    +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
514101    +          +    -0.43749647771198 * S_NumDealsPurchases
514102    +          +     0.21263473847472 * S_NumDistPurchases
514103    +          +     0.26102168039141 * S_NumStorePurchases
514104    +          +     0.54921725943657 * S_NumWebPurchases
514105    +          +    -0.75685843498122 * S_NumWebVisitsMonth
514106    +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
514107    +        S_RMntFrq  +     0.80536256822347 * S_Recency
514108    +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
514109    +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
514110    +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
514111    +        S_Income  +     0.71499527198653 * S_Kidhome
514112    +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
514113    +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
514114    +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
514115    +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
514116    +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
514117    +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
514118    +          +     0.09436067776126 * S_NumDealsPurchases
514119    +          +    -0.02824201859641 * S_NumDistPurchases
514120    +          +    -0.06770433780564 * S_NumStorePurchases
514121    +          +    -0.07177620319715 * S_NumWebPurchases
514122    +          +    -0.75589979685266 * S_NumWebVisitsMonth
514123    +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
514124    +        S_RMntFrq  +     0.94408788011429 * S_Recency
514125    +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
514126    +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
514127    +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
514128    +        S_Income  +    -0.63474522042341 * S_Kidhome
514129    +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
514130    +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
514131    +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
514132    +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
514133    +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
514134    +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
514135    +          +    -0.51154511343396 * S_NumDealsPurchases
514136    +          +    -0.52422915823572 * S_NumDistPurchases
514137    +          +     0.30305498422357 * S_NumStorePurchases
514138    +          +     0.12197321559338 * S_NumWebPurchases
514139    +          +    -0.10520335422769 * S_NumWebVisitsMonth
514140    +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
514141    +        S_RMntFrq  +    -0.01666787115039 * S_Recency
514142    +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
514143    +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
514144    +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
514145    +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
514146    +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
514147    +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
514148    +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
514149    +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
514150    +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
514151    +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
514152    +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
514153    +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
514154    +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
514155    +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
514156    +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
514157    +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
514158    +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
514159    +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
514160    +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
514161    +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
514162    +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
514163    +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
514164    +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
514165    +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
514166    +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
514167    +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
514168    +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
514169    +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
514170    +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
514171    +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
514172    +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
514173    +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
514174    +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
514175    +        EducationGraduation  +    -0.02263887301789 * EducationMaster
514176    +          +     0.10234616400375 * Marital_StatusDivorced
514177    +          +     0.27961650739075 * Marital_StatusMarried
514178    +          +    -0.40239488723767 * Marital_StatusSingle
514179    +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
514180    +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
514181    +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
514182    +        EducationGraduation  +    -0.14831422332134 * EducationMaster
514183    +          +     0.46385792428023 * Marital_StatusDivorced
514184    +          +    -0.62344590646391 * Marital_StatusMarried
514185    +          +     0.61767209252062 * Marital_StatusSingle
514186    +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
514187    +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
514188    +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
514189    +        EducationGraduation  +    -0.08922741430112 * EducationMaster
514190    +          +    -0.07839612590836 * Marital_StatusDivorced
514191    +          +     0.35316864062221 * Marital_StatusMarried
514192    +          +    -0.10730136429834 * Marital_StatusSingle
514193    +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
514194    +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
514195    +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
514196    +        EducationGraduation  +     -0.0741586921665 * EducationMaster
514197    +          +    -0.09942175269886 * Marital_StatusDivorced
514198    +          +     0.24385460865335 * Marital_StatusMarried
514199    +          +    -0.33658955096296 * Marital_StatusSingle
514200    +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
514201    +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
514202    +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
514203    +        EducationGraduation  +     0.37352174719748 * EducationMaster
514204    +          +    -0.08047852561096 * Marital_StatusDivorced
514205    +          +     1.16485862694561 * Marital_StatusMarried
514206    +          +    -0.94140251178566 * Marital_StatusSingle
514207    +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
514208    +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
514209    +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
514210    +        EducationGraduation  +    -0.17067956037934 * EducationMaster
514211    +          +    -0.16621963893391 * Marital_StatusDivorced
514212    +          +    -0.44542186297324 * Marital_StatusMarried
514213    +          +     0.42176133228308 * Marital_StatusSingle
514214    +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
514215    +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
514216    +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
514217    +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
514218    +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
514219    +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
514220    +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
514221    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
514222    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
514223    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
514224    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
514225    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
514226    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
514227    +END;
MPRINT(EM_DIAGRAM):   END;
514228    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
514229    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
514230    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
514231    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
514232    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
514233    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
514234    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
514235    +END;
MPRINT(EM_DIAGRAM):   END;
514236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514237    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
514238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514239    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
514240    +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
514241    +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
514242    +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
514243    +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
514244    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
514245    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
514246    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
514247    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
514248    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
514249    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
514250    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
514251    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
514252    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
514253    +END;
MPRINT(EM_DIAGRAM):   END;
514254    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
514255    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
514256    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
514257    +END;
MPRINT(EM_DIAGRAM):   END;
514258    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
514259    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
514260    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
514261    +END;
MPRINT(EM_DIAGRAM):   END;
514262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514263    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
514264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514265    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
514266    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
514267    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
514268    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
514269    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
514270    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
514271    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
514272    +END;
MPRINT(EM_DIAGRAM):   END;
514273    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
514274    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
514275    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
514276    +drop
514277    +H11
514278    +H12
514279    +H13
514280    +H14
514281    +H15
514282    +H16
514283    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
514284    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514285     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
514286     quit;
514287     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514288     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514289     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514290     retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
514291     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514293     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514295     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514296     proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
514297     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514298     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514299     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514300     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514301     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514302     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514303     proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
514304     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514305     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514306     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514307     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514308     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514309     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514310     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514311     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514312     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514313     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514313   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
514314     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514315     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514316     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514317     filename _pref
514317   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
514318     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514319     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
514320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
514321    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
514322    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
514323    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
514324    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
514325    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514326     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
514327     quit;
514328     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514329     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514330     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514331     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
514332     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514333     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514334     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514336     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514337     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
514338     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514340     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514341     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514342     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514343     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514344     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
514345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514346     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514347     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514349     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514350     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514351     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514352     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514353     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514354     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514354   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
514355     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514356     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514357     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514358     filename _pref
514358   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
514359     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514360     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
514361    +
514362    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
514363    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
514363   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
514364    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
514365    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
514366    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
514367    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
514368    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514369     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
514370     quit;
514371     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514372     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514373     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514374     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
514375     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514376     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514377     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514378     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514379     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514380     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
514381     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514382     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514383     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514384     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514385     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
514387     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
514388     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514389     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514392     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514393     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514394     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514395     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514396     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514397     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514397   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
514398     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514399     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514401     filename _pref
514401   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
514402     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514403     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
514404    +
514405    +
514406    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
514407    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
514408    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
514409    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
514410    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
514411    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514412    +
514413    +
514414    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
514415    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
514416    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
514417    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
514418    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
514419    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514420    +
514421    +
514422    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
514423    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
514424    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
514425    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
514426    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
514427    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514428    +
514429    +
514430    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
514431    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
514432    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
514433    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
514434    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
514435    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514436    +
514437    +
514438    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
514439    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
514440    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
514441    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
514442    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
514443    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514444    +
514445    +
514446    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
514447    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
514448    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
514449    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
514450    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
514451    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514452    +
514453    +
514454    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
514455    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
514456    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
514457    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
514458    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
514459    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514460    +
514461    +
514462    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
514463    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
514464    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
514465    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
514466    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
514467    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514468    +if
514469    +_FILTERNORM1 not in ( '.')
514470    + and
514471    +_FILTERNORM2 not in ( '.')
514472    + and
514473    +_FILTERNORM3 not in ( '.')
514474    + and
514475    +_FILTERNORM4 not in ( '.')
514476    + and
514477    +_FILTERNORM5 not in ( '.')
514478    + and
514479    +_FILTERNORM6 not in ( '.')
514480    + and
514481    +_FILTERNORM7 not in ( ' ')
514482    + and
514483    +_FILTERNORM8 not in ( ' ')
514484    +and
514485    +( Dt_Customer ne .)
514486    +and ( Income ne . and (Income<=107000))
514487    +and ( Kidhome ne .)
514488    +and ( MntFishProducts ne .)
514489    +and ( MntFruits ne .)
514490    +and ( MntGoldProds ne .)
514491    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
514492    +and ( MntSweetProducts ne .)
514493    +and ( MntWines ne .)
514494    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
514495    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
514496    +and ( NumStorePurchases ne .)
514497    +and ( NumWebPurchases ne .)
514498    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
514499    +and ( Recency ne .)
514500    +and ( Teenhome ne .)
514501    +and ( Year_Birth ne .)
514502    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
514503    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
514504    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
514505    +end;
MPRINT(EM_DIAGRAM):   end;
514506    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
514507    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514508     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
514509     quit;
514510     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514511     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514512     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514513     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
514514     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514515     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514516     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514517     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514519     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
514520     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514521     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514522     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514523     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514524     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514526     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
514527     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
514528     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514529     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514530     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514531     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514532     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514533     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514534     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
514535     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514536     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514536   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
514537     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514538     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514540     %macro varDept(fcmpdata=,id=);
514541     %global nobs&id scoreFlag&id;
514542     %let scoreFlag&id = 0;
514543     %if &id=1 or ^&fcmpStart %then %do;
514544     proc sort data=&fcmpdata out=_temp&id nodupkey;
514545     by NAME;
514546     where id=&id and LHS in( %let j=1;
514547     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
514548     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
514549     "&var" %let j = %eval(&j+1);
514550     %end;
514551     );
514552     run;
514553     %let dsid = %sysfunc(open(_temp&id));
514554     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514555     %let dsid = %sysfunc(close(&dsid));
514556     %if &&nobs&id %then %do;
514557     %let scoreFlag&id = 1;
514558     %let fcmpStart = 1;
514559     %end;
514560     %else %let fcmpStart = 0;
514561     %end;
514562     %else %do;
514563     proc sort data=&fcmpdata out=_tempid;
514564     where id=&id;
514565     by LHS;
514566     run;
514567     %let dsid = %sysfunc(open(_tempid));
514568     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514569     %let dsid = %sysfunc(close(&dsid));
514570     %if ^&&nobs&id %then %do;
514571     proc datasets lib=work nolist;
514572     delete _tempid;
514573     run;
514574     quit;
514575     %end;
514576     %else %do;
514577     data _tempAll;
514578     set %let j=%eval(&id-1);
514579     %do x=1 %to &j;
514580     %if &&nobs&x %then %do;
514581     _temp&x %end;
514582     %end;
514583     ;
514584     run;
514585     proc sql;
514586     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
514586   ! work._tempid p2 where p.name=p2.lhs;
514587     quit;
514588     data _temp&id;
514589     set _temp&id;
514590     where LHS ne '' and NAME ne '' and Node ne '';
514591     run;
514592     proc datasets lib=work nolist;
514593     delete _tempAll;
514594     run;
514595     %let dsid = %sysfunc(open(_temp&id));
514596     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514597     %let dsid = %sysfunc(close(&dsid));
514598     %if ^&&nobs&id %then %do;
514599     proc datasets lib=work nolist;
514600     delete _temp&id;
514601     run;
514602     quit;
514603     %end;
514604     %else %do;
514605     %let scoreFlag&id = 1;
514606     data _temp&id;
514607     set _temp&id;
514608     where LHS ne NAME and node ne '';
514609     run;
514610     %let dsid = %sysfunc(open(_temp&id));
514611     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514612     %let dsid = %sysfunc(close(&dsid));
514613     %if ^&&nobs&id %then %do;
514614     proc datasets lib=work nolist;
514615     delete _temp&id;
514616     run;
514617     quit;
514618     %end;
514619     %else %do;
514620     proc sort data=_temp&id nodupkey;
514621     by LHS NAME;
514622     run;
514623     %end;
514624     %end;
514625     %end;
514626     %end;
514627     %mend varDept;
514628     %macro optCode(outdata=fcmpdata);
514629     %global fcmpStart;
514630     %let fcmpStart = 0;
514631     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
514632     %let NumNodes=9;
514633     %do k=1 %to &NumNodes;
514634     %vardept(fcmpdata=&outdata, id=&k);
514635     %end;
514636     %mend optCode;
514637     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
514638     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
514639     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
514640     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
514641     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514642     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
514643     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
514644     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
514645     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514646     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514647     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
514647   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
514648     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
514649     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
514650     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
514651     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
514652     filename _pref
514652   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
514653     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514654     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
514655    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
514656    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
514657    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
514658    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
514659    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
514660    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
514661    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
514662    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
514663    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
514664    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
514665    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
514666    +LENGTH _WARN_ $4
514667    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
514668    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
514669    +
514670    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
514671    +
514672    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
514673    +
514674    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
514675    +
514676    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
514677    +
514678    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
514679    +
514680    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
514681    +
514682    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
514683    +
514684    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
514685    +
514686    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
514687    +
514688    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
514689    +
514690    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
514691    +
514692    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
514693    +
514694    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
514695    +
514696    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
514697    +
514698    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
514699    +
514700    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
514701    +
514702    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
514703    +
514704    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
514705    +
514706    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
514707    +
514708    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
514709    +
514710    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
514711    +
514712    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
514713    +
514714    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
514715    +
514716    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
514717    +
514718    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
514719    +
514720    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
514721    +
514722    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
514723    +
514724    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
514725    +
514726    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
514727    +
514728    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
514729    +
514730    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
514731    +
514732    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
514733    +
514734    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
514735    +
514736    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
514737    +
514738    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
514739    +
514740    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
514741    +
514742    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
514743    +
514744    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
514745    +
514746    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
514747    +
514748    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
514749    +
514750    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
514751    +
514752    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
514753    +
514754    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
514755    +
514756    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
514757    +
514758    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
514759    +
514760    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
514761    +
514762    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
514763    +
514764    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
514765    +
514766    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
514767    +
514768    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
514769    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
514770    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
514771    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
514772    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514773    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514774    +end;
MPRINT(EM_DIAGRAM):   end;
514775    +else do;
MPRINT(EM_DIAGRAM):   else do;
514776    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514777    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
514778    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514779    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514780    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
514781    +   end;
MPRINT(EM_DIAGRAM):   end;
514782    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514783    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
514784    +   end;
MPRINT(EM_DIAGRAM):   end;
514785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514786    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
514787    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514788    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514789    +   end;
MPRINT(EM_DIAGRAM):   end;
514790    +end;
MPRINT(EM_DIAGRAM):   end;
514791    +
514792    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
514793    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
514794    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
514795    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
514796    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514797    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514798    +end;
MPRINT(EM_DIAGRAM):   end;
514799    +else do;
MPRINT(EM_DIAGRAM):   else do;
514800    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514801    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
514802    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514803    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514804    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
514805    +   end;
MPRINT(EM_DIAGRAM):   end;
514806    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514807    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
514808    +   end;
MPRINT(EM_DIAGRAM):   end;
514809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514810    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
514811    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514812    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514813    +   end;
MPRINT(EM_DIAGRAM):   end;
514814    +end;
MPRINT(EM_DIAGRAM):   end;
514815    +
514816    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
514817    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
514818    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
514819    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
514820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514822    +end;
MPRINT(EM_DIAGRAM):   end;
514823    +else do;
MPRINT(EM_DIAGRAM):   else do;
514824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514825    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
514826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514827    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514828    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
514829    +   end;
MPRINT(EM_DIAGRAM):   end;
514830    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514831    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
514832    +   end;
MPRINT(EM_DIAGRAM):   end;
514833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514834    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
514835    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514836    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514837    +   end;
MPRINT(EM_DIAGRAM):   end;
514838    +end;
MPRINT(EM_DIAGRAM):   end;
514839    +
514840    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
514841    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
514842    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
514843    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
514844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514846    +end;
MPRINT(EM_DIAGRAM):   end;
514847    +else do;
MPRINT(EM_DIAGRAM):   else do;
514848    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514849    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
514850    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514851    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514852    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
514853    +   end;
MPRINT(EM_DIAGRAM):   end;
514854    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514855    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
514856    +   end;
MPRINT(EM_DIAGRAM):   end;
514857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514858    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
514859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514861    +   end;
MPRINT(EM_DIAGRAM):   end;
514862    +end;
MPRINT(EM_DIAGRAM):   end;
514863    +
514864    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
514865    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
514866    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
514867    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
514868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514870    +end;
MPRINT(EM_DIAGRAM):   end;
514871    +else do;
MPRINT(EM_DIAGRAM):   else do;
514872    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514873    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
514874    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514875    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514876    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
514877    +   end;
MPRINT(EM_DIAGRAM):   end;
514878    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514879    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
514880    +   end;
MPRINT(EM_DIAGRAM):   end;
514881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514882    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
514883    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514884    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514885    +   end;
MPRINT(EM_DIAGRAM):   end;
514886    +end;
MPRINT(EM_DIAGRAM):   end;
514887    +
514888    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
514889    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
514890    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
514891    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
514892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514894    +end;
MPRINT(EM_DIAGRAM):   end;
514895    +else do;
MPRINT(EM_DIAGRAM):   else do;
514896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514897    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
514898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514899    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514900    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
514901    +   end;
MPRINT(EM_DIAGRAM):   end;
514902    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514903    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
514904    +   end;
MPRINT(EM_DIAGRAM):   end;
514905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514906    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
514907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514909    +   end;
MPRINT(EM_DIAGRAM):   end;
514910    +end;
MPRINT(EM_DIAGRAM):   end;
514911    +
514912    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
514913    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
514914    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
514915    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
514916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514918    +end;
MPRINT(EM_DIAGRAM):   end;
514919    +else do;
MPRINT(EM_DIAGRAM):   else do;
514920    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514921    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
514922    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514923    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
514924    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
514925    +   end;
MPRINT(EM_DIAGRAM):   end;
514926    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
514927    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
514928    +   end;
MPRINT(EM_DIAGRAM):   end;
514929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514930    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
514931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514933    +   end;
MPRINT(EM_DIAGRAM):   end;
514934    +end;
MPRINT(EM_DIAGRAM):   end;
514935    +
514936    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
514937    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
514938    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
514939    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
514940    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
514941    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
514942    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
514943    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
514944    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
514945    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
514946    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
514947    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
514948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514950    +end;
MPRINT(EM_DIAGRAM):   end;
514951    +else do;
MPRINT(EM_DIAGRAM):   else do;
514952    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
514953    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
514954    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514955    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
514956    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
514957    +   end;
MPRINT(EM_DIAGRAM):   end;
514958    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
514959    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
514960    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
514961    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
514962    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
514963    +   end;
MPRINT(EM_DIAGRAM):   end;
514964    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
514965    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
514966    +   end;
MPRINT(EM_DIAGRAM):   end;
514967    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
514968    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
514969    +   end;
MPRINT(EM_DIAGRAM):   end;
514970    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
514971    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
514972    +   end;
MPRINT(EM_DIAGRAM):   end;
514973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514974    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
514975    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
514976    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
514977    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
514978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514980    +   end;
MPRINT(EM_DIAGRAM):   end;
514981    +end;
MPRINT(EM_DIAGRAM):   end;
514982    +
514983    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
514984    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
514985    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
514986    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
514987    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
514988    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
514989    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
514990    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
514991    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
514992    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
514993    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
514994    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
514995    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
514996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514998    +end;
MPRINT(EM_DIAGRAM):   end;
514999    +else do;
MPRINT(EM_DIAGRAM):   else do;
515000    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
515001    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
515002    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515003    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
515004    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
515005    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
515006    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
515007    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
515008    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515009    +         end;
MPRINT(EM_DIAGRAM):   end;
515010    +         else do;
MPRINT(EM_DIAGRAM):   else do;
515011    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
515012    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
515013    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515014    +            end;
MPRINT(EM_DIAGRAM):   end;
515015    +         end;
MPRINT(EM_DIAGRAM):   end;
515016    +      end;
MPRINT(EM_DIAGRAM):   end;
515017    +      else do;
MPRINT(EM_DIAGRAM):   else do;
515018    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
515019    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
515020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515021    +         end;
MPRINT(EM_DIAGRAM):   end;
515022    +      end;
MPRINT(EM_DIAGRAM):   end;
515023    +   end;
MPRINT(EM_DIAGRAM):   end;
515024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515025    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
515026    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
515027    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515028    +      end;
MPRINT(EM_DIAGRAM):   end;
515029    +      else do;
MPRINT(EM_DIAGRAM):   else do;
515030    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
515031    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
515032    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
515033    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
515034    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
515035    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515036    +         end;
MPRINT(EM_DIAGRAM):   end;
515037    +      end;
MPRINT(EM_DIAGRAM):   end;
515038    +   end;
MPRINT(EM_DIAGRAM):   end;
515039    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
515040    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
515041    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
515042    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
515043    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
515044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515046    +   end;
MPRINT(EM_DIAGRAM):   end;
515047    +end;
MPRINT(EM_DIAGRAM):   end;
515048    +
515049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515050    +*** Checking missing input Interval
515051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
515052    +
515053    +IF NMISS(
515054    +   AcceptedCmpTotal ,
515055    +   Age ,
515056    +   Frq ,
515057    +   Income ,
515058    +   Kidhome ,
515059    +   Mnt ,
515060    +   MntFishProducts ,
515061    +   MntFruits ,
515062    +   MntGoldProds ,
515063    +   MntMeatProducts ,
515064    +   MntSweetProducts ,
515065    +   MntWines ,
515066    +   MonthsAsCustomer ,
515067    +   NumCatalogPurchases ,
515068    +   NumDealsPurchases ,
515069    +   NumDistPurchases ,
515070    +   NumStorePurchases ,
515071    +   NumWebPurchases ,
515072    +   NumWebVisitsMonth ,
515073    +   RFMstat ,
515074    +   RMntFrq ,
515075    +   Recency ,
515076    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
515077    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
515078    +
515079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515080    +END;
MPRINT(EM_DIAGRAM):   END;
515081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515082    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
515083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515084    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
515085    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
515086    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
515087    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
515088    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
515089    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
515090    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
515091    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
515092    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
515093    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
515094    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
515095    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
515096    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
515097    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
515098    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
515099    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
515100    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
515101    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
515102    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
515103    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
515104    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
515105    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
515106    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
515107    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
515108    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
515109    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
515110    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
515111    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
515112    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
515113    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
515114    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
515115    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
515116    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
515117    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
515118    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
515119    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
515120    +END;
MPRINT(EM_DIAGRAM):   END;
515121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
515122    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
515123    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
515124    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
515125    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
515126    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
515127    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
515128    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
515129    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
515130    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
515131    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
515132    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
515133    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
515134    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
515135    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
515136    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
515137    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
515138    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
515139    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
515140    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
515141    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
515142    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
515143    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
515144    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
515145    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
515146    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
515147    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
515148    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
515149    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
515150    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
515151    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
515152    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
515153    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
515154    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
515155    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
515156    +   ELSE S_NumCatalogPurchases
515157    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
515158    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
515159    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
515160    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
515161    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
515162    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
515163    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
515164    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
515165    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
515166    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
515167    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
515168    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
515169    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
515170    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
515171    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
515172    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
515173    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
515174    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
515175    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
515176    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
515177    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
515178    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
515179    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
515180    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
515181    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
515182    +END;
MPRINT(EM_DIAGRAM):   END;
515183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515184    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
515185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515187    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
515188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515190    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
515191    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515192    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
515193    +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
515194    +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
515195    +        S_Income  +    -0.43070069114587 * S_Kidhome
515196    +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
515197    +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
515198    +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
515199    +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
515200    +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
515201    +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
515202    +          +    -0.21858146166244 * S_NumDealsPurchases
515203    +          +     0.18409991080913 * S_NumDistPurchases
515204    +          +     0.35683163455594 * S_NumStorePurchases
515205    +          +     0.24429183714976 * S_NumWebPurchases
515206    +          +     -0.1263739191616 * S_NumWebVisitsMonth
515207    +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
515208    +        S_RMntFrq  +      0.3452503815146 * S_Recency
515209    +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome +
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 *
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts +
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 *
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 *
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 *
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 *
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq +
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
515210    +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
515211    +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
515212    +        S_Income  +     0.24623934031778 * S_Kidhome
515213    +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
515214    +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
515215    +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
515216    +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
515217    +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
515218    +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
515219    +          +    -0.08125614129909 * S_NumDealsPurchases
515220    +          +     0.38003696656333 * S_NumDistPurchases
515221    +          +     0.22006494588298 * S_NumStorePurchases
515222    +          +     0.26217639358993 * S_NumWebPurchases
515223    +          +    -0.56905781005459 * S_NumWebVisitsMonth
515224    +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
515225    +        S_RMntFrq  +     0.33060213336674 * S_Recency
515226    +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome +
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 *
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts +
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 *
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 *
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 *
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 *
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq +
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
515227    +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
515228    +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
515229    +        S_Income  +     0.18597632724783 * S_Kidhome
515230    +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
515231    +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
515232    +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
515233    +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
515234    +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
515235    +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
515236    +          +     0.08121213946217 * S_NumDealsPurchases
515237    +          +    -0.04963282234139 * S_NumDistPurchases
515238    +          +    -0.09521586837775 * S_NumStorePurchases
515239    +          +     0.00630626523742 * S_NumWebPurchases
515240    +          +    -0.03891587920939 * S_NumWebVisitsMonth
515241    +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
515242    +        S_RMntFrq  +    -0.09135545756466 * S_Recency
515243    +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome +
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 *
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts +
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 *
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 *
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 *
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 *
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq +
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
515244    +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
515245    +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
515246    +        S_Income  +     0.25356767518099 * S_Kidhome
515247    +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
515248    +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
515249    +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
515250    +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
515251    +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
515252    +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
515253    +          +     0.83749876944877 * S_NumDealsPurchases
515254    +          +     0.29636537008068 * S_NumDistPurchases
515255    +          +    -0.61202052257506 * S_NumStorePurchases
515256    +          +    -0.96921731415369 * S_NumWebPurchases
515257    +          +     0.10056455703323 * S_NumWebVisitsMonth
515258    +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
515259    +        S_RMntFrq  +    -0.36934667860476 * S_Recency
515260    +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age +
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome +
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 *
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts +
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 *
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 *
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 *
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 *
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq +
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
515261    +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
515262    +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
515263    +        S_Income  +    -0.66239517276633 * S_Kidhome
515264    +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
515265    +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
515266    +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
515267    +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
515268    +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
515269    +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
515270    +          +     0.63122884753912 * S_NumDealsPurchases
515271    +          +     0.00285388491049 * S_NumDistPurchases
515272    +          +    -0.76222252593182 * S_NumStorePurchases
515273    +          +    -0.71485070772733 * S_NumWebPurchases
515274    +          +     1.59020450778179 * S_NumWebVisitsMonth
515275    +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
515276    +        S_RMntFrq  +    -1.32400243058807 * S_Recency
515277    +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome +
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 *
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts +
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 *
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 *
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 *
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 *
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq +
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
515278    +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
515279    +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
515280    +        S_Income  +    -0.22662005590555 * S_Kidhome
515281    +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
515282    +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
515283    +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
515284    +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
515285    +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
515286    +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
515287    +          +    -0.28143084367284 * S_NumDealsPurchases
515288    +          +     0.09640746756361 * S_NumDistPurchases
515289    +          +      0.1754994442449 * S_NumStorePurchases
515290    +          +     0.14321475617403 * S_NumWebPurchases
515291    +          +     -0.1908048876137 * S_NumWebVisitsMonth
515292    +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
515293    +        S_RMntFrq  +     0.02280616139018 * S_Recency
515294    +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age +
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome +
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 *
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts +
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 *
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 *
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 *
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 *
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq +
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
515295    +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
515296    +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
515297    +        S_Income  +    -0.45643247613458 * S_Kidhome
515298    +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
515299    +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
515300    +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
515301    +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
515302    +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
515303    +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
515304    +          +    -0.14623073736275 * S_NumDealsPurchases
515305    +          +      0.1591142102614 * S_NumDistPurchases
515306    +          +     0.10364624011419 * S_NumStorePurchases
515307    +          +     0.21545343951201 * S_NumWebPurchases
515308    +          +     0.61096997379603 * S_NumWebVisitsMonth
515309    +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
515310    +        S_RMntFrq  +    -1.05615926539796 * S_Recency
515311    +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome +
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 *
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts +
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 *
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 *
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 *
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 *
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq +
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
515312    +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
515313    +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
515314    +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
515315    +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
515316    +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 *
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 +
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 *
HigherEducationBinary0 ;
515317    +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
515318    +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
515319    +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
515320    +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
515321    +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 *
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 +
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 *
HigherEducationBinary0 ;
515322    +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
515323    +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
515324    +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
515325    +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
515326    +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 *
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 +
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 *
HigherEducationBinary0 ;
515327    +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
515328    +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
515329    +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
515330    +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
515331    +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 *
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 +
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 *
HigherEducationBinary0 ;
515332    +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
515333    +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
515334    +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
515335    +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
515336    +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 *
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 +
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 *
HigherEducationBinary0 ;
515337    +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
515338    +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
515339    +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
515340    +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
515341    +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 *
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 +
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 *
HigherEducationBinary0 ;
515342    +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
515343    +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
515344    +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
515345    +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
515346    +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 *
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 +
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 *
HigherEducationBinary0 ;
515347    +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
515348    +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
515349    +        EducationGraduation  +     0.00389495660452 * EducationMaster
515350    +          +     0.39856598367829 * Marital_StatusDivorced
515351    +          +    -0.45922754552461 * Marital_StatusMarried
515352    +          +     0.41270195301891 * Marital_StatusSingle
515353    +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 *
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster +
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried +
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
515354    +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
515355    +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
515356    +        EducationGraduation  +      0.2609956614651 * EducationMaster
515357    +          +     0.12002180366932 * Marital_StatusDivorced
515358    +          +     0.50693056076018 * Marital_StatusMarried
515359    +          +    -0.40828651697464 * Marital_StatusSingle
515360    +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 *
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster +
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried +
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
515361    +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
515362    +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
515363    +        EducationGraduation  +     0.20017847825938 * EducationMaster
515364    +          +    -0.05075621283629 * Marital_StatusDivorced
515365    +          +     0.06731276969307 * Marital_StatusMarried
515366    +          +     0.20458391966582 * Marital_StatusSingle
515367    +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 *
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster +
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried +
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
515368    +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
515369    +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
515370    +        EducationGraduation  +     0.28829384238085 * EducationMaster
515371    +          +    -0.37925185401218 * Marital_StatusDivorced
515372    +          +     0.62971134740586 * Marital_StatusMarried
515373    +          +    -0.36562351730859 * Marital_StatusSingle
515374    +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 *
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried +
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
515375    +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
515376    +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
515377    +        EducationGraduation  +    -0.18997526501932 * EducationMaster
515378    +          +     0.84382044664305 * Marital_StatusDivorced
515379    +          +    -0.84062627203871 * Marital_StatusMarried
515380    +          +     0.74100406031127 * Marital_StatusSingle
515381    +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 *
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried +
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
515382    +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
515383    +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
515384    +        EducationGraduation  +    -0.13296903086061 * EducationMaster
515385    +          +     -0.1195105091383 * Marital_StatusDivorced
515386    +          +    -0.13486422945269 * Marital_StatusMarried
515387    +          +     0.33592403429156 * Marital_StatusSingle
515388    +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 *
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried +
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
515389    +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
515390    +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
515391    +        EducationGraduation  +    -0.09885314861537 * EducationMaster
515392    +          +     0.14792293029589 * Marital_StatusDivorced
515393    +          +    -0.96003393582564 * Marital_StatusMarried
515394    +          +     0.64637652355384 * Marital_StatusSingle
515395    +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 *
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried +
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
515396    +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
515397    +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
515398    +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
515399    +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
515400    +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
515401    +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
515402    +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
515403    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
515404    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
515405    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
515406    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
515407    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
515408    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
515409    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
515410    +END;
MPRINT(EM_DIAGRAM):   END;
515411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
515412    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
515413    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
515414    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
515415    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
515416    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
515417    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
515418    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
515419    +END;
MPRINT(EM_DIAGRAM):   END;
515420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515421    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
515422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515423    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
515424    +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
515425    +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
515426    +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
515427    +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 +
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 *
H16 + 2.0380168893605 * H17 ;
515428    +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
515429    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
515430    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
515431    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
515432    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
515433    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
515434    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
515435    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
515436    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
515437    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
515438    +END;
MPRINT(EM_DIAGRAM):   END;
515439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
515440    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
515441    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
515442    +END;
MPRINT(EM_DIAGRAM):   END;
515443    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
515444    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
515445    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
515446    +END;
MPRINT(EM_DIAGRAM):   END;
515447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515448    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
515449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515450    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
515451    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
515452    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
515453    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
515454    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
515455    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
515456    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
515457    +END;
MPRINT(EM_DIAGRAM):   END;
515458    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
515459    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
515460    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
515461    +drop
515462    +H11
515463    +H12
515464    +H13
515465    +H14
515466    +H15
515467    +H16
515468    +H17
515469    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
515470    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515471     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
515472     quit;
515473     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515474     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515475     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515476     retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
515477     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515478     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515479     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515480     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515481     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515482     proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
515483     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515485     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515486     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515487     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515488     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515489     proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
515490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
515491     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515492     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515494     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515495     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515496     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515497     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515498     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515499     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515499   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
515500     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515501     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515502     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515503     filename _pref
515503   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
515504     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515505     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
515506    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
515507    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
515508    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
515509    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
515510    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
515511    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515512     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
515513     quit;
515514     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515515     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515516     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515517     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
515518     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515520     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515521     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515523     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
515524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515526     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515527     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515528     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515529     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515530     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
515531     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
515532     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515533     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515535     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515536     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515537     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515538     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515539     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515540     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515540   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
515541     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515542     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515544     filename _pref
515544   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
515545     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515546     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
515547    +
515548    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
515549    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
515549   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
515550    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
515551    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
515552    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
515553    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
515554    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515555     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
515556     quit;
515557     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515558     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515559     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515560     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
515561     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515563     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515564     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515566     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
515567     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515568     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515569     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515570     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515571     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515573     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
515574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515575     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515576     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515577     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515578     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515579     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515580     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515581     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515582     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515583     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515583   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
515584     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515585     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515587     filename _pref
515587   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
515588     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515589     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
515590    +
515591    +
515592    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
515593    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
515594    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
515595    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
515596    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
515597    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515598    +
515599    +
515600    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
515601    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
515602    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
515603    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
515604    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
515605    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515606    +
515607    +
515608    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
515609    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
515610    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
515611    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
515612    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
515613    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515614    +
515615    +
515616    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
515617    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
515618    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
515619    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
515620    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
515621    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515622    +
515623    +
515624    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
515625    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
515626    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
515627    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
515628    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
515629    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515630    +
515631    +
515632    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
515633    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
515634    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
515635    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
515636    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
515637    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515638    +
515639    +
515640    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
515641    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
515642    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
515643    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
515644    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
515645    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515646    +
515647    +
515648    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
515649    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
515650    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
515651    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
515652    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
515653    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515654    +if
515655    +_FILTERNORM1 not in ( '.')
515656    + and
515657    +_FILTERNORM2 not in ( '.')
515658    + and
515659    +_FILTERNORM3 not in ( '.')
515660    + and
515661    +_FILTERNORM4 not in ( '.')
515662    + and
515663    +_FILTERNORM5 not in ( '.')
515664    + and
515665    +_FILTERNORM6 not in ( '.')
515666    + and
515667    +_FILTERNORM7 not in ( ' ')
515668    + and
515669    +_FILTERNORM8 not in ( ' ')
515670    +and
515671    +( Dt_Customer ne .)
515672    +and ( Income ne . and (Income<=107000))
515673    +and ( Kidhome ne .)
515674    +and ( MntFishProducts ne .)
515675    +and ( MntFruits ne .)
515676    +and ( MntGoldProds ne .)
515677    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
515678    +and ( MntSweetProducts ne .)
515679    +and ( MntWines ne .)
515680    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
515681    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
515682    +and ( NumStorePurchases ne .)
515683    +and ( NumWebPurchases ne .)
515684    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
515685    +and ( Recency ne .)
515686    +and ( Teenhome ne .)
515687    +and ( Year_Birth ne .)
515688    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
515689    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
515690    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
515691    +end;
MPRINT(EM_DIAGRAM):   end;
515692    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
515693    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515694     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
515695     quit;
515696     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515697     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515698     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515699     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
515700     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515702     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515703     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515704     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515705     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
515706     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515707     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515708     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515709     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515710     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515711     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515712     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
515713     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515714     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515715     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515716     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515717     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515718     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515719     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515720     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515721     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515722     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515722   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
515723     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515724     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515725     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515726     %macro varDept(fcmpdata=,id=);
515727     %global nobs&id scoreFlag&id;
515728     %let scoreFlag&id = 0;
515729     %if &id=1 or ^&fcmpStart %then %do;
515730     proc sort data=&fcmpdata out=_temp&id nodupkey;
515731     by NAME;
515732     where id=&id and LHS in( %let j=1;
515733     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
515734     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
515735     "&var" %let j = %eval(&j+1);
515736     %end;
515737     );
515738     run;
515739     %let dsid = %sysfunc(open(_temp&id));
515740     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515741     %let dsid = %sysfunc(close(&dsid));
515742     %if &&nobs&id %then %do;
515743     %let scoreFlag&id = 1;
515744     %let fcmpStart = 1;
515745     %end;
515746     %else %let fcmpStart = 0;
515747     %end;
515748     %else %do;
515749     proc sort data=&fcmpdata out=_tempid;
515750     where id=&id;
515751     by LHS;
515752     run;
515753     %let dsid = %sysfunc(open(_tempid));
515754     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515755     %let dsid = %sysfunc(close(&dsid));
515756     %if ^&&nobs&id %then %do;
515757     proc datasets lib=work nolist;
515758     delete _tempid;
515759     run;
515760     quit;
515761     %end;
515762     %else %do;
515763     data _tempAll;
515764     set %let j=%eval(&id-1);
515765     %do x=1 %to &j;
515766     %if &&nobs&x %then %do;
515767     _temp&x %end;
515768     %end;
515769     ;
515770     run;
515771     proc sql;
515772     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
515772   ! work._tempid p2 where p.name=p2.lhs;
515773     quit;
515774     data _temp&id;
515775     set _temp&id;
515776     where LHS ne '' and NAME ne '' and Node ne '';
515777     run;
515778     proc datasets lib=work nolist;
515779     delete _tempAll;
515780     run;
515781     %let dsid = %sysfunc(open(_temp&id));
515782     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515783     %let dsid = %sysfunc(close(&dsid));
515784     %if ^&&nobs&id %then %do;
515785     proc datasets lib=work nolist;
515786     delete _temp&id;
515787     run;
515788     quit;
515789     %end;
515790     %else %do;
515791     %let scoreFlag&id = 1;
515792     data _temp&id;
515793     set _temp&id;
515794     where LHS ne NAME and node ne '';
515795     run;
515796     %let dsid = %sysfunc(open(_temp&id));
515797     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515798     %let dsid = %sysfunc(close(&dsid));
515799     %if ^&&nobs&id %then %do;
515800     proc datasets lib=work nolist;
515801     delete _temp&id;
515802     run;
515803     quit;
515804     %end;
515805     %else %do;
515806     proc sort data=_temp&id nodupkey;
515807     by LHS NAME;
515808     run;
515809     %end;
515810     %end;
515811     %end;
515812     %end;
515813     %mend varDept;
515814     %macro optCode(outdata=fcmpdata);
515815     %global fcmpStart;
515816     %let fcmpStart = 0;
515817     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
515818     %let NumNodes=9;
515819     %do k=1 %to &NumNodes;
515820     %vardept(fcmpdata=&outdata, id=&k);
515821     %end;
515822     %mend optCode;
515823     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
515824     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
515825     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
515826     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
515827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
515828     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
515829     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
515830     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
515831     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515832     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515833     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
515833   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
515834     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515835     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
515836     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
515837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
515838     filename _pref
515838   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
515839     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515840     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
515841    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
515842    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
515843    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
515844    +
515845    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
515846    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
515847    +
515848    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
515849    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
515850    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
515851    +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
515852    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
515853    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
515854    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
515855    +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
515856    +
515857    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
515858    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
515859    +
515860    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
515861    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
515862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515864    +end;
MPRINT(EM_DIAGRAM):   end;
515865    +
515866    +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
515867    +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
515868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515870    +end;
MPRINT(EM_DIAGRAM):   end;
515871    +
515872    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
515873    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
515874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515876    +end;
MPRINT(EM_DIAGRAM):   end;
515877    +
515878    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
515879    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
515880    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515881    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515882    +end;
MPRINT(EM_DIAGRAM):   end;
515883    +
515884    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
515885    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
515886    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515888    +end;
MPRINT(EM_DIAGRAM):   end;
515889    +
515890    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
515891    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
515892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515894    +end;
MPRINT(EM_DIAGRAM):   end;
515895    +
515896    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
515897    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
515898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515900    +end;
MPRINT(EM_DIAGRAM):   end;
515901    +
515902    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
515903    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
515904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515906    +end;
MPRINT(EM_DIAGRAM):   end;
515907    +
515908    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
515909    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
515910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515912    +end;
MPRINT(EM_DIAGRAM):   end;
515913    +
515914    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
515915    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
515916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515918    +end;
MPRINT(EM_DIAGRAM):   end;
515919    +
515920    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
515921    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
515922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515924    +end;
MPRINT(EM_DIAGRAM):   end;
515925    +
515926    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
515927    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
515928    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515929    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515930    +end;
MPRINT(EM_DIAGRAM):   end;
515931    +
515932    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
515933    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
515934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515936    +end;
MPRINT(EM_DIAGRAM):   end;
515937    +
515938    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
515939    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
515940    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
515941    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
515942    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
515943    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
515944    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
515945    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
515946    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
515947    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
515948    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
515949    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
515950    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515951    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515952    +end;
MPRINT(EM_DIAGRAM):   end;
515953    +else do;
MPRINT(EM_DIAGRAM):   else do;
515954    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
515955    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
515956    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515957    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
515958    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
515959    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
515960    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
515961    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
515962    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515963    +         end;
MPRINT(EM_DIAGRAM):   end;
515964    +         else do;
MPRINT(EM_DIAGRAM):   else do;
515965    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
515966    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
515967    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515968    +            end;
MPRINT(EM_DIAGRAM):   end;
515969    +         end;
MPRINT(EM_DIAGRAM):   end;
515970    +      end;
MPRINT(EM_DIAGRAM):   end;
515971    +      else do;
MPRINT(EM_DIAGRAM):   else do;
515972    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
515973    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
515974    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515975    +         end;
MPRINT(EM_DIAGRAM):   end;
515976    +      end;
MPRINT(EM_DIAGRAM):   end;
515977    +   end;
MPRINT(EM_DIAGRAM):   end;
515978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515979    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
515980    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
515981    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515982    +      end;
MPRINT(EM_DIAGRAM):   end;
515983    +      else do;
MPRINT(EM_DIAGRAM):   else do;
515984    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
515985    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
515986    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
515987    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
515988    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
515989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515990    +         end;
MPRINT(EM_DIAGRAM):   end;
515991    +      end;
MPRINT(EM_DIAGRAM):   end;
515992    +   end;
MPRINT(EM_DIAGRAM):   end;
515993    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
515994    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
515995    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
515996    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
515997    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
515998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516000    +   end;
MPRINT(EM_DIAGRAM):   end;
516001    +end;
MPRINT(EM_DIAGRAM):   end;
516002    +
516003    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
516004    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
516005    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
516006    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
516007    +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
516008    +end;
MPRINT(EM_DIAGRAM):   end;
516009    +
516010    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
516011    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
516012    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
516013    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
516014    +
516015    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
516016    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
516017    +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
516018    +
516019    +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
516020    +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
516021    +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
516022    +
516023    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
516024    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
516025    +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
516026    +
516027    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
516028    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
516029    +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
516030    +
516031    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
516032    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
516033    +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
516034    +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
516035    +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
516036    +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
516037    +
516038    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
516039    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
516040    +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
516041    +
516042    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
516043    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
516044    +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
516045    +
516046    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
516047    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
516048    +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
516049    +
516050    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
516051    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
516052    +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
516053    +
516054    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
516055    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
516056    +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
516057    +
516058    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
516059    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
516060    +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
516061    +
516062    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
516063    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
516064    +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
516065    +
516066    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
516067    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
516068    +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
516069    +
516070    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
516071    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
516072    +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
516073    +
516074    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
516075    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
516076    +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
516077    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
516078    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
516079    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
516080    +end;
MPRINT(EM_DIAGRAM):   end;
516081    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
516082    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
516083    +
516084    +REGDR1:
516085    +
516086    +
516087    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
516088    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
516089    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
516090    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
516091    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
516092    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
516093    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
516094    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
516095    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
516096    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
516097    +end;
MPRINT(EM_DIAGRAM):   end;
516098    +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
516099    +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
516100    +
516101    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
516102    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
516103    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516104     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516105     quit;
516106     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516107     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516108     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516109     retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
516110     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516112     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516113     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516115     proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
516116     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516117     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516118     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516119     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516120     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516121     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516122     proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
516123     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
516124     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516125     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516126     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516127     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516128     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516129     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516130     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516131     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516132     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516132   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.
 
516133     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516134     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516135     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516136     filename _pref
516136   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
516137     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516138     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
516139    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
516140    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
516141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
516142    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
516143    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
516144    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516145     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516146     quit;
516147     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516148     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516149     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516150     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
516151     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516152     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516153     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516154     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516155     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516156     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
516157     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516159     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516160     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516161     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516162     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516163     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
516164     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516165     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516166     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516167     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516168     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516169     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516170     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516171     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516172     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516173     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516173   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
516174     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516175     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516176     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516177     filename _pref
516177   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
516178     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516179     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
516180    +
516181    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
516182    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
516182   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
516183    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
516184    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
516185    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
516186    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
516187    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516188     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516189     quit;
516190     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516191     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516192     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516193     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
516194     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516195     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516196     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516197     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516199     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
516200     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516201     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516202     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516203     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516204     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516205     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516206     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
516207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516208     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516209     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516211     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516212     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516213     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516214     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516215     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516216     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516216   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
516217     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516218     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516219     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516220     filename _pref
516220   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
516221     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516222     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
516223    +
516224    +
516225    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
516226    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
516227    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
516228    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
516229    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
516230    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516231    +
516232    +
516233    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
516234    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
516235    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
516236    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
516237    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
516238    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516239    +
516240    +
516241    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
516242    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
516243    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
516244    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
516245    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
516246    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516247    +
516248    +
516249    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
516250    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
516251    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
516252    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
516253    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
516254    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516255    +
516256    +
516257    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
516258    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
516259    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
516260    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
516261    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
516262    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516263    +
516264    +
516265    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
516266    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
516267    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
516268    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
516269    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
516270    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516271    +
516272    +
516273    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
516274    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
516275    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
516276    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
516277    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
516278    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516279    +
516280    +
516281    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
516282    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
516283    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
516284    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
516285    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
516286    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516287    +if
516288    +_FILTERNORM1 not in ( '.')
516289    + and
516290    +_FILTERNORM2 not in ( '.')
516291    + and
516292    +_FILTERNORM3 not in ( '.')
516293    + and
516294    +_FILTERNORM4 not in ( '.')
516295    + and
516296    +_FILTERNORM5 not in ( '.')
516297    + and
516298    +_FILTERNORM6 not in ( '.')
516299    + and
516300    +_FILTERNORM7 not in ( ' ')
516301    + and
516302    +_FILTERNORM8 not in ( ' ')
516303    +and
516304    +( Dt_Customer ne .)
516305    +and ( Income ne . and (Income<=107000))
516306    +and ( Kidhome ne .)
516307    +and ( MntFishProducts ne .)
516308    +and ( MntFruits ne .)
516309    +and ( MntGoldProds ne .)
516310    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
516311    +and ( MntSweetProducts ne .)
516312    +and ( MntWines ne .)
516313    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
516314    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
516315    +and ( NumStorePurchases ne .)
516316    +and ( NumWebPurchases ne .)
516317    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
516318    +and ( Recency ne .)
516319    +and ( Teenhome ne .)
516320    +and ( Year_Birth ne .)
516321    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
516322    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
516323    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
516324    +end;
MPRINT(EM_DIAGRAM):   end;
516325    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
516326    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516327     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516328     quit;
516329     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516330     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516331     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516332     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
516333     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516335     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516336     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516337     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516338     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
516339     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516341     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516342     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516343     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516345     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
516346     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
516347     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516348     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516349     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516350     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516351     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516352     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516353     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516354     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516355     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516355   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
516356     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516357     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516358     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516359     %macro varDept(fcmpdata=,id=);
516360     %global nobs&id scoreFlag&id;
516361     %let scoreFlag&id = 0;
516362     %if &id=1 or ^&fcmpStart %then %do;
516363     proc sort data=&fcmpdata out=_temp&id nodupkey;
516364     by NAME;
516365     where id=&id and LHS in( %let j=1;
516366     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
516367     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
516368     "&var" %let j = %eval(&j+1);
516369     %end;
516370     );
516371     run;
516372     %let dsid = %sysfunc(open(_temp&id));
516373     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516374     %let dsid = %sysfunc(close(&dsid));
516375     %if &&nobs&id %then %do;
516376     %let scoreFlag&id = 1;
516377     %let fcmpStart = 1;
516378     %end;
516379     %else %let fcmpStart = 0;
516380     %end;
516381     %else %do;
516382     proc sort data=&fcmpdata out=_tempid;
516383     where id=&id;
516384     by LHS;
516385     run;
516386     %let dsid = %sysfunc(open(_tempid));
516387     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516388     %let dsid = %sysfunc(close(&dsid));
516389     %if ^&&nobs&id %then %do;
516390     proc datasets lib=work nolist;
516391     delete _tempid;
516392     run;
516393     quit;
516394     %end;
516395     %else %do;
516396     data _tempAll;
516397     set %let j=%eval(&id-1);
516398     %do x=1 %to &j;
516399     %if &&nobs&x %then %do;
516400     _temp&x %end;
516401     %end;
516402     ;
516403     run;
516404     proc sql;
516405     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
516405   ! work._tempid p2 where p.name=p2.lhs;
516406     quit;
516407     data _temp&id;
516408     set _temp&id;
516409     where LHS ne '' and NAME ne '' and Node ne '';
516410     run;
516411     proc datasets lib=work nolist;
516412     delete _tempAll;
516413     run;
516414     %let dsid = %sysfunc(open(_temp&id));
516415     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516416     %let dsid = %sysfunc(close(&dsid));
516417     %if ^&&nobs&id %then %do;
516418     proc datasets lib=work nolist;
516419     delete _temp&id;
516420     run;
516421     quit;
516422     %end;
516423     %else %do;
516424     %let scoreFlag&id = 1;
516425     data _temp&id;
516426     set _temp&id;
516427     where LHS ne NAME and node ne '';
516428     run;
516429     %let dsid = %sysfunc(open(_temp&id));
516430     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516431     %let dsid = %sysfunc(close(&dsid));
516432     %if ^&&nobs&id %then %do;
516433     proc datasets lib=work nolist;
516434     delete _temp&id;
516435     run;
516436     quit;
516437     %end;
516438     %else %do;
516439     proc sort data=_temp&id nodupkey;
516440     by LHS NAME;
516441     run;
516442     %end;
516443     %end;
516444     %end;
516445     %end;
516446     %mend varDept;
516447     %macro optCode(outdata=fcmpdata);
516448     %global fcmpStart;
516449     %let fcmpStart = 0;
516450     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
516451     %let NumNodes=9;
516452     %do k=1 %to &NumNodes;
516453     %vardept(fcmpdata=&outdata, id=&k);
516454     %end;
516455     %mend optCode;
516456     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 56 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System
 
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
516457     filename _pref
516457   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
516458     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516459     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
516460    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
516461    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
516462    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
516463    +
516464    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
516465    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
516466    +
516467    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
516468    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
516469    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
516470    +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
516471    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
516472    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
516473    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
516474    +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
516475    +
516476    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
516477    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
516478    +
516479    +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
516480    +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
516481    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516483    +end;
MPRINT(EM_DIAGRAM):   end;
516484    +
516485    +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
516486    +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
516487    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516488    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516489    +end;
MPRINT(EM_DIAGRAM):   end;
516490    +
516491    +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
516492    +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
516493    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516495    +end;
MPRINT(EM_DIAGRAM):   end;
516496    +
516497    +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
516498    +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
516499    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516500    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516501    +end;
MPRINT(EM_DIAGRAM):   end;
516502    +
516503    +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
516504    +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
516505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516507    +end;
MPRINT(EM_DIAGRAM):   end;
516508    +
516509    +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
516510    +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
516511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516513    +end;
MPRINT(EM_DIAGRAM):   end;
516514    +
516515    +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
516516    +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
516517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516519    +end;
MPRINT(EM_DIAGRAM):   end;
516520    +
516521    +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
516522    +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
516523    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516524    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516525    +end;
MPRINT(EM_DIAGRAM):   end;
516526    +
516527    +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
516528    +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
516529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516531    +end;
MPRINT(EM_DIAGRAM):   end;
516532    +
516533    +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
516534    +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
516535    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516536    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516537    +end;
MPRINT(EM_DIAGRAM):   end;
516538    +
516539    +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
516540    +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
516541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516543    +end;
MPRINT(EM_DIAGRAM):   end;
516544    +
516545    +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
516546    +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
516547    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516548    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516549    +end;
MPRINT(EM_DIAGRAM):   end;
516550    +
516551    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
516552    +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
516553    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
516554    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
516555    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
516556    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
516557    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
516558    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
516559    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
516560    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
516561    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
516562    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
516563    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516565    +end;
MPRINT(EM_DIAGRAM):   end;
516566    +else do;
MPRINT(EM_DIAGRAM):   else do;
516567    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
516568    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
516569    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
516570    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
516571    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
516572    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
516573    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
516574    +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
516575    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516576    +         end;
MPRINT(EM_DIAGRAM):   end;
516577    +         else do;
MPRINT(EM_DIAGRAM):   else do;
516578    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
516579    +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
516580    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516581    +            end;
MPRINT(EM_DIAGRAM):   end;
516582    +         end;
MPRINT(EM_DIAGRAM):   end;
516583    +      end;
MPRINT(EM_DIAGRAM):   end;
516584    +      else do;
MPRINT(EM_DIAGRAM):   else do;
516585    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
516586    +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
516587    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516588    +         end;
MPRINT(EM_DIAGRAM):   end;
516589    +      end;
MPRINT(EM_DIAGRAM):   end;
516590    +   end;
MPRINT(EM_DIAGRAM):   end;
516591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
516592    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
516593    +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
516594    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516595    +      end;
MPRINT(EM_DIAGRAM):   end;
516596    +      else do;
MPRINT(EM_DIAGRAM):   else do;
516597    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
516598    +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
516599    +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
516600    +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
516601    +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
516602    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516603    +         end;
MPRINT(EM_DIAGRAM):   end;
516604    +      end;
MPRINT(EM_DIAGRAM):   end;
516605    +   end;
MPRINT(EM_DIAGRAM):   end;
516606    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
516607    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
516608    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
516609    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
516610    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
516611    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
516612    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516613    +   end;
MPRINT(EM_DIAGRAM):   end;
516614    +end;
MPRINT(EM_DIAGRAM):   end;
516615    +
516616    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
516617    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
516618    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
516619    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
516620    +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
516621    +end;
MPRINT(EM_DIAGRAM):   end;
516622    +
516623    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
516624    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
516625    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
516626    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
516627    +
516628    +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
516629    +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
516630    +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
516631    +
516632    +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
516633    +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
516634    +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
516635    +
516636    +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
516637    +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
516638    +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
516639    +
516640    +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
516641    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
516642    +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
516643    +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
516644    +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
516645    +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
516646    +
516647    +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
516648    +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
516649    +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
516650    +
516651    +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
516652    +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
516653    +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
516654    +
516655    +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
516656    +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
516657    +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
516658    +
516659    +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
516660    +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
516661    +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
516662    +
516663    +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
516664    +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
516665    +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
516666    +
516667    +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
516668    +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
516669    +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
516670    +
516671    +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
516672    +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
516673    +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
516674    +
516675    +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
516676    +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
516677    +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
516678    +
516679    +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
516680    +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
516681    +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
516682    +
516683    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
516684    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
516685    +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
516686    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
516687    +
516688    +REG5DR1:
516689    +
516690    +
516691    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
516692    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
516693    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
516694    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
516695    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
516696    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
516697    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
516698    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
516699    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
516700    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
516701    +end;
MPRINT(EM_DIAGRAM):   end;
516702    +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
516703    +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
516704    +
516705    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
516706    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
516707    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516708     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516709     quit;
516710     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516711     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516712     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516713     retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
516714     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516716     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516717     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516719     proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
516720     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516722     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516723     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516724     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516725     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516726     proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
516727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516728     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516729     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516731     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516732     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516733     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516734     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516735     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516736     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516736   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.
 
516737     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516738     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516740     filename _pref
516740   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
516741     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516742     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
516743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
516744    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
516745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
516746    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
516747    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
516748    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516749     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516750     quit;
516751     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516752     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516753     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516754     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
516755     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516757     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516758     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516759     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516760     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
516761     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516763     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516764     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516765     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516767     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
516768     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
516769     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516770     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516771     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516772     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516773     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516774     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516775     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516776     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516777     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516777   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
516778     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516779     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516781     filename _pref
516781   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
516782     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516783     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
516784    +
516785    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
516786    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
516786   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
516787    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
516788    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
516789    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
516790    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
516791    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516792     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516793     quit;
516794     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516795     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516796     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516797     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
516798     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516800     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516801     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516802     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516803     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
516804     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516806     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516807     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516808     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516809     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516810     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
516811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516812     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516814     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516815     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516816     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516817     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516818     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516819     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516820     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516820   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
516821     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516822     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516824     filename _pref
516824   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
516825     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516826     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
516827    +
516828    +
516829    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
516830    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
516831    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
516832    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
516833    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
516834    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516835    +
516836    +
516837    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
516838    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
516839    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
516840    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
516841    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
516842    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516843    +
516844    +
516845    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
516846    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
516847    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
516848    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
516849    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
516850    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516851    +
516852    +
516853    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
516854    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
516855    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
516856    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
516857    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
516858    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516859    +
516860    +
516861    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
516862    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
516863    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
516864    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
516865    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
516866    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516867    +
516868    +
516869    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
516870    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
516871    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
516872    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
516873    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
516874    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516875    +
516876    +
516877    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
516878    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
516879    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
516880    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
516881    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
516882    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516883    +
516884    +
516885    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
516886    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
516887    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
516888    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
516889    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
516890    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516891    +if
516892    +_FILTERNORM1 not in ( '.')
516893    + and
516894    +_FILTERNORM2 not in ( '.')
516895    + and
516896    +_FILTERNORM3 not in ( '.')
516897    + and
516898    +_FILTERNORM4 not in ( '.')
516899    + and
516900    +_FILTERNORM5 not in ( '.')
516901    + and
516902    +_FILTERNORM6 not in ( '.')
516903    + and
516904    +_FILTERNORM7 not in ( ' ')
516905    + and
516906    +_FILTERNORM8 not in ( ' ')
516907    +and
516908    +( Dt_Customer ne .)
516909    +and ( Income ne . and (Income<=107000))
516910    +and ( Kidhome ne .)
516911    +and ( MntFishProducts ne .)
516912    +and ( MntFruits ne .)
516913    +and ( MntGoldProds ne .)
516914    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
516915    +and ( MntSweetProducts ne .)
516916    +and ( MntWines ne .)
516917    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
516918    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
516919    +and ( NumStorePurchases ne .)
516920    +and ( NumWebPurchases ne .)
516921    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
516922    +and ( Recency ne .)
516923    +and ( Teenhome ne .)
516924    +and ( Year_Birth ne .)
516925    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
516926    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
516927    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
516928    +end;
MPRINT(EM_DIAGRAM):   end;
516929    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
516930    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516931     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
516932     quit;
516933     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516934     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516935     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516936     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
516937     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516938     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516939     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516940     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516942     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
516943     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516945     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516946     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516947     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516949     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
516950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516951     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516952     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516954     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516955     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516957     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
516958     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516959     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516959   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
516960     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516961     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516962     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
516963     %macro varDept(fcmpdata=,id=);
516964     %global nobs&id scoreFlag&id;
516965     %let scoreFlag&id = 0;
516966     %if &id=1 or ^&fcmpStart %then %do;
516967     proc sort data=&fcmpdata out=_temp&id nodupkey;
516968     by NAME;
516969     where id=&id and LHS in( %let j=1;
516970     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
516971     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
516972     "&var" %let j = %eval(&j+1);
516973     %end;
516974     );
516975     run;
516976     %let dsid = %sysfunc(open(_temp&id));
516977     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516978     %let dsid = %sysfunc(close(&dsid));
516979     %if &&nobs&id %then %do;
516980     %let scoreFlag&id = 1;
516981     %let fcmpStart = 1;
516982     %end;
516983     %else %let fcmpStart = 0;
516984     %end;
516985     %else %do;
516986     proc sort data=&fcmpdata out=_tempid;
516987     where id=&id;
516988     by LHS;
516989     run;
516990     %let dsid = %sysfunc(open(_tempid));
516991     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516992     %let dsid = %sysfunc(close(&dsid));
516993     %if ^&&nobs&id %then %do;
516994     proc datasets lib=work nolist;
516995     delete _tempid;
516996     run;
516997     quit;
516998     %end;
516999     %else %do;
517000     data _tempAll;
517001     set %let j=%eval(&id-1);
517002     %do x=1 %to &j;
517003     %if &&nobs&x %then %do;
517004     _temp&x %end;
517005     %end;
517006     ;
517007     run;
517008     proc sql;
517009     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
517009   ! work._tempid p2 where p.name=p2.lhs;
517010     quit;
517011     data _temp&id;
517012     set _temp&id;
517013     where LHS ne '' and NAME ne '' and Node ne '';
517014     run;
517015     proc datasets lib=work nolist;
517016     delete _tempAll;
517017     run;
517018     %let dsid = %sysfunc(open(_temp&id));
517019     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
517020     %let dsid = %sysfunc(close(&dsid));
517021     %if ^&&nobs&id %then %do;
517022     proc datasets lib=work nolist;
517023     delete _temp&id;
517024     run;
517025     quit;
517026     %end;
517027     %else %do;
517028     %let scoreFlag&id = 1;
517029     data _temp&id;
517030     set _temp&id;
517031     where LHS ne NAME and node ne '';
517032     run;
517033     %let dsid = %sysfunc(open(_temp&id));
517034     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
517035     %let dsid = %sysfunc(close(&dsid));
517036     %if ^&&nobs&id %then %do;
517037     proc datasets lib=work nolist;
517038     delete _temp&id;
517039     run;
517040     quit;
517041     %end;
517042     %else %do;
517043     proc sort data=_temp&id nodupkey;
517044     by LHS NAME;
517045     run;
517046     %end;
517047     %end;
517048     %end;
517049     %end;
517050     %mend varDept;
517051     %macro optCode(outdata=fcmpdata);
517052     %global fcmpStart;
517053     %let fcmpStart = 0;
517054     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
517055     %let NumNodes=9;
517056     %do k=1 %to &NumNodes;
517057     %vardept(fcmpdata=&outdata, id=&k);
517058     %end;
517059     %mend optCode;
517060     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
517061     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
517062     * Ensmbl14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing metadata for TRAIN data;
517063     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl14_TRAIN out=WORK.M26VZ5XF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M26VZ5XF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M26VZ5XF(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M26VZ5XF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M26VZ5XF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3H19C15 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0O4RVK9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   set WORK.M3H19C15;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl14";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
517383     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
517384     set EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO;
517385     where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
517386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_EMINFO.
      WHERE (DATA='Ensmbl14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
517387     data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMINFO;
517388     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
517389     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
517390     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
517394     run;
517395     data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
517396     set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
517397     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517398     proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
517399     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
517400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
517401     proc sort data = EMWS8.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
517402     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
517403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517404     proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
517405     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
517406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517407     data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
517408     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
517409     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
517410     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
517411     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
517412     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
517413     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
517414     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                13.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WZOAAN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WZOAAN new;
MPRINT(EM_DIAGRAM):   run;
517438     data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMOUTFIT;
517439     set EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMOUTFIT;
517440     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
517441     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
517441   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
517442     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
517443     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL14_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL14_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517444     proc sort data=EMWS8.Ensmbl14_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl14_EMREPORTFIT nothreads;
517445     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
517446     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL14_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL14_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517447     %let _EMwarndup = 0;
517448     %let _EMtargetdup =;
517449     %let _EMASEtargetdup =;
517450     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
517451     set EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMOUTFIT;
517452     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
517453     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
517454     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
517455     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
517456     end;
MPRINT(EM_DIAGRAM):   end;
517457     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL14_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517458     proc sort data=EMWS8.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
517459     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517460     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517461     proc sort data=EMWS8.Ensmbl14_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl14_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
517462     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517463     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL14_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517464     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
517465     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
517466     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517468     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
517469     set EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_CMeta_TRAIN;
517470     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
517470   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
517471     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
517472     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
517473     set EMWS8.Ensmbl14_TRAIN(keep=
517474     F_DepVar
517475     I_DepVar
517476     P_DepVar0
517477     P_DepVar1
517478     R_DepVar0
517479     R_DepVar1
517480     U_DepVar
517481     _WARN_
517482     DepVar
517483     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
517484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL14_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl14_2PMADMA nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_2PMADMA;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_2PMADMA(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_2PMADMA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_2PMADMA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000445791 OVLMAX 0.9999435227 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
521750     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
521751     set EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_CMeta_TRAIN;
521752     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
521752   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
521753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
521754     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
521755     set EMWS8.Ensmbl14_VALIDATE(keep=
521756     F_DepVar
521757     I_DepVar
521758     P_DepVar0
521759     P_DepVar1
521760     R_DepVar0
521761     R_DepVar1
521762     U_DepVar
521763     _WARN_
521764     DepVar
521765     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
521766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL2_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL14_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl14_2S6P35P nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_2S6P35P;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_2S6P35P(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMCLASSIFICATION WORK.Ensmbl14_2S6P35P;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_2S6P35P;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.00004468 OVLMAX 0.9999286068 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
526041     %let _cn = %sysfunc(getoption(CENTER));
526042     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
526043     proc print data=EMWS8.Ensmbl14_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMREPORTFIT noobs label;
526044     var STAT LABEL TRAIN
526045     VALIDATE
526046     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
526047     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
526048     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
526049     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
526050     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL14_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 246.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
526051     title10;
MPRINT(EM_DIAGRAM):   title10;
526052     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
526053     proc sort data=EMWS8.Ensmbl14_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl14_EMCLASSIFICATION nothreads;
526054     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
526055     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL14_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
526056     %let _cn = %sysfunc(getoption(CENTER));
526057     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
526058     proc print data=EMWS8.Ensmbl14_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMCLASSIFICATION noobs label;
526059     var from into pct_row pct_col count percent
526060     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
526061     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
526062     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
526063     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
526064     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
526065     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
526066     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
526067     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
526068     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
526069     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
526070     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
526071     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 247.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
526072     title9;
MPRINT(EM_DIAGRAM):   title9;
526073     title10;
MPRINT(EM_DIAGRAM):   title10;
526074     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
526075     %let _cn = %sysfunc(getoption(CENTER));
526076     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
526077     data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMEVENTREPORT;
526078     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
526078   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
526079     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
526079   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
526079   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
526079   ! FALSEEVENT
526080     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
526080   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
526080   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
526081        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
526082     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
526083     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
526084     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
526085     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
526086     set EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMEVENTREPORT;
526087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL14_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL14_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
526088     proc print data=EMWS8.Ensmbl14_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMEVENTREPORT noobs label;
526089     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
526090     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
526091     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
526092     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL14_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 248.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
526093     title10;
MPRINT(EM_DIAGRAM):   title10;
526094     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
526095     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
526096     modify Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
526097     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
526098     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
526098   ! ;
MPRINT(EM_DIAGRAM):   run;
526099     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL14_EMRANK.DATA.
526100     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
526101     %let _cn = %sysfunc(getoption(CENTER));
526102     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
526103     proc print data=EMWS8.Ensmbl14_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMRANK label noobs;
526104     var
526105     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
526106     by
526107     notsorted DATAROLE
526108     notsorted TARGET
526109     notsorted TARGETLABEL
526110     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
526111     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
526112     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
526113     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL14_EMRANK.
NOTE: The PROCEDURE PRINT printed page 249.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
526114     title10;
MPRINT(EM_DIAGRAM):   title10;
526115     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
526116     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
526117     modify Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
526118     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
526118   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
526119     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
526119   ! ;
MPRINT(EM_DIAGRAM):   run;
526120     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL14_EMSCOREDIST.DATA.
526121     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
