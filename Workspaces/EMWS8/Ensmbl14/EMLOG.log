*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                18.57 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                18.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0KK5PVX
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0KK5PVX new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.57 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.57 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[223705] MAX=1 EXCEEDMAXVALUE='' )[223709] )[223703]
VALIDCHOICES=(CHOICE1='Y' )[223707] )[223991] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[223713]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[223717] )[223715] )[223711] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[223721]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[223727] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[223725] )[223723] )[223719] )[223701]
1387273    proc freq data=EMWS8.Ensmbl14_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl14_VariableSet noprint;
1387274    table ROLE*LEVEL/out=WORK.Ensmbl14META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl14META;
1387275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL14_VARIABLESET.
NOTE: The data set WORK.ENSMBL14META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1387276    proc print data=WORK.Ensmbl14META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14META label noobs;
1387277    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1387278    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1387278  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1387278  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1387279    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1387280    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1387281    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL14META.
NOTE: The PROCEDURE PRINT printed page 1311.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387282    title10;
MPRINT(EM_DIAGRAM):   title10;
1387283    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN EMWS8 Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN
EMWS8.Neural2_TRAIN EMWS8.Neural2_TRAIN EMWS8 Neural2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural2_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1387312    data WORK.Ensmbl14_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1387313    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1387314    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1387314  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1387314  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1387315       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1387315  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1387315  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1387316    set EMWS8.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL2_DEPVAR_DM( where=(_TYPE_="TARGET"));
1387317    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1387318    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1387319    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1387320    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1387321    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1387322    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1387323    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1387324    end;
MPRINT(EM_DIAGRAM):   end;
1387325    output;
MPRINT(EM_DIAGRAM):   output;
1387326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL2_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL14_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1387327    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1387328    proc print data=WORK.Ensmbl14_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14_EVENT noobs label;
1387329    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1387330    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1387331    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1387332    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL14_EVENT.
NOTE: The PROCEDURE PRINT printed page 1312.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387333    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1387334    proc print data = EMWS8.Neural2_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural2_DepVar_DM noobs label;
1387335    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1387336    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1387337    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1387337  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1387337  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1387338    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1387339    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1387340    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL2_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1313.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387341    title10;
MPRINT(EM_DIAGRAM):   title10;
1387342    %let groupid =;
1387343    %let endGroupid =;
1387344    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387345    set EMWS8.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_EMINFO;
1387346    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387346  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387347    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387348    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387350    %let groupid =;
1387351    %let endGroupid =;
1387352    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387353    set EMWS8.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_EMINFO;
1387354    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387354  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387355    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387356    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387358    %let groupid =;
1387359    %let endGroupid =;
1387360    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387361    set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
1387362    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387362  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387363    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387364    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387365    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387366    %let groupid =;
1387367    %let endGroupid =;
1387368    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387369    set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
1387370    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387370  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387371    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387372    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387374    %let groupid =;
1387375    %let endGroupid =;
1387376    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387377    set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
1387378    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387378  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387379    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387380    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387382    %let groupid =;
1387383    %let endGroupid =;
1387384    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387385    set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
1387386    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387386  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387387    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387388    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387390    %let groupid =;
1387391    %let endGroupid =;
1387392    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1387393    set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
1387394    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1387394  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1387395    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1387396    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1387397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387398    data WORK.Ensmbl14;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14;
1387399    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1387400    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1387400  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1387401    nodeid="REG5";
MPRINT(EM_DIAGRAM):   nodeid="REG5";
1387402    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1387403    output;
MPRINT(EM_DIAGRAM):   output;
1387404    nodeid="REG";
MPRINT(EM_DIAGRAM):   nodeid="REG";
1387405    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1387406    output;
MPRINT(EM_DIAGRAM):   output;
1387407    nodeid="NEURAL4";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL4";
1387408    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1387409    output;
MPRINT(EM_DIAGRAM):   output;
1387410    nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
1387411    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1387412    output;
MPRINT(EM_DIAGRAM):   output;
1387413    nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
1387414    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1387415    output;
MPRINT(EM_DIAGRAM):   output;
1387416    nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
1387417    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1387418    output;
MPRINT(EM_DIAGRAM):   output;
1387419    nodeid="NEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL10";
1387420    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1387421    output;
MPRINT(EM_DIAGRAM):   output;
1387422    ;
MPRINT(EM_DIAGRAM):   ;
1387423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL14 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387424    title;
MPRINT(EM_DIAGRAM):   title;
1387425    proc print data=WORK.Ensmbl14 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl14 label noobs;
1387426    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1387427    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1387428    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL14.
NOTE: The PROCEDURE PRINT printed page 1314.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387429    title9;
MPRINT(EM_DIAGRAM):   title9;
1387430    title10;
MPRINT(EM_DIAGRAM):   title10;
1387431    data WORK.M0V65XUT;
MPRINT(EM_DIAGRAM):    data WORK.M0V65XUT;
1387432    set WORK.M0V65XUT;
MPRINT(EM_DIAGRAM):   set WORK.M0V65XUT;
1387433    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1387434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0V65XUT.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0V65XUT has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1387435    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1387436    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1387437    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1387438    %macro DMDBClass;
1387439        DepVar(DESC)
1387440    %mend DMDBClass;
1387441    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1387442    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1387443    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1387444    %macro DMDBVar;
1387445
1387446    %mend DMDBVar;
1387447    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387448    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1387449    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387450    proc dmdb batch data=EMWS8.Reg5_TRAIN
1387451    dmdbcat=WORK.EM_DMDB
1387452    maxlevel = 513
1387453    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg5_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1387454    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1387455    target
1387456    DepVar
1387457    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1387458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG5_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1387459    quit;
1387460    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ZEEQTB
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ZEEQTB new;
MPRINT(EM_DIAGRAM):   run;
1387562    filename emflow
1387562  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387563    *------------------------------------------------------------*;
1387564    * Ensmbl14: Scoring REG5_TRAIN data;
1387565    *------------------------------------------------------------*;
1387566    data EMWS8.Ensmbl14_TRAIN
1387567    / view=EMWS8.Ensmbl14_TRAIN
1387568    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_TRAIN / view=EMWS8.Ensmbl14_TRAIN ;
1387569    set EMWS8.Reg5_TRAIN
1387570    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1387571    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
1387572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387573   +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
1387574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387575   +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
1387576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387578   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1387579   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1387580   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1387581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387583   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1387584   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1387585   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1387586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387588   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1387589   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1387590   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1387591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387593   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1387594   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1387595   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1387596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387597   +
1387598   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1387599   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1387599  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1387600   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1387601   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1387602   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1387603   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1387604   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1387605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387606   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1387607   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1387608   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1387609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387611   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1387612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387613   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1387614   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1387615   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1387616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387617   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1387618   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1387619   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1387620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387622   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1387623   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1387624   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1387625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387627   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1387628   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1387629   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1387630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387631   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1387632   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1387633   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1387634   +
1387635   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1387636   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1387637   +
1387638   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1387639   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1387640   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1387641   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1387642   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1387643   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1387644   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1387645   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1387646   +
1387647   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1387648   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1387649   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1387650   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1387651   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1387652   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1387653   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1387654   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1387655   +end;
MPRINT(EM_DIAGRAM):   end;
1387656   +else do;
MPRINT(EM_DIAGRAM):   else do;
1387657   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1387658   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1387659   +   end;
MPRINT(EM_DIAGRAM):   end;
1387660   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1387661   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1387662   +   end;
MPRINT(EM_DIAGRAM):   end;
1387663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1387664   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1387665   +   end;
MPRINT(EM_DIAGRAM):   end;
1387666   +end;
MPRINT(EM_DIAGRAM):   end;
1387667   +
1387668   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1387669   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1387670   +
1387671   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1387672   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1387673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387675   +end;
MPRINT(EM_DIAGRAM):   end;
1387676   +
1387677   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1387678   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1387679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387681   +end;
MPRINT(EM_DIAGRAM):   end;
1387682   +
1387683   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1387684   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1387685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387687   +end;
MPRINT(EM_DIAGRAM):   end;
1387688   +
1387689   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1387690   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1387691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387693   +end;
MPRINT(EM_DIAGRAM):   end;
1387694   +
1387695   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1387696   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1387697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387699   +end;
MPRINT(EM_DIAGRAM):   end;
1387700   +
1387701   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1387702   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1387703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387705   +end;
MPRINT(EM_DIAGRAM):   end;
1387706   +
1387707   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1387708   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1387709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387711   +end;
MPRINT(EM_DIAGRAM):   end;
1387712   +
1387713   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1387714   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1387715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387717   +end;
MPRINT(EM_DIAGRAM):   end;
1387718   +
1387719   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1387720   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1387721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387723   +end;
MPRINT(EM_DIAGRAM):   end;
1387724   +
1387725   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1387726   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1387727   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387729   +end;
MPRINT(EM_DIAGRAM):   end;
1387730   +
1387731   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1387732   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1387733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387735   +end;
MPRINT(EM_DIAGRAM):   end;
1387736   +
1387737   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1387738   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1387739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387741   +end;
MPRINT(EM_DIAGRAM):   end;
1387742   +
1387743   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1387744   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1387745   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1387746   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1387747   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1387748   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1387749   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1387750   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1387751   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1387752   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1387753   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1387754   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1387755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387757   +end;
MPRINT(EM_DIAGRAM):   end;
1387758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1387759   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1387760   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1387761   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1387762   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1387763   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1387764   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1387765   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1387766   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1387767   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1387768   +         end;
MPRINT(EM_DIAGRAM):   end;
1387769   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1387770   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1387771   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1387772   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1387773   +            end;
MPRINT(EM_DIAGRAM):   end;
1387774   +         end;
MPRINT(EM_DIAGRAM):   end;
1387775   +      end;
MPRINT(EM_DIAGRAM):   end;
1387776   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1387777   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1387778   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1387779   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1387780   +         end;
MPRINT(EM_DIAGRAM):   end;
1387781   +      end;
MPRINT(EM_DIAGRAM):   end;
1387782   +   end;
MPRINT(EM_DIAGRAM):   end;
1387783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1387784   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1387785   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1387786   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1387787   +      end;
MPRINT(EM_DIAGRAM):   end;
1387788   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1387789   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1387790   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1387791   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1387792   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1387793   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1387794   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1387795   +         end;
MPRINT(EM_DIAGRAM):   end;
1387796   +      end;
MPRINT(EM_DIAGRAM):   end;
1387797   +   end;
MPRINT(EM_DIAGRAM):   end;
1387798   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1387799   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1387800   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1387801   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1387802   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1387803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1387804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387805   +   end;
MPRINT(EM_DIAGRAM):   end;
1387806   +end;
MPRINT(EM_DIAGRAM):   end;
1387807   +
1387808   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1387809   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1387810   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1387811   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1387812   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1387813   +end;
MPRINT(EM_DIAGRAM):   end;
1387814   +
1387815   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1387816   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1387817   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1387818   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1387819   +
1387820   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1387821   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1387822   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1387823   +
1387824   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1387825   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1387826   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1387827   +
1387828   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1387829   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1387830   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1387831   +
1387832   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1387833   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1387834   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1387835   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1387836   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1387837   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1387838   +
1387839   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1387840   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1387841   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1387842   +
1387843   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1387844   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1387845   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1387846   +
1387847   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1387848   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1387849   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1387850   +
1387851   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1387852   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1387853   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1387854   +
1387855   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1387856   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1387857   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1387858   +
1387859   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1387860   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1387861   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1387862   +
1387863   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1387864   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1387865   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1387866   +
1387867   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1387868   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1387869   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1387870   +
1387871   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1387872   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1387873   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1387874   +
1387875   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1387876   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1387877   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1387878   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1387879   +
1387880   +REG5DR1:
1387881   +
1387882   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1387883   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1387884   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1387885   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1387886   +end;
MPRINT(EM_DIAGRAM):   end;
1387887   +else do;
MPRINT(EM_DIAGRAM):   else do;
1387888   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1387889   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1387890   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1387891   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1387892   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1387893   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1387894   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1387895   +   end;
MPRINT(EM_DIAGRAM):   end;
1387896   +end;
MPRINT(EM_DIAGRAM):   end;
1387897   +
1387898   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1387899   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1387900   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1387901   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1387902   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1387903   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1387904   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1387905   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1387906   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1387907   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1387908   +end;
MPRINT(EM_DIAGRAM):   end;
1387909   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1387910   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1387911   +
1387912   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1387913   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1387914   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1387915   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1387916   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387917   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1387918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387919   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1387920   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1387921   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1387922   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1387923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387924   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1387925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387926   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1387927   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1387928   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1387929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387930   +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
1387931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387933   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1387934   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1387935   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1387936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1387937   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1387938   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1387939   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1387940   +
1387941   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1387942   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1387943   +
1387944   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1387945   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1387946   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1387947   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1387948   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1387949   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1387950   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1387951   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1387952   +
1387953   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1387954   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1387955   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1387956   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1387957   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1387958   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1387959   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1387960   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1387961   +end;
MPRINT(EM_DIAGRAM):   end;
1387962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1387963   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1387964   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1387965   +   end;
MPRINT(EM_DIAGRAM):   end;
1387966   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1387967   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1387968   +   end;
MPRINT(EM_DIAGRAM):   end;
1387969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1387970   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1387971   +   end;
MPRINT(EM_DIAGRAM):   end;
1387972   +end;
MPRINT(EM_DIAGRAM):   end;
1387973   +
1387974   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1387975   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1387976   +
1387977   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1387978   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1387979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387981   +end;
MPRINT(EM_DIAGRAM):   end;
1387982   +
1387983   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1387984   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1387985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387987   +end;
MPRINT(EM_DIAGRAM):   end;
1387988   +
1387989   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1387990   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1387991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387993   +end;
MPRINT(EM_DIAGRAM):   end;
1387994   +
1387995   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1387996   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1387997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1387998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1387999   +end;
MPRINT(EM_DIAGRAM):   end;
1388000   +
1388001   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1388002   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1388003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388005   +end;
MPRINT(EM_DIAGRAM):   end;
1388006   +
1388007   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1388008   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1388009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388011   +end;
MPRINT(EM_DIAGRAM):   end;
1388012   +
1388013   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1388014   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1388015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388017   +end;
MPRINT(EM_DIAGRAM):   end;
1388018   +
1388019   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1388020   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1388021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388023   +end;
MPRINT(EM_DIAGRAM):   end;
1388024   +
1388025   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1388026   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1388027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388029   +end;
MPRINT(EM_DIAGRAM):   end;
1388030   +
1388031   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1388032   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1388033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388035   +end;
MPRINT(EM_DIAGRAM):   end;
1388036   +
1388037   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1388038   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1388039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388041   +end;
MPRINT(EM_DIAGRAM):   end;
1388042   +
1388043   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1388044   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1388045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388047   +end;
MPRINT(EM_DIAGRAM):   end;
1388048   +
1388049   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1388050   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1388051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388053   +end;
MPRINT(EM_DIAGRAM):   end;
1388054   +
1388055   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1388056   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1388057   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1388058   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1388059   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1388060   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1388061   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1388062   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1388063   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1388064   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1388065   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1388066   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1388067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388069   +end;
MPRINT(EM_DIAGRAM):   end;
1388070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388071   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1388072   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1388073   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388074   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1388075   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1388076   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1388077   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1388078   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1388079   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388080   +         end;
MPRINT(EM_DIAGRAM):   end;
1388081   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1388082   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1388083   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1388084   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388085   +            end;
MPRINT(EM_DIAGRAM):   end;
1388086   +         end;
MPRINT(EM_DIAGRAM):   end;
1388087   +      end;
MPRINT(EM_DIAGRAM):   end;
1388088   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1388089   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1388090   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1388091   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388092   +         end;
MPRINT(EM_DIAGRAM):   end;
1388093   +      end;
MPRINT(EM_DIAGRAM):   end;
1388094   +   end;
MPRINT(EM_DIAGRAM):   end;
1388095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388096   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1388097   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1388098   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388099   +      end;
MPRINT(EM_DIAGRAM):   end;
1388100   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1388101   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1388102   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1388103   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1388104   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1388105   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1388106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388107   +         end;
MPRINT(EM_DIAGRAM):   end;
1388108   +      end;
MPRINT(EM_DIAGRAM):   end;
1388109   +   end;
MPRINT(EM_DIAGRAM):   end;
1388110   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1388111   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1388112   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1388113   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1388114   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1388115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388117   +   end;
MPRINT(EM_DIAGRAM):   end;
1388118   +end;
MPRINT(EM_DIAGRAM):   end;
1388119   +
1388120   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1388121   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1388122   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1388123   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1388124   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1388125   +end;
MPRINT(EM_DIAGRAM):   end;
1388126   +
1388127   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1388128   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1388129   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1388130   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1388131   +
1388132   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1388133   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1388134   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1388135   +
1388136   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1388137   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1388138   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1388139   +
1388140   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1388141   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1388142   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1388143   +
1388144   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1388145   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1388146   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1388147   +
1388148   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1388149   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1388150   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1388151   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1388152   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1388153   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1388154   +
1388155   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1388156   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1388157   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1388158   +
1388159   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1388160   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1388161   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1388162   +
1388163   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1388164   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1388165   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1388166   +
1388167   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1388168   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1388169   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1388170   +
1388171   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1388172   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1388173   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1388174   +
1388175   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1388176   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1388177   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1388178   +
1388179   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1388180   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1388181   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1388182   +
1388183   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1388184   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1388185   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1388186   +
1388187   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1388188   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1388189   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1388190   +
1388191   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1388192   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1388193   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1388194   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1388195   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1388196   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1388197   +end;
MPRINT(EM_DIAGRAM):   end;
1388198   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1388199   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1388200   +
1388201   +REGDR1:
1388202   +
1388203   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1388204   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1388205   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1388206   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1388207   +end;
MPRINT(EM_DIAGRAM):   end;
1388208   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388209   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1388210   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1388211   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1388212   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1388213   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1388214   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1388215   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1388216   +   end;
MPRINT(EM_DIAGRAM):   end;
1388217   +end;
MPRINT(EM_DIAGRAM):   end;
1388218   +
1388219   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1388220   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1388221   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1388222   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1388223   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1388224   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1388225   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1388226   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1388227   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1388228   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1388229   +end;
MPRINT(EM_DIAGRAM):   end;
1388230   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1388231   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1388232   +
1388233   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1388234   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1388235   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1388236   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1388237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388238   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1388239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388240   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1388241   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1388242   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1388243   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1388244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388245   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1388246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388247   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1388248   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1388249   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1388250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388251   +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
1388252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388254   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1388255   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1388256   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1388257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1388258   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1388259   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1388260   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1388261   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1388262   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1388263   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1388264   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1388265   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1388266   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1388267   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1388268   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1388269   +LENGTH _WARN_ $4
1388270   +      F_DepVar  $ 12
1388271   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1388272   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1388273   +
1388274   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1388275   +
1388276   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1388277   +
1388278   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1388279   +
1388280   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1388281   +
1388282   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1388283   +
1388284   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1388285   +
1388286   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1388287   +
1388288   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1388289   +
1388290   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1388291   +
1388292   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1388293   +
1388294   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1388295   +
1388296   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1388297   +
1388298   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1388299   +
1388300   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1388301   +
1388302   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1388303   +
1388304   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1388305   +
1388306   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1388307   +
1388308   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1388309   +
1388310   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1388311   +
1388312   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1388313   +
1388314   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1388315   +
1388316   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1388317   +
1388318   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1388319   +
1388320   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1388321   +
1388322   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1388323   +
1388324   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1388325   +
1388326   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1388327   +
1388328   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1388329   +
1388330   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1388331   +
1388332   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1388333   +
1388334   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1388335   +
1388336   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1388337   +
1388338   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1388339   +
1388340   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1388341   +
1388342   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1388343   +
1388344   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1388345   +
1388346   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1388347   +
1388348   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1388349   +
1388350   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1388351   +
1388352   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1388353   +
1388354   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1388355   +
1388356   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1388357   +
1388358   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1388359   +
1388360   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1388361   +
1388362   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1388363   +
1388364   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1388365   +
1388366   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1388367   +
1388368   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1388369   +
1388370   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1388371   +
1388372   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1388373   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1388374   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1388375   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1388376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388378   +end;
MPRINT(EM_DIAGRAM):   end;
1388379   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388380   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388381   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1388382   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388383   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1388384   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1388385   +   end;
MPRINT(EM_DIAGRAM):   end;
1388386   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1388387   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1388388   +   end;
MPRINT(EM_DIAGRAM):   end;
1388389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388390   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1388391   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388392   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388393   +   end;
MPRINT(EM_DIAGRAM):   end;
1388394   +end;
MPRINT(EM_DIAGRAM):   end;
1388395   +
1388396   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1388397   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1388398   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1388399   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1388400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388402   +end;
MPRINT(EM_DIAGRAM):   end;
1388403   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388404   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388405   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1388406   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388407   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1388408   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1388409   +   end;
MPRINT(EM_DIAGRAM):   end;
1388410   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1388411   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1388412   +   end;
MPRINT(EM_DIAGRAM):   end;
1388413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388414   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1388415   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388416   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388417   +   end;
MPRINT(EM_DIAGRAM):   end;
1388418   +end;
MPRINT(EM_DIAGRAM):   end;
1388419   +
1388420   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1388421   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1388422   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1388423   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1388424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388426   +end;
MPRINT(EM_DIAGRAM):   end;
1388427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388429   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1388430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388431   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1388432   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1388433   +   end;
MPRINT(EM_DIAGRAM):   end;
1388434   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1388435   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1388436   +   end;
MPRINT(EM_DIAGRAM):   end;
1388437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388438   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1388439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388441   +   end;
MPRINT(EM_DIAGRAM):   end;
1388442   +end;
MPRINT(EM_DIAGRAM):   end;
1388443   +
1388444   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1388445   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1388446   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1388447   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1388448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388450   +end;
MPRINT(EM_DIAGRAM):   end;
1388451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388453   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1388454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1388456   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1388457   +   end;
MPRINT(EM_DIAGRAM):   end;
1388458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1388459   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1388460   +   end;
MPRINT(EM_DIAGRAM):   end;
1388461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388462   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1388463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388465   +   end;
MPRINT(EM_DIAGRAM):   end;
1388466   +end;
MPRINT(EM_DIAGRAM):   end;
1388467   +
1388468   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1388469   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1388470   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1388471   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1388472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388474   +end;
MPRINT(EM_DIAGRAM):   end;
1388475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388477   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1388478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1388480   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1388481   +   end;
MPRINT(EM_DIAGRAM):   end;
1388482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1388483   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1388484   +   end;
MPRINT(EM_DIAGRAM):   end;
1388485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388486   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1388487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388489   +   end;
MPRINT(EM_DIAGRAM):   end;
1388490   +end;
MPRINT(EM_DIAGRAM):   end;
1388491   +
1388492   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1388493   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1388494   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1388495   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1388496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388498   +end;
MPRINT(EM_DIAGRAM):   end;
1388499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388501   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1388502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1388504   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1388505   +   end;
MPRINT(EM_DIAGRAM):   end;
1388506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1388507   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1388508   +   end;
MPRINT(EM_DIAGRAM):   end;
1388509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388510   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1388511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388513   +   end;
MPRINT(EM_DIAGRAM):   end;
1388514   +end;
MPRINT(EM_DIAGRAM):   end;
1388515   +
1388516   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1388517   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1388518   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1388519   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1388520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388522   +end;
MPRINT(EM_DIAGRAM):   end;
1388523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1388525   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1388526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388527   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1388528   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1388529   +   end;
MPRINT(EM_DIAGRAM):   end;
1388530   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1388531   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1388532   +   end;
MPRINT(EM_DIAGRAM):   end;
1388533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388534   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1388535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388537   +   end;
MPRINT(EM_DIAGRAM):   end;
1388538   +end;
MPRINT(EM_DIAGRAM):   end;
1388539   +
1388540   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1388541   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1388542   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1388543   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1388544   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1388545   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1388546   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1388547   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1388548   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1388549   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1388550   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1388551   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1388552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388554   +end;
MPRINT(EM_DIAGRAM):   end;
1388555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388556   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1388557   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1388558   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388559   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1388560   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1388561   +   end;
MPRINT(EM_DIAGRAM):   end;
1388562   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1388563   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1388564   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1388565   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1388566   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1388567   +   end;
MPRINT(EM_DIAGRAM):   end;
1388568   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1388569   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1388570   +   end;
MPRINT(EM_DIAGRAM):   end;
1388571   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1388572   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1388573   +   end;
MPRINT(EM_DIAGRAM):   end;
1388574   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1388575   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1388576   +   end;
MPRINT(EM_DIAGRAM):   end;
1388577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388578   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1388579   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1388580   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1388581   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1388582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388584   +   end;
MPRINT(EM_DIAGRAM):   end;
1388585   +end;
MPRINT(EM_DIAGRAM):   end;
1388586   +
1388587   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1388588   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1388589   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1388590   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1388591   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1388592   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1388593   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1388594   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1388595   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1388596   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1388597   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1388598   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1388599   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1388600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1388601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388602   +end;
MPRINT(EM_DIAGRAM):   end;
1388603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388604   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1388605   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1388606   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388607   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1388608   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1388609   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1388610   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1388611   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1388612   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388613   +         end;
MPRINT(EM_DIAGRAM):   end;
1388614   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1388615   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1388616   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1388617   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388618   +            end;
MPRINT(EM_DIAGRAM):   end;
1388619   +         end;
MPRINT(EM_DIAGRAM):   end;
1388620   +      end;
MPRINT(EM_DIAGRAM):   end;
1388621   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1388622   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1388623   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1388624   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388625   +         end;
MPRINT(EM_DIAGRAM):   end;
1388626   +      end;
MPRINT(EM_DIAGRAM):   end;
1388627   +   end;
MPRINT(EM_DIAGRAM):   end;
1388628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388629   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1388630   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1388631   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388632   +      end;
MPRINT(EM_DIAGRAM):   end;
1388633   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1388634   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1388635   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1388636   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1388637   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1388638   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1388639   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1388640   +         end;
MPRINT(EM_DIAGRAM):   end;
1388641   +      end;
MPRINT(EM_DIAGRAM):   end;
1388642   +   end;
MPRINT(EM_DIAGRAM):   end;
1388643   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1388644   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1388645   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1388646   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1388647   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1388648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1388649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388650   +   end;
MPRINT(EM_DIAGRAM):   end;
1388651   +end;
MPRINT(EM_DIAGRAM):   end;
1388652   +
1388653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388654   +*** Checking missing input Interval
1388655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1388656   +
1388657   +IF NMISS(
1388658   +   AcceptedCmpTotal ,
1388659   +   Age ,
1388660   +   Frq ,
1388661   +   Income ,
1388662   +   Kidhome ,
1388663   +   Mnt ,
1388664   +   MntFishProducts ,
1388665   +   MntFruits ,
1388666   +   MntGoldProds ,
1388667   +   MntMeatProducts ,
1388668   +   MntSweetProducts ,
1388669   +   MntWines ,
1388670   +   MonthsAsCustomer ,
1388671   +   NumCatalogPurchases ,
1388672   +   NumDealsPurchases ,
1388673   +   NumDistPurchases ,
1388674   +   NumStorePurchases ,
1388675   +   NumWebPurchases ,
1388676   +   NumWebVisitsMonth ,
1388677   +   RFMstat ,
1388678   +   RMntFrq ,
1388679   +   Recency ,
1388680   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1388681   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1388682   +
1388683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1388684   +END;
MPRINT(EM_DIAGRAM):   END;
1388685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388686   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1388687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388688   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1388689   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1388690   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1388691   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1388692   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1388693   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1388694   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1388695   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1388696   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1388697   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1388698   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1388699   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1388700   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1388701   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1388702   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1388703   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1388704   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1388705   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1388706   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1388707   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1388708   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1388709   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1388710   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1388711   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1388712   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1388713   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1388714   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1388715   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1388716   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1388717   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1388718   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1388719   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1388720   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1388721   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1388722   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1388723   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1388724   +END;
MPRINT(EM_DIAGRAM):   END;
1388725   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1388726   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1388727   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1388728   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1388729   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1388730   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1388731   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1388732   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1388733   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1388734   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1388735   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1388736   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1388737   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1388738   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1388739   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1388740   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1388741   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1388742   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1388743   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1388744   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1388745   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1388746   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1388747   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1388748   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1388749   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1388750   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1388751   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1388752   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1388753   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1388754   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1388755   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1388756   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1388757   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1388758   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1388759   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1388760   +   ELSE S_NumCatalogPurchases
1388761   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1388762   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1388763   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1388764   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1388765   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1388766   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1388767   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1388768   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1388769   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1388770   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1388771   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1388772   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1388773   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1388774   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1388775   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1388776   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1388777   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1388778   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1388779   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1388780   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1388781   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1388782   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1388783   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1388784   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1388785   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1388786   +END;
MPRINT(EM_DIAGRAM):   END;
1388787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388788   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1388789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388791   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1388792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388794   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1388795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388796   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1388797   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1388798   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1388799   +        S_Income  +    -0.23050240180524 * S_Kidhome
1388800   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1388801   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1388802   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1388803   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1388804   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1388805   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1388806   +          +    -1.32257303635072 * S_NumDealsPurchases
1388807   +          +    -0.54480870554989 * S_NumDistPurchases
1388808   +          +     1.24793709956495 * S_NumStorePurchases
1388809   +          +      1.7974198103915 * S_NumWebPurchases
1388810   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1388811   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1388812   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1388813   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome +
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 *
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts +
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 *
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 *
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 *
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 *
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq +
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1388814   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1388815   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1388816   +        S_Income  +    -0.78793784980656 * S_Kidhome
1388817   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1388818   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1388819   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1388820   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1388821   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1388822   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1388823   +          +     0.70535680060775 * S_NumDealsPurchases
1388824   +          +    -0.15561838359391 * S_NumDistPurchases
1388825   +          +    -0.86545647977011 * S_NumStorePurchases
1388826   +          +    -0.78435825863867 * S_NumWebPurchases
1388827   +          +     1.76113949975149 * S_NumWebVisitsMonth
1388828   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1388829   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1388830   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome +
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 *
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts +
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 *
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 *
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 *
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 *
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq +
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1388831   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1388832   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1388833   +        S_Income  +    -0.59349067735666 * S_Kidhome
1388834   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1388835   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1388836   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1388837   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1388838   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1388839   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1388840   +          +     0.21510592309387 * S_NumDealsPurchases
1388841   +          +    -0.05401897321491 * S_NumDistPurchases
1388842   +          +     0.14945584086188 * S_NumStorePurchases
1388843   +          +    -0.09993898051701 * S_NumWebPurchases
1388844   +          +     1.40189771606069 * S_NumWebVisitsMonth
1388845   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1388846   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1388847   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age +
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome +
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 *
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts +
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 *
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 *
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 *
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 *
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq +
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1388848   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1388849   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1388850   +        S_Income  +    -0.61129984920194 * S_Kidhome
1388851   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1388852   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1388853   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1388854   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1388855   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1388856   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1388857   +          +     0.81353732439473 * S_NumDealsPurchases
1388858   +          +     0.32933472931941 * S_NumDistPurchases
1388859   +          +    -1.28188012143595 * S_NumStorePurchases
1388860   +          +    -0.81914782214243 * S_NumWebPurchases
1388861   +          +     1.20332282902342 * S_NumWebVisitsMonth
1388862   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1388863   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1388864   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age +
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome +
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 *
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts +
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 *
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 *
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 *
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 *
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq +
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1388865   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1388866   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1388867   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1388868   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1388869   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 *
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 +
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 *
HigherEducationBinary0 ;
1388870   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1388871   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1388872   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1388873   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1388874   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 *
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 +
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 *
HigherEducationBinary0 ;
1388875   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1388876   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1388877   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1388878   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1388879   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 *
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 +
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 *
HigherEducationBinary0 ;
1388880   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1388881   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1388882   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1388883   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1388884   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 *
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 +
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 *
HigherEducationBinary0 ;
1388885   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1388886   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1388887   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1388888   +          +     0.38068062371853 * Marital_StatusDivorced
1388889   +          +    -0.09269938603625 * Marital_StatusMarried
1388890   +          +    -0.17904543311137 * Marital_StatusSingle
1388891   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 *
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried +
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1388892   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1388893   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1388894   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1388895   +          +     0.46191454760643 * Marital_StatusDivorced
1388896   +          +    -1.36520525874032 * Marital_StatusMarried
1388897   +          +     1.36669525533789 * Marital_StatusSingle
1388898   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 *
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster +
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried +
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1388899   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1388900   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1388901   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1388902   +          +     0.18693560360309 * Marital_StatusDivorced
1388903   +          +    -0.56475988428608 * Marital_StatusMarried
1388904   +          +     0.79263891340625 * Marital_StatusSingle
1388905   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 *
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried +
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1388906   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1388907   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1388908   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1388909   +          +     1.14025450669394 * Marital_StatusDivorced
1388910   +          +     0.78122963298728 * Marital_StatusMarried
1388911   +          +    -1.37860768059913 * Marital_StatusSingle
1388912   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 *
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried +
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1388913   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1388914   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1388915   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1388916   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1388917   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1388918   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1388919   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1388920   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1388921   +END;
MPRINT(EM_DIAGRAM):   END;
1388922   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1388923   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1388924   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1388925   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1388926   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1388927   +END;
MPRINT(EM_DIAGRAM):   END;
1388928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388929   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1388930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388931   +
1388932   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1388933   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1388934   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1388935   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1388936   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1388937   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1388938   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1388939   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1388940   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1388941   +end;
MPRINT(EM_DIAGRAM):   end;
1388942   +else do;
MPRINT(EM_DIAGRAM):   else do;
1388943   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1388944   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1388945   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1388946   +   end;
MPRINT(EM_DIAGRAM):   end;
1388947   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1388948   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1388949   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1388950   +   end;
MPRINT(EM_DIAGRAM):   end;
1388951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1388952   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1388953   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1388954   +   end;
MPRINT(EM_DIAGRAM):   end;
1388955   +end;
MPRINT(EM_DIAGRAM):   end;
1388956   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1388957   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1388958   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 +
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1388959   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1388960   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1388961   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1388962   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1388963   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1388964   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1388965   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1388966   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1388967   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1388968   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1388969   +END;
MPRINT(EM_DIAGRAM):   END;
1388970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1388971   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1388972   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1388973   +END;
MPRINT(EM_DIAGRAM):   END;
1388974   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1388975   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1388976   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1388977   +END;
MPRINT(EM_DIAGRAM):   END;
1388978   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1388979   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1388980   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1388981   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1388982   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1388983   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1388984   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1388985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388986   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1388987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1388988   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1388989   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1388990   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1388991   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1388992   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1388993   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1388994   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1388995   +END;
MPRINT(EM_DIAGRAM):   END;
1388996   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1388997   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1388998   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1388999   +drop
1389000   +H11
1389001   +H12
1389002   +H13
1389003   +H14
1389004   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1389005   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1389006   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1389007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389008   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1389009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389010   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1389011   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1389012   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1389013   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1389014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389015   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1389016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389017   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1389018   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1389019   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1389020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389021   +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
1389022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389024   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1389025   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1389026   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1389027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389028   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1389029   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1389030   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1389031   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1389032   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1389033   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1389034   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1389035   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1389036   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1389037   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1389038   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1389039   +LENGTH _WARN_ $4
1389040   +      F_DepVar  $ 12
1389041   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1389042   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1389043   +
1389044   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1389045   +
1389046   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1389047   +
1389048   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1389049   +
1389050   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1389051   +
1389052   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1389053   +
1389054   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1389055   +
1389056   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1389057   +
1389058   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1389059   +
1389060   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1389061   +
1389062   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1389063   +
1389064   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1389065   +
1389066   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1389067   +
1389068   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1389069   +
1389070   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1389071   +
1389072   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1389073   +
1389074   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1389075   +
1389076   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1389077   +
1389078   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1389079   +
1389080   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1389081   +
1389082   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1389083   +
1389084   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1389085   +
1389086   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1389087   +
1389088   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1389089   +
1389090   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1389091   +
1389092   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1389093   +
1389094   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1389095   +
1389096   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1389097   +
1389098   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1389099   +
1389100   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1389101   +
1389102   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1389103   +
1389104   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1389105   +
1389106   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1389107   +
1389108   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1389109   +
1389110   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1389111   +
1389112   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1389113   +
1389114   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1389115   +
1389116   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1389117   +
1389118   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1389119   +
1389120   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1389121   +
1389122   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1389123   +
1389124   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1389125   +
1389126   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1389127   +
1389128   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1389129   +
1389130   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1389131   +
1389132   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1389133   +
1389134   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1389135   +
1389136   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1389137   +
1389138   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1389139   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1389140   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1389141   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1389142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389144   +end;
MPRINT(EM_DIAGRAM):   end;
1389145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389147   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1389148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389149   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389150   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1389151   +   end;
MPRINT(EM_DIAGRAM):   end;
1389152   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389153   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1389154   +   end;
MPRINT(EM_DIAGRAM):   end;
1389155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389156   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1389157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389159   +   end;
MPRINT(EM_DIAGRAM):   end;
1389160   +end;
MPRINT(EM_DIAGRAM):   end;
1389161   +
1389162   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1389163   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1389164   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1389165   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1389166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389168   +end;
MPRINT(EM_DIAGRAM):   end;
1389169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389171   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1389172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389173   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389174   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1389175   +   end;
MPRINT(EM_DIAGRAM):   end;
1389176   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389177   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1389178   +   end;
MPRINT(EM_DIAGRAM):   end;
1389179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389180   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1389181   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389182   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389183   +   end;
MPRINT(EM_DIAGRAM):   end;
1389184   +end;
MPRINT(EM_DIAGRAM):   end;
1389185   +
1389186   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1389187   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1389188   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1389189   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1389190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389192   +end;
MPRINT(EM_DIAGRAM):   end;
1389193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389195   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1389196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389197   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389198   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1389199   +   end;
MPRINT(EM_DIAGRAM):   end;
1389200   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389201   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1389202   +   end;
MPRINT(EM_DIAGRAM):   end;
1389203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389204   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1389205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389207   +   end;
MPRINT(EM_DIAGRAM):   end;
1389208   +end;
MPRINT(EM_DIAGRAM):   end;
1389209   +
1389210   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1389211   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1389212   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1389213   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1389214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389216   +end;
MPRINT(EM_DIAGRAM):   end;
1389217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389219   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1389220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389221   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389222   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1389223   +   end;
MPRINT(EM_DIAGRAM):   end;
1389224   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389225   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1389226   +   end;
MPRINT(EM_DIAGRAM):   end;
1389227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389228   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1389229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389231   +   end;
MPRINT(EM_DIAGRAM):   end;
1389232   +end;
MPRINT(EM_DIAGRAM):   end;
1389233   +
1389234   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1389235   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1389236   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1389237   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1389238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389240   +end;
MPRINT(EM_DIAGRAM):   end;
1389241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389242   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389243   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1389244   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389245   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389246   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1389247   +   end;
MPRINT(EM_DIAGRAM):   end;
1389248   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389249   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1389250   +   end;
MPRINT(EM_DIAGRAM):   end;
1389251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389252   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1389253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389255   +   end;
MPRINT(EM_DIAGRAM):   end;
1389256   +end;
MPRINT(EM_DIAGRAM):   end;
1389257   +
1389258   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1389259   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1389260   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1389261   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1389262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389264   +end;
MPRINT(EM_DIAGRAM):   end;
1389265   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389267   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1389268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389269   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389270   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1389271   +   end;
MPRINT(EM_DIAGRAM):   end;
1389272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389273   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1389274   +   end;
MPRINT(EM_DIAGRAM):   end;
1389275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389276   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1389277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389279   +   end;
MPRINT(EM_DIAGRAM):   end;
1389280   +end;
MPRINT(EM_DIAGRAM):   end;
1389281   +
1389282   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1389283   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1389284   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1389285   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1389286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389288   +end;
MPRINT(EM_DIAGRAM):   end;
1389289   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389291   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1389292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389293   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1389294   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1389295   +   end;
MPRINT(EM_DIAGRAM):   end;
1389296   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1389297   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1389298   +   end;
MPRINT(EM_DIAGRAM):   end;
1389299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389300   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1389301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389303   +   end;
MPRINT(EM_DIAGRAM):   end;
1389304   +end;
MPRINT(EM_DIAGRAM):   end;
1389305   +
1389306   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1389307   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1389308   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1389309   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1389310   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1389311   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1389312   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1389313   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1389314   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1389315   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1389316   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1389317   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1389318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389320   +end;
MPRINT(EM_DIAGRAM):   end;
1389321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389322   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1389323   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1389324   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389325   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1389326   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1389327   +   end;
MPRINT(EM_DIAGRAM):   end;
1389328   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1389329   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1389330   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1389331   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1389332   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1389333   +   end;
MPRINT(EM_DIAGRAM):   end;
1389334   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1389335   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1389336   +   end;
MPRINT(EM_DIAGRAM):   end;
1389337   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1389338   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1389339   +   end;
MPRINT(EM_DIAGRAM):   end;
1389340   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1389341   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1389342   +   end;
MPRINT(EM_DIAGRAM):   end;
1389343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389344   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1389345   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1389346   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1389347   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1389348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389350   +   end;
MPRINT(EM_DIAGRAM):   end;
1389351   +end;
MPRINT(EM_DIAGRAM):   end;
1389352   +
1389353   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1389354   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1389355   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1389356   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1389357   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1389358   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1389359   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1389360   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1389361   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1389362   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1389363   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1389364   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1389365   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1389366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389368   +end;
MPRINT(EM_DIAGRAM):   end;
1389369   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389370   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
The SAS System
 
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1389371   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1389372   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389373   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1389374   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1389375   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1389376   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1389377   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1389378   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1389379   +         end;
MPRINT(EM_DIAGRAM):   end;
1389380   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1389381   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1389382   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1389383   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1389384   +            end;
MPRINT(EM_DIAGRAM):   end;
1389385   +         end;
MPRINT(EM_DIAGRAM):   end;
1389386   +      end;
MPRINT(EM_DIAGRAM):   end;
1389387   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1389388   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1389389   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1389390   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1389391   +         end;
MPRINT(EM_DIAGRAM):   end;
1389392   +      end;
MPRINT(EM_DIAGRAM):   end;
1389393   +   end;
MPRINT(EM_DIAGRAM):   end;
1389394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389395   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1389396   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1389397   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1389398   +      end;
MPRINT(EM_DIAGRAM):   end;
1389399   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1389400   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1389401   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1389402   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1389403   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1389404   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1389405   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1389406   +         end;
MPRINT(EM_DIAGRAM):   end;
1389407   +      end;
MPRINT(EM_DIAGRAM):   end;
1389408   +   end;
MPRINT(EM_DIAGRAM):   end;
1389409   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1389410   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1389411   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1389412   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1389413   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1389414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389416   +   end;
MPRINT(EM_DIAGRAM):   end;
1389417   +end;
MPRINT(EM_DIAGRAM):   end;
1389418   +
1389419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389420   +*** Checking missing input Interval
1389421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1389422   +
1389423   +IF NMISS(
1389424   +   AcceptedCmpTotal ,
1389425   +   Age ,
1389426   +   Frq ,
1389427   +   Income ,
1389428   +   Kidhome ,
1389429   +   Mnt ,
1389430   +   MntFishProducts ,
1389431   +   MntFruits ,
1389432   +   MntGoldProds ,
1389433   +   MntMeatProducts ,
1389434   +   MntSweetProducts ,
1389435   +   MntWines ,
1389436   +   MonthsAsCustomer ,
1389437   +   NumCatalogPurchases ,
1389438   +   NumDealsPurchases ,
1389439   +   NumDistPurchases ,
1389440   +   NumStorePurchases ,
1389441   +   NumWebPurchases ,
1389442   +   NumWebVisitsMonth ,
1389443   +   RFMstat ,
1389444   +   RMntFrq ,
1389445   +   Recency ,
1389446   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1389447   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1389448   +
1389449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389450   +END;
MPRINT(EM_DIAGRAM):   END;
1389451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389452   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1389453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389454   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1389455   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1389456   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1389457   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1389458   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1389459   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1389460   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1389461   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1389462   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1389463   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1389464   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1389465   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1389466   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1389467   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1389468   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1389469   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1389470   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1389471   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1389472   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1389473   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1389474   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1389475   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1389476   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1389477   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1389478   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1389479   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1389480   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1389481   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1389482   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1389483   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1389484   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1389485   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1389486   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1389487   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1389488   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1389489   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1389490   +END;
MPRINT(EM_DIAGRAM):   END;
1389491   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1389492   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1389493   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1389494   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1389495   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1389496   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1389497   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1389498   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1389499   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1389500   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1389501   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1389502   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1389503   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1389504   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1389505   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1389506   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1389507   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1389508   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1389509   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1389510   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1389511   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1389512   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1389513   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1389514   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1389515   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1389516   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1389517   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1389518   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1389519   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1389520   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1389521   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1389522   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1389523   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1389524   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1389525   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1389526   +   ELSE S_NumCatalogPurchases
1389527   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1389528   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1389529   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1389530   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1389531   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1389532   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1389533   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1389534   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1389535   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1389536   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1389537   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1389538   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1389539   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1389540   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1389541   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1389542   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1389543   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1389544   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1389545   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1389546   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1389547   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1389548   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1389549   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1389550   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1389551   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1389552   +END;
MPRINT(EM_DIAGRAM):   END;
1389553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389554   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1389555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389557   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1389558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389560   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1389561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389562   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1389563   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1389564   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1389565   +        S_Income  +    -1.07652572934003 * S_Kidhome
1389566   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1389567   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1389568   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1389569   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1389570   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1389571   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1389572   +          +     0.34217069579861 * S_NumDealsPurchases
1389573   +          +      0.7126550962469 * S_NumDistPurchases
1389574   +          +     0.05810128676346 * S_NumStorePurchases
1389575   +          +     -0.1974592461824 * S_NumWebPurchases
1389576   +          +     1.33855646568468 * S_NumWebVisitsMonth
1389577   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1389578   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1389579   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age +
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome +
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 *
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts +
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 *
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 *
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 *
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 *
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq +
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1389580   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1389581   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1389582   +        S_Income  +    -0.00280376715329 * S_Kidhome
1389583   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1389584   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1389585   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1389586   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1389587   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1389588   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1389589   +          +     0.45694604326279 * S_NumDealsPurchases
1389590   +          +      0.1555582457419 * S_NumDistPurchases
1389591   +          +     -0.3340268446813 * S_NumStorePurchases
1389592   +          +    -0.39316217683753 * S_NumWebPurchases
1389593   +          +     0.52431656748667 * S_NumWebVisitsMonth
1389594   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1389595   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1389596   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome +
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 *
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts +
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 *
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 *
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 *
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 *
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq +
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1389597   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1389598   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1389599   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1389600   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1389601   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 *
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 +
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 *
HigherEducationBinary0 ;
1389602   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1389603   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1389604   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1389605   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1389606   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 *
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 +
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 *
HigherEducationBinary0 ;
1389607   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1389608   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1389609   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1389610   +          +     0.46676686502466 * Marital_StatusDivorced
1389611   +          +    -1.27760562209616 * Marital_StatusMarried
1389612   +          +     1.31419230639567 * Marital_StatusSingle
1389613   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 *
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried +
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1389614   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1389615   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1389616   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1389617   +          +     0.07434297903639 * Marital_StatusDivorced
1389618   +          +     0.00294493836325 * Marital_StatusMarried
1389619   +          +    -0.00745595849422 * Marital_StatusSingle
1389620   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 *
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster +
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried +
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1389621   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1389622   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1389623   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1389624   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1389625   +END;
MPRINT(EM_DIAGRAM):   END;
1389626   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1389627   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1389628   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1389629   +END;
MPRINT(EM_DIAGRAM):   END;
1389630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389631   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1389632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389633   +
1389634   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1389635   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1389636   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1389637   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1389638   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1389639   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389640   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1389641   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1389642   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1389643   +end;
MPRINT(EM_DIAGRAM):   end;
1389644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389645   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1389646   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1389647   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1389648   +   end;
MPRINT(EM_DIAGRAM):   end;
1389649   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1389650   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1389651   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1389652   +   end;
MPRINT(EM_DIAGRAM):   end;
1389653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389654   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1389655   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1389656   +   end;
MPRINT(EM_DIAGRAM):   end;
1389657   +end;
MPRINT(EM_DIAGRAM):   end;
1389658   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1389659   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1389660   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1389661   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1389662   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1389663   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1389664   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1389665   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1389666   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1389667   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1389668   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1389669   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1389670   +END;
MPRINT(EM_DIAGRAM):   END;
1389671   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1389672   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1389673   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1389674   +END;
MPRINT(EM_DIAGRAM):   END;
1389675   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1389676   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1389677   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1389678   +END;
MPRINT(EM_DIAGRAM):   END;
1389679   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1389680   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1389681   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1389682   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1389683   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1389684   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1389685   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1389686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389687   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1389688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1389689   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1389690   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1389691   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1389692   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1389693   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1389694   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1389695   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1389696   +END;
MPRINT(EM_DIAGRAM):   END;
1389697   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1389698   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1389699   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1389700   +drop
1389701   +H11
1389702   +H12
1389703   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1389704   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1389705   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1389706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389707   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1389708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389709   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1389710   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1389711   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1389712   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1389713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389714   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1389715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389716   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1389717   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1389718   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1389719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389720   +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
1389721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389723   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1389724   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1389725   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1389726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1389727   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1389728   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1389729   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1389730   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1389731   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1389732   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1389733   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1389734   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1389735   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1389736   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1389737   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1389738   +LENGTH _WARN_ $4
1389739   +      F_DepVar  $ 12
1389740   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1389741   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1389742   +
1389743   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1389744   +
1389745   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1389746   +
1389747   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1389748   +
1389749   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1389750   +
1389751   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1389752   +
1389753   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1389754   +
1389755   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1389756   +
1389757   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1389758   +
1389759   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1389760   +
1389761   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1389762   +
1389763   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1389764   +
1389765   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1389766   +
1389767   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1389768   +
1389769   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1389770   +
1389771   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1389772   +
1389773   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1389774   +
1389775   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1389776   +
1389777   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1389778   +
1389779   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1389780   +
1389781   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1389782   +
1389783   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1389784   +
1389785   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1389786   +
1389787   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1389788   +
1389789   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1389790   +
1389791   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1389792   +
1389793   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1389794   +
1389795   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1389796   +
1389797   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1389798   +
1389799   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1389800   +
1389801   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1389802   +
1389803   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1389804   +
1389805   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1389806   +
1389807   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1389808   +
1389809   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1389810   +
1389811   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1389812   +
1389813   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1389814   +
1389815   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1389816   +
1389817   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1389818   +
1389819   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1389820   +
1389821   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1389822   +
1389823   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1389824   +
1389825   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1389826   +
1389827   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1389828   +
1389829   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1389830   +
1389831   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1389832   +
1389833   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1389834   +
1389835   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1389836   +
1389837   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1389838   +
1389839   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1389840   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1389841   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1389842   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1389843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389845   +end;
MPRINT(EM_DIAGRAM):   end;
1389846   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389847   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389848   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1389849   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389850   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389851   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1389852   +   end;
MPRINT(EM_DIAGRAM):   end;
1389853   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389854   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1389855   +   end;
MPRINT(EM_DIAGRAM):   end;
1389856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389857   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1389858   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389859   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389860   +   end;
MPRINT(EM_DIAGRAM):   end;
1389861   +end;
MPRINT(EM_DIAGRAM):   end;
1389862   +
1389863   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1389864   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1389865   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1389866   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1389867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389869   +end;
MPRINT(EM_DIAGRAM):   end;
1389870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389871   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389872   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1389873   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389874   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389875   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1389876   +   end;
MPRINT(EM_DIAGRAM):   end;
1389877   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389878   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1389879   +   end;
MPRINT(EM_DIAGRAM):   end;
1389880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389881   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1389882   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389883   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389884   +   end;
MPRINT(EM_DIAGRAM):   end;
1389885   +end;
MPRINT(EM_DIAGRAM):   end;
1389886   +
1389887   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1389888   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1389889   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1389890   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1389891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389893   +end;
MPRINT(EM_DIAGRAM):   end;
1389894   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389895   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389896   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1389897   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389898   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389899   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1389900   +   end;
MPRINT(EM_DIAGRAM):   end;
1389901   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389902   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1389903   +   end;
MPRINT(EM_DIAGRAM):   end;
1389904   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389905   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1389906   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389907   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389908   +   end;
MPRINT(EM_DIAGRAM):   end;
1389909   +end;
MPRINT(EM_DIAGRAM):   end;
1389910   +
1389911   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1389912   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1389913   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1389914   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1389915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389917   +end;
MPRINT(EM_DIAGRAM):   end;
1389918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389919   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389920   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1389921   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389922   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389923   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1389924   +   end;
MPRINT(EM_DIAGRAM):   end;
1389925   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389926   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1389927   +   end;
MPRINT(EM_DIAGRAM):   end;
1389928   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389929   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1389930   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389931   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389932   +   end;
MPRINT(EM_DIAGRAM):   end;
1389933   +end;
MPRINT(EM_DIAGRAM):   end;
1389934   +
1389935   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1389936   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1389937   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1389938   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1389939   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389941   +end;
MPRINT(EM_DIAGRAM):   end;
1389942   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389943   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389944   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1389945   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389946   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389947   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1389948   +   end;
MPRINT(EM_DIAGRAM):   end;
1389949   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389950   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1389951   +   end;
MPRINT(EM_DIAGRAM):   end;
1389952   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389953   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1389954   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389955   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389956   +   end;
MPRINT(EM_DIAGRAM):   end;
1389957   +end;
MPRINT(EM_DIAGRAM):   end;
1389958   +
1389959   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1389960   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1389961   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1389962   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1389963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389965   +end;
MPRINT(EM_DIAGRAM):   end;
1389966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389968   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1389969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389970   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1389971   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1389972   +   end;
MPRINT(EM_DIAGRAM):   end;
1389973   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1389974   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1389975   +   end;
MPRINT(EM_DIAGRAM):   end;
1389976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1389977   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1389978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1389979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389980   +   end;
MPRINT(EM_DIAGRAM):   end;
1389981   +end;
MPRINT(EM_DIAGRAM):   end;
1389982   +
1389983   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1389984   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1389985   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1389986   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1389987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1389988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1389989   +end;
MPRINT(EM_DIAGRAM):   end;
1389990   +else do;
MPRINT(EM_DIAGRAM):   else do;
1389991   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1389992   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1389993   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1389994   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1389995   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1389996   +   end;
MPRINT(EM_DIAGRAM):   end;
1389997   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1389998   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1389999   +   end;
MPRINT(EM_DIAGRAM):   end;
1390000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390001   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1390002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390004   +   end;
MPRINT(EM_DIAGRAM):   end;
1390005   +end;
MPRINT(EM_DIAGRAM):   end;
1390006   +
1390007   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1390008   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1390009   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1390010   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1390011   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1390012   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1390013   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1390014   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1390015   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1390016   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1390017   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1390018   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1390019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390021   +end;
MPRINT(EM_DIAGRAM):   end;
1390022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390023   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1390024   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1390025   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390026   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1390027   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1390028   +   end;
MPRINT(EM_DIAGRAM):   end;
1390029   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1390030   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1390031   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1390032   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1390033   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1390034   +   end;
MPRINT(EM_DIAGRAM):   end;
1390035   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1390036   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1390037   +   end;
MPRINT(EM_DIAGRAM):   end;
1390038   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1390039   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1390040   +   end;
MPRINT(EM_DIAGRAM):   end;
1390041   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1390042   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1390043   +   end;
MPRINT(EM_DIAGRAM):   end;
1390044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390045   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1390046   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1390047   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1390048   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1390049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390051   +   end;
MPRINT(EM_DIAGRAM):   end;
1390052   +end;
MPRINT(EM_DIAGRAM):   end;
1390053   +
1390054   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1390055   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1390056   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1390057   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1390058   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1390059   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1390060   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1390061   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1390062   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1390063   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1390064   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1390065   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1390066   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1390067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390069   +end;
MPRINT(EM_DIAGRAM):   end;
1390070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390071   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1390072   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1390073   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390074   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1390075   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1390076   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1390077   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1390078   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1390079   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390080   +         end;
MPRINT(EM_DIAGRAM):   end;
1390081   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1390082   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1390083   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1390084   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390085   +            end;
MPRINT(EM_DIAGRAM):   end;
1390086   +         end;
MPRINT(EM_DIAGRAM):   end;
1390087   +      end;
MPRINT(EM_DIAGRAM):   end;
1390088   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1390089   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1390090   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1390091   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390092   +         end;
MPRINT(EM_DIAGRAM):   end;
1390093   +      end;
MPRINT(EM_DIAGRAM):   end;
1390094   +   end;
MPRINT(EM_DIAGRAM):   end;
1390095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390096   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1390097   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1390098   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390099   +      end;
MPRINT(EM_DIAGRAM):   end;
1390100   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1390101   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1390102   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1390103   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1390104   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1390105   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1390106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390107   +         end;
MPRINT(EM_DIAGRAM):   end;
1390108   +      end;
MPRINT(EM_DIAGRAM):   end;
1390109   +   end;
MPRINT(EM_DIAGRAM):   end;
1390110   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1390111   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1390112   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1390113   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1390114   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1390115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390117   +   end;
MPRINT(EM_DIAGRAM):   end;
1390118   +end;
MPRINT(EM_DIAGRAM):   end;
1390119   +
1390120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390121   +*** Checking missing input Interval
1390122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1390123   +
1390124   +IF NMISS(
1390125   +   AcceptedCmpTotal ,
1390126   +   Age ,
1390127   +   Frq ,
1390128   +   Income ,
1390129   +   Kidhome ,
1390130   +   Mnt ,
1390131   +   MntFishProducts ,
1390132   +   MntFruits ,
1390133   +   MntGoldProds ,
1390134   +   MntMeatProducts ,
1390135   +   MntSweetProducts ,
1390136   +   MntWines ,
1390137   +   MonthsAsCustomer ,
1390138   +   NumCatalogPurchases ,
1390139   +   NumDealsPurchases ,
1390140   +   NumDistPurchases ,
1390141   +   NumStorePurchases ,
1390142   +   NumWebPurchases ,
1390143   +   NumWebVisitsMonth ,
1390144   +   RFMstat ,
1390145   +   RMntFrq ,
1390146   +   Recency ,
1390147   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1390148   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1390149   +
1390150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390151   +END;
MPRINT(EM_DIAGRAM):   END;
1390152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390153   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1390154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390155   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1390156   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1390157   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1390158   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1390159   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1390160   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1390161   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1390162   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1390163   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1390164   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1390165   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1390166   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1390167   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1390168   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1390169   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1390170   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1390171   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1390172   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1390173   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1390174   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1390175   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1390176   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1390177   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1390178   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1390179   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1390180   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1390181   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1390182   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1390183   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1390184   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1390185   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1390186   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1390187   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1390188   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1390189   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1390190   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1390191   +END;
MPRINT(EM_DIAGRAM):   END;
1390192   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1390193   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1390194   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1390195   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1390196   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1390197   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1390198   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1390199   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1390200   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1390201   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1390202   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1390203   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1390204   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1390205   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1390206   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1390207   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1390208   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1390209   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1390210   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1390211   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1390212   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1390213   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1390214   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1390215   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1390216   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1390217   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1390218   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1390219   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1390220   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1390221   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1390222   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1390223   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1390224   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1390225   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1390226   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1390227   +   ELSE S_NumCatalogPurchases
1390228   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1390229   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1390230   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1390231   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1390232   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1390233   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1390234   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1390235   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1390236   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1390237   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1390238   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1390239   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1390240   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1390241   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1390242   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1390243   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1390244   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1390245   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1390246   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1390247   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1390248   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1390249   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1390250   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1390251   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1390252   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1390253   +END;
MPRINT(EM_DIAGRAM):   END;
1390254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390255   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1390256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390258   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1390259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390261   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1390262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390263   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1390264   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1390265   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1390266   +        S_Income  +     0.48614351216065 * S_Kidhome
1390267   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1390268   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1390269   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1390270   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1390271   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1390272   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1390273   +          +     1.38069708066212 * S_NumDealsPurchases
1390274   +          +     0.18758966496994 * S_NumDistPurchases
1390275   +          +    -0.65306017966122 * S_NumStorePurchases
1390276   +          +    -0.65780154318734 * S_NumWebPurchases
1390277   +          +     1.42347048260615 * S_NumWebVisitsMonth
1390278   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1390279   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1390280   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome +
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 *
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts +
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 *
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 *
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 *
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 *
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq +
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1390281   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1390282   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1390283   +        S_Income  +     0.50072567449363 * S_Kidhome
1390284   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1390285   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1390286   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1390287   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1390288   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1390289   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1390290   +          +    -0.75291043162386 * S_NumDealsPurchases
1390291   +          +    -0.06780631818187 * S_NumDistPurchases
1390292   +          +     1.03453599373919 * S_NumStorePurchases
1390293   +          +     1.02348906006707 * S_NumWebPurchases
1390294   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1390295   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1390296   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1390297   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome +
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 *
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts +
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 *
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 *
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 *
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 *
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq +
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1390298   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1390299   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1390300   +        S_Income  +     0.57496607656903 * S_Kidhome
1390301   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1390302   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1390303   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1390304   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1390305   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1390306   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1390307   +          +     0.13431497076806 * S_NumDealsPurchases
1390308   +          +     -0.4516722514278 * S_NumDistPurchases
1390309   +          +     0.08636745161008 * S_NumStorePurchases
1390310   +          +    -0.01091843489919 * S_NumWebPurchases
1390311   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1390312   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1390313   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1390314   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome +
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 *
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts +
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 *
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 *
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 *
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 *
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq +
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1390315   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1390316   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1390317   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1390318   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1390319   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 *
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 +
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 *
HigherEducationBinary0 ;
1390320   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1390321   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1390322   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1390323   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1390324   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 *
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 +
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 *
HigherEducationBinary0 ;
1390325   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1390326   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1390327   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1390328   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1390329   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 *
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 +
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 *
HigherEducationBinary0 ;
1390330   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1390331   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1390332   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1390333   +          +     0.09616912826117 * Marital_StatusDivorced
1390334   +          +     0.15377557778014 * Marital_StatusMarried
1390335   +          +    -0.20686296055741 * Marital_StatusSingle
1390336   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 *
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster +
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried +
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1390337   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1390338   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1390339   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1390340   +          +    -0.18362421441913 * Marital_StatusDivorced
1390341   +          +     0.14861660317702 * Marital_StatusMarried
1390342   +          +    -0.51051982152027 * Marital_StatusSingle
1390343   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 *
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried +
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1390344   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1390345   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1390346   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1390347   +          +    -0.65088528624708 * Marital_StatusDivorced
1390348   +          +     1.85383531288095 * Marital_StatusMarried
1390349   +          +    -1.45031245605509 * Marital_StatusSingle
1390350   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 *
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster +
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried +
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1390351   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1390352   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1390353   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1390354   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1390355   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1390356   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1390357   +END;
MPRINT(EM_DIAGRAM):   END;
1390358   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1390359   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1390360   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1390361   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1390362   +END;
MPRINT(EM_DIAGRAM):   END;
1390363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390364   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1390365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390366   +
1390367   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1390368   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1390369   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1390370   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1390371   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1390372   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390373   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1390374   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1390375   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1390376   +end;
MPRINT(EM_DIAGRAM):   end;
1390377   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390378   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1390379   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1390380   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1390381   +   end;
MPRINT(EM_DIAGRAM):   end;
1390382   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1390383   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1390384   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1390385   +   end;
MPRINT(EM_DIAGRAM):   end;
1390386   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390387   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1390388   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1390389   +   end;
MPRINT(EM_DIAGRAM):   end;
1390390   +end;
MPRINT(EM_DIAGRAM):   end;
1390391   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1390392   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1390393   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 +
-3.46108195946376 * H13 ;
1390394   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1390395   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1390396   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1390397   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1390398   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1390399   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1390400   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1390401   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1390402   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1390403   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1390404   +END;
MPRINT(EM_DIAGRAM):   END;
1390405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1390406   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1390407   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1390408   +END;
MPRINT(EM_DIAGRAM):   END;
1390409   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1390410   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1390411   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1390412   +END;
MPRINT(EM_DIAGRAM):   END;
1390413   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1390414   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1390415   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1390416   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1390417   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1390418   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1390419   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1390420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390421   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1390422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390423   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1390424   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1390425   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1390426   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1390427   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1390428   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1390429   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1390430   +END;
MPRINT(EM_DIAGRAM):   END;
1390431   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1390432   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1390433   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1390434   +drop
1390435   +H11
1390436   +H12
1390437   +H13
1390438   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1390439   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1390440   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1390441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390442   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1390443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390444   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1390445   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1390446   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1390447   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1390448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390449   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1390450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390451   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1390452   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1390453   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1390454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390455   +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
1390456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390458   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1390459   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1390460   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1390461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1390462   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1390463   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1390464   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1390465   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1390466   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1390467   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1390468   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1390469   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1390470   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1390471   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1390472   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1390473   +LENGTH _WARN_ $4
1390474   +      F_DepVar  $ 12
1390475   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1390476   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1390477   +
1390478   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1390479   +
1390480   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1390481   +
1390482   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1390483   +
1390484   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1390485   +
1390486   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1390487   +
1390488   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1390489   +
1390490   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1390491   +
1390492   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1390493   +
1390494   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1390495   +
1390496   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1390497   +
1390498   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1390499   +
1390500   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1390501   +
1390502   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1390503   +
1390504   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1390505   +
1390506   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1390507   +
1390508   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1390509   +
1390510   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1390511   +
1390512   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1390513   +
1390514   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1390515   +
1390516   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1390517   +
1390518   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1390519   +
1390520   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1390521   +
1390522   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1390523   +
1390524   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1390525   +
1390526   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1390527   +
1390528   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1390529   +
1390530   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1390531   +
1390532   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1390533   +
1390534   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1390535   +
1390536   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1390537   +
1390538   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1390539   +
1390540   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1390541   +
1390542   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1390543   +
1390544   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1390545   +
1390546   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1390547   +
1390548   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1390549   +
1390550   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1390551   +
1390552   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1390553   +
1390554   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1390555   +
1390556   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1390557   +
1390558   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1390559   +
1390560   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1390561   +
1390562   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1390563   +
1390564   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1390565   +
1390566   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1390567   +
1390568   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1390569   +
1390570   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1390571   +
1390572   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1390573   +
1390574   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1390575   +
1390576   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1390577   +
1390578   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1390579   +
1390580   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1390581   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1390582   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1390583   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1390584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390586   +end;
MPRINT(EM_DIAGRAM):   end;
1390587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390589   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1390590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390591   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1390592   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1390593   +   end;
MPRINT(EM_DIAGRAM):   end;
1390594   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1390595   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1390596   +   end;
MPRINT(EM_DIAGRAM):   end;
1390597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390598   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1390599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390601   +   end;
MPRINT(EM_DIAGRAM):   end;
1390602   +end;
MPRINT(EM_DIAGRAM):   end;
1390603   +
1390604   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1390605   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1390606   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1390607   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1390608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390610   +end;
MPRINT(EM_DIAGRAM):   end;
1390611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390613   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1390614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1390616   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1390617   +   end;
MPRINT(EM_DIAGRAM):   end;
1390618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1390619   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1390620   +   end;
MPRINT(EM_DIAGRAM):   end;
1390621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390622   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1390623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390625   +   end;
MPRINT(EM_DIAGRAM):   end;
1390626   +end;
MPRINT(EM_DIAGRAM):   end;
1390627   +
1390628   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1390629   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1390630   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1390631   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1390632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390634   +end;
MPRINT(EM_DIAGRAM):   end;
1390635   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390637   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1390638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390639   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1390640   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1390641   +   end;
MPRINT(EM_DIAGRAM):   end;
1390642   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1390643   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1390644   +   end;
MPRINT(EM_DIAGRAM):   end;
1390645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390646   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1390647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390649   +   end;
MPRINT(EM_DIAGRAM):   end;
1390650   +end;
MPRINT(EM_DIAGRAM):   end;
1390651   +
1390652   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1390653   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1390654   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1390655   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1390656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390658   +end;
MPRINT(EM_DIAGRAM):   end;
1390659   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390661   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1390662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390663   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1390664   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1390665   +   end;
MPRINT(EM_DIAGRAM):   end;
1390666   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1390667   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1390668   +   end;
MPRINT(EM_DIAGRAM):   end;
1390669   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390670   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1390671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390673   +   end;
MPRINT(EM_DIAGRAM):   end;
1390674   +end;
MPRINT(EM_DIAGRAM):   end;
1390675   +
1390676   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1390677   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1390678   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1390679   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1390680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390682   +end;
MPRINT(EM_DIAGRAM):   end;
1390683   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390685   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1390686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390687   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1390688   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1390689   +   end;
MPRINT(EM_DIAGRAM):   end;
1390690   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1390691   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1390692   +   end;
MPRINT(EM_DIAGRAM):   end;
1390693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390694   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1390695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390697   +   end;
MPRINT(EM_DIAGRAM):   end;
1390698   +end;
MPRINT(EM_DIAGRAM):   end;
1390699   +
1390700   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1390701   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1390702   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1390703   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1390704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390706   +end;
MPRINT(EM_DIAGRAM):   end;
1390707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390709   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1390710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390711   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1390712   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1390713   +   end;
MPRINT(EM_DIAGRAM):   end;
1390714   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1390715   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1390716   +   end;
MPRINT(EM_DIAGRAM):   end;
1390717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390718   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1390719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390721   +   end;
MPRINT(EM_DIAGRAM):   end;
1390722   +end;
MPRINT(EM_DIAGRAM):   end;
1390723   +
1390724   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1390725   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1390726   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1390727   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1390728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390730   +end;
MPRINT(EM_DIAGRAM):   end;
1390731   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1390733   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1390734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390735   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1390736   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1390737   +   end;
MPRINT(EM_DIAGRAM):   end;
1390738   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1390739   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1390740   +   end;
MPRINT(EM_DIAGRAM):   end;
1390741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390742   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1390743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390745   +   end;
MPRINT(EM_DIAGRAM):   end;
1390746   +end;
MPRINT(EM_DIAGRAM):   end;
1390747   +
1390748   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1390749   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1390750   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1390751   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1390752   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1390753   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1390754   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1390755   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1390756   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1390757   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1390758   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1390759   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1390760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390762   +end;
MPRINT(EM_DIAGRAM):   end;
1390763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390764   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1390765   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1390766   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390767   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1390768   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1390769   +   end;
MPRINT(EM_DIAGRAM):   end;
1390770   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1390771   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1390772   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1390773   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1390774   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1390775   +   end;
MPRINT(EM_DIAGRAM):   end;
1390776   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1390777   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1390778   +   end;
MPRINT(EM_DIAGRAM):   end;
1390779   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1390780   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1390781   +   end;
MPRINT(EM_DIAGRAM):   end;
1390782   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1390783   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1390784   +   end;
MPRINT(EM_DIAGRAM):   end;
1390785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390786   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1390787   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1390788   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1390789   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1390790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390792   +   end;
MPRINT(EM_DIAGRAM):   end;
1390793   +end;
MPRINT(EM_DIAGRAM):   end;
1390794   +
1390795   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1390796   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1390797   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1390798   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1390799   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1390800   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1390801   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1390802   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1390803   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1390804   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1390805   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1390806   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1390807   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1390808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1390809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390810   +end;
MPRINT(EM_DIAGRAM):   end;
1390811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1390812   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1390813   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1390814   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1390815   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1390816   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1390817   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1390818   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1390819   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1390820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390821   +         end;
MPRINT(EM_DIAGRAM):   end;
1390822   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1390823   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1390824   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1390825   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390826   +            end;
MPRINT(EM_DIAGRAM):   end;
1390827   +         end;
MPRINT(EM_DIAGRAM):   end;
1390828   +      end;
MPRINT(EM_DIAGRAM):   end;
1390829   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1390830   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1390831   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1390832   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390833   +         end;
MPRINT(EM_DIAGRAM):   end;
1390834   +      end;
MPRINT(EM_DIAGRAM):   end;
1390835   +   end;
MPRINT(EM_DIAGRAM):   end;
1390836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1390837   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1390838   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1390839   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390840   +      end;
MPRINT(EM_DIAGRAM):   end;
1390841   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1390842   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1390843   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1390844   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1390845   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1390846   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1390847   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1390848   +         end;
MPRINT(EM_DIAGRAM):   end;
1390849   +      end;
MPRINT(EM_DIAGRAM):   end;
1390850   +   end;
MPRINT(EM_DIAGRAM):   end;
1390851   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1390852   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1390853   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1390854   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1390855   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1390856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1390857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390858   +   end;
MPRINT(EM_DIAGRAM):   end;
1390859   +end;
MPRINT(EM_DIAGRAM):   end;
1390860   +
1390861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390862   +*** Checking missing input Interval
1390863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1390864   +
1390865   +IF NMISS(
1390866   +   AcceptedCmpTotal ,
1390867   +   Age ,
1390868   +   Frq ,
1390869   +   Income ,
1390870   +   Kidhome ,
1390871   +   Mnt ,
1390872   +   MntFishProducts ,
1390873   +   MntFruits ,
1390874   +   MntGoldProds ,
1390875   +   MntMeatProducts ,
1390876   +   MntSweetProducts ,
1390877   +   MntWines ,
1390878   +   MonthsAsCustomer ,
1390879   +   NumCatalogPurchases ,
1390880   +   NumDealsPurchases ,
1390881   +   NumDistPurchases ,
1390882   +   NumStorePurchases ,
1390883   +   NumWebPurchases ,
1390884   +   NumWebVisitsMonth ,
1390885   +   RFMstat ,
1390886   +   RMntFrq ,
1390887   +   Recency ,
1390888   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1390889   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1390890   +
1390891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1390892   +END;
MPRINT(EM_DIAGRAM):   END;
1390893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390894   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1390895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390896   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1390897   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1390898   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1390899   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1390900   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1390901   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1390902   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1390903   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1390904   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1390905   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1390906   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1390907   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1390908   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1390909   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1390910   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1390911   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1390912   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1390913   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1390914   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1390915   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1390916   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1390917   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1390918   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1390919   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1390920   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1390921   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1390922   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1390923   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1390924   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1390925   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1390926   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1390927   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1390928   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1390929   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1390930   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1390931   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1390932   +END;
MPRINT(EM_DIAGRAM):   END;
1390933   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1390934   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1390935   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1390936   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1390937   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1390938   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1390939   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1390940   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1390941   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1390942   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1390943   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1390944   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1390945   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1390946   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1390947   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1390948   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1390949   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1390950   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1390951   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1390952   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1390953   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1390954   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1390955   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1390956   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1390957   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1390958   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1390959   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1390960   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1390961   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1390962   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1390963   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1390964   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1390965   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1390966   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1390967   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1390968   +   ELSE S_NumCatalogPurchases
1390969   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1390970   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1390971   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1390972   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1390973   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1390974   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1390975   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1390976   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1390977   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1390978   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1390979   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1390980   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1390981   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1390982   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1390983   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1390984   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1390985   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1390986   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1390987   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1390988   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1390989   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1390990   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1390991   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1390992   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1390993   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1390994   +END;
MPRINT(EM_DIAGRAM):   END;
1390995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390996   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1390997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1390999   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1391000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391002   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1391003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391004   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1391005   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1391006   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1391007   +        S_Income  +     -0.0761121347886 * S_Kidhome
1391008   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1391009   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1391010   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1391011   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1391012   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1391013   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1391014   +          +     0.83893684194413 * S_NumDealsPurchases
1391015   +          +     0.23391006875291 * S_NumDistPurchases
1391016   +          +    -0.63370705462074 * S_NumStorePurchases
1391017   +          +     -0.9137408014067 * S_NumWebPurchases
1391018   +          +     0.89109351479441 * S_NumWebVisitsMonth
1391019   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1391020   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1391021   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age +
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome +
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 *
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts +
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 *
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 *
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 *
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 *
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq +
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1391022   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1391023   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1391024   +        S_Income  +    -0.43909782819329 * S_Kidhome
1391025   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1391026   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1391027   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1391028   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1391029   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1391030   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1391031   +          +      0.2218973353638 * S_NumDealsPurchases
1391032   +          +      0.0062360950528 * S_NumDistPurchases
1391033   +          +    -0.57621747951002 * S_NumStorePurchases
1391034   +          +    -0.33564890905657 * S_NumWebPurchases
1391035   +          +     0.82482365540301 * S_NumWebVisitsMonth
1391036   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1391037   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1391038   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age +
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome +
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 *
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts +
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 *
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 *
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 *
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 *
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq +
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1391039   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1391040   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1391041   +        S_Income  +    -0.03572236011846 * S_Kidhome
1391042   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1391043   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1391044   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1391045   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1391046   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1391047   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1391048   +          +      -0.174147250062 * S_NumDealsPurchases
1391049   +          +    -0.22921682388864 * S_NumDistPurchases
1391050   +          +     0.41526854684299 * S_NumStorePurchases
1391051   +          +    -0.27675565493519 * S_NumWebPurchases
1391052   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1391053   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1391054   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1391055   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome +
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 *
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts +
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 *
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 *
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 *
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 *
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq +
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1391056   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1391057   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1391058   +        S_Income  +    -0.04788369327547 * S_Kidhome
1391059   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1391060   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1391061   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1391062   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1391063   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1391064   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1391065   +          +    -0.46022430102423 * S_NumDealsPurchases
1391066   +          +     0.15831339342044 * S_NumDistPurchases
1391067   +          +     0.22480465173719 * S_NumStorePurchases
1391068   +          +     0.44798923484609 * S_NumWebPurchases
1391069   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1391070   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1391071   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1391072   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age +
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome +
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 *
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts +
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 *
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 *
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 *
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 *
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq +
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1391073   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1391074   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1391075   +        S_Income  +     0.53994304261534 * S_Kidhome
1391076   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1391077   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1391078   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1391079   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1391080   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1391081   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1391082   +          +     0.03650267472167 * S_NumDealsPurchases
1391083   +          +    -0.03322709524939 * S_NumDistPurchases
1391084   +          +     -0.0022226424472 * S_NumStorePurchases
1391085   +          +    -0.10131236740674 * S_NumWebPurchases
1391086   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1391087   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1391088   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1391089   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome +
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 *
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts +
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 *
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 *
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 *
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 *
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq +
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1391090   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1391091   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1391092   +        S_Income  +    -0.52576099429582 * S_Kidhome
1391093   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1391094   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1391095   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1391096   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1391097   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1391098   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1391099   +          +    -0.50209914729324 * S_NumDealsPurchases
1391100   +          +    -0.46217244513696 * S_NumDistPurchases
1391101   +          +      0.1832648560248 * S_NumStorePurchases
1391102   +          +     0.02866153257072 * S_NumWebPurchases
1391103   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1391104   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1391105   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1391106   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age +
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome +
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 *
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts +
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 *
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 *
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 *
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 *
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq +
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1391107   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1391108   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1391109   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1391110   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1391111   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 *
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 +
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 *
HigherEducationBinary0 ;
1391112   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1391113   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1391114   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1391115   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1391116   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 *
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 +
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 *
HigherEducationBinary0 ;
1391117   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1391118   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1391119   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1391120   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1391121   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 *
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 +
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 *
HigherEducationBinary0 ;
1391122   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1391123   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1391124   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1391125   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1391126   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 *
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 +
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 *
HigherEducationBinary0 ;
1391127   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1391128   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1391129   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1391130   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1391131   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 *
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 +
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 *
HigherEducationBinary0 ;
1391132   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1391133   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1391134   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1391135   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1391136   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 *
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 +
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 *
HigherEducationBinary0 ;
1391137   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1391138   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1391139   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1391140   +          +     0.13815069071511 * Marital_StatusDivorced
1391141   +          +      0.0732913060929 * Marital_StatusMarried
1391142   +          +    -0.22858418468746 * Marital_StatusSingle
1391143   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 *
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster +
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried +
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1391144   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1391145   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1391146   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1391147   +          +     0.32909808396509 * Marital_StatusDivorced
1391148   +          +    -0.50160173579004 * Marital_StatusMarried
1391149   +          +     0.57207102211224 * Marital_StatusSingle
1391150   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 *
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried +
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1391151   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1391152   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1391153   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1391154   +          +    -0.07154493730107 * Marital_StatusDivorced
1391155   +          +     0.29126100051603 * Marital_StatusMarried
1391156   +          +    -0.06936325857004 * Marital_StatusSingle
1391157   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 *
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried +
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1391158   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1391159   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1391160   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1391161   +          +    -0.05004640872388 * Marital_StatusDivorced
1391162   +          +     0.22197974032974 * Marital_StatusMarried
1391163   +          +    -0.33931504637453 * Marital_StatusSingle
1391164   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 *
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster +
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried +
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1391165   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1391166   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1391167   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1391168   +          +    -0.07748874669478 * Marital_StatusDivorced
1391169   +          +     1.05442281159109 * Marital_StatusMarried
1391170   +          +    -0.67190984038867 * Marital_StatusSingle
1391171   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 *
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster +
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried +
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1391172   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1391173   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1391174   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1391175   +          +    -0.20478208715114 * Marital_StatusDivorced
1391176   +          +    -0.40186383707642 * Marital_StatusMarried
1391177   +          +     0.43474841662774 * Marital_StatusSingle
1391178   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 *
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried +
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1391179   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1391180   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1391181   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1391182   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1391183   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1391184   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1391185   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1391186   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1391187   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1391188   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1391189   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1391190   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1391191   +END;
MPRINT(EM_DIAGRAM):   END;
1391192   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1391193   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1391194   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1391195   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1391196   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1391197   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1391198   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1391199   +END;
MPRINT(EM_DIAGRAM):   END;
1391200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391201   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1391202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391203   +
1391204   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1391205   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1391206   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1391207   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1391208   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1391209   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391210   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1391211   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1391212   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1391213   +end;
MPRINT(EM_DIAGRAM):   end;
1391214   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391215   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1391216   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1391217   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1391218   +   end;
MPRINT(EM_DIAGRAM):   end;
1391219   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1391220   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1391221   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1391222   +   end;
MPRINT(EM_DIAGRAM):   end;
1391223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391224   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1391225   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1391226   +   end;
MPRINT(EM_DIAGRAM):   end;
1391227   +end;
MPRINT(EM_DIAGRAM):   end;
1391228   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1391229   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1391230   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1391231   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 +
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 +
-2.02736184847322 * H16 ;
1391232   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1391233   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1391234   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1391235   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1391236   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1391237   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1391238   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1391239   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1391240   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1391241   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1391242   +END;
MPRINT(EM_DIAGRAM):   END;
1391243   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1391244   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1391245   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1391246   +END;
MPRINT(EM_DIAGRAM):   END;
1391247   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1391248   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1391249   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1391250   +END;
MPRINT(EM_DIAGRAM):   END;
1391251   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1391252   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1391253   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1391254   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1391255   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1391256   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1391257   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1391258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391259   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1391260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391261   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1391262   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1391263   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1391264   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1391265   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1391266   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1391267   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1391268   +END;
MPRINT(EM_DIAGRAM):   END;
1391269   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1391270   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1391271   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1391272   +drop
1391273   +H11
1391274   +H12
1391275   +H13
1391276   +H14
1391277   +H15
1391278   +H16
1391279   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1391280   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1391281   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1391282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391283   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1391284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391285   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1391286   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1391287   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1391288   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1391289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391290   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1391291   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391292   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1391293   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1391294   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1391295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391296   +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
1391297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391299   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1391300   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1391301   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1391302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1391303   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1391304   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1391305   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1391306   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1391307   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1391308   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1391309   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1391310   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1391311   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1391312   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1391313   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1391314   +LENGTH _WARN_ $4
1391315   +      F_DepVar  $ 12
1391316   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1391317   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1391318   +
1391319   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1391320   +
1391321   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1391322   +
1391323   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1391324   +
1391325   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1391326   +
1391327   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1391328   +
1391329   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1391330   +
1391331   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1391332   +
1391333   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1391334   +
1391335   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1391336   +
1391337   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1391338   +
1391339   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1391340   +
1391341   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1391342   +
1391343   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1391344   +
1391345   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1391346   +
1391347   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1391348   +
1391349   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1391350   +
1391351   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1391352   +
1391353   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1391354   +
1391355   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1391356   +
1391357   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1391358   +
1391359   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1391360   +
1391361   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1391362   +
1391363   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1391364   +
1391365   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1391366   +
1391367   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1391368   +
1391369   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1391370   +
1391371   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1391372   +
1391373   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1391374   +
1391375   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1391376   +
1391377   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1391378   +
1391379   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1391380   +
1391381   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1391382   +
1391383   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1391384   +
1391385   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1391386   +
1391387   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1391388   +
1391389   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1391390   +
1391391   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1391392   +
1391393   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1391394   +
1391395   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1391396   +
1391397   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1391398   +
1391399   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1391400   +
1391401   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1391402   +
1391403   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1391404   +
1391405   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1391406   +
1391407   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1391408   +
1391409   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1391410   +
1391411   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1391412   +
1391413   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1391414   +
1391415   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1391416   +
1391417   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1391418   +
1391419   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1391420   +
1391421   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1391422   +
1391423   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1391424   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1391425   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1391426   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1391427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391429   +end;
MPRINT(EM_DIAGRAM):   end;
1391430   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391432   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1391433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391434   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1391435   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1391436   +   end;
MPRINT(EM_DIAGRAM):   end;
1391437   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1391438   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1391439   +   end;
MPRINT(EM_DIAGRAM):   end;
1391440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391441   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1391442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391444   +   end;
MPRINT(EM_DIAGRAM):   end;
1391445   +end;
MPRINT(EM_DIAGRAM):   end;
1391446   +
1391447   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1391448   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1391449   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1391450   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1391451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391453   +end;
MPRINT(EM_DIAGRAM):   end;
1391454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391456   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1391457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1391459   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1391460   +   end;
MPRINT(EM_DIAGRAM):   end;
1391461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1391462   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1391463   +   end;
MPRINT(EM_DIAGRAM):   end;
1391464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391465   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1391466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391468   +   end;
MPRINT(EM_DIAGRAM):   end;
1391469   +end;
MPRINT(EM_DIAGRAM):   end;
1391470   +
1391471   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1391472   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1391473   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1391474   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1391475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391477   +end;
MPRINT(EM_DIAGRAM):   end;
1391478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391480   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1391481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391482   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1391483   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1391484   +   end;
MPRINT(EM_DIAGRAM):   end;
1391485   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1391486   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1391487   +   end;
MPRINT(EM_DIAGRAM):   end;
1391488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391489   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1391490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391492   +   end;
MPRINT(EM_DIAGRAM):   end;
1391493   +end;
MPRINT(EM_DIAGRAM):   end;
1391494   +
1391495   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1391496   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1391497   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1391498   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1391499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391501   +end;
MPRINT(EM_DIAGRAM):   end;
1391502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391504   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1391505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1391507   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1391508   +   end;
MPRINT(EM_DIAGRAM):   end;
1391509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1391510   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1391511   +   end;
MPRINT(EM_DIAGRAM):   end;
1391512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391513   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1391514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391516   +   end;
MPRINT(EM_DIAGRAM):   end;
1391517   +end;
MPRINT(EM_DIAGRAM):   end;
1391518   +
1391519   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1391520   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1391521   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1391522   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1391523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391525   +end;
MPRINT(EM_DIAGRAM):   end;
1391526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391528   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1391529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1391531   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1391532   +   end;
MPRINT(EM_DIAGRAM):   end;
1391533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1391534   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1391535   +   end;
MPRINT(EM_DIAGRAM):   end;
1391536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391537   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1391538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391540   +   end;
MPRINT(EM_DIAGRAM):   end;
1391541   +end;
MPRINT(EM_DIAGRAM):   end;
1391542   +
1391543   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1391544   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1391545   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1391546   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1391547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391549   +end;
MPRINT(EM_DIAGRAM):   end;
1391550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391552   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1391553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1391555   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1391556   +   end;
MPRINT(EM_DIAGRAM):   end;
1391557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1391558   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1391559   +   end;
MPRINT(EM_DIAGRAM):   end;
1391560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391561   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1391562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391564   +   end;
MPRINT(EM_DIAGRAM):   end;
1391565   +end;
MPRINT(EM_DIAGRAM):   end;
1391566   +
1391567   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1391568   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1391569   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1391570   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1391571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391573   +end;
MPRINT(EM_DIAGRAM):   end;
1391574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1391576   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1391577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391578   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1391579   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1391580   +   end;
MPRINT(EM_DIAGRAM):   end;
1391581   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1391582   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1391583   +   end;
MPRINT(EM_DIAGRAM):   end;
1391584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391585   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1391586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391588   +   end;
MPRINT(EM_DIAGRAM):   end;
1391589   +end;
MPRINT(EM_DIAGRAM):   end;
1391590   +
1391591   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1391592   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1391593   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1391594   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1391595   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1391596   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1391597   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1391598   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1391599   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1391600   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1391601   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1391602   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1391603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391605   +end;
MPRINT(EM_DIAGRAM):   end;
1391606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391607   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1391608   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1391609   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391610   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1391611   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1391612   +   end;
MPRINT(EM_DIAGRAM):   end;
1391613   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1391614   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1391615   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1391616   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1391617   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1391618   +   end;
MPRINT(EM_DIAGRAM):   end;
1391619   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1391620   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1391621   +   end;
MPRINT(EM_DIAGRAM):   end;
1391622   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1391623   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1391624   +   end;
MPRINT(EM_DIAGRAM):   end;
1391625   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1391626   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1391627   +   end;
MPRINT(EM_DIAGRAM):   end;
1391628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391629   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1391630   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1391631   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1391632   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1391633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391635   +   end;
MPRINT(EM_DIAGRAM):   end;
1391636   +end;
MPRINT(EM_DIAGRAM):   end;
1391637   +
1391638   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1391639   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1391640   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1391641   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1391642   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1391643   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1391644   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1391645   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1391646   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1391647   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1391648   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1391649   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1391650   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1391651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1391652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391653   +end;
MPRINT(EM_DIAGRAM):   end;
1391654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1391655   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1391656   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1391657   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1391658   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1391659   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1391660   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1391661   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1391662   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1391663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1391664   +         end;
MPRINT(EM_DIAGRAM):   end;
1391665   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1391666   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1391667   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1391668   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1391669   +            end;
MPRINT(EM_DIAGRAM):   end;
1391670   +         end;
MPRINT(EM_DIAGRAM):   end;
1391671   +      end;
MPRINT(EM_DIAGRAM):   end;
1391672   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1391673   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1391674   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1391675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1391676   +         end;
MPRINT(EM_DIAGRAM):   end;
1391677   +      end;
MPRINT(EM_DIAGRAM):   end;
1391678   +   end;
MPRINT(EM_DIAGRAM):   end;
1391679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1391680   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1391681   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1391682   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1391683   +      end;
MPRINT(EM_DIAGRAM):   end;
1391684   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1391685   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1391686   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1391687   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1391688   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1391689   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1391690   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1391691   +         end;
MPRINT(EM_DIAGRAM):   end;
1391692   +      end;
MPRINT(EM_DIAGRAM):   end;
1391693   +   end;
MPRINT(EM_DIAGRAM):   end;
1391694   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1391695   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1391696   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1391697   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1391698   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1391699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1391700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391701   +   end;
MPRINT(EM_DIAGRAM):   end;
1391702   +end;
MPRINT(EM_DIAGRAM):   end;
1391703   +
1391704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391705   +*** Checking missing input Interval
1391706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1391707   +
1391708   +IF NMISS(
1391709   +   AcceptedCmpTotal ,
1391710   +   Age ,
1391711   +   Frq ,
1391712   +   Income ,
1391713   +   Kidhome ,
1391714   +   Mnt ,
1391715   +   MntFishProducts ,
1391716   +   MntFruits ,
1391717   +   MntGoldProds ,
1391718   +   MntMeatProducts ,
1391719   +   MntSweetProducts ,
1391720   +   MntWines ,
1391721   +   MonthsAsCustomer ,
1391722   +   NumCatalogPurchases ,
1391723   +   NumDealsPurchases ,
1391724   +   NumDistPurchases ,
1391725   +   NumStorePurchases ,
1391726   +   NumWebPurchases ,
1391727   +   NumWebVisitsMonth ,
1391728   +   RFMstat ,
1391729   +   RMntFrq ,
1391730   +   Recency ,
1391731   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1391732   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1391733   +
1391734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1391735   +END;
MPRINT(EM_DIAGRAM):   END;
1391736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391737   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1391738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391739   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1391740   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1391741   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1391742   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1391743   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1391744   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1391745   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1391746   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1391747   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1391748   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1391749   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1391750   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1391751   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1391752   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1391753   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1391754   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1391755   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1391756   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1391757   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1391758   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1391759   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1391760   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1391761   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1391762   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1391763   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1391764   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1391765   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1391766   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1391767   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1391768   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1391769   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1391770   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1391771   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1391772   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1391773   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1391774   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1391775   +END;
MPRINT(EM_DIAGRAM):   END;
1391776   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1391777   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1391778   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1391779   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1391780   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1391781   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1391782   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1391783   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1391784   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1391785   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1391786   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1391787   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1391788   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1391789   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1391790   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1391791   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1391792   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1391793   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1391794   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1391795   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1391796   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1391797   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1391798   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1391799   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1391800   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1391801   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1391802   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1391803   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1391804   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1391805   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1391806   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1391807   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1391808   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1391809   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1391810   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1391811   +   ELSE S_NumCatalogPurchases
1391812   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1391813   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1391814   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1391815   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1391816   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1391817   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1391818   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1391819   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1391820   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1391821   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1391822   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1391823   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1391824   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1391825   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1391826   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1391827   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1391828   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1391829   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1391830   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1391831   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1391832   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1391833   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1391834   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1391835   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1391836   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1391837   +END;
MPRINT(EM_DIAGRAM):   END;
1391838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391839   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1391840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391842   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1391843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391845   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1391846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1391847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1391848   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1391849   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1391850   +        S_Income  +    -0.45967008908227 * S_Kidhome
1391851   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1391852   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1391853   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1391854   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1391855   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1391856   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1391857   +          +    -0.23353175442713 * S_NumDealsPurchases
1391858   +          +     0.18635522192442 * S_NumDistPurchases
1391859   +          +     0.37209457890956 * S_NumStorePurchases
1391860   +          +     0.25018232304823 * S_NumWebPurchases
1391861   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1391862   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1391863   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1391864   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome +
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 *
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts +
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 *
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 *
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 *
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 *
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq +
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1391865   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1391866   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1391867   +        S_Income  +     0.23329613045589 * S_Kidhome
1391868   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1391869   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1391870   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1391871   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1391872   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1391873   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1391874   +          +    -0.09699498622435 * S_NumDealsPurchases
1391875   +          +     0.40364070798795 * S_NumDistPurchases
1391876   +          +      0.2162579072164 * S_NumStorePurchases
1391877   +          +     0.26248410135079 * S_NumWebPurchases
1391878   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1391879   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1391880   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1391881   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome +
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 *
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts +
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 *
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 *
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 *
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 *
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq +
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1391882   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1391883   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1391884   +        S_Income  +     0.20139862021528 * S_Kidhome
1391885   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1391886   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1391887   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1391888   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1391889   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1391890   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1391891   +          +     0.09066191700879 * S_NumDealsPurchases
1391892   +          +    -0.05769000978222 * S_NumDistPurchases
1391893   +          +    -0.10089591692167 * S_NumStorePurchases
1391894   +          +    -0.00088654116561 * S_NumWebPurchases
1391895   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1391896   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1391897   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1391898   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome +
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 *
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts +
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 *
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 *
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 *
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 *
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq +
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1391899   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1391900   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1391901   +        S_Income  +      0.2502648333687 * S_Kidhome
1391902   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1391903   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1391904   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1391905   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1391906   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1391907   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1391908   +          +     0.83424444661619 * S_NumDealsPurchases
1391909   +          +     0.31333214543205 * S_NumDistPurchases
1391910   +          +    -0.61732647242019 * S_NumStorePurchases
1391911   +          +    -1.01955156895052 * S_NumWebPurchases
1391912   +          +     0.13017609997428 * S_NumWebVisitsMonth
1391913   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1391914   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1391915   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age +
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome +
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 *
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts +
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 *
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 *
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 *
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 *
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq +
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1391916   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1391917   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1391918   +        S_Income  +    -0.70952256145726 * S_Kidhome
1391919   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1391920   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1391921   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1391922   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1391923   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1391924   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1391925   +          +     0.63522682456102 * S_NumDealsPurchases
1391926   +          +      0.0043057429215 * S_NumDistPurchases
1391927   +          +    -0.76667751707574 * S_NumStorePurchases
1391928   +          +    -0.73436881033241 * S_NumWebPurchases
1391929   +          +     1.59331554601341 * S_NumWebVisitsMonth
1391930   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1391931   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1391932   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome +
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 *
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts +
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 *
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 *
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 *
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 *
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq +
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1391933   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1391934   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1391935   +        S_Income  +    -0.23632967504194 * S_Kidhome
1391936   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1391937   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1391938   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1391939   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1391940   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1391941   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1391942   +          +     -0.3032858959477 * S_NumDealsPurchases
1391943   +          +     0.11343979556999 * S_NumDistPurchases
1391944   +          +     0.19545021266061 * S_NumStorePurchases
1391945   +          +      0.1566777684546 * S_NumWebPurchases
1391946   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1391947   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1391948   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1391949   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome +
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 *
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts +
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 *
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 *
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 *
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 *
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq +
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1391950   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1391951   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1391952   +        S_Income  +    -0.47847362741737 * S_Kidhome
1391953   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1391954   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1391955   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1391956   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1391957   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1391958   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1391959   +          +    -0.17510289915098 * S_NumDealsPurchases
1391960   +          +     0.16952490494417 * S_NumDistPurchases
1391961   +          +     0.11152117614204 * S_NumStorePurchases
1391962   +          +     0.22594341376741 * S_NumWebPurchases
1391963   +          +     0.64523546369354 * S_NumWebVisitsMonth
1391964   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1391965   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1391966   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age +
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome +
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 *
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts +
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 *
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 *
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 *
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 *
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq +
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1391967   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1391968   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1391969   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1391970   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1391971   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 *
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 +
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 *
HigherEducationBinary0 ;
1391972   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1391973   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1391974   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1391975   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1391976   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 *
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 +
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 *
HigherEducationBinary0 ;
1391977   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1391978   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1391979   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1391980   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1391981   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 *
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 +
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 *
HigherEducationBinary0 ;
1391982   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1391983   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1391984   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1391985   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1391986   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 *
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 +
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 *
HigherEducationBinary0 ;
1391987   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1391988   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1391989   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1391990   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1391991   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 *
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 +
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 *
HigherEducationBinary0 ;
1391992   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1391993   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1391994   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1391995   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1391996   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 *
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 +
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 *
HigherEducationBinary0 ;
1391997   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1391998   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1391999   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1392000   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1392001   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 *
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 +
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 *
HigherEducationBinary0 ;
1392002   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1392003   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1392004   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1392005   +          +     0.42319965972117 * Marital_StatusDivorced
1392006   +          +    -0.45015157317991 * Marital_StatusMarried
1392007   +          +     0.43076106925345 * Marital_StatusSingle
1392008   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 *
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster +
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried +
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1392009   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1392010   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1392011   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1392012   +          +     0.11384347873072 * Marital_StatusDivorced
1392013   +          +     0.51442453272823 * Marital_StatusMarried
1392014   +          +    -0.38966058028661 * Marital_StatusSingle
1392015   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 *
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried +
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1392016   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1392017   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1392018   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1392019   +          +    -0.05213342781535 * Marital_StatusDivorced
1392020   +          +     0.07520352092928 * Marital_StatusMarried
1392021   +          +     0.20175107471623 * Marital_StatusSingle
1392022   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 *
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried +
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1392023   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1392024   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1392025   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1392026   +          +    -0.40635592200933 * Marital_StatusDivorced
1392027   +          +     0.64772941459031 * Marital_StatusMarried
1392028   +          +    -0.36402842056603 * Marital_StatusSingle
1392029   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 *
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried +
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1392030   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1392031   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1392032   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1392033   +          +     0.87932592764844 * Marital_StatusDivorced
1392034   +          +    -0.85946473083734 * Marital_StatusMarried
1392035   +          +     0.74505733668545 * Marital_StatusSingle
1392036   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 *
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried +
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1392037   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1392038   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1392039   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1392040   +          +    -0.11861748280641 * Marital_StatusDivorced
1392041   +          +    -0.15869097739395 * Marital_StatusMarried
1392042   +          +     0.34415019828259 * Marital_StatusSingle
1392043   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 *
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried +
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1392044   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1392045   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1392046   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1392047   +          +     0.14995740697816 * Marital_StatusDivorced
1392048   +          +    -1.01788822114068 * Marital_StatusMarried
1392049   +          +     0.70532758126153 * Marital_StatusSingle
1392050   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 *
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried +
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1392051   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1392052   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1392053   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1392054   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1392055   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1392056   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1392057   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1392058   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1392059   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1392060   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1392061   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1392062   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1392063   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1392064   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1392065   +END;
MPRINT(EM_DIAGRAM):   END;
1392066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1392067   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1392068   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1392069   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1392070   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1392071   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1392072   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1392073   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1392074   +END;
MPRINT(EM_DIAGRAM):   END;
1392075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1392076   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1392077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1392078   +
1392079   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1392080   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1392081   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1392082   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1392083   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1392084   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1392085   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1392086   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1392087   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1392088   +end;
MPRINT(EM_DIAGRAM):   end;
1392089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392090   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1392091   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1392092   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1392093   +   end;
MPRINT(EM_DIAGRAM):   end;
1392094   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1392095   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1392096   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1392097   +   end;
MPRINT(EM_DIAGRAM):   end;
1392098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1392099   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1392100   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1392101   +   end;
MPRINT(EM_DIAGRAM):   end;
1392102   +end;
MPRINT(EM_DIAGRAM):   end;
1392103   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1392104   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1392105   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1392106   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1392107   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 +
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 *
H16 + 2.13310046968058 * H17 ;
1392108   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1392109   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1392110   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1392111   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1392112   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1392113   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1392114   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1392115   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1392116   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1392117   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1392118   +END;
MPRINT(EM_DIAGRAM):   END;
1392119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1392120   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1392121   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1392122   +END;
MPRINT(EM_DIAGRAM):   END;
1392123   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1392124   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1392125   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1392126   +END;
MPRINT(EM_DIAGRAM):   END;
1392127   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1392128   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1392129   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1392130   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1392131   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1392132   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1392133   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1392134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1392135   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1392136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1392137   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1392138   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1392139   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1392140   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1392141   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1392142   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1392143   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1392144   +END;
MPRINT(EM_DIAGRAM):   END;
1392145   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1392146   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1392147   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1392148   +drop
1392149   +H11
1392150   +H12
1392151   +H13
1392152   +H14
1392153   +H15
1392154   +H16
1392155   +H17
1392156   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1392157   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1392158   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1392159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392160   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1392161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392162   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1392163   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1392164   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1392165   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1392166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392167   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1392168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392169   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1392170   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1392171   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1392172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392173   +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
1392174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392175   +P_DepVar1 = (
1392176   +Reg5_P_DepVar1 +
1392177   +Reg_P_DepVar1 +
1392178   +Neural4_P_DepVar1 +
1392179   +Neural2_P_DepVar1 +
1392180   +Neural3_P_DepVar1 +
1392181   +Neural9_P_DepVar1 +
1392182   +Neural10_P_DepVar1
1392183   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg5_P_DepVar1 + Reg_P_DepVar1 + Neural4_P_DepVar1 +
Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural9_P_DepVar1 + Neural10_P_DepVar1 )/7;
1392184   +P_DepVar0 = (
1392185   +Reg5_P_DepVar0 +
1392186   +Reg_P_DepVar0 +
1392187   +Neural4_P_DepVar0 +
1392188   +Neural2_P_DepVar0 +
1392189   +Neural3_P_DepVar0 +
1392190   +Neural9_P_DepVar0 +
1392191   +Neural10_P_DepVar0
1392192   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg5_P_DepVar0 + Reg_P_DepVar0 + Neural4_P_DepVar0 +
Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural9_P_DepVar0 + Neural10_P_DepVar0 )/7;
1392193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392194   +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
1392195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392196   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1392197   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1392198   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1392199   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1392200   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1392201   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1392202   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1392203   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1392204   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1392205   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1392206   +end;
MPRINT(EM_DIAGRAM):   end;
1392207   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1392208   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1392209   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1392210   +end;
MPRINT(EM_DIAGRAM):   end;
1392211   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1392212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392213   +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
1392214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392215   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1392216   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1392217   +else
1392218   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1392219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392220   +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
1392221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392222   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1392223   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1392224   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1392225   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1392226   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1392227   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1392228   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1392229   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1392230   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1392231   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1392232   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1392233   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1392234   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1392235   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1392236   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1392237   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1392238   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1392239   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1392240   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1392241   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1392242   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1392243   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1392244   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1392245   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1392246   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1392247   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1392248   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1392249   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1392249  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1392250   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1392250  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1392251   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1392251  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1392252   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1392252  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1392253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392254   +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
1392255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392256   +if
1392257   +F_DepVar NE '1'
1392258   +AND F_DepVar NE '0'
1392259   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1392260   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1392261   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1392262   +end;
MPRINT(EM_DIAGRAM):   end;
1392263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392264   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1392265   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1392266   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1392267   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1392268   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1392269   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1392270   +END;
MPRINT(EM_DIAGRAM):   END;
1392271   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1392272    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1392273    quit;
1392274    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1392275    filename emflow
1392275  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392276    *------------------------------------------------------------*;
1392277    * Ensmbl14: Scoring REG5_VALIDATE data;
1392278    *------------------------------------------------------------*;
1392279    data EMWS8.Ensmbl14_VALIDATE
1392280    / view=EMWS8.Ensmbl14_VALIDATE
1392281    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_VALIDATE / view=EMWS8.Ensmbl14_VALIDATE ;
1392282    set EMWS8.Reg5_VALIDATE
1392283    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1392284    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
1392285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392286   +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
1392287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392288   +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
1392289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392291   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1392292   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1392293   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1392294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392296   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1392297   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1392298   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1392299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392301   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1392302   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1392303   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1392304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392306   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1392307   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1392308   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1392309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392310   +
1392311   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1392312   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1392312  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1392313   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1392314   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1392315   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1392316   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1392317   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1392318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392319   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1392320   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1392321   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1392322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392324   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1392325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392326   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1392327   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1392328   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1392329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392330   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1392331   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1392332   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1392333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392335   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1392336   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1392337   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1392338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392340   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1392341   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1392342   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1392343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392344   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392345   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1392346   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392347   +
1392348   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1392349   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1392350   +
1392351   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1392352   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1392353   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1392354   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1392355   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1392356   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1392357   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1392358   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1392359   +
1392360   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1392361   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1392362   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1392363   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1392364   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1392365   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1392366   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1392367   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1392368   +end;
MPRINT(EM_DIAGRAM):   end;
1392369   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392370   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1392371   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1392372   +   end;
MPRINT(EM_DIAGRAM):   end;
1392373   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1392374   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1392375   +   end;
MPRINT(EM_DIAGRAM):   end;
1392376   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1392377   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1392378   +   end;
MPRINT(EM_DIAGRAM):   end;
1392379   +end;
MPRINT(EM_DIAGRAM):   end;
1392380   +
1392381   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1392382   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1392383   +
1392384   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1392385   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1392386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392388   +end;
MPRINT(EM_DIAGRAM):   end;
1392389   +
1392390   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1392391   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1392392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392394   +end;
MPRINT(EM_DIAGRAM):   end;
1392395   +
1392396   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1392397   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1392398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392400   +end;
MPRINT(EM_DIAGRAM):   end;
1392401   +
1392402   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1392403   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1392404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392406   +end;
MPRINT(EM_DIAGRAM):   end;
1392407   +
1392408   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1392409   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1392410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392412   +end;
MPRINT(EM_DIAGRAM):   end;
1392413   +
1392414   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1392415   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1392416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392418   +end;
MPRINT(EM_DIAGRAM):   end;
1392419   +
1392420   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1392421   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1392422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392424   +end;
MPRINT(EM_DIAGRAM):   end;
1392425   +
1392426   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1392427   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1392428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392430   +end;
MPRINT(EM_DIAGRAM):   end;
1392431   +
1392432   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1392433   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1392434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392436   +end;
MPRINT(EM_DIAGRAM):   end;
1392437   +
1392438   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1392439   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1392440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392442   +end;
MPRINT(EM_DIAGRAM):   end;
1392443   +
1392444   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1392445   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1392446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392448   +end;
MPRINT(EM_DIAGRAM):   end;
1392449   +
1392450   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1392451   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1392452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392454   +end;
MPRINT(EM_DIAGRAM):   end;
1392455   +
1392456   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1392457   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1392458   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1392459   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1392460   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1392461   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1392462   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1392463   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1392464   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1392465   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1392466   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1392467   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1392468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392470   +end;
MPRINT(EM_DIAGRAM):   end;
1392471   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392472   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1392473   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1392474   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1392475   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1392476   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1392477   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1392478   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1392479   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1392480   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392481   +         end;
MPRINT(EM_DIAGRAM):   end;
1392482   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1392483   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1392484   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1392485   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392486   +            end;
MPRINT(EM_DIAGRAM):   end;
1392487   +         end;
MPRINT(EM_DIAGRAM):   end;
1392488   +      end;
MPRINT(EM_DIAGRAM):   end;
1392489   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1392490   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1392491   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1392492   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392493   +         end;
MPRINT(EM_DIAGRAM):   end;
1392494   +      end;
MPRINT(EM_DIAGRAM):   end;
1392495   +   end;
MPRINT(EM_DIAGRAM):   end;
1392496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1392497   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1392498   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1392499   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392500   +      end;
MPRINT(EM_DIAGRAM):   end;
1392501   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1392502   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1392503   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1392504   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1392505   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1392506   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1392507   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392508   +         end;
MPRINT(EM_DIAGRAM):   end;
1392509   +      end;
MPRINT(EM_DIAGRAM):   end;
1392510   +   end;
MPRINT(EM_DIAGRAM):   end;
1392511   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1392512   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1392513   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1392514   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1392515   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1392516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1392517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392518   +   end;
MPRINT(EM_DIAGRAM):   end;
1392519   +end;
MPRINT(EM_DIAGRAM):   end;
1392520   +
1392521   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1392522   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1392523   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1392524   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1392525   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1392526   +end;
MPRINT(EM_DIAGRAM):   end;
1392527   +
1392528   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1392529   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1392530   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1392531   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1392532   +
1392533   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1392534   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1392535   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1392536   +
1392537   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1392538   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1392539   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1392540   +
1392541   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1392542   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1392543   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1392544   +
1392545   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1392546   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1392547   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1392548   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1392549   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1392550   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1392551   +
1392552   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1392553   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1392554   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1392555   +
1392556   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1392557   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1392558   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1392559   +
1392560   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1392561   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1392562   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1392563   +
1392564   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1392565   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1392566   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1392567   +
1392568   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1392569   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1392570   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1392571   +
1392572   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1392573   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1392574   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1392575   +
1392576   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1392577   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1392578   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1392579   +
1392580   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1392581   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1392582   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1392583   +
1392584   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1392585   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1392586   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1392587   +
1392588   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1392589   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1392590   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1392591   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1392592   +
1392593   +REG5DR1:
1392594   +
1392595   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1392596   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1392597   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1392598   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1392599   +end;
MPRINT(EM_DIAGRAM):   end;
1392600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392601   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1392602   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1392603   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1392604   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1392605   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1392606   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1392607   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1392608   +   end;
MPRINT(EM_DIAGRAM):   end;
1392609   +end;
MPRINT(EM_DIAGRAM):   end;
1392610   +
1392611   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1392612   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1392613   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1392614   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1392615   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1392616   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1392617   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1392618   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1392619   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1392620   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1392621   +end;
MPRINT(EM_DIAGRAM):   end;
1392622   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1392623   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1392624   +
1392625   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392626   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1392627   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392628   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1392629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392630   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1392631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392632   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1392633   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1392634   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1392635   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1392636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392637   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1392638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392639   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1392640   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1392641   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1392642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392643   +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
1392644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392646   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1392647   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1392648   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1392649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392650   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392651   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1392652   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392653   +
1392654   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1392655   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1392656   +
1392657   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1392658   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1392659   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1392660   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1392661   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1392662   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1392663   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1392664   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1392665   +
1392666   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1392667   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1392668   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1392669   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1392670   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1392671   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1392672   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1392673   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1392674   +end;
MPRINT(EM_DIAGRAM):   end;
1392675   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392676   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1392677   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1392678   +   end;
MPRINT(EM_DIAGRAM):   end;
1392679   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1392680   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1392681   +   end;
MPRINT(EM_DIAGRAM):   end;
1392682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1392683   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1392684   +   end;
MPRINT(EM_DIAGRAM):   end;
1392685   +end;
MPRINT(EM_DIAGRAM):   end;
1392686   +
1392687   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1392688   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1392689   +
1392690   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1392691   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1392692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392694   +end;
MPRINT(EM_DIAGRAM):   end;
1392695   +
1392696   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1392697   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1392698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392700   +end;
MPRINT(EM_DIAGRAM):   end;
1392701   +
1392702   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1392703   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1392704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392706   +end;
MPRINT(EM_DIAGRAM):   end;
1392707   +
1392708   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1392709   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1392710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392712   +end;
MPRINT(EM_DIAGRAM):   end;
1392713   +
1392714   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1392715   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1392716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392718   +end;
MPRINT(EM_DIAGRAM):   end;
1392719   +
1392720   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1392721   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1392722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392724   +end;
MPRINT(EM_DIAGRAM):   end;
1392725   +
1392726   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1392727   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1392728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392730   +end;
MPRINT(EM_DIAGRAM):   end;
1392731   +
1392732   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1392733   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1392734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392736   +end;
MPRINT(EM_DIAGRAM):   end;
1392737   +
1392738   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1392739   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1392740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392742   +end;
MPRINT(EM_DIAGRAM):   end;
1392743   +
1392744   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1392745   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1392746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392748   +end;
MPRINT(EM_DIAGRAM):   end;
1392749   +
1392750   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1392751   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1392752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392754   +end;
MPRINT(EM_DIAGRAM):   end;
1392755   +
1392756   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1392757   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1392758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392760   +end;
MPRINT(EM_DIAGRAM):   end;
1392761   +
1392762   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1392763   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1392764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392766   +end;
MPRINT(EM_DIAGRAM):   end;
1392767   +
1392768   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1392769   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1392770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1392771   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1392772   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1392773   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1392774   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1392775   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1392776   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1392777   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1392778   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1392779   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1392780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1392781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392782   +end;
MPRINT(EM_DIAGRAM):   end;
1392783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392784   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1392785   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1392786   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1392787   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1392788   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1392789   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1392790   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1392791   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1392792   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392793   +         end;
MPRINT(EM_DIAGRAM):   end;
1392794   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1392795   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1392796   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1392797   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392798   +            end;
MPRINT(EM_DIAGRAM):   end;
1392799   +         end;
MPRINT(EM_DIAGRAM):   end;
1392800   +      end;
MPRINT(EM_DIAGRAM):   end;
1392801   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1392802   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1392803   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1392804   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392805   +         end;
MPRINT(EM_DIAGRAM):   end;
1392806   +      end;
MPRINT(EM_DIAGRAM):   end;
1392807   +   end;
MPRINT(EM_DIAGRAM):   end;
1392808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1392809   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1392810   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1392811   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392812   +      end;
MPRINT(EM_DIAGRAM):   end;
1392813   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1392814   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1392815   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1392816   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1392817   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1392818   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1392819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1392820   +         end;
MPRINT(EM_DIAGRAM):   end;
1392821   +      end;
MPRINT(EM_DIAGRAM):   end;
1392822   +   end;
MPRINT(EM_DIAGRAM):   end;
1392823   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1392824   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1392825   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1392826   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1392827   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1392828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1392829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1392830   +   end;
MPRINT(EM_DIAGRAM):   end;
1392831   +end;
MPRINT(EM_DIAGRAM):   end;
1392832   +
1392833   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1392834   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1392835   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1392836   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1392837   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1392838   +end;
MPRINT(EM_DIAGRAM):   end;
1392839   +
1392840   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1392841   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1392842   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1392843   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1392844   +
1392845   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1392846   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1392847   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1392848   +
1392849   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1392850   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1392851   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1392852   +
1392853   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1392854   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1392855   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1392856   +
1392857   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1392858   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1392859   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1392860   +
1392861   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1392862   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1392863   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1392864   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1392865   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1392866   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1392867   +
1392868   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1392869   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1392870   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1392871   +
1392872   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1392873   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1392874   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1392875   +
1392876   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1392877   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1392878   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1392879   +
1392880   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1392881   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1392882   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1392883   +
1392884   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1392885   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1392886   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1392887   +
1392888   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1392889   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1392890   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1392891   +
1392892   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1392893   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1392894   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1392895   +
1392896   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1392897   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1392898   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1392899   +
1392900   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1392901   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1392902   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1392903   +
1392904   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1392905   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1392906   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1392907   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1392908   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1392909   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1392910   +end;
MPRINT(EM_DIAGRAM):   end;
1392911   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1392912   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1392913   +
1392914   +REGDR1:
1392915   +
1392916   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1392917   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1392918   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1392919   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1392920   +end;
MPRINT(EM_DIAGRAM):   end;
1392921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1392922   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1392923   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1392924   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1392925   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1392926   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1392927   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1392928   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1392929   +   end;
MPRINT(EM_DIAGRAM):   end;
1392930   +end;
MPRINT(EM_DIAGRAM):   end;
1392931   +
1392932   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1392933   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1392934   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1392935   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1392936   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1392937   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1392938   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1392939   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1392940   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1392941   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1392942   +end;
MPRINT(EM_DIAGRAM):   end;
1392943   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1392944   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1392945   +
1392946   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392947   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1392948   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1392949   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1392950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392951   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1392952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392953   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1392954   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1392955   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1392956   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1392957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392958   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1392959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392960   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1392961   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1392962   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1392963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392964   +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
1392965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392967   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1392968   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1392969   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1392970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1392971   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1392972   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1392973   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1392974   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1392975   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1392976   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1392977   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1392978   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1392979   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1392980   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1392981   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1392982   +LENGTH _WARN_ $4
1392983   +      F_DepVar  $ 12
1392984   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1392985   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1392986   +
1392987   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1392988   +
1392989   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1392990   +
1392991   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1392992   +
1392993   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1392994   +
1392995   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1392996   +
1392997   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1392998   +
1392999   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1393000   +
1393001   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1393002   +
1393003   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1393004   +
1393005   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1393006   +
1393007   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1393008   +
1393009   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1393010   +
1393011   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1393012   +
1393013   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1393014   +
1393015   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1393016   +
1393017   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1393018   +
1393019   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1393020   +
1393021   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1393022   +
1393023   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1393024   +
1393025   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1393026   +
1393027   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1393028   +
1393029   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1393030   +
1393031   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1393032   +
1393033   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1393034   +
1393035   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1393036   +
1393037   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1393038   +
1393039   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1393040   +
1393041   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1393042   +
1393043   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1393044   +
1393045   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1393046   +
1393047   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1393048   +
1393049   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1393050   +
1393051   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1393052   +
1393053   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1393054   +
1393055   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1393056   +
1393057   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1393058   +
1393059   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1393060   +
1393061   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1393062   +
1393063   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1393064   +
1393065   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1393066   +
1393067   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1393068   +
1393069   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1393070   +
1393071   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1393072   +
1393073   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1393074   +
1393075   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1393076   +
1393077   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1393078   +
1393079   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1393080   +
1393081   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1393082   +
1393083   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1393084   +
1393085   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1393086   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1393087   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1393088   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1393089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393091   +end;
MPRINT(EM_DIAGRAM):   end;
1393092   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393094   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1393095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393097   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1393098   +   end;
MPRINT(EM_DIAGRAM):   end;
1393099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393100   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1393101   +   end;
MPRINT(EM_DIAGRAM):   end;
1393102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393103   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1393104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393106   +   end;
MPRINT(EM_DIAGRAM):   end;
1393107   +end;
MPRINT(EM_DIAGRAM):   end;
1393108   +
1393109   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1393110   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1393111   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1393112   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1393113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393115   +end;
MPRINT(EM_DIAGRAM):   end;
1393116   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393118   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1393119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393121   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1393122   +   end;
MPRINT(EM_DIAGRAM):   end;
1393123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393124   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1393125   +   end;
MPRINT(EM_DIAGRAM):   end;
1393126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393127   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1393128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393130   +   end;
MPRINT(EM_DIAGRAM):   end;
1393131   +end;
MPRINT(EM_DIAGRAM):   end;
1393132   +
1393133   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1393134   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1393135   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1393136   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1393137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393139   +end;
MPRINT(EM_DIAGRAM):   end;
1393140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393142   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1393143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393145   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1393146   +   end;
MPRINT(EM_DIAGRAM):   end;
1393147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393148   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1393149   +   end;
MPRINT(EM_DIAGRAM):   end;
1393150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393151   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1393152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393154   +   end;
MPRINT(EM_DIAGRAM):   end;
1393155   +end;
MPRINT(EM_DIAGRAM):   end;
1393156   +
1393157   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1393158   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1393159   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1393160   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1393161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393163   +end;
MPRINT(EM_DIAGRAM):   end;
1393164   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393166   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1393167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393169   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1393170   +   end;
MPRINT(EM_DIAGRAM):   end;
1393171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393172   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1393173   +   end;
MPRINT(EM_DIAGRAM):   end;
1393174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393175   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1393176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393178   +   end;
MPRINT(EM_DIAGRAM):   end;
1393179   +end;
MPRINT(EM_DIAGRAM):   end;
1393180   +
1393181   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1393182   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1393183   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1393184   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1393185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393187   +end;
MPRINT(EM_DIAGRAM):   end;
1393188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393190   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1393191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393193   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1393194   +   end;
MPRINT(EM_DIAGRAM):   end;
1393195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393196   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1393197   +   end;
MPRINT(EM_DIAGRAM):   end;
1393198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393199   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1393200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393202   +   end;
MPRINT(EM_DIAGRAM):   end;
1393203   +end;
MPRINT(EM_DIAGRAM):   end;
1393204   +
1393205   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1393206   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1393207   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1393208   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1393209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393211   +end;
MPRINT(EM_DIAGRAM):   end;
1393212   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393214   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1393215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393216   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393217   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1393218   +   end;
MPRINT(EM_DIAGRAM):   end;
1393219   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393220   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1393221   +   end;
MPRINT(EM_DIAGRAM):   end;
1393222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393223   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1393224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393226   +   end;
MPRINT(EM_DIAGRAM):   end;
1393227   +end;
MPRINT(EM_DIAGRAM):   end;
1393228   +
1393229   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1393230   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1393231   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1393232   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1393233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393235   +end;
MPRINT(EM_DIAGRAM):   end;
1393236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393238   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1393239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393240   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1393241   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1393242   +   end;
MPRINT(EM_DIAGRAM):   end;
1393243   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1393244   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1393245   +   end;
MPRINT(EM_DIAGRAM):   end;
1393246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393247   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1393248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393250   +   end;
MPRINT(EM_DIAGRAM):   end;
1393251   +end;
MPRINT(EM_DIAGRAM):   end;
1393252   +
1393253   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1393254   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1393255   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1393256   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1393257   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1393258   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1393259   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1393260   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1393261   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1393262   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1393263   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1393264   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1393265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393267   +end;
MPRINT(EM_DIAGRAM):   end;
1393268   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393269   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1393270   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1393271   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393272   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1393273   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1393274   +   end;
MPRINT(EM_DIAGRAM):   end;
1393275   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1393276   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1393277   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1393278   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1393279   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1393280   +   end;
MPRINT(EM_DIAGRAM):   end;
1393281   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1393282   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1393283   +   end;
MPRINT(EM_DIAGRAM):   end;
1393284   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1393285   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1393286   +   end;
MPRINT(EM_DIAGRAM):   end;
1393287   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1393288   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1393289   +   end;
MPRINT(EM_DIAGRAM):   end;
1393290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393291   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1393292   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1393293   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1393294   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1393295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393297   +   end;
MPRINT(EM_DIAGRAM):   end;
1393298   +end;
MPRINT(EM_DIAGRAM):   end;
1393299   +
1393300   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1393301   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1393302   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1393303   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1393304   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1393305   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1393306   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1393307   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1393308   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1393309   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1393310   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1393311   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1393312   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1393313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393315   +end;
MPRINT(EM_DIAGRAM):   end;
1393316   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393317   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1393318   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1393319   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393320   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1393321   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1393322   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1393323   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1393324   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1393325   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1393326   +         end;
MPRINT(EM_DIAGRAM):   end;
1393327   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1393328   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1393329   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1393330   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1393331   +            end;
MPRINT(EM_DIAGRAM):   end;
1393332   +         end;
MPRINT(EM_DIAGRAM):   end;
1393333   +      end;
MPRINT(EM_DIAGRAM):   end;
1393334   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1393335   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1393336   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1393337   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1393338   +         end;
MPRINT(EM_DIAGRAM):   end;
1393339   +      end;
MPRINT(EM_DIAGRAM):   end;
1393340   +   end;
MPRINT(EM_DIAGRAM):   end;
1393341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393342   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1393343   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1393344   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1393345   +      end;
MPRINT(EM_DIAGRAM):   end;
1393346   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1393347   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1393348   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1393349   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1393350   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1393351   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1393352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1393353   +         end;
MPRINT(EM_DIAGRAM):   end;
1393354   +      end;
MPRINT(EM_DIAGRAM):   end;
1393355   +   end;
MPRINT(EM_DIAGRAM):   end;
1393356   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1393357   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1393358   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1393359   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1393360   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1393361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393363   +   end;
MPRINT(EM_DIAGRAM):   end;
1393364   +end;
MPRINT(EM_DIAGRAM):   end;
1393365   +
1393366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393367   +*** Checking missing input Interval
1393368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1393369   +
1393370   +IF NMISS(
1393371   +   AcceptedCmpTotal ,
1393372   +   Age ,
1393373   +   Frq ,
1393374   +   Income ,
1393375   +   Kidhome ,
1393376   +   Mnt ,
1393377   +   MntFishProducts ,
1393378   +   MntFruits ,
1393379   +   MntGoldProds ,
1393380   +   MntMeatProducts ,
1393381   +   MntSweetProducts ,
1393382   +   MntWines ,
1393383   +   MonthsAsCustomer ,
1393384   +   NumCatalogPurchases ,
1393385   +   NumDealsPurchases ,
1393386   +   NumDistPurchases ,
1393387   +   NumStorePurchases ,
1393388   +   NumWebPurchases ,
1393389   +   NumWebVisitsMonth ,
1393390   +   RFMstat ,
1393391   +   RMntFrq ,
1393392   +   Recency ,
1393393   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1393394   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1393395   +
1393396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393397   +END;
MPRINT(EM_DIAGRAM):   END;
1393398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393399   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1393400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393401   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1393402   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1393403   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1393404   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1393405   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1393406   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1393407   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1393408   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1393409   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1393410   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1393411   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1393412   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1393413   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1393414   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1393415   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1393416   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1393417   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1393418   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1393419   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1393420   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1393421   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1393422   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1393423   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1393424   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1393425   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1393426   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1393427   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1393428   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1393429   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1393430   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1393431   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1393432   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1393433   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1393434   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1393435   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1393436   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1393437   +END;
MPRINT(EM_DIAGRAM):   END;
1393438   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1393439   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1393440   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1393441   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1393442   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1393443   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1393444   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1393445   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1393446   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1393447   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1393448   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1393449   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1393450   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1393451   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1393452   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1393453   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1393454   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1393455   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1393456   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1393457   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1393458   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1393459   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1393460   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1393461   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1393462   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1393463   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1393464   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1393465   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1393466   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1393467   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1393468   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1393469   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1393470   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1393471   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1393472   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1393473   +   ELSE S_NumCatalogPurchases
1393474   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1393475   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1393476   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1393477   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1393478   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1393479   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1393480   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1393481   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1393482   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1393483   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1393484   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1393485   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1393486   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1393487   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1393488   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1393489   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1393490   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1393491   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1393492   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1393493   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1393494   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1393495   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1393496   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1393497   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1393498   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1393499   +END;
MPRINT(EM_DIAGRAM):   END;
1393500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393501   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1393502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393504   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1393505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393507   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1393508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393509   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1393510   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1393511   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1393512   +        S_Income  +    -0.23050240180524 * S_Kidhome
1393513   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1393514   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1393515   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1393516   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1393517   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1393518   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1393519   +          +    -1.32257303635072 * S_NumDealsPurchases
1393520   +          +    -0.54480870554989 * S_NumDistPurchases
1393521   +          +     1.24793709956495 * S_NumStorePurchases
1393522   +          +      1.7974198103915 * S_NumWebPurchases
1393523   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1393524   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1393525   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1393526   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome +
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 *
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts +
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 *
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 *
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 *
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 *
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq +
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1393527   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1393528   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1393529   +        S_Income  +    -0.78793784980656 * S_Kidhome
1393530   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1393531   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1393532   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1393533   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1393534   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1393535   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1393536   +          +     0.70535680060775 * S_NumDealsPurchases
1393537   +          +    -0.15561838359391 * S_NumDistPurchases
1393538   +          +    -0.86545647977011 * S_NumStorePurchases
1393539   +          +    -0.78435825863867 * S_NumWebPurchases
1393540   +          +     1.76113949975149 * S_NumWebVisitsMonth
1393541   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1393542   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1393543   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome +
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 *
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts +
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 *
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 *
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 *
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 *
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq +
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1393544   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1393545   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1393546   +        S_Income  +    -0.59349067735666 * S_Kidhome
1393547   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1393548   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1393549   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1393550   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1393551   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1393552   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1393553   +          +     0.21510592309387 * S_NumDealsPurchases
1393554   +          +    -0.05401897321491 * S_NumDistPurchases
1393555   +          +     0.14945584086188 * S_NumStorePurchases
1393556   +          +    -0.09993898051701 * S_NumWebPurchases
1393557   +          +     1.40189771606069 * S_NumWebVisitsMonth
1393558   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1393559   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1393560   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age +
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome +
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 *
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts +
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 *
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 *
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 *
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 *
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq +
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1393561   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1393562   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1393563   +        S_Income  +    -0.61129984920194 * S_Kidhome
1393564   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1393565   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1393566   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1393567   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1393568   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1393569   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1393570   +          +     0.81353732439473 * S_NumDealsPurchases
1393571   +          +     0.32933472931941 * S_NumDistPurchases
1393572   +          +    -1.28188012143595 * S_NumStorePurchases
1393573   +          +    -0.81914782214243 * S_NumWebPurchases
1393574   +          +     1.20332282902342 * S_NumWebVisitsMonth
1393575   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1393576   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1393577   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age +
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome +
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 *
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts +
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 *
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 *
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 *
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 *
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq +
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1393578   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1393579   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1393580   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1393581   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1393582   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 *
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 +
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 *
HigherEducationBinary0 ;
1393583   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1393584   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1393585   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1393586   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1393587   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 *
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 +
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 *
HigherEducationBinary0 ;
1393588   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1393589   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1393590   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1393591   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1393592   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 *
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 +
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 *
HigherEducationBinary0 ;
1393593   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1393594   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1393595   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1393596   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1393597   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 *
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 +
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 *
HigherEducationBinary0 ;
1393598   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1393599   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1393600   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1393601   +          +     0.38068062371853 * Marital_StatusDivorced
1393602   +          +    -0.09269938603625 * Marital_StatusMarried
1393603   +          +    -0.17904543311137 * Marital_StatusSingle
1393604   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 *
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried +
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1393605   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1393606   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1393607   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1393608   +          +     0.46191454760643 * Marital_StatusDivorced
1393609   +          +    -1.36520525874032 * Marital_StatusMarried
1393610   +          +     1.36669525533789 * Marital_StatusSingle
1393611   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 *
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster +
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried +
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1393612   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1393613   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1393614   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1393615   +          +     0.18693560360309 * Marital_StatusDivorced
1393616   +          +    -0.56475988428608 * Marital_StatusMarried
1393617   +          +     0.79263891340625 * Marital_StatusSingle
1393618   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 *
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried +
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1393619   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1393620   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1393621   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1393622   +          +     1.14025450669394 * Marital_StatusDivorced
1393623   +          +     0.78122963298728 * Marital_StatusMarried
1393624   +          +    -1.37860768059913 * Marital_StatusSingle
1393625   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 *
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried +
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1393626   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1393627   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1393628   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1393629   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1393630   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1393631   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1393632   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1393633   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1393634   +END;
MPRINT(EM_DIAGRAM):   END;
1393635   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1393636   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1393637   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1393638   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1393639   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1393640   +END;
MPRINT(EM_DIAGRAM):   END;
1393641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393642   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1393643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393644   +
1393645   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1393646   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1393647   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1393648   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1393649   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1393650   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393651   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1393652   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1393653   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1393654   +end;
MPRINT(EM_DIAGRAM):   end;
1393655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393656   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1393657   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1393658   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1393659   +   end;
MPRINT(EM_DIAGRAM):   end;
1393660   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1393661   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1393662   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1393663   +   end;
MPRINT(EM_DIAGRAM):   end;
1393664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393665   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1393666   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1393667   +   end;
MPRINT(EM_DIAGRAM):   end;
1393668   +end;
MPRINT(EM_DIAGRAM):   end;
1393669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1393670   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1393671   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 +
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1393672   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1393673   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1393674   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1393675   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1393676   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1393677   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1393678   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1393679   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1393680   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1393681   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1393682   +END;
MPRINT(EM_DIAGRAM):   END;
1393683   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1393684   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1393685   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1393686   +END;
MPRINT(EM_DIAGRAM):   END;
1393687   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1393688   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1393689   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1393690   +END;
MPRINT(EM_DIAGRAM):   END;
1393691   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1393692   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1393693   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1393694   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1393695   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1393696   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1393697   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1393698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393699   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1393700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1393701   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1393702   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1393703   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1393704   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1393705   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1393706   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1393707   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1393708   +END;
MPRINT(EM_DIAGRAM):   END;
1393709   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1393710   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1393711   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1393712   +drop
1393713   +H11
1393714   +H12
1393715   +H13
1393716   +H14
1393717   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1393718   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1393719   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1393720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393721   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1393722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393723   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1393724   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1393725   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1393726   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1393727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393728   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1393729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393730   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1393731   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1393732   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1393733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393734   +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
1393735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393737   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1393738   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1393739   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1393740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1393741   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1393742   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1393743   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1393744   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1393745   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1393746   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1393747   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1393748   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1393749   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1393750   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1393751   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1393752   +LENGTH _WARN_ $4
1393753   +      F_DepVar  $ 12
1393754   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1393755   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1393756   +
1393757   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1393758   +
1393759   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1393760   +
1393761   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1393762   +
1393763   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1393764   +
1393765   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1393766   +
1393767   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1393768   +
1393769   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1393770   +
1393771   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1393772   +
1393773   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1393774   +
1393775   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1393776   +
1393777   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1393778   +
1393779   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1393780   +
1393781   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1393782   +
1393783   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1393784   +
1393785   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1393786   +
1393787   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1393788   +
1393789   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1393790   +
1393791   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1393792   +
1393793   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1393794   +
1393795   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1393796   +
1393797   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1393798   +
1393799   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1393800   +
1393801   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1393802   +
1393803   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1393804   +
1393805   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1393806   +
1393807   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1393808   +
1393809   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1393810   +
1393811   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1393812   +
1393813   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1393814   +
1393815   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1393816   +
1393817   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1393818   +
1393819   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1393820   +
1393821   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1393822   +
1393823   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1393824   +
1393825   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1393826   +
1393827   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1393828   +
1393829   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1393830   +
1393831   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1393832   +
1393833   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1393834   +
1393835   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1393836   +
1393837   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1393838   +
1393839   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1393840   +
1393841   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1393842   +
1393843   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1393844   +
1393845   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1393846   +
1393847   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1393848   +
1393849   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1393850   +
1393851   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1393852   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1393853   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1393854   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1393855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393857   +end;
MPRINT(EM_DIAGRAM):   end;
1393858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393860   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1393861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393863   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1393864   +   end;
MPRINT(EM_DIAGRAM):   end;
1393865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393866   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1393867   +   end;
MPRINT(EM_DIAGRAM):   end;
1393868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393869   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1393870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393872   +   end;
MPRINT(EM_DIAGRAM):   end;
1393873   +end;
MPRINT(EM_DIAGRAM):   end;
1393874   +
1393875   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1393876   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1393877   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1393878   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1393879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393881   +end;
MPRINT(EM_DIAGRAM):   end;
1393882   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393884   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1393885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393887   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1393888   +   end;
MPRINT(EM_DIAGRAM):   end;
1393889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393890   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1393891   +   end;
MPRINT(EM_DIAGRAM):   end;
1393892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393893   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1393894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393896   +   end;
MPRINT(EM_DIAGRAM):   end;
1393897   +end;
MPRINT(EM_DIAGRAM):   end;
1393898   +
1393899   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1393900   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1393901   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1393902   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1393903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393905   +end;
MPRINT(EM_DIAGRAM):   end;
1393906   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393908   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1393909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393910   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393911   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1393912   +   end;
MPRINT(EM_DIAGRAM):   end;
1393913   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393914   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1393915   +   end;
MPRINT(EM_DIAGRAM):   end;
1393916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393917   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1393918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393920   +   end;
MPRINT(EM_DIAGRAM):   end;
1393921   +end;
MPRINT(EM_DIAGRAM):   end;
1393922   +
1393923   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1393924   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1393925   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1393926   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1393927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393929   +end;
MPRINT(EM_DIAGRAM):   end;
1393930   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393931   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393932   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1393933   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393934   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393935   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1393936   +   end;
MPRINT(EM_DIAGRAM):   end;
1393937   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393938   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1393939   +   end;
MPRINT(EM_DIAGRAM):   end;
1393940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393941   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1393942   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393943   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393944   +   end;
MPRINT(EM_DIAGRAM):   end;
1393945   +end;
MPRINT(EM_DIAGRAM):   end;
1393946   +
1393947   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1393948   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1393949   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1393950   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1393951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393953   +end;
MPRINT(EM_DIAGRAM):   end;
1393954   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393956   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1393957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393958   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393959   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1393960   +   end;
MPRINT(EM_DIAGRAM):   end;
1393961   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393962   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1393963   +   end;
MPRINT(EM_DIAGRAM):   end;
1393964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393965   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1393966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393968   +   end;
MPRINT(EM_DIAGRAM):   end;
1393969   +end;
MPRINT(EM_DIAGRAM):   end;
1393970   +
1393971   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1393972   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1393973   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1393974   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1393975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1393976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393977   +end;
MPRINT(EM_DIAGRAM):   end;
1393978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1393979   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1393980   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1393981   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1393982   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1393983   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1393984   +   end;
MPRINT(EM_DIAGRAM):   end;
1393985   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1393986   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1393987   +   end;
MPRINT(EM_DIAGRAM):   end;
1393988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1393989   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1393990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1393991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1393992   +   end;
MPRINT(EM_DIAGRAM):   end;
1393993   +end;
MPRINT(EM_DIAGRAM):   end;
1393994   +
1393995   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1393996   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1393997   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1393998   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1393999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394001   +end;
MPRINT(EM_DIAGRAM):   end;
1394002   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394003   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394004   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1394005   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394006   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1394007   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1394008   +   end;
MPRINT(EM_DIAGRAM):   end;
1394009   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1394010   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1394011   +   end;
MPRINT(EM_DIAGRAM):   end;
1394012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394013   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1394014   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394015   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394016   +   end;
MPRINT(EM_DIAGRAM):   end;
1394017   +end;
MPRINT(EM_DIAGRAM):   end;
1394018   +
1394019   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1394020   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1394021   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1394022   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1394023   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1394024   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1394025   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1394026   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1394027   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1394028   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1394029   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1394030   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1394031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394033   +end;
MPRINT(EM_DIAGRAM):   end;
1394034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394035   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1394036   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1394037   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394038   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1394039   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1394040   +   end;
MPRINT(EM_DIAGRAM):   end;
1394041   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1394042   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1394043   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1394044   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1394045   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1394046   +   end;
MPRINT(EM_DIAGRAM):   end;
1394047   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1394048   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1394049   +   end;
MPRINT(EM_DIAGRAM):   end;
1394050   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1394051   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1394052   +   end;
MPRINT(EM_DIAGRAM):   end;
1394053   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1394054   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1394055   +   end;
MPRINT(EM_DIAGRAM):   end;
1394056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394057   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1394058   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1394059   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1394060   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1394061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394063   +   end;
MPRINT(EM_DIAGRAM):   end;
1394064   +end;
MPRINT(EM_DIAGRAM):   end;
1394065   +
1394066   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1394067   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1394068   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1394069   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1394070   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1394071   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1394072   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1394073   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1394074   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1394075   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1394076   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1394077   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1394078   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1394079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394081   +end;
MPRINT(EM_DIAGRAM):   end;
1394082   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394083   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1394084   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1394085   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394086   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1394087   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1394088   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1394089   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1394090   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1394091   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394092   +         end;
MPRINT(EM_DIAGRAM):   end;
1394093   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1394094   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1394095   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1394096   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394097   +            end;
MPRINT(EM_DIAGRAM):   end;
1394098   +         end;
MPRINT(EM_DIAGRAM):   end;
1394099   +      end;
MPRINT(EM_DIAGRAM):   end;
1394100   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1394101   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1394102   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1394103   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394104   +         end;
MPRINT(EM_DIAGRAM):   end;
1394105   +      end;
MPRINT(EM_DIAGRAM):   end;
1394106   +   end;
MPRINT(EM_DIAGRAM):   end;
1394107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394108   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1394109   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1394110   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394111   +      end;
MPRINT(EM_DIAGRAM):   end;
1394112   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1394113   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1394114   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1394115   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1394116   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1394117   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1394118   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394119   +         end;
MPRINT(EM_DIAGRAM):   end;
1394120   +      end;
MPRINT(EM_DIAGRAM):   end;
1394121   +   end;
MPRINT(EM_DIAGRAM):   end;
1394122   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1394123   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1394124   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1394125   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1394126   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1394127   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394128   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394129   +   end;
MPRINT(EM_DIAGRAM):   end;
1394130   +end;
MPRINT(EM_DIAGRAM):   end;
1394131   +
1394132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394133   +*** Checking missing input Interval
1394134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1394135   +
1394136   +IF NMISS(
1394137   +   AcceptedCmpTotal ,
1394138   +   Age ,
1394139   +   Frq ,
1394140   +   Income ,
1394141   +   Kidhome ,
1394142   +   Mnt ,
1394143   +   MntFishProducts ,
1394144   +   MntFruits ,
1394145   +   MntGoldProds ,
1394146   +   MntMeatProducts ,
1394147   +   MntSweetProducts ,
1394148   +   MntWines ,
1394149   +   MonthsAsCustomer ,
1394150   +   NumCatalogPurchases ,
1394151   +   NumDealsPurchases ,
1394152   +   NumDistPurchases ,
1394153   +   NumStorePurchases ,
1394154   +   NumWebPurchases ,
1394155   +   NumWebVisitsMonth ,
1394156   +   RFMstat ,
1394157   +   RMntFrq ,
1394158   +   Recency ,
1394159   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1394160   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1394161   +
1394162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394163   +END;
MPRINT(EM_DIAGRAM):   END;
1394164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394165   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1394166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1394168   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1394169   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1394170   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1394171   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1394172   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1394173   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1394174   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1394175   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1394176   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1394177   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1394178   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1394179   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1394180   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1394181   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1394182   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1394183   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1394184   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1394185   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1394186   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1394187   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1394188   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1394189   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1394190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1394191   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1394192   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1394193   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1394194   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1394195   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1394196   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1394197   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1394198   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1394199   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1394200   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1394201   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1394202   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1394203   +END;
MPRINT(EM_DIAGRAM):   END;
1394204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1394205   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1394206   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1394207   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1394208   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1394209   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1394210   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1394211   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1394212   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1394213   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1394214   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1394215   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1394216   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1394217   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1394218   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1394219   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1394220   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1394221   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1394222   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1394223   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1394224   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1394225   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1394226   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1394227   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1394228   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1394229   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1394230   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1394231   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1394232   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1394233   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1394234   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1394235   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1394236   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1394237   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1394238   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1394239   +   ELSE S_NumCatalogPurchases
1394240   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1394241   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1394242   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1394243   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1394244   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1394245   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1394246   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1394247   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1394248   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1394249   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1394250   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1394251   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1394252   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1394253   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1394254   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1394255   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1394256   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1394257   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1394258   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1394259   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1394260   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1394261   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1394262   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1394263   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1394264   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1394265   +END;
MPRINT(EM_DIAGRAM):   END;
1394266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394267   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1394268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394270   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1394271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394273   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1394274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1394276   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1394277   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1394278   +        S_Income  +    -1.07652572934003 * S_Kidhome
1394279   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1394280   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1394281   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1394282   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1394283   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1394284   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1394285   +          +     0.34217069579861 * S_NumDealsPurchases
1394286   +          +      0.7126550962469 * S_NumDistPurchases
1394287   +          +     0.05810128676346 * S_NumStorePurchases
1394288   +          +     -0.1974592461824 * S_NumWebPurchases
1394289   +          +     1.33855646568468 * S_NumWebVisitsMonth
1394290   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1394291   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1394292   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age +
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome +
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 *
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts +
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 *
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 *
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 *
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 *
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq +
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1394293   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1394294   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1394295   +        S_Income  +    -0.00280376715329 * S_Kidhome
1394296   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1394297   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1394298   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1394299   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1394300   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1394301   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1394302   +          +     0.45694604326279 * S_NumDealsPurchases
1394303   +          +      0.1555582457419 * S_NumDistPurchases
1394304   +          +     -0.3340268446813 * S_NumStorePurchases
1394305   +          +    -0.39316217683753 * S_NumWebPurchases
1394306   +          +     0.52431656748667 * S_NumWebVisitsMonth
1394307   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1394308   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1394309   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome +
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 *
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts +
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 *
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 *
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 *
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 *
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq +
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1394310   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1394311   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1394312   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1394313   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1394314   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 *
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 +
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 *
HigherEducationBinary0 ;
1394315   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1394316   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1394317   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1394318   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1394319   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 *
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 +
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 *
HigherEducationBinary0 ;
1394320   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1394321   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1394322   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1394323   +          +     0.46676686502466 * Marital_StatusDivorced
1394324   +          +    -1.27760562209616 * Marital_StatusMarried
1394325   +          +     1.31419230639567 * Marital_StatusSingle
1394326   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 *
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried +
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1394327   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1394328   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1394329   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1394330   +          +     0.07434297903639 * Marital_StatusDivorced
1394331   +          +     0.00294493836325 * Marital_StatusMarried
1394332   +          +    -0.00745595849422 * Marital_StatusSingle
1394333   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 *
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster +
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried +
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1394334   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1394335   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1394336   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1394337   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1394338   +END;
MPRINT(EM_DIAGRAM):   END;
1394339   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1394340   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1394341   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1394342   +END;
MPRINT(EM_DIAGRAM):   END;
1394343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394344   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1394345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394346   +
1394347   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1394348   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1394349   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1394350   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1394351   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1394352   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394353   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1394354   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1394355   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1394356   +end;
MPRINT(EM_DIAGRAM):   end;
1394357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394358   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1394359   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1394360   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1394361   +   end;
MPRINT(EM_DIAGRAM):   end;
1394362   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1394363   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1394364   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1394365   +   end;
MPRINT(EM_DIAGRAM):   end;
1394366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394367   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1394368   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1394369   +   end;
MPRINT(EM_DIAGRAM):   end;
1394370   +end;
MPRINT(EM_DIAGRAM):   end;
1394371   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1394372   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1394373   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1394374   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1394375   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1394376   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1394377   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1394378   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1394379   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1394380   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1394381   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1394382   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1394383   +END;
MPRINT(EM_DIAGRAM):   END;
1394384   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1394385   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1394386   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1394387   +END;
MPRINT(EM_DIAGRAM):   END;
1394388   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1394389   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1394390   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1394391   +END;
MPRINT(EM_DIAGRAM):   END;
1394392   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1394393   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1394394   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1394395   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1394396   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1394397   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1394398   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1394399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394400   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1394401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394402   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1394403   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1394404   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1394405   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1394406   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1394407   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1394408   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1394409   +END;
MPRINT(EM_DIAGRAM):   END;
1394410   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1394411   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1394412   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1394413   +drop
1394414   +H11
1394415   +H12
1394416   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1394417   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1394418   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1394419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394420   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1394421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394422   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1394423   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1394424   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1394425   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1394426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394427   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1394428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394429   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1394430   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1394431   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1394432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394433   +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
1394434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394436   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1394437   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1394438   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1394439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1394440   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1394441   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1394442   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1394443   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1394444   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1394445   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1394446   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1394447   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1394448   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1394449   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1394450   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1394451   +LENGTH _WARN_ $4
1394452   +      F_DepVar  $ 12
1394453   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1394454   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1394455   +
1394456   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1394457   +
1394458   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1394459   +
1394460   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1394461   +
1394462   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1394463   +
1394464   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1394465   +
1394466   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1394467   +
1394468   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1394469   +
1394470   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1394471   +
1394472   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1394473   +
1394474   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1394475   +
1394476   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1394477   +
1394478   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1394479   +
1394480   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1394481   +
1394482   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1394483   +
1394484   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1394485   +
1394486   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1394487   +
1394488   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1394489   +
1394490   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1394491   +
1394492   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1394493   +
1394494   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1394495   +
1394496   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1394497   +
1394498   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1394499   +
1394500   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1394501   +
1394502   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1394503   +
1394504   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1394505   +
1394506   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1394507   +
1394508   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1394509   +
1394510   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1394511   +
1394512   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1394513   +
1394514   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1394515   +
1394516   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1394517   +
1394518   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1394519   +
1394520   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1394521   +
1394522   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1394523   +
1394524   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1394525   +
1394526   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1394527   +
1394528   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1394529   +
1394530   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1394531   +
1394532   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1394533   +
1394534   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1394535   +
1394536   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1394537   +
1394538   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1394539   +
1394540   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1394541   +
1394542   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1394543   +
1394544   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1394545   +
1394546   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1394547   +
1394548   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1394549   +
1394550   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1394551   +
1394552   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1394553   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1394554   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1394555   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1394556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394558   +end;
MPRINT(EM_DIAGRAM):   end;
1394559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394561   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1394562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1394564   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1394565   +   end;
MPRINT(EM_DIAGRAM):   end;
1394566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1394567   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1394568   +   end;
MPRINT(EM_DIAGRAM):   end;
1394569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394570   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1394571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394573   +   end;
MPRINT(EM_DIAGRAM):   end;
1394574   +end;
MPRINT(EM_DIAGRAM):   end;
1394575   +
1394576   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1394577   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1394578   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1394579   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1394580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394582   +end;
MPRINT(EM_DIAGRAM):   end;
1394583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394585   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1394586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1394588   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1394589   +   end;
MPRINT(EM_DIAGRAM):   end;
1394590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1394591   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1394592   +   end;
MPRINT(EM_DIAGRAM):   end;
1394593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394594   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1394595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394597   +   end;
MPRINT(EM_DIAGRAM):   end;
1394598   +end;
MPRINT(EM_DIAGRAM):   end;
1394599   +
1394600   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1394601   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1394602   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1394603   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1394604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394606   +end;
MPRINT(EM_DIAGRAM):   end;
1394607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394609   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1394610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1394612   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1394613   +   end;
MPRINT(EM_DIAGRAM):   end;
1394614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1394615   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1394616   +   end;
MPRINT(EM_DIAGRAM):   end;
1394617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394618   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1394619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394621   +   end;
MPRINT(EM_DIAGRAM):   end;
1394622   +end;
MPRINT(EM_DIAGRAM):   end;
1394623   +
1394624   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1394625   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1394626   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1394627   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1394628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394630   +end;
MPRINT(EM_DIAGRAM):   end;
1394631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394633   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1394634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1394636   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1394637   +   end;
MPRINT(EM_DIAGRAM):   end;
1394638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1394639   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1394640   +   end;
MPRINT(EM_DIAGRAM):   end;
1394641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394642   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1394643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394645   +   end;
MPRINT(EM_DIAGRAM):   end;
1394646   +end;
MPRINT(EM_DIAGRAM):   end;
1394647   +
1394648   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1394649   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1394650   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1394651   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1394652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394654   +end;
MPRINT(EM_DIAGRAM):   end;
1394655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394657   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1394658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1394660   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1394661   +   end;
MPRINT(EM_DIAGRAM):   end;
1394662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1394663   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1394664   +   end;
MPRINT(EM_DIAGRAM):   end;
1394665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394666   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1394667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394669   +   end;
MPRINT(EM_DIAGRAM):   end;
1394670   +end;
MPRINT(EM_DIAGRAM):   end;
1394671   +
1394672   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1394673   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1394674   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1394675   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1394676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394678   +end;
MPRINT(EM_DIAGRAM):   end;
1394679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394681   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1394682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1394684   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1394685   +   end;
MPRINT(EM_DIAGRAM):   end;
1394686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1394687   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1394688   +   end;
MPRINT(EM_DIAGRAM):   end;
1394689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394690   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1394691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394693   +   end;
MPRINT(EM_DIAGRAM):   end;
1394694   +end;
MPRINT(EM_DIAGRAM):   end;
1394695   +
1394696   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1394697   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1394698   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1394699   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1394700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394702   +end;
MPRINT(EM_DIAGRAM):   end;
1394703   +else do;
The SAS System
 
MPRINT(EM_DIAGRAM):   else do;
1394704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1394705   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1394706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394707   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1394708   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1394709   +   end;
MPRINT(EM_DIAGRAM):   end;
1394710   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1394711   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1394712   +   end;
MPRINT(EM_DIAGRAM):   end;
1394713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394714   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1394715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394717   +   end;
MPRINT(EM_DIAGRAM):   end;
1394718   +end;
MPRINT(EM_DIAGRAM):   end;
1394719   +
1394720   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1394721   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1394722   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1394723   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1394724   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1394725   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1394726   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1394727   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1394728   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1394729   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1394730   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1394731   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1394732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394734   +end;
MPRINT(EM_DIAGRAM):   end;
1394735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394736   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1394737   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1394738   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394739   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1394740   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1394741   +   end;
MPRINT(EM_DIAGRAM):   end;
1394742   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1394743   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1394744   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1394745   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1394746   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1394747   +   end;
MPRINT(EM_DIAGRAM):   end;
1394748   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1394749   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1394750   +   end;
MPRINT(EM_DIAGRAM):   end;
1394751   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1394752   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1394753   +   end;
MPRINT(EM_DIAGRAM):   end;
1394754   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1394755   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1394756   +   end;
MPRINT(EM_DIAGRAM):   end;
1394757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394758   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1394759   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1394760   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1394761   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1394762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394764   +   end;
MPRINT(EM_DIAGRAM):   end;
1394765   +end;
MPRINT(EM_DIAGRAM):   end;
1394766   +
1394767   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1394768   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1394769   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1394770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1394771   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1394772   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1394773   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1394774   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1394775   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1394776   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1394777   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1394778   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1394779   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1394780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1394781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394782   +end;
MPRINT(EM_DIAGRAM):   end;
1394783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1394784   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1394785   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1394786   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1394787   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1394788   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1394789   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1394790   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1394791   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1394792   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394793   +         end;
MPRINT(EM_DIAGRAM):   end;
1394794   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1394795   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1394796   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1394797   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394798   +            end;
MPRINT(EM_DIAGRAM):   end;
1394799   +         end;
MPRINT(EM_DIAGRAM):   end;
1394800   +      end;
MPRINT(EM_DIAGRAM):   end;
1394801   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1394802   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1394803   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1394804   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394805   +         end;
MPRINT(EM_DIAGRAM):   end;
1394806   +      end;
MPRINT(EM_DIAGRAM):   end;
1394807   +   end;
MPRINT(EM_DIAGRAM):   end;
1394808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1394809   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1394810   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1394811   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394812   +      end;
MPRINT(EM_DIAGRAM):   end;
1394813   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1394814   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1394815   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1394816   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1394817   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1394818   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1394819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1394820   +         end;
MPRINT(EM_DIAGRAM):   end;
1394821   +      end;
MPRINT(EM_DIAGRAM):   end;
1394822   +   end;
MPRINT(EM_DIAGRAM):   end;
1394823   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1394824   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1394825   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1394826   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1394827   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1394828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1394829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394830   +   end;
MPRINT(EM_DIAGRAM):   end;
1394831   +end;
MPRINT(EM_DIAGRAM):   end;
1394832   +
1394833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394834   +*** Checking missing input Interval
1394835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1394836   +
1394837   +IF NMISS(
1394838   +   AcceptedCmpTotal ,
1394839   +   Age ,
1394840   +   Frq ,
1394841   +   Income ,
1394842   +   Kidhome ,
1394843   +   Mnt ,
1394844   +   MntFishProducts ,
1394845   +   MntFruits ,
1394846   +   MntGoldProds ,
1394847   +   MntMeatProducts ,
1394848   +   MntSweetProducts ,
1394849   +   MntWines ,
1394850   +   MonthsAsCustomer ,
1394851   +   NumCatalogPurchases ,
1394852   +   NumDealsPurchases ,
1394853   +   NumDistPurchases ,
1394854   +   NumStorePurchases ,
1394855   +   NumWebPurchases ,
1394856   +   NumWebVisitsMonth ,
1394857   +   RFMstat ,
1394858   +   RMntFrq ,
1394859   +   Recency ,
1394860   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1394861   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1394862   +
1394863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1394864   +END;
MPRINT(EM_DIAGRAM):   END;
1394865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394866   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1394867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394868   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1394869   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1394870   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1394871   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1394872   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1394873   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1394874   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1394875   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1394876   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1394877   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1394878   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1394879   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1394880   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1394881   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1394882   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1394883   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1394884   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1394885   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1394886   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1394887   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1394888   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1394889   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1394890   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1394891   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1394892   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1394893   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1394894   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1394895   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1394896   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1394897   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1394898   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1394899   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1394900   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1394901   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1394902   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1394903   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1394904   +END;
MPRINT(EM_DIAGRAM):   END;
1394905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1394906   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1394907   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1394908   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1394909   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1394910   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1394911   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1394912   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1394913   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1394914   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1394915   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1394916   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1394917   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1394918   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1394919   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1394920   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1394921   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1394922   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1394923   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1394924   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1394925   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1394926   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1394927   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1394928   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1394929   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1394930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1394931   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1394932   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1394933   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1394934   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1394935   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1394936   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1394937   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1394938   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1394939   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1394940   +   ELSE S_NumCatalogPurchases
1394941   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1394942   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1394943   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1394944   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1394945   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1394946   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1394947   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1394948   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1394949   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1394950   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1394951   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1394952   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1394953   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1394954   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1394955   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1394956   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1394957   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1394958   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1394959   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1394960   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1394961   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1394962   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1394963   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1394964   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1394965   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1394966   +END;
MPRINT(EM_DIAGRAM):   END;
1394967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394968   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1394969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394971   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1394972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394974   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1394975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1394976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1394977   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1394978   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1394979   +        S_Income  +     0.48614351216065 * S_Kidhome
1394980   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1394981   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1394982   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1394983   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1394984   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1394985   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1394986   +          +     1.38069708066212 * S_NumDealsPurchases
1394987   +          +     0.18758966496994 * S_NumDistPurchases
1394988   +          +    -0.65306017966122 * S_NumStorePurchases
1394989   +          +    -0.65780154318734 * S_NumWebPurchases
1394990   +          +     1.42347048260615 * S_NumWebVisitsMonth
1394991   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1394992   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1394993   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome +
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 *
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts +
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 *
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 *
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 *
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 *
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq +
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1394994   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1394995   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1394996   +        S_Income  +     0.50072567449363 * S_Kidhome
1394997   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1394998   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1394999   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1395000   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1395001   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1395002   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1395003   +          +    -0.75291043162386 * S_NumDealsPurchases
1395004   +          +    -0.06780631818187 * S_NumDistPurchases
1395005   +          +     1.03453599373919 * S_NumStorePurchases
1395006   +          +     1.02348906006707 * S_NumWebPurchases
1395007   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1395008   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1395009   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1395010   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome +
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 *
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts +
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 *
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 *
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 *
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 *
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq +
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1395011   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1395012   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1395013   +        S_Income  +     0.57496607656903 * S_Kidhome
1395014   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1395015   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1395016   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1395017   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1395018   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1395019   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1395020   +          +     0.13431497076806 * S_NumDealsPurchases
1395021   +          +     -0.4516722514278 * S_NumDistPurchases
1395022   +          +     0.08636745161008 * S_NumStorePurchases
1395023   +          +    -0.01091843489919 * S_NumWebPurchases
1395024   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1395025   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1395026   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1395027   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome +
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 *
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts +
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 *
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 *
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 *
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 *
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq +
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1395028   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1395029   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1395030   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1395031   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1395032   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 *
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 +
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 *
HigherEducationBinary0 ;
1395033   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1395034   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1395035   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1395036   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1395037   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 *
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 +
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 *
HigherEducationBinary0 ;
1395038   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1395039   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1395040   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1395041   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1395042   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 *
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 +
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 *
HigherEducationBinary0 ;
1395043   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1395044   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1395045   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1395046   +          +     0.09616912826117 * Marital_StatusDivorced
1395047   +          +     0.15377557778014 * Marital_StatusMarried
1395048   +          +    -0.20686296055741 * Marital_StatusSingle
1395049   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 *
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster +
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried +
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1395050   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1395051   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1395052   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1395053   +          +    -0.18362421441913 * Marital_StatusDivorced
1395054   +          +     0.14861660317702 * Marital_StatusMarried
1395055   +          +    -0.51051982152027 * Marital_StatusSingle
1395056   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 *
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried +
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1395057   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1395058   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1395059   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1395060   +          +    -0.65088528624708 * Marital_StatusDivorced
1395061   +          +     1.85383531288095 * Marital_StatusMarried
1395062   +          +    -1.45031245605509 * Marital_StatusSingle
1395063   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 *
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster +
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried +
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1395064   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1395065   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1395066   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1395067   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1395068   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1395069   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1395070   +END;
MPRINT(EM_DIAGRAM):   END;
1395071   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1395072   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1395073   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1395074   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1395075   +END;
MPRINT(EM_DIAGRAM):   END;
1395076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395077   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1395078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395079   +
1395080   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1395081   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1395082   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1395083   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1395084   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1395085   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395086   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1395087   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1395088   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1395089   +end;
MPRINT(EM_DIAGRAM):   end;
1395090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395091   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1395092   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1395093   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1395094   +   end;
MPRINT(EM_DIAGRAM):   end;
1395095   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1395096   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1395097   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1395098   +   end;
MPRINT(EM_DIAGRAM):   end;
1395099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395100   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1395101   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1395102   +   end;
MPRINT(EM_DIAGRAM):   end;
1395103   +end;
MPRINT(EM_DIAGRAM):   end;
1395104   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1395105   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1395106   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 +
-3.46108195946376 * H13 ;
1395107   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1395108   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1395109   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1395110   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1395111   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1395112   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1395113   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1395114   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1395115   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1395116   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1395117   +END;
MPRINT(EM_DIAGRAM):   END;
1395118   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1395119   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1395120   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1395121   +END;
MPRINT(EM_DIAGRAM):   END;
1395122   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1395123   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1395124   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1395125   +END;
MPRINT(EM_DIAGRAM):   END;
1395126   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1395127   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1395128   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1395129   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1395130   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1395131   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1395132   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1395133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395134   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1395135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395136   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1395137   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1395138   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1395139   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1395140   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1395141   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1395142   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1395143   +END;
MPRINT(EM_DIAGRAM):   END;
1395144   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1395145   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1395146   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1395147   +drop
1395148   +H11
1395149   +H12
1395150   +H13
1395151   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1395152   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1395153   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1395154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395155   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1395156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395157   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1395158   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1395159   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1395160   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1395161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395162   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1395163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395164   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1395165   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1395166   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1395167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395168   +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
1395169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395171   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1395172   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1395173   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1395174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395175   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1395176   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1395177   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1395178   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1395179   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1395180   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1395181   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1395182   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1395183   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1395184   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1395185   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1395186   +LENGTH _WARN_ $4
1395187   +      F_DepVar  $ 12
1395188   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1395189   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1395190   +
1395191   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1395192   +
1395193   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1395194   +
1395195   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1395196   +
1395197   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1395198   +
1395199   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1395200   +
1395201   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1395202   +
1395203   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1395204   +
1395205   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1395206   +
1395207   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1395208   +
1395209   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1395210   +
1395211   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1395212   +
1395213   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1395214   +
1395215   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1395216   +
1395217   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1395218   +
1395219   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1395220   +
1395221   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1395222   +
1395223   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1395224   +
1395225   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1395226   +
1395227   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1395228   +
1395229   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1395230   +
1395231   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1395232   +
1395233   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1395234   +
1395235   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1395236   +
1395237   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1395238   +
1395239   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1395240   +
1395241   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1395242   +
1395243   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1395244   +
1395245   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1395246   +
1395247   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1395248   +
1395249   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1395250   +
1395251   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1395252   +
1395253   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1395254   +
1395255   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1395256   +
1395257   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1395258   +
1395259   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1395260   +
1395261   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1395262   +
1395263   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1395264   +
1395265   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1395266   +
1395267   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1395268   +
1395269   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1395270   +
1395271   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1395272   +
1395273   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1395274   +
1395275   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1395276   +
1395277   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1395278   +
1395279   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1395280   +
1395281   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1395282   +
1395283   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1395284   +
1395285   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1395286   +
1395287   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1395288   +
1395289   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1395290   +
1395291   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1395292   +
1395293   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1395294   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1395295   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1395296   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1395297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395299   +end;
MPRINT(EM_DIAGRAM):   end;
1395300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395302   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1395303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1395305   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1395306   +   end;
MPRINT(EM_DIAGRAM):   end;
1395307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1395308   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1395309   +   end;
MPRINT(EM_DIAGRAM):   end;
1395310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395311   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1395312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395314   +   end;
MPRINT(EM_DIAGRAM):   end;
1395315   +end;
MPRINT(EM_DIAGRAM):   end;
1395316   +
1395317   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1395318   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1395319   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1395320   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1395321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395323   +end;
MPRINT(EM_DIAGRAM):   end;
1395324   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395326   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1395327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1395329   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1395330   +   end;
MPRINT(EM_DIAGRAM):   end;
1395331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1395332   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1395333   +   end;
MPRINT(EM_DIAGRAM):   end;
1395334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395335   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1395336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395338   +   end;
MPRINT(EM_DIAGRAM):   end;
1395339   +end;
MPRINT(EM_DIAGRAM):   end;
1395340   +
1395341   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1395342   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1395343   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1395344   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1395345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395347   +end;
MPRINT(EM_DIAGRAM):   end;
1395348   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395350   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1395351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1395353   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1395354   +   end;
MPRINT(EM_DIAGRAM):   end;
1395355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1395356   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1395357   +   end;
MPRINT(EM_DIAGRAM):   end;
1395358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395359   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1395360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395362   +   end;
MPRINT(EM_DIAGRAM):   end;
1395363   +end;
MPRINT(EM_DIAGRAM):   end;
1395364   +
1395365   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1395366   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1395367   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1395368   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1395369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395371   +end;
MPRINT(EM_DIAGRAM):   end;
1395372   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395374   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1395375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1395377   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1395378   +   end;
MPRINT(EM_DIAGRAM):   end;
1395379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1395380   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1395381   +   end;
MPRINT(EM_DIAGRAM):   end;
1395382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395383   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1395384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395386   +   end;
MPRINT(EM_DIAGRAM):   end;
1395387   +end;
MPRINT(EM_DIAGRAM):   end;
1395388   +
1395389   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1395390   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1395391   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1395392   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1395393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395395   +end;
MPRINT(EM_DIAGRAM):   end;
1395396   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395398   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1395399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395400   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1395401   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1395402   +   end;
MPRINT(EM_DIAGRAM):   end;
1395403   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1395404   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1395405   +   end;
MPRINT(EM_DIAGRAM):   end;
1395406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395407   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1395408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395410   +   end;
MPRINT(EM_DIAGRAM):   end;
1395411   +end;
MPRINT(EM_DIAGRAM):   end;
1395412   +
1395413   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1395414   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1395415   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1395416   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1395417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395419   +end;
MPRINT(EM_DIAGRAM):   end;
1395420   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395422   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1395423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395424   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1395425   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1395426   +   end;
MPRINT(EM_DIAGRAM):   end;
1395427   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1395428   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1395429   +   end;
MPRINT(EM_DIAGRAM):   end;
1395430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395431   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1395432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395434   +   end;
MPRINT(EM_DIAGRAM):   end;
1395435   +end;
MPRINT(EM_DIAGRAM):   end;
1395436   +
1395437   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1395438   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1395439   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1395440   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1395441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395443   +end;
MPRINT(EM_DIAGRAM):   end;
1395444   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1395446   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1395447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395448   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1395449   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1395450   +   end;
MPRINT(EM_DIAGRAM):   end;
1395451   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1395452   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1395453   +   end;
MPRINT(EM_DIAGRAM):   end;
1395454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395455   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1395456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395458   +   end;
MPRINT(EM_DIAGRAM):   end;
1395459   +end;
MPRINT(EM_DIAGRAM):   end;
1395460   +
1395461   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1395462   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1395463   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1395464   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1395465   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1395466   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1395467   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1395468   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1395469   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1395470   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1395471   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1395472   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1395473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395475   +end;
MPRINT(EM_DIAGRAM):   end;
1395476   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395477   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1395478   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1395479   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395480   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1395481   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1395482   +   end;
MPRINT(EM_DIAGRAM):   end;
1395483   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1395484   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1395485   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1395486   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1395487   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1395488   +   end;
MPRINT(EM_DIAGRAM):   end;
1395489   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1395490   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1395491   +   end;
MPRINT(EM_DIAGRAM):   end;
1395492   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1395493   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1395494   +   end;
MPRINT(EM_DIAGRAM):   end;
1395495   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1395496   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1395497   +   end;
MPRINT(EM_DIAGRAM):   end;
1395498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395499   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1395500   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1395501   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1395502   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1395503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395505   +   end;
MPRINT(EM_DIAGRAM):   end;
1395506   +end;
MPRINT(EM_DIAGRAM):   end;
1395507   +
1395508   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1395509   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1395510   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1395511   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1395512   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1395513   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1395514   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1395515   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1395516   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1395517   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1395518   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1395519   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1395520   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1395521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1395522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395523   +end;
MPRINT(EM_DIAGRAM):   end;
1395524   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395525   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1395526   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1395527   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395528   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1395529   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1395530   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1395531   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1395532   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1395533   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1395534   +         end;
MPRINT(EM_DIAGRAM):   end;
1395535   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1395536   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1395537   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1395538   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1395539   +            end;
MPRINT(EM_DIAGRAM):   end;
1395540   +         end;
MPRINT(EM_DIAGRAM):   end;
1395541   +      end;
MPRINT(EM_DIAGRAM):   end;
1395542   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1395543   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1395544   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1395545   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1395546   +         end;
MPRINT(EM_DIAGRAM):   end;
1395547   +      end;
MPRINT(EM_DIAGRAM):   end;
1395548   +   end;
MPRINT(EM_DIAGRAM):   end;
1395549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395550   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1395551   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1395552   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1395553   +      end;
MPRINT(EM_DIAGRAM):   end;
1395554   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1395555   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1395556   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1395557   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1395558   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1395559   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1395560   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1395561   +         end;
MPRINT(EM_DIAGRAM):   end;
1395562   +      end;
MPRINT(EM_DIAGRAM):   end;
1395563   +   end;
MPRINT(EM_DIAGRAM):   end;
1395564   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1395565   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1395566   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1395567   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1395568   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1395569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1395570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395571   +   end;
MPRINT(EM_DIAGRAM):   end;
1395572   +end;
MPRINT(EM_DIAGRAM):   end;
1395573   +
1395574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395575   +*** Checking missing input Interval
1395576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1395577   +
1395578   +IF NMISS(
1395579   +   AcceptedCmpTotal ,
1395580   +   Age ,
1395581   +   Frq ,
1395582   +   Income ,
1395583   +   Kidhome ,
1395584   +   Mnt ,
1395585   +   MntFishProducts ,
1395586   +   MntFruits ,
1395587   +   MntGoldProds ,
1395588   +   MntMeatProducts ,
1395589   +   MntSweetProducts ,
1395590   +   MntWines ,
1395591   +   MonthsAsCustomer ,
1395592   +   NumCatalogPurchases ,
1395593   +   NumDealsPurchases ,
1395594   +   NumDistPurchases ,
1395595   +   NumStorePurchases ,
1395596   +   NumWebPurchases ,
1395597   +   NumWebVisitsMonth ,
1395598   +   RFMstat ,
1395599   +   RMntFrq ,
1395600   +   Recency ,
1395601   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1395602   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1395603   +
1395604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1395605   +END;
MPRINT(EM_DIAGRAM):   END;
1395606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395607   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1395608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395609   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1395610   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1395611   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1395612   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1395613   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1395614   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1395615   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1395616   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1395617   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1395618   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1395619   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1395620   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1395621   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1395622   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1395623   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1395624   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1395625   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1395626   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1395627   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1395628   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1395629   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1395630   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1395631   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1395632   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1395633   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1395634   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1395635   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1395636   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1395637   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1395638   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1395639   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1395640   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1395641   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1395642   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1395643   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1395644   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1395645   +END;
MPRINT(EM_DIAGRAM):   END;
1395646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1395647   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1395648   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1395649   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1395650   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1395651   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1395652   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1395653   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1395654   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1395655   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1395656   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1395657   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1395658   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1395659   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1395660   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1395661   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1395662   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1395663   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1395664   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1395665   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1395666   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1395667   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1395668   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1395669   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1395670   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1395671   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1395672   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1395673   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1395674   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1395675   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1395676   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1395677   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1395678   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1395679   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1395680   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1395681   +   ELSE S_NumCatalogPurchases
1395682   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1395683   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1395684   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1395685   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1395686   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1395687   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1395688   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1395689   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1395690   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1395691   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1395692   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1395693   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1395694   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1395695   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1395696   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1395697   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1395698   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1395699   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1395700   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1395701   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1395702   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1395703   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1395704   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1395705   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1395706   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1395707   +END;
MPRINT(EM_DIAGRAM):   END;
1395708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395709   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1395710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395712   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1395713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395715   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1395716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395717   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1395718   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1395719   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1395720   +        S_Income  +     -0.0761121347886 * S_Kidhome
1395721   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1395722   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1395723   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1395724   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1395725   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1395726   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1395727   +          +     0.83893684194413 * S_NumDealsPurchases
1395728   +          +     0.23391006875291 * S_NumDistPurchases
1395729   +          +    -0.63370705462074 * S_NumStorePurchases
1395730   +          +     -0.9137408014067 * S_NumWebPurchases
1395731   +          +     0.89109351479441 * S_NumWebVisitsMonth
1395732   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1395733   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1395734   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age +
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome +
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 *
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts +
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 *
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 *
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 *
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 *
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq +
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1395735   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1395736   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1395737   +        S_Income  +    -0.43909782819329 * S_Kidhome
1395738   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1395739   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1395740   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1395741   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1395742   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1395743   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1395744   +          +      0.2218973353638 * S_NumDealsPurchases
1395745   +          +      0.0062360950528 * S_NumDistPurchases
1395746   +          +    -0.57621747951002 * S_NumStorePurchases
1395747   +          +    -0.33564890905657 * S_NumWebPurchases
1395748   +          +     0.82482365540301 * S_NumWebVisitsMonth
1395749   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1395750   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1395751   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age +
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome +
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 *
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts +
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 *
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 *
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 *
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 *
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq +
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1395752   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1395753   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1395754   +        S_Income  +    -0.03572236011846 * S_Kidhome
1395755   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1395756   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1395757   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1395758   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1395759   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1395760   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1395761   +          +      -0.174147250062 * S_NumDealsPurchases
1395762   +          +    -0.22921682388864 * S_NumDistPurchases
1395763   +          +     0.41526854684299 * S_NumStorePurchases
1395764   +          +    -0.27675565493519 * S_NumWebPurchases
1395765   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1395766   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1395767   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1395768   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome +
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 *
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts +
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 *
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 *
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 *
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 *
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq +
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1395769   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1395770   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1395771   +        S_Income  +    -0.04788369327547 * S_Kidhome
1395772   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1395773   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1395774   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1395775   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1395776   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1395777   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1395778   +          +    -0.46022430102423 * S_NumDealsPurchases
1395779   +          +     0.15831339342044 * S_NumDistPurchases
1395780   +          +     0.22480465173719 * S_NumStorePurchases
1395781   +          +     0.44798923484609 * S_NumWebPurchases
1395782   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1395783   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1395784   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1395785   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age +
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome +
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 *
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts +
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 *
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 *
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 *
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 *
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq +
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1395786   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1395787   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1395788   +        S_Income  +     0.53994304261534 * S_Kidhome
1395789   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1395790   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1395791   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1395792   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1395793   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1395794   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1395795   +          +     0.03650267472167 * S_NumDealsPurchases
1395796   +          +    -0.03322709524939 * S_NumDistPurchases
1395797   +          +     -0.0022226424472 * S_NumStorePurchases
1395798   +          +    -0.10131236740674 * S_NumWebPurchases
1395799   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1395800   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1395801   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1395802   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome +
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 *
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts +
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 *
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 *
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 *
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 *
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq +
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1395803   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1395804   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1395805   +        S_Income  +    -0.52576099429582 * S_Kidhome
1395806   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1395807   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1395808   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1395809   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1395810   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1395811   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1395812   +          +    -0.50209914729324 * S_NumDealsPurchases
1395813   +          +    -0.46217244513696 * S_NumDistPurchases
1395814   +          +      0.1832648560248 * S_NumStorePurchases
1395815   +          +     0.02866153257072 * S_NumWebPurchases
1395816   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1395817   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1395818   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1395819   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age +
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome +
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 *
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts +
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 *
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 *
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 *
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 *
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq +
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1395820   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1395821   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1395822   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1395823   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1395824   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 *
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 +
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 *
HigherEducationBinary0 ;
1395825   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1395826   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1395827   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1395828   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1395829   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 *
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 +
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 *
HigherEducationBinary0 ;
1395830   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1395831   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1395832   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1395833   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1395834   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 *
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 +
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 *
HigherEducationBinary0 ;
1395835   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1395836   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1395837   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1395838   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1395839   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 *
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 +
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 *
HigherEducationBinary0 ;
1395840   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1395841   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1395842   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1395843   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1395844   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 *
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 +
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 *
HigherEducationBinary0 ;
1395845   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1395846   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1395847   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1395848   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1395849   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 *
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 +
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 *
HigherEducationBinary0 ;
1395850   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1395851   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1395852   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1395853   +          +     0.13815069071511 * Marital_StatusDivorced
1395854   +          +      0.0732913060929 * Marital_StatusMarried
1395855   +          +    -0.22858418468746 * Marital_StatusSingle
1395856   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 *
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster +
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried +
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1395857   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1395858   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1395859   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1395860   +          +     0.32909808396509 * Marital_StatusDivorced
1395861   +          +    -0.50160173579004 * Marital_StatusMarried
1395862   +          +     0.57207102211224 * Marital_StatusSingle
1395863   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 *
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried +
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1395864   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1395865   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1395866   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1395867   +          +    -0.07154493730107 * Marital_StatusDivorced
1395868   +          +     0.29126100051603 * Marital_StatusMarried
1395869   +          +    -0.06936325857004 * Marital_StatusSingle
1395870   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 *
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried +
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1395871   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1395872   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1395873   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1395874   +          +    -0.05004640872388 * Marital_StatusDivorced
1395875   +          +     0.22197974032974 * Marital_StatusMarried
1395876   +          +    -0.33931504637453 * Marital_StatusSingle
1395877   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 *
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster +
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried +
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1395878   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1395879   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1395880   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1395881   +          +    -0.07748874669478 * Marital_StatusDivorced
1395882   +          +     1.05442281159109 * Marital_StatusMarried
1395883   +          +    -0.67190984038867 * Marital_StatusSingle
1395884   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 *
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster +
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried +
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1395885   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1395886   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1395887   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1395888   +          +    -0.20478208715114 * Marital_StatusDivorced
1395889   +          +    -0.40186383707642 * Marital_StatusMarried
1395890   +          +     0.43474841662774 * Marital_StatusSingle
1395891   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 *
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried +
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1395892   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1395893   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1395894   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1395895   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1395896   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1395897   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1395898   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1395899   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1395900   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1395901   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1395902   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1395903   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1395904   +END;
MPRINT(EM_DIAGRAM):   END;
1395905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1395906   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1395907   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1395908   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1395909   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1395910   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1395911   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1395912   +END;
MPRINT(EM_DIAGRAM):   END;
1395913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395914   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1395915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395916   +
1395917   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1395918   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1395919   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1395920   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1395921   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1395922   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1395923   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1395924   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1395925   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1395926   +end;
MPRINT(EM_DIAGRAM):   end;
1395927   +else do;
MPRINT(EM_DIAGRAM):   else do;
1395928   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1395929   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1395930   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1395931   +   end;
MPRINT(EM_DIAGRAM):   end;
1395932   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1395933   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1395934   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1395935   +   end;
MPRINT(EM_DIAGRAM):   end;
1395936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1395937   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1395938   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1395939   +   end;
MPRINT(EM_DIAGRAM):   end;
1395940   +end;
MPRINT(EM_DIAGRAM):   end;
1395941   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1395942   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1395943   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1395944   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 +
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 +
-2.02736184847322 * H16 ;
1395945   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1395946   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1395947   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1395948   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1395949   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1395950   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1395951   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1395952   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1395953   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1395954   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1395955   +END;
MPRINT(EM_DIAGRAM):   END;
1395956   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1395957   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1395958   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1395959   +END;
MPRINT(EM_DIAGRAM):   END;
1395960   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1395961   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1395962   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1395963   +END;
MPRINT(EM_DIAGRAM):   END;
1395964   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1395965   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1395966   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1395967   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1395968   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1395969   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1395970   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1395971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395972   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1395973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1395974   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1395975   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1395976   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1395977   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1395978   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1395979   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1395980   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1395981   +END;
MPRINT(EM_DIAGRAM):   END;
1395982   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1395983   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1395984   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1395985   +drop
1395986   +H11
1395987   +H12
1395988   +H13
1395989   +H14
1395990   +H15
1395991   +H16
1395992   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1395993   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1395994   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1395995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395996   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1395997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1395998   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1395999   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1396000   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1396001   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1396002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396003   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1396004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396005   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1396006   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1396007   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1396008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396009   +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
1396010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396012   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1396013   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1396014   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1396015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396016   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1396017   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1396018   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1396019   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1396020   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1396021   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1396022   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1396023   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1396024   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1396025   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1396026   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1396027   +LENGTH _WARN_ $4
1396028   +      F_DepVar  $ 12
1396029   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1396030   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1396031   +
1396032   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1396033   +
1396034   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1396035   +
1396036   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1396037   +
1396038   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1396039   +
1396040   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1396041   +
1396042   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1396043   +
1396044   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1396045   +
1396046   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1396047   +
1396048   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1396049   +
1396050   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1396051   +
1396052   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1396053   +
1396054   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1396055   +
1396056   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1396057   +
1396058   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1396059   +
1396060   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1396061   +
1396062   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1396063   +
1396064   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1396065   +
1396066   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1396067   +
1396068   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1396069   +
1396070   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1396071   +
1396072   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1396073   +
1396074   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1396075   +
1396076   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1396077   +
1396078   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1396079   +
1396080   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1396081   +
1396082   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1396083   +
1396084   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1396085   +
1396086   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1396087   +
1396088   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1396089   +
1396090   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1396091   +
1396092   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1396093   +
1396094   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1396095   +
1396096   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1396097   +
1396098   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1396099   +
1396100   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1396101   +
1396102   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1396103   +
1396104   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1396105   +
1396106   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1396107   +
1396108   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1396109   +
1396110   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1396111   +
1396112   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1396113   +
1396114   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1396115   +
1396116   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1396117   +
1396118   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1396119   +
1396120   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1396121   +
1396122   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1396123   +
1396124   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1396125   +
1396126   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1396127   +
1396128   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1396129   +
1396130   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1396131   +
1396132   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1396133   +
1396134   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1396135   +
1396136   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1396137   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1396138   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1396139   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1396140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396142   +end;
MPRINT(EM_DIAGRAM):   end;
1396143   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396145   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1396146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1396148   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1396149   +   end;
MPRINT(EM_DIAGRAM):   end;
1396150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1396151   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1396152   +   end;
MPRINT(EM_DIAGRAM):   end;
1396153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396154   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1396155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396157   +   end;
MPRINT(EM_DIAGRAM):   end;
1396158   +end;
MPRINT(EM_DIAGRAM):   end;
1396159   +
1396160   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1396161   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1396162   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1396163   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1396164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396166   +end;
MPRINT(EM_DIAGRAM):   end;
1396167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396169   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1396170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1396172   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1396173   +   end;
MPRINT(EM_DIAGRAM):   end;
1396174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1396175   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1396176   +   end;
MPRINT(EM_DIAGRAM):   end;
1396177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396178   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1396179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396181   +   end;
MPRINT(EM_DIAGRAM):   end;
1396182   +end;
MPRINT(EM_DIAGRAM):   end;
1396183   +
1396184   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1396185   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1396186   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1396187   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1396188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396190   +end;
MPRINT(EM_DIAGRAM):   end;
1396191   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396193   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1396194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1396196   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1396197   +   end;
MPRINT(EM_DIAGRAM):   end;
1396198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1396199   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1396200   +   end;
MPRINT(EM_DIAGRAM):   end;
1396201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396202   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1396203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396205   +   end;
MPRINT(EM_DIAGRAM):   end;
1396206   +end;
MPRINT(EM_DIAGRAM):   end;
1396207   +
1396208   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1396209   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1396210   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1396211   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1396212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396214   +end;
MPRINT(EM_DIAGRAM):   end;
1396215   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396217   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1396218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1396220   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1396221   +   end;
MPRINT(EM_DIAGRAM):   end;
1396222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1396223   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1396224   +   end;
MPRINT(EM_DIAGRAM):   end;
1396225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396226   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1396227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396229   +   end;
MPRINT(EM_DIAGRAM):   end;
1396230   +end;
MPRINT(EM_DIAGRAM):   end;
1396231   +
1396232   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1396233   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1396234   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1396235   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1396236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396238   +end;
MPRINT(EM_DIAGRAM):   end;
1396239   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396241   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1396242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1396244   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1396245   +   end;
MPRINT(EM_DIAGRAM):   end;
1396246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1396247   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1396248   +   end;
MPRINT(EM_DIAGRAM):   end;
1396249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396250   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1396251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396253   +   end;
MPRINT(EM_DIAGRAM):   end;
1396254   +end;
MPRINT(EM_DIAGRAM):   end;
1396255   +
1396256   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1396257   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1396258   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1396259   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1396260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396262   +end;
MPRINT(EM_DIAGRAM):   end;
1396263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396265   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1396266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1396268   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1396269   +   end;
MPRINT(EM_DIAGRAM):   end;
1396270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1396271   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1396272   +   end;
MPRINT(EM_DIAGRAM):   end;
1396273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396274   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1396275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396277   +   end;
MPRINT(EM_DIAGRAM):   end;
1396278   +end;
MPRINT(EM_DIAGRAM):   end;
1396279   +
1396280   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1396281   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1396282   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1396283   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1396284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396286   +end;
MPRINT(EM_DIAGRAM):   end;
1396287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1396289   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1396290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396291   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1396292   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1396293   +   end;
MPRINT(EM_DIAGRAM):   end;
1396294   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1396295   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1396296   +   end;
MPRINT(EM_DIAGRAM):   end;
1396297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396298   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1396299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396301   +   end;
MPRINT(EM_DIAGRAM):   end;
1396302   +end;
MPRINT(EM_DIAGRAM):   end;
1396303   +
1396304   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1396305   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1396306   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1396307   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1396308   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1396309   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1396310   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1396311   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1396312   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1396313   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1396314   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1396315   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1396316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396318   +end;
MPRINT(EM_DIAGRAM):   end;
1396319   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396320   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1396321   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1396322   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396323   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1396324   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1396325   +   end;
MPRINT(EM_DIAGRAM):   end;
1396326   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1396327   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1396328   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1396329   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1396330   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1396331   +   end;
MPRINT(EM_DIAGRAM):   end;
1396332   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1396333   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1396334   +   end;
MPRINT(EM_DIAGRAM):   end;
1396335   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1396336   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1396337   +   end;
MPRINT(EM_DIAGRAM):   end;
1396338   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1396339   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1396340   +   end;
MPRINT(EM_DIAGRAM):   end;
1396341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396342   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1396343   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1396344   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1396345   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1396346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396348   +   end;
MPRINT(EM_DIAGRAM):   end;
1396349   +end;
MPRINT(EM_DIAGRAM):   end;
1396350   +
1396351   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1396352   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1396353   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1396354   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1396355   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1396356   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1396357   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1396358   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1396359   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1396360   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1396361   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1396362   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1396363   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1396364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1396365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396366   +end;
MPRINT(EM_DIAGRAM):   end;
1396367   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396368   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1396369   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1396370   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396371   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1396372   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1396373   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1396374   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1396375   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1396376   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1396377   +         end;
MPRINT(EM_DIAGRAM):   end;
1396378   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1396379   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1396380   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1396381   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1396382   +            end;
MPRINT(EM_DIAGRAM):   end;
1396383   +         end;
MPRINT(EM_DIAGRAM):   end;
1396384   +      end;
MPRINT(EM_DIAGRAM):   end;
1396385   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1396386   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1396387   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1396388   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1396389   +         end;
MPRINT(EM_DIAGRAM):   end;
1396390   +      end;
MPRINT(EM_DIAGRAM):   end;
1396391   +   end;
MPRINT(EM_DIAGRAM):   end;
1396392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396393   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1396394   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1396395   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1396396   +      end;
MPRINT(EM_DIAGRAM):   end;
1396397   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1396398   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1396399   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1396400   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1396401   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1396402   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1396403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1396404   +         end;
MPRINT(EM_DIAGRAM):   end;
1396405   +      end;
MPRINT(EM_DIAGRAM):   end;
1396406   +   end;
MPRINT(EM_DIAGRAM):   end;
1396407   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1396408   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1396409   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1396410   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1396411   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1396412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1396413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396414   +   end;
MPRINT(EM_DIAGRAM):   end;
1396415   +end;
MPRINT(EM_DIAGRAM):   end;
1396416   +
1396417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396418   +*** Checking missing input Interval
1396419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1396420   +
1396421   +IF NMISS(
1396422   +   AcceptedCmpTotal ,
1396423   +   Age ,
1396424   +   Frq ,
1396425   +   Income ,
1396426   +   Kidhome ,
1396427   +   Mnt ,
1396428   +   MntFishProducts ,
1396429   +   MntFruits ,
1396430   +   MntGoldProds ,
1396431   +   MntMeatProducts ,
1396432   +   MntSweetProducts ,
1396433   +   MntWines ,
1396434   +   MonthsAsCustomer ,
1396435   +   NumCatalogPurchases ,
1396436   +   NumDealsPurchases ,
1396437   +   NumDistPurchases ,
1396438   +   NumStorePurchases ,
1396439   +   NumWebPurchases ,
1396440   +   NumWebVisitsMonth ,
1396441   +   RFMstat ,
1396442   +   RMntFrq ,
1396443   +   Recency ,
1396444   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1396445   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1396446   +
1396447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1396448   +END;
MPRINT(EM_DIAGRAM):   END;
1396449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396450   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1396451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396452   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1396453   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1396454   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1396455   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1396456   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1396457   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1396458   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1396459   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1396460   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1396461   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1396462   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1396463   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1396464   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1396465   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1396466   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1396467   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1396468   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1396469   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1396470   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1396471   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1396472   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1396473   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1396474   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1396475   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1396476   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1396477   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1396478   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1396479   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1396480   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1396481   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1396482   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1396483   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1396484   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1396485   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1396486   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1396487   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1396488   +END;
MPRINT(EM_DIAGRAM):   END;
1396489   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1396490   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1396491   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1396492   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1396493   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1396494   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1396495   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1396496   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1396497   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1396498   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1396499   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1396500   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1396501   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1396502   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1396503   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1396504   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1396505   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1396506   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1396507   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1396508   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1396509   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1396510   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1396511   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1396512   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1396513   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1396514   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1396515   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1396516   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1396517   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1396518   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1396519   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1396520   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1396521   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1396522   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1396523   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1396524   +   ELSE S_NumCatalogPurchases
1396525   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1396526   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1396527   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1396528   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1396529   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1396530   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1396531   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1396532   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1396533   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1396534   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1396535   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1396536   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1396537   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1396538   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1396539   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1396540   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1396541   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1396542   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1396543   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1396544   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1396545   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1396546   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1396547   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1396548   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1396549   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1396550   +END;
MPRINT(EM_DIAGRAM):   END;
1396551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396552   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1396553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396555   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1396556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396558   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1396559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396560   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1396561   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1396562   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1396563   +        S_Income  +    -0.45967008908227 * S_Kidhome
1396564   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1396565   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1396566   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1396567   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1396568   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1396569   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1396570   +          +    -0.23353175442713 * S_NumDealsPurchases
1396571   +          +     0.18635522192442 * S_NumDistPurchases
1396572   +          +     0.37209457890956 * S_NumStorePurchases
1396573   +          +     0.25018232304823 * S_NumWebPurchases
1396574   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1396575   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1396576   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1396577   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome +
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 *
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts +
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 *
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 *
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 *
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 *
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq +
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1396578   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1396579   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1396580   +        S_Income  +     0.23329613045589 * S_Kidhome
1396581   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1396582   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1396583   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1396584   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1396585   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1396586   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1396587   +          +    -0.09699498622435 * S_NumDealsPurchases
1396588   +          +     0.40364070798795 * S_NumDistPurchases
1396589   +          +      0.2162579072164 * S_NumStorePurchases
1396590   +          +     0.26248410135079 * S_NumWebPurchases
1396591   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1396592   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1396593   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1396594   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome +
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 *
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts +
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 *
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 *
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 *
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 *
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq +
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1396595   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1396596   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1396597   +        S_Income  +     0.20139862021528 * S_Kidhome
1396598   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1396599   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1396600   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1396601   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1396602   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1396603   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1396604   +          +     0.09066191700879 * S_NumDealsPurchases
1396605   +          +    -0.05769000978222 * S_NumDistPurchases
1396606   +          +    -0.10089591692167 * S_NumStorePurchases
1396607   +          +    -0.00088654116561 * S_NumWebPurchases
1396608   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1396609   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1396610   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1396611   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome +
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 *
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts +
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 *
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 *
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 *
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 *
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq +
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1396612   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1396613   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1396614   +        S_Income  +      0.2502648333687 * S_Kidhome
1396615   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1396616   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1396617   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1396618   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1396619   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1396620   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1396621   +          +     0.83424444661619 * S_NumDealsPurchases
1396622   +          +     0.31333214543205 * S_NumDistPurchases
1396623   +          +    -0.61732647242019 * S_NumStorePurchases
1396624   +          +    -1.01955156895052 * S_NumWebPurchases
1396625   +          +     0.13017609997428 * S_NumWebVisitsMonth
1396626   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1396627   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1396628   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age +
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome +
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 *
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts +
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 *
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 *
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 *
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 *
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq +
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1396629   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1396630   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1396631   +        S_Income  +    -0.70952256145726 * S_Kidhome
1396632   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1396633   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1396634   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1396635   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1396636   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1396637   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1396638   +          +     0.63522682456102 * S_NumDealsPurchases
1396639   +          +      0.0043057429215 * S_NumDistPurchases
1396640   +          +    -0.76667751707574 * S_NumStorePurchases
1396641   +          +    -0.73436881033241 * S_NumWebPurchases
1396642   +          +     1.59331554601341 * S_NumWebVisitsMonth
1396643   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1396644   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1396645   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome +
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 *
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts +
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 *
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 *
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 *
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 *
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq +
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1396646   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1396647   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1396648   +        S_Income  +    -0.23632967504194 * S_Kidhome
1396649   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1396650   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1396651   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1396652   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1396653   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1396654   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1396655   +          +     -0.3032858959477 * S_NumDealsPurchases
1396656   +          +     0.11343979556999 * S_NumDistPurchases
1396657   +          +     0.19545021266061 * S_NumStorePurchases
1396658   +          +      0.1566777684546 * S_NumWebPurchases
1396659   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1396660   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1396661   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1396662   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome +
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 *
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts +
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 *
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 *
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 *
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 *
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq +
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1396663   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1396664   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1396665   +        S_Income  +    -0.47847362741737 * S_Kidhome
1396666   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1396667   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1396668   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1396669   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1396670   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1396671   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1396672   +          +    -0.17510289915098 * S_NumDealsPurchases
1396673   +          +     0.16952490494417 * S_NumDistPurchases
1396674   +          +     0.11152117614204 * S_NumStorePurchases
1396675   +          +     0.22594341376741 * S_NumWebPurchases
1396676   +          +     0.64523546369354 * S_NumWebVisitsMonth
1396677   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1396678   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1396679   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age +
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome +
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 *
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts +
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 *
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 *
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 *
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 *
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq +
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1396680   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1396681   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1396682   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1396683   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1396684   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 *
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 +
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 *
HigherEducationBinary0 ;
1396685   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1396686   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1396687   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1396688   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1396689   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 *
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 +
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 *
HigherEducationBinary0 ;
1396690   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1396691   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1396692   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1396693   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1396694   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 *
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 +
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 *
HigherEducationBinary0 ;
1396695   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1396696   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1396697   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1396698   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1396699   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 *
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 +
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 *
HigherEducationBinary0 ;
1396700   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1396701   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1396702   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1396703   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1396704   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 *
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 +
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 *
HigherEducationBinary0 ;
1396705   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1396706   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1396707   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1396708   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1396709   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 *
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 +
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 *
HigherEducationBinary0 ;
1396710   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1396711   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1396712   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1396713   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1396714   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 *
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 +
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 *
HigherEducationBinary0 ;
1396715   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1396716   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1396717   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1396718   +          +     0.42319965972117 * Marital_StatusDivorced
1396719   +          +    -0.45015157317991 * Marital_StatusMarried
1396720   +          +     0.43076106925345 * Marital_StatusSingle
1396721   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 *
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster +
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried +
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1396722   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1396723   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1396724   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1396725   +          +     0.11384347873072 * Marital_StatusDivorced
1396726   +          +     0.51442453272823 * Marital_StatusMarried
1396727   +          +    -0.38966058028661 * Marital_StatusSingle
1396728   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 *
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried +
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1396729   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1396730   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1396731   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1396732   +          +    -0.05213342781535 * Marital_StatusDivorced
1396733   +          +     0.07520352092928 * Marital_StatusMarried
1396734   +          +     0.20175107471623 * Marital_StatusSingle
1396735   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 *
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried +
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1396736   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1396737   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1396738   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1396739   +          +    -0.40635592200933 * Marital_StatusDivorced
1396740   +          +     0.64772941459031 * Marital_StatusMarried
1396741   +          +    -0.36402842056603 * Marital_StatusSingle
1396742   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 *
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried +
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1396743   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1396744   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1396745   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1396746   +          +     0.87932592764844 * Marital_StatusDivorced
1396747   +          +    -0.85946473083734 * Marital_StatusMarried
1396748   +          +     0.74505733668545 * Marital_StatusSingle
1396749   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 *
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried +
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1396750   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1396751   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1396752   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1396753   +          +    -0.11861748280641 * Marital_StatusDivorced
1396754   +          +    -0.15869097739395 * Marital_StatusMarried
1396755   +          +     0.34415019828259 * Marital_StatusSingle
1396756   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 *
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried +
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1396757   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1396758   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1396759   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1396760   +          +     0.14995740697816 * Marital_StatusDivorced
1396761   +          +    -1.01788822114068 * Marital_StatusMarried
1396762   +          +     0.70532758126153 * Marital_StatusSingle
1396763   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 *
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried +
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1396764   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1396765   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1396766   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1396767   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1396768   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1396769   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1396770   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1396771   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1396772   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1396773   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1396774   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1396775   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1396776   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1396777   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1396778   +END;
MPRINT(EM_DIAGRAM):   END;
1396779   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1396780   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1396781   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1396782   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1396783   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1396784   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1396785   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1396786   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1396787   +END;
MPRINT(EM_DIAGRAM):   END;
1396788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396789   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1396790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396791   +
1396792   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1396793   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1396794   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1396795   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1396796   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1396797   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1396798   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1396799   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1396800   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1396801   +end;
MPRINT(EM_DIAGRAM):   end;
1396802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396803   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1396804   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1396805   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1396806   +   end;
MPRINT(EM_DIAGRAM):   end;
1396807   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1396808   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1396809   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1396810   +   end;
MPRINT(EM_DIAGRAM):   end;
1396811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1396812   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1396813   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1396814   +   end;
MPRINT(EM_DIAGRAM):   end;
1396815   +end;
MPRINT(EM_DIAGRAM):   end;
1396816   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1396817   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1396818   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1396819   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1396820   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 +
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 *
H16 + 2.13310046968058 * H17 ;
1396821   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1396822   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1396823   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1396824   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1396825   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1396826   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1396827   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1396828   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1396829   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1396830   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1396831   +END;
MPRINT(EM_DIAGRAM):   END;
1396832   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1396833   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1396834   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1396835   +END;
MPRINT(EM_DIAGRAM):   END;
1396836   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1396837   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1396838   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1396839   +END;
MPRINT(EM_DIAGRAM):   END;
1396840   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1396841   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1396842   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1396843   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1396844   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1396845   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1396846   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1396847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396848   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1396849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1396850   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1396851   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1396852   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1396853   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1396854   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1396855   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1396856   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1396857   +END;
MPRINT(EM_DIAGRAM):   END;
1396858   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1396859   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1396860   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1396861   +drop
1396862   +H11
1396863   +H12
1396864   +H13
1396865   +H14
1396866   +H15
1396867   +H16
1396868   +H17
1396869   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1396870   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1396871   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1396872   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396873   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1396874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396875   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1396876   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1396877   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1396878   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1396879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396880   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1396881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396882   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1396883   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1396884   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1396885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396886   +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
1396887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396888   +P_DepVar1 = (
1396889   +Reg5_P_DepVar1 +
1396890   +Reg_P_DepVar1 +
1396891   +Neural4_P_DepVar1 +
1396892   +Neural2_P_DepVar1 +
1396893   +Neural3_P_DepVar1 +
1396894   +Neural9_P_DepVar1 +
1396895   +Neural10_P_DepVar1
1396896   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg5_P_DepVar1 + Reg_P_DepVar1 + Neural4_P_DepVar1 +
Neural2_P_DepVar1 + Neural3_P_DepVar1 + Neural9_P_DepVar1 + Neural10_P_DepVar1 )/7;
1396897   +P_DepVar0 = (
1396898   +Reg5_P_DepVar0 +
1396899   +Reg_P_DepVar0 +
1396900   +Neural4_P_DepVar0 +
1396901   +Neural2_P_DepVar0 +
1396902   +Neural3_P_DepVar0 +
1396903   +Neural9_P_DepVar0 +
1396904   +Neural10_P_DepVar0
1396905   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg5_P_DepVar0 + Reg_P_DepVar0 + Neural4_P_DepVar0 +
Neural2_P_DepVar0 + Neural3_P_DepVar0 + Neural9_P_DepVar0 + Neural10_P_DepVar0 )/7;
1396906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396907   +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
1396908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396909   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1396910   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1396911   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1396912   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1396913   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1396914   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1396915   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1396916   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1396917   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1396918   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1396919   +end;
MPRINT(EM_DIAGRAM):   end;
1396920   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1396921   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1396922   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1396923   +end;
MPRINT(EM_DIAGRAM):   end;
1396924   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1396925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396926   +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
1396927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396928   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1396929   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1396930   +else
1396931   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1396932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396933   +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
1396934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396935   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1396936   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1396937   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1396938   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1396939   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1396940   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1396941   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1396942   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1396943   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1396944   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1396945   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1396946   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1396947   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1396948   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1396949   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1396950   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1396951   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1396952   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1396953   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1396954   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1396955   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1396956   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1396957   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1396958   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1396959   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1396960   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1396961   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1396962   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1396962  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1396963   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1396963  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1396964   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1396964  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1396965   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1396965  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1396966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396967   +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
1396968   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1396969   +if
1396970   +F_DepVar NE '1'
1396971   +AND F_DepVar NE '0'
1396972   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1396973   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1396974   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1396975   +end;
MPRINT(EM_DIAGRAM):   end;
1396976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1396977   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1396978   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1396979   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1396980   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1396981   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1396982   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1396983   +END;
MPRINT(EM_DIAGRAM):   END;
1396984   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1396985    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1396986    quit;
1396987    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl14_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1397047    filename _pref
1397047  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1397048    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397049    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1397050   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1397051   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1397052   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1397053   +
1397054   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1397055   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1397056   +
1397057   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1397058   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1397059   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1397060   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1397061   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1397062   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1397063   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1397064   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1397065   +
1397066   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1397067   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1397068   +
1397069   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1397070   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1397071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397073   +end;
MPRINT(EM_DIAGRAM):   end;
1397074   +
1397075   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1397076   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1397077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397079   +end;
MPRINT(EM_DIAGRAM):   end;
1397080   +
1397081   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1397082   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1397083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397085   +end;
MPRINT(EM_DIAGRAM):   end;
1397086   +
1397087   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1397088   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1397089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397091   +end;
MPRINT(EM_DIAGRAM):   end;
1397092   +
1397093   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1397094   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1397095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397097   +end;
MPRINT(EM_DIAGRAM):   end;
1397098   +
1397099   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1397100   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1397101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397103   +end;
MPRINT(EM_DIAGRAM):   end;
1397104   +
1397105   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1397106   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1397107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397109   +end;
MPRINT(EM_DIAGRAM):   end;
1397110   +
1397111   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1397112   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1397113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397115   +end;
MPRINT(EM_DIAGRAM):   end;
1397116   +
1397117   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1397118   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1397119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397121   +end;
MPRINT(EM_DIAGRAM):   end;
1397122   +
1397123   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1397124   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1397125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397127   +end;
MPRINT(EM_DIAGRAM):   end;
1397128   +
1397129   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1397130   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1397131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397133   +end;
MPRINT(EM_DIAGRAM):   end;
1397134   +
1397135   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1397136   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1397137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397139   +end;
MPRINT(EM_DIAGRAM):   end;
1397140   +
1397141   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1397142   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1397143   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1397144   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1397145   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1397146   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1397147   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1397148   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1397149   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1397150   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1397151   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1397152   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1397153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397155   +end;
MPRINT(EM_DIAGRAM):   end;
1397156   +else do;
MPRINT(EM_DIAGRAM):   else do;
1397157   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1397158   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1397159   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1397160   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1397161   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1397162   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1397163   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1397164   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1397165   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397166   +         end;
MPRINT(EM_DIAGRAM):   end;
1397167   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1397168   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1397169   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1397170   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397171   +            end;
MPRINT(EM_DIAGRAM):   end;
1397172   +         end;
MPRINT(EM_DIAGRAM):   end;
1397173   +      end;
MPRINT(EM_DIAGRAM):   end;
1397174   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1397175   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1397176   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1397177   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397178   +         end;
MPRINT(EM_DIAGRAM):   end;
1397179   +      end;
MPRINT(EM_DIAGRAM):   end;
1397180   +   end;
MPRINT(EM_DIAGRAM):   end;
1397181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1397182   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1397183   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1397184   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397185   +      end;
MPRINT(EM_DIAGRAM):   end;
1397186   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1397187   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1397188   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1397189   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1397190   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1397191   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1397192   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397193   +         end;
MPRINT(EM_DIAGRAM):   end;
1397194   +      end;
MPRINT(EM_DIAGRAM):   end;
1397195   +   end;
MPRINT(EM_DIAGRAM):   end;
1397196   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1397197   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1397198   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1397199   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1397200   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1397201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1397202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397203   +   end;
MPRINT(EM_DIAGRAM):   end;
1397204   +end;
MPRINT(EM_DIAGRAM):   end;
1397205   +
1397206   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1397207   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1397208   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1397209   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1397210   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1397211   +end;
MPRINT(EM_DIAGRAM):   end;
1397212   +
1397213   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1397214   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1397215   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1397216   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1397217   +
1397218   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1397219   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1397220   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1397221   +
1397222   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1397223   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1397224   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1397225   +
1397226   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1397227   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1397228   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1397229   +
1397230   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1397231   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1397232   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1397233   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1397234   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1397235   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1397236   +
1397237   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1397238   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1397239   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1397240   +
1397241   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1397242   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1397243   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1397244   +
1397245   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1397246   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1397247   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1397248   +
1397249   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1397250   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1397251   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1397252   +
1397253   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1397254   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1397255   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1397256   +
1397257   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1397258   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1397259   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1397260   +
1397261   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1397262   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1397263   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1397264   +
1397265   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1397266   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1397267   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1397268   +
1397269   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1397270   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1397271   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1397272   +
1397273   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1397274   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1397275   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1397276   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1397277   +
1397278   +REG5DR1:
1397279   +
1397280   +
1397281   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1397282   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1397283   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1397284   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1397285   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1397286   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1397287   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1397288   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1397289   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1397290   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1397291   +end;
MPRINT(EM_DIAGRAM):   end;
1397292   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1397293   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1397294   +
1397295   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1397296   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1397297   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1397298    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1397299    quit;
1397300    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1397301    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1397302    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1397303    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1397304    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1397305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397306    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1397307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397309    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1397310    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397312    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397313    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1397314    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1397315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397316    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1397317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1397318    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1397319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397321    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397322    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1397323    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397324    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397325    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1397326    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1397326  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.
 
1397327    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397328    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1397329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397330    filename _pref
1397330  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1397331    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397332    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1397333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1397334   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1397335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1397336   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1397337   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1397338   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1397339    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1397340    quit;
1397341    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1397342    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1397343    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1397344    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1397345    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1397346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397347    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1397348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397350    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1397351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397353    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397354    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1397355    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1397356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397357    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1397358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1397359    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1397360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397362    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397363    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1397364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397365    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397366    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1397367    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1397367  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1397368    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397369    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1397370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397371    filename _pref
1397371  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1397372    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397373    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1397374   +
1397375   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1397376   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1397376  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1397377   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1397378   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1397379   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1397380   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1397381   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1397382    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1397383    quit;
1397384    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1397385    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1397386    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1397387    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1397388    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1397389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397390    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1397391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397393    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1397394    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397396    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397397    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1397398    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1397399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397400    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1397401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397402    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1397403    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397405    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397406    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1397407    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397408    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397409    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1397410    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1397410  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1397411    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397412    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1397413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397414    filename _pref
1397414  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1397415    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397416    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1397417   +
1397418   +
1397419   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1397420   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1397421   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1397422   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1397423   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1397424   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397425   +
1397426   +
1397427   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1397428   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1397429   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1397430   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1397431   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1397432   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397433   +
1397434   +
1397435   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1397436   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1397437   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1397438   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1397439   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1397440   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397441   +
1397442   +
1397443   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1397444   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1397445   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1397446   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1397447   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1397448   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397449   +
1397450   +
1397451   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1397452   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1397453   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1397454   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1397455   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1397456   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397457   +
1397458   +
1397459   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1397460   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1397461   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1397462   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1397463   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1397464   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397465   +
1397466   +
1397467   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1397468   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1397469   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1397470   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1397471   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1397472   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397473   +
1397474   +
1397475   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1397476   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1397477   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1397478   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1397479   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1397480   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1397481   +if
1397482   +_FILTERNORM1 not in ( '.')
1397483   + and
1397484   +_FILTERNORM2 not in ( '.')
1397485   + and
1397486   +_FILTERNORM3 not in ( '.')
1397487   + and
1397488   +_FILTERNORM4 not in ( '.')
1397489   + and
1397490   +_FILTERNORM5 not in ( '.')
1397491   + and
1397492   +_FILTERNORM6 not in ( '.')
1397493   + and
1397494   +_FILTERNORM7 not in ( ' ')
1397495   + and
1397496   +_FILTERNORM8 not in ( ' ')
1397497   +and
1397498   +( Dt_Customer ne .)
1397499   +and ( Income ne . and (Income<=107000))
1397500   +and ( Kidhome ne .)
1397501   +and ( MntFishProducts ne .)
1397502   +and ( MntFruits ne .)
1397503   +and ( MntGoldProds ne .)
1397504   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1397505   +and ( MntSweetProducts ne .)
1397506   +and ( MntWines ne .)
1397507   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1397508   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1397509   +and ( NumStorePurchases ne .)
1397510   +and ( NumWebPurchases ne .)
1397511   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1397512   +and ( Recency ne .)
1397513   +and ( Teenhome ne .)
1397514   +and ( Year_Birth ne .)
1397515   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1397516   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1397517   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1397518   +end;
MPRINT(EM_DIAGRAM):   end;
1397519   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1397520   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1397521    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1397522    quit;
1397523    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1397524    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1397525    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1397526    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1397527    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1397528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397529    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1397530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397532    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1397533    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397535    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397536    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1397537    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1397538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397539    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1397540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1397541    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1397542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397544    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397545    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1397546    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397547    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397548    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1397549    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1397549  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1397550    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397551    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1397552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397553    %macro varDept(fcmpdata=,id=);
1397554    %global nobs&id scoreFlag&id;
1397555    %let scoreFlag&id = 0;
1397556    %if &id=1 or ^&fcmpStart %then %do;
1397557    proc sort data=&fcmpdata out=_temp&id nodupkey;
1397558    by NAME;
1397559    where id=&id and LHS in( %let j=1;
1397560    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1397561    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1397562    "&var" %let j = %eval(&j+1);
1397563    %end;
1397564    );
1397565    run;
1397566    %let dsid = %sysfunc(open(_temp&id));
1397567    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1397568    %let dsid = %sysfunc(close(&dsid));
1397569    %if &&nobs&id %then %do;
1397570    %let scoreFlag&id = 1;
1397571    %let fcmpStart = 1;
1397572    %end;
1397573    %else %let fcmpStart = 0;
1397574    %end;
1397575    %else %do;
1397576    proc sort data=&fcmpdata out=_tempid;
1397577    where id=&id;
1397578    by LHS;
1397579    run;
1397580    %let dsid = %sysfunc(open(_tempid));
1397581    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1397582    %let dsid = %sysfunc(close(&dsid));
1397583    %if ^&&nobs&id %then %do;
1397584    proc datasets lib=work nolist;
1397585    delete _tempid;
1397586    run;
1397587    quit;
1397588    %end;
1397589    %else %do;
1397590    data _tempAll;
1397591    set %let j=%eval(&id-1);
1397592    %do x=1 %to &j;
1397593    %if &&nobs&x %then %do;
1397594    _temp&x %end;
1397595    %end;
1397596    ;
1397597    run;
1397598    proc sql;
1397599    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1397599  ! work._tempid p2 where p.name=p2.lhs;
1397600    quit;
1397601    data _temp&id;
1397602    set _temp&id;
1397603    where LHS ne '' and NAME ne '' and Node ne '';
1397604    run;
1397605    proc datasets lib=work nolist;
1397606    delete _tempAll;
1397607    run;
1397608    %let dsid = %sysfunc(open(_temp&id));
1397609    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1397610    %let dsid = %sysfunc(close(&dsid));
1397611    %if ^&&nobs&id %then %do;
1397612    proc datasets lib=work nolist;
1397613    delete _temp&id;
1397614    run;
1397615    quit;
1397616    %end;
1397617    %else %do;
1397618    %let scoreFlag&id = 1;
1397619    data _temp&id;
1397620    set _temp&id;
1397621    where LHS ne NAME and node ne '';
1397622    run;
1397623    %let dsid = %sysfunc(open(_temp&id));
1397624    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1397625    %let dsid = %sysfunc(close(&dsid));
1397626    %if ^&&nobs&id %then %do;
1397627    proc datasets lib=work nolist;
1397628    delete _temp&id;
1397629    run;
1397630    quit;
1397631    %end;
1397632    %else %do;
1397633    proc sort data=_temp&id nodupkey;
1397634    by LHS NAME;
1397635    run;
1397636    %end;
1397637    %end;
1397638    %end;
1397639    %end;
1397640    %mend varDept;
1397641    %macro optCode(outdata=fcmpdata);
1397642    %global fcmpStart;
1397643    %let fcmpStart = 0;
1397644    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1397645    %let NumNodes=9;
1397646    %do k=1 %to &NumNodes;
1397647    %vardept(fcmpdata=&outdata, id=&k);
1397648    %end;
1397649    %mend optCode;
1397650    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1397651    filename _pref
1397651  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1397652    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397653    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1397654   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1397655   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1397656   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1397657   +
1397658   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1397659   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1397660   +
1397661   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1397662   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1397663   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1397664   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1397665   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1397666   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1397667   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1397668   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1397669   +
1397670   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1397671   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1397672   +
1397673   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1397674   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1397675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397677   +end;
MPRINT(EM_DIAGRAM):   end;
1397678   +
1397679   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1397680   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1397681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397683   +end;
MPRINT(EM_DIAGRAM):   end;
1397684   +
1397685   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1397686   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1397687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397689   +end;
MPRINT(EM_DIAGRAM):   end;
1397690   +
1397691   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1397692   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1397693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397695   +end;
MPRINT(EM_DIAGRAM):   end;
1397696   +
1397697   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1397698   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1397699   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397700   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397701   +end;
MPRINT(EM_DIAGRAM):   end;
1397702   +
1397703   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1397704   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1397705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397707   +end;
MPRINT(EM_DIAGRAM):   end;
1397708   +
1397709   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1397710   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1397711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397713   +end;
MPRINT(EM_DIAGRAM):   end;
1397714   +
1397715   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1397716   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1397717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397719   +end;
MPRINT(EM_DIAGRAM):   end;
1397720   +
1397721   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1397722   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1397723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397725   +end;
MPRINT(EM_DIAGRAM):   end;
1397726   +
1397727   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1397728   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1397729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397731   +end;
MPRINT(EM_DIAGRAM):   end;
1397732   +
1397733   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1397734   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1397735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397737   +end;
MPRINT(EM_DIAGRAM):   end;
1397738   +
1397739   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1397740   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1397741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397743   +end;
MPRINT(EM_DIAGRAM):   end;
1397744   +
1397745   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1397746   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1397747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397749   +end;
MPRINT(EM_DIAGRAM):   end;
1397750   +
1397751   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1397752   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1397753   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1397754   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1397755   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1397756   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1397757   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1397758   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1397759   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1397760   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1397761   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1397762   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1397763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1397764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397765   +end;
MPRINT(EM_DIAGRAM):   end;
1397766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1397767   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1397768   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1397769   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1397770   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1397771   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1397772   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1397773   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1397774   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1397775   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397776   +         end;
MPRINT(EM_DIAGRAM):   end;
1397777   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1397778   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1397779   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1397780   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397781   +            end;
MPRINT(EM_DIAGRAM):   end;
1397782   +         end;
MPRINT(EM_DIAGRAM):   end;
1397783   +      end;
MPRINT(EM_DIAGRAM):   end;
1397784   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1397785   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1397786   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1397787   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397788   +         end;
MPRINT(EM_DIAGRAM):   end;
1397789   +      end;
MPRINT(EM_DIAGRAM):   end;
1397790   +   end;
MPRINT(EM_DIAGRAM):   end;
1397791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1397792   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1397793   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1397794   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397795   +      end;
MPRINT(EM_DIAGRAM):   end;
1397796   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1397797   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1397798   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1397799   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1397800   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1397801   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1397802   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1397803   +         end;
MPRINT(EM_DIAGRAM):   end;
1397804   +      end;
MPRINT(EM_DIAGRAM):   end;
1397805   +   end;
MPRINT(EM_DIAGRAM):   end;
1397806   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1397807   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1397808   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1397809   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1397810   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1397811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1397812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1397813   +   end;
MPRINT(EM_DIAGRAM):   end;
1397814   +end;
MPRINT(EM_DIAGRAM):   end;
1397815   +
1397816   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1397817   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1397818   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1397819   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1397820   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1397821   +end;
MPRINT(EM_DIAGRAM):   end;
1397822   +
1397823   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1397824   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1397825   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1397826   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1397827   +
1397828   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1397829   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1397830   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1397831   +
1397832   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1397833   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1397834   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1397835   +
1397836   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1397837   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1397838   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1397839   +
1397840   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1397841   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1397842   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1397843   +
1397844   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1397845   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1397846   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1397847   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1397848   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1397849   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1397850   +
1397851   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1397852   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1397853   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1397854   +
1397855   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1397856   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1397857   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1397858   +
1397859   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1397860   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1397861   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1397862   +
1397863   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1397864   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1397865   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1397866   +
1397867   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1397868   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1397869   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1397870   +
1397871   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1397872   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1397873   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1397874   +
1397875   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1397876   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1397877   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1397878   +
1397879   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1397880   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1397881   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1397882   +
1397883   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1397884   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1397885   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1397886   +
1397887   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1397888   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1397889   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1397890   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1397891   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1397892   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1397893   +end;
MPRINT(EM_DIAGRAM):   end;
1397894   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1397895   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1397896   +
1397897   +REGDR1:
1397898   +
1397899   +
1397900   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1397901   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1397902   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1397903   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1397904   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1397905   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1397906   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1397907   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1397908   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1397909   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1397910   +end;
MPRINT(EM_DIAGRAM):   end;
1397911   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1397912   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1397913   +
1397914   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1397915   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1397916   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1397917    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1397918    quit;
1397919    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1397920    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1397921    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1397922    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1397923    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1397924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397925    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1397926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397928    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1397929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397930    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397931    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397932    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1397933    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1397934    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397935    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1397936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1397937    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1397938    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397939    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397940    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397941    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1397942    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397943    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397944    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1397945    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1397945  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.
 
1397946    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397947    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1397948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397949    filename _pref
1397949  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1397950    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397951    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1397952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1397953   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1397954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1397955   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1397956   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1397957   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1397958    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1397959    quit;
1397960    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1397961    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1397962    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1397963    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1397964    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1397965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397966    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1397967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397968    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397969    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1397970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397972    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397973    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1397974    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1397975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397976    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1397977    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1397978    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1397979    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397980    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397981    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1397982    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1397983    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1397984    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397985    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1397986    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1397986  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1397987    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1397988    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1397989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1397990    filename _pref
1397990  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1397991    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1397992    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1397993   +
1397994   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1397995   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1397995  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1397996   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1397997   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1397998   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1397999   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1398000   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1398001    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1398002    quit;
1398003    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1398004    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1398005    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1398006    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1398007    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1398008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398009    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1398010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398012    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1398013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1398015    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1398016    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1398017    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1398018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398019    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1398020    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398021    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1398022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1398024    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1398025    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1398026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398027    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398028    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1398029    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1398029  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1398030    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398031    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1398032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1398033    filename _pref
1398033  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1398034    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1398035    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1398036   +
1398037   +
1398038   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1398039   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1398040   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1398041   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1398042   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1398043   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398044   +
1398045   +
1398046   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1398047   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1398048   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1398049   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1398050   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1398051   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398052   +
1398053   +
1398054   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1398055   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1398056   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1398057   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1398058   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1398059   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398060   +
1398061   +
1398062   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1398063   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1398064   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1398065   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1398066   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1398067   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398068   +
1398069   +
1398070   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1398071   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1398072   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1398073   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1398074   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1398075   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398076   +
1398077   +
1398078   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1398079   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1398080   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1398081   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1398082   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1398083   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398084   +
1398085   +
1398086   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1398087   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1398088   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1398089   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1398090   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1398091   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398092   +
1398093   +
1398094   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1398095   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1398096   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1398097   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1398098   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1398099   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1398100   +if
1398101   +_FILTERNORM1 not in ( '.')
1398102   + and
1398103   +_FILTERNORM2 not in ( '.')
1398104   + and
1398105   +_FILTERNORM3 not in ( '.')
1398106   + and
1398107   +_FILTERNORM4 not in ( '.')
1398108   + and
1398109   +_FILTERNORM5 not in ( '.')
1398110   + and
1398111   +_FILTERNORM6 not in ( '.')
1398112   + and
1398113   +_FILTERNORM7 not in ( ' ')
1398114   + and
1398115   +_FILTERNORM8 not in ( ' ')
1398116   +and
1398117   +( Dt_Customer ne .)
1398118   +and ( Income ne . and (Income<=107000))
1398119   +and ( Kidhome ne .)
1398120   +and ( MntFishProducts ne .)
1398121   +and ( MntFruits ne .)
1398122   +and ( MntGoldProds ne .)
1398123   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1398124   +and ( MntSweetProducts ne .)
1398125   +and ( MntWines ne .)
1398126   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1398127   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1398128   +and ( NumStorePurchases ne .)
1398129   +and ( NumWebPurchases ne .)
1398130   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1398131   +and ( Recency ne .)
1398132   +and ( Teenhome ne .)
1398133   +and ( Year_Birth ne .)
1398134   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1398135   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1398136   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1398137   +end;
MPRINT(EM_DIAGRAM):   end;
1398138   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1398139   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1398140    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1398141    quit;
1398142    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1398143    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1398144    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1398145    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1398146    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1398147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398148    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1398149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1398151    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1398152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1398155    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1398156    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1398157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398158    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1398159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1398160    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1398161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398163    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1398164    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1398165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398166    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398167    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1398168    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1398168  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1398169    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398170    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1398171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398172    %macro varDept(fcmpdata=,id=);
1398173    %global nobs&id scoreFlag&id;
1398174    %let scoreFlag&id = 0;
1398175    %if &id=1 or ^&fcmpStart %then %do;
1398176    proc sort data=&fcmpdata out=_temp&id nodupkey;
1398177    by NAME;
1398178    where id=&id and LHS in( %let j=1;
1398179    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1398180    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1398181    "&var" %let j = %eval(&j+1);
1398182    %end;
1398183    );
1398184    run;
1398185    %let dsid = %sysfunc(open(_temp&id));
1398186    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1398187    %let dsid = %sysfunc(close(&dsid));
1398188    %if &&nobs&id %then %do;
1398189    %let scoreFlag&id = 1;
1398190    %let fcmpStart = 1;
1398191    %end;
1398192    %else %let fcmpStart = 0;
1398193    %end;
1398194    %else %do;
1398195    proc sort data=&fcmpdata out=_tempid;
1398196    where id=&id;
1398197    by LHS;
1398198    run;
1398199    %let dsid = %sysfunc(open(_tempid));
1398200    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1398201    %let dsid = %sysfunc(close(&dsid));
1398202    %if ^&&nobs&id %then %do;
1398203    proc datasets lib=work nolist;
1398204    delete _tempid;
1398205    run;
1398206    quit;
1398207    %end;
1398208    %else %do;
1398209    data _tempAll;
1398210    set %let j=%eval(&id-1);
1398211    %do x=1 %to &j;
1398212    %if &&nobs&x %then %do;
1398213    _temp&x %end;
1398214    %end;
1398215    ;
1398216    run;
1398217    proc sql;
1398218    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1398218  ! work._tempid p2 where p.name=p2.lhs;
1398219    quit;
1398220    data _temp&id;
1398221    set _temp&id;
1398222    where LHS ne '' and NAME ne '' and Node ne '';
1398223    run;
1398224    proc datasets lib=work nolist;
1398225    delete _tempAll;
1398226    run;
1398227    %let dsid = %sysfunc(open(_temp&id));
1398228    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1398229    %let dsid = %sysfunc(close(&dsid));
1398230    %if ^&&nobs&id %then %do;
1398231    proc datasets lib=work nolist;
1398232    delete _temp&id;
1398233    run;
1398234    quit;
1398235    %end;
1398236    %else %do;
1398237    %let scoreFlag&id = 1;
1398238    data _temp&id;
1398239    set _temp&id;
1398240    where LHS ne NAME and node ne '';
1398241    run;
1398242    %let dsid = %sysfunc(open(_temp&id));
1398243    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1398244    %let dsid = %sysfunc(close(&dsid));
1398245    %if ^&&nobs&id %then %do;
1398246    proc datasets lib=work nolist;
1398247    delete _temp&id;
1398248    run;
1398249    quit;
1398250    %end;
1398251    %else %do;
1398252    proc sort data=_temp&id nodupkey;
1398253    by LHS NAME;
1398254    run;
1398255    %end;
1398256    %end;
1398257    %end;
1398258    %end;
1398259    %mend varDept;
1398260    %macro optCode(outdata=fcmpdata);
1398261    %global fcmpStart;
1398262    %let fcmpStart = 0;
1398263    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1398264    %let NumNodes=9;
1398265    %do k=1 %to &NumNodes;
1398266    %vardept(fcmpdata=&outdata, id=&k);
1398267    %end;
1398268    %mend optCode;
1398269    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 56 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1398270    filename _pref
1398270  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1398271    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1398272    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1398273   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1398274   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1398275   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1398276   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1398277   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1398278   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1398279   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1398280   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1398281   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1398282   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1398283   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1398284   +LENGTH _WARN_ $4
1398285   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1398286   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1398287   +
1398288   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1398289   +
1398290   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1398291   +
1398292   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1398293   +
1398294   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1398295   +
1398296   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1398297   +
1398298   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1398299   +
1398300   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1398301   +
1398302   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1398303   +
1398304   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1398305   +
1398306   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1398307   +
1398308   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1398309   +
1398310   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1398311   +
1398312   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1398313   +
1398314   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1398315   +
1398316   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1398317   +
1398318   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1398319   +
1398320   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1398321   +
1398322   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1398323   +
1398324   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1398325   +
1398326   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1398327   +
1398328   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1398329   +
1398330   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1398331   +
1398332   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1398333   +
1398334   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1398335   +
1398336   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1398337   +
1398338   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1398339   +
1398340   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1398341   +
1398342   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1398343   +
1398344   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1398345   +
1398346   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1398347   +
1398348   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1398349   +
1398350   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1398351   +
1398352   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1398353   +
1398354   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1398355   +
1398356   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1398357   +
1398358   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1398359   +
1398360   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1398361   +
1398362   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1398363   +
1398364   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1398365   +
1398366   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1398367   +
1398368   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1398369   +
1398370   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1398371   +
1398372   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1398373   +
1398374   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1398375   +
1398376   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1398377   +
1398378   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1398379   +
1398380   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1398381   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1398382   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1398383   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1398384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398386   +end;
MPRINT(EM_DIAGRAM):   end;
1398387   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398388   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398389   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1398390   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398391   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1398392   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1398393   +   end;
MPRINT(EM_DIAGRAM):   end;
1398394   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1398395   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1398396   +   end;
MPRINT(EM_DIAGRAM):   end;
1398397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398398   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1398399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398401   +   end;
MPRINT(EM_DIAGRAM):   end;
1398402   +end;
MPRINT(EM_DIAGRAM):   end;
1398403   +
1398404   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1398405   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1398406   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1398407   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1398408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398410   +end;
MPRINT(EM_DIAGRAM):   end;
1398411   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398413   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1398414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398415   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1398416   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1398417   +   end;
MPRINT(EM_DIAGRAM):   end;
1398418   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1398419   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1398420   +   end;
MPRINT(EM_DIAGRAM):   end;
1398421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398422   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1398423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398425   +   end;
MPRINT(EM_DIAGRAM):   end;
1398426   +end;
MPRINT(EM_DIAGRAM):   end;
1398427   +
1398428   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1398429   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1398430   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1398431   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1398432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398434   +end;
MPRINT(EM_DIAGRAM):   end;
1398435   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398436   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398437   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1398438   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398439   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1398440   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1398441   +   end;
MPRINT(EM_DIAGRAM):   end;
1398442   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1398443   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1398444   +   end;
MPRINT(EM_DIAGRAM):   end;
1398445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398446   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1398447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398449   +   end;
MPRINT(EM_DIAGRAM):   end;
1398450   +end;
MPRINT(EM_DIAGRAM):   end;
1398451   +
1398452   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1398453   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1398454   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1398455   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1398456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398458   +end;
MPRINT(EM_DIAGRAM):   end;
1398459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398461   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1398462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398463   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1398464   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1398465   +   end;
MPRINT(EM_DIAGRAM):   end;
1398466   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1398467   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1398468   +   end;
MPRINT(EM_DIAGRAM):   end;
1398469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398470   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1398471   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398472   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398473   +   end;
MPRINT(EM_DIAGRAM):   end;
1398474   +end;
MPRINT(EM_DIAGRAM):   end;
1398475   +
1398476   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1398477   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1398478   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1398479   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1398480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398482   +end;
MPRINT(EM_DIAGRAM):   end;
1398483   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398484   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398485   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1398486   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398487   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1398488   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1398489   +   end;
MPRINT(EM_DIAGRAM):   end;
1398490   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1398491   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1398492   +   end;
MPRINT(EM_DIAGRAM):   end;
1398493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398494   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1398495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398497   +   end;
MPRINT(EM_DIAGRAM):   end;
1398498   +end;
MPRINT(EM_DIAGRAM):   end;
1398499   +
1398500   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1398501   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1398502   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1398503   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1398504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398506   +end;
MPRINT(EM_DIAGRAM):   end;
1398507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398509   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1398510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1398512   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1398513   +   end;
MPRINT(EM_DIAGRAM):   end;
1398514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1398515   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1398516   +   end;
MPRINT(EM_DIAGRAM):   end;
1398517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398518   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1398519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398521   +   end;
MPRINT(EM_DIAGRAM):   end;
1398522   +end;
MPRINT(EM_DIAGRAM):   end;
1398523   +
1398524   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1398525   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1398526   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1398527   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1398528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398530   +end;
MPRINT(EM_DIAGRAM):   end;
1398531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1398533   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1398534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398535   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1398536   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1398537   +   end;
MPRINT(EM_DIAGRAM):   end;
1398538   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1398539   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1398540   +   end;
MPRINT(EM_DIAGRAM):   end;
1398541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398542   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1398543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398545   +   end;
MPRINT(EM_DIAGRAM):   end;
1398546   +end;
MPRINT(EM_DIAGRAM):   end;
1398547   +
1398548   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1398549   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1398550   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1398551   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1398552   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1398553   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1398554   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1398555   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1398556   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1398557   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1398558   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1398559   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1398560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398562   +end;
MPRINT(EM_DIAGRAM):   end;
1398563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398564   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1398565   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1398566   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398567   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1398568   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1398569   +   end;
MPRINT(EM_DIAGRAM):   end;
1398570   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1398571   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1398572   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1398573   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1398574   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1398575   +   end;
MPRINT(EM_DIAGRAM):   end;
1398576   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1398577   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1398578   +   end;
MPRINT(EM_DIAGRAM):   end;
1398579   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1398580   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1398581   +   end;
MPRINT(EM_DIAGRAM):   end;
1398582   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1398583   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1398584   +   end;
MPRINT(EM_DIAGRAM):   end;
1398585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398586   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1398587   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1398588   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1398589   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1398590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398592   +   end;
MPRINT(EM_DIAGRAM):   end;
1398593   +end;
MPRINT(EM_DIAGRAM):   end;
1398594   +
1398595   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1398596   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1398597   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1398598   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1398599   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1398600   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1398601   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1398602   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1398603   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1398604   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1398605   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1398606   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1398607   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1398608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1398609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398610   +end;
MPRINT(EM_DIAGRAM):   end;
1398611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1398612   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1398613   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1398614   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1398615   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1398616   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1398617   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1398618   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1398619   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1398620   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1398621   +         end;
MPRINT(EM_DIAGRAM):   end;
1398622   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1398623   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1398624   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1398625   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1398626   +            end;
MPRINT(EM_DIAGRAM):   end;
1398627   +         end;
MPRINT(EM_DIAGRAM):   end;
1398628   +      end;
MPRINT(EM_DIAGRAM):   end;
1398629   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1398630   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1398631   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1398632   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1398633   +         end;
MPRINT(EM_DIAGRAM):   end;
1398634   +      end;
MPRINT(EM_DIAGRAM):   end;
1398635   +   end;
MPRINT(EM_DIAGRAM):   end;
1398636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1398637   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1398638   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1398639   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1398640   +      end;
MPRINT(EM_DIAGRAM):   end;
1398641   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1398642   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1398643   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1398644   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1398645   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1398646   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1398647   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1398648   +         end;
MPRINT(EM_DIAGRAM):   end;
1398649   +      end;
MPRINT(EM_DIAGRAM):   end;
1398650   +   end;
MPRINT(EM_DIAGRAM):   end;
1398651   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1398652   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1398653   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1398654   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1398655   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1398656   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1398657   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398658   +   end;
MPRINT(EM_DIAGRAM):   end;
1398659   +end;
MPRINT(EM_DIAGRAM):   end;
1398660   +
1398661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398662   +*** Checking missing input Interval
1398663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1398664   +
1398665   +IF NMISS(
1398666   +   AcceptedCmpTotal ,
1398667   +   Age ,
1398668   +   Frq ,
1398669   +   Income ,
1398670   +   Kidhome ,
1398671   +   Mnt ,
1398672   +   MntFishProducts ,
1398673   +   MntFruits ,
1398674   +   MntGoldProds ,
1398675   +   MntMeatProducts ,
1398676   +   MntSweetProducts ,
1398677   +   MntWines ,
1398678   +   MonthsAsCustomer ,
1398679   +   NumCatalogPurchases ,
1398680   +   NumDealsPurchases ,
1398681   +   NumDistPurchases ,
1398682   +   NumStorePurchases ,
1398683   +   NumWebPurchases ,
1398684   +   NumWebVisitsMonth ,
1398685   +   RFMstat ,
1398686   +   RMntFrq ,
1398687   +   Recency ,
1398688   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1398689   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1398690   +
1398691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1398692   +END;
MPRINT(EM_DIAGRAM):   END;
1398693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398694   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1398695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1398697   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1398698   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1398699   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1398700   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1398701   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1398702   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1398703   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1398704   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1398705   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1398706   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1398707   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1398708   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1398709   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1398710   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1398711   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1398712   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1398713   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1398714   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1398715   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1398716   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1398717   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1398718   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1398719   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1398720   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1398721   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1398722   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1398723   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1398724   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1398725   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1398726   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1398727   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1398728   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1398729   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1398730   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1398731   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1398732   +END;
MPRINT(EM_DIAGRAM):   END;
1398733   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1398734   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1398735   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1398736   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1398737   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1398738   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1398739   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1398740   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1398741   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1398742   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1398743   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1398744   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1398745   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1398746   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1398747   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1398748   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1398749   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1398750   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1398751   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1398752   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1398753   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1398754   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1398755   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1398756   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1398757   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1398758   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1398759   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1398760   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1398761   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1398762   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1398763   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1398764   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1398765   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1398766   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1398767   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1398768   +   ELSE S_NumCatalogPurchases
1398769   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1398770   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1398771   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1398772   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1398773   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1398774   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1398775   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1398776   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1398777   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1398778   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1398779   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1398780   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1398781   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1398782   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1398783   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1398784   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1398785   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1398786   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1398787   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1398788   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1398789   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1398790   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1398791   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1398792   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1398793   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1398794   +END;
MPRINT(EM_DIAGRAM):   END;
1398795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398796   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1398797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398799   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1398800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398802   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1398803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398804   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1398805   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1398806   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1398807   +        S_Income  +    -0.23050240180524 * S_Kidhome
1398808   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1398809   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1398810   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1398811   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1398812   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1398813   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1398814   +          +    -1.32257303635072 * S_NumDealsPurchases
1398815   +          +    -0.54480870554989 * S_NumDistPurchases
1398816   +          +     1.24793709956495 * S_NumStorePurchases
1398817   +          +      1.7974198103915 * S_NumWebPurchases
1398818   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1398819   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1398820   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1398821   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome +
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 *
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts +
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 *
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 *
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 *
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 *
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq +
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1398822   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1398823   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1398824   +        S_Income  +    -0.78793784980656 * S_Kidhome
1398825   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1398826   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1398827   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1398828   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1398829   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1398830   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1398831   +          +     0.70535680060775 * S_NumDealsPurchases
1398832   +          +    -0.15561838359391 * S_NumDistPurchases
1398833   +          +    -0.86545647977011 * S_NumStorePurchases
1398834   +          +    -0.78435825863867 * S_NumWebPurchases
1398835   +          +     1.76113949975149 * S_NumWebVisitsMonth
1398836   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1398837   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1398838   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome +
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 *
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts +
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 *
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 *
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 *
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 *
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq +
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1398839   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1398840   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1398841   +        S_Income  +    -0.59349067735666 * S_Kidhome
1398842   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1398843   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1398844   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1398845   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1398846   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1398847   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1398848   +          +     0.21510592309387 * S_NumDealsPurchases
1398849   +          +    -0.05401897321491 * S_NumDistPurchases
1398850   +          +     0.14945584086188 * S_NumStorePurchases
1398851   +          +    -0.09993898051701 * S_NumWebPurchases
1398852   +          +     1.40189771606069 * S_NumWebVisitsMonth
1398853   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1398854   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1398855   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age +
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome +
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 *
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts +
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 *
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 *
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 *
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 *
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq +
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1398856   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1398857   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1398858   +        S_Income  +    -0.61129984920194 * S_Kidhome
1398859   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1398860   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1398861   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1398862   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1398863   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1398864   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1398865   +          +     0.81353732439473 * S_NumDealsPurchases
1398866   +          +     0.32933472931941 * S_NumDistPurchases
1398867   +          +    -1.28188012143595 * S_NumStorePurchases
1398868   +          +    -0.81914782214243 * S_NumWebPurchases
1398869   +          +     1.20332282902342 * S_NumWebVisitsMonth
1398870   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1398871   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1398872   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age +
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome +
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 *
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts +
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 *
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 *
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 *
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 *
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq +
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1398873   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1398874   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1398875   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1398876   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1398877   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 *
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 +
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 *
HigherEducationBinary0 ;
1398878   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1398879   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1398880   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1398881   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1398882   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 *
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 +
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 *
HigherEducationBinary0 ;
1398883   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1398884   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1398885   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1398886   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1398887   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 *
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 +
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 *
HigherEducationBinary0 ;
1398888   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1398889   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1398890   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1398891   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1398892   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 *
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 +
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 *
HigherEducationBinary0 ;
1398893   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1398894   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1398895   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1398896   +          +     0.38068062371853 * Marital_StatusDivorced
1398897   +          +    -0.09269938603625 * Marital_StatusMarried
1398898   +          +    -0.17904543311137 * Marital_StatusSingle
1398899   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 *
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried +
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1398900   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1398901   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1398902   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1398903   +          +     0.46191454760643 * Marital_StatusDivorced
1398904   +          +    -1.36520525874032 * Marital_StatusMarried
1398905   +          +     1.36669525533789 * Marital_StatusSingle
1398906   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 *
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster +
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried +
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1398907   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1398908   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1398909   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1398910   +          +     0.18693560360309 * Marital_StatusDivorced
1398911   +          +    -0.56475988428608 * Marital_StatusMarried
1398912   +          +     0.79263891340625 * Marital_StatusSingle
1398913   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 *
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried +
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1398914   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1398915   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1398916   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1398917   +          +     1.14025450669394 * Marital_StatusDivorced
1398918   +          +     0.78122963298728 * Marital_StatusMarried
1398919   +          +    -1.37860768059913 * Marital_StatusSingle
1398920   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 *
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried +
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1398921   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1398922   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1398923   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1398924   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1398925   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1398926   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1398927   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1398928   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1398929   +END;
MPRINT(EM_DIAGRAM):   END;
1398930   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1398931   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1398932   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1398933   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1398934   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1398935   +END;
MPRINT(EM_DIAGRAM):   END;
1398936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398937   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1398938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1398940   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1398941   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 +
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1398942   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1398943   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1398944   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1398945   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1398946   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1398947   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1398948   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1398949   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1398950   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1398951   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1398952   +END;
MPRINT(EM_DIAGRAM):   END;
1398953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1398954   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1398955   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1398956   +END;
MPRINT(EM_DIAGRAM):   END;
1398957   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1398958   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1398959   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1398960   +END;
MPRINT(EM_DIAGRAM):   END;
1398961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398962   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1398963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1398964   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1398965   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1398966   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1398967   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1398968   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1398969   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1398970   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1398971   +END;
MPRINT(EM_DIAGRAM):   END;
1398972   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1398973   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1398974   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1398975   +drop
1398976   +H11
1398977   +H12
1398978   +H13
1398979   +H14
1398980   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1398981   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1398982    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1398983    quit;
1398984    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1398985    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1398986    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1398987    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1398988    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1398989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398990    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1398991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1398993    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1398994    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1398995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1398996    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1398997    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1398998    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1398999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399000    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1399001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1399002    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1399003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399005    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399006    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1399007    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399008    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399009    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1399010    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1399010  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.
 
1399011    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399012    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1399013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399014    filename _pref
1399014  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1399015    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1399016    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1399017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1399018   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1399019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1399020   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1399021   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1399022   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1399023    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1399024    quit;
1399025    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1399026    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1399027    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1399028    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1399029    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1399030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399031    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1399032    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399034    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1399035    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399037    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399038    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1399039    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1399040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399041    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1399042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1399043    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1399044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399046    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399047    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1399048    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399049    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399050    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1399051    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1399051  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1399052    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399053    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1399054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399055    filename _pref
1399055  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1399056    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1399057    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1399058   +
1399059   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1399060   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1399060  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1399061   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1399062   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1399063   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1399064   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1399065   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1399066    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1399067    quit;
1399068    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1399069    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1399070    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1399071    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1399072    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1399073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399074    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1399075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399077    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1399078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399080    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399081    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1399082    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1399083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399084    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1399085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399086    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1399087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399090    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1399091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399092    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399093    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1399094    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1399094  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1399095    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399096    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1399097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399098    filename _pref
1399098  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1399099    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1399100    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1399101   +
1399102   +
1399103   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1399104   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1399105   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1399106   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1399107   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1399108   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399109   +
1399110   +
1399111   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1399112   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1399113   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1399114   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1399115   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1399116   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399117   +
1399118   +
1399119   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1399120   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1399121   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1399122   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1399123   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1399124   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399125   +
1399126   +
1399127   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1399128   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1399129   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1399130   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1399131   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1399132   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399133   +
1399134   +
1399135   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1399136   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1399137   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1399138   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1399139   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1399140   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399141   +
1399142   +
1399143   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1399144   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1399145   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1399146   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1399147   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1399148   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399149   +
1399150   +
1399151   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1399152   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1399153   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1399154   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1399155   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1399156   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399157   +
1399158   +
1399159   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1399160   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1399161   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1399162   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1399163   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1399164   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1399165   +if
1399166   +_FILTERNORM1 not in ( '.')
1399167   + and
1399168   +_FILTERNORM2 not in ( '.')
1399169   + and
1399170   +_FILTERNORM3 not in ( '.')
1399171   + and
1399172   +_FILTERNORM4 not in ( '.')
1399173   + and
1399174   +_FILTERNORM5 not in ( '.')
1399175   + and
1399176   +_FILTERNORM6 not in ( '.')
1399177   + and
1399178   +_FILTERNORM7 not in ( ' ')
1399179   + and
1399180   +_FILTERNORM8 not in ( ' ')
1399181   +and
1399182   +( Dt_Customer ne .)
1399183   +and ( Income ne . and (Income<=107000))
1399184   +and ( Kidhome ne .)
1399185   +and ( MntFishProducts ne .)
1399186   +and ( MntFruits ne .)
1399187   +and ( MntGoldProds ne .)
1399188   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1399189   +and ( MntSweetProducts ne .)
1399190   +and ( MntWines ne .)
1399191   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1399192   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1399193   +and ( NumStorePurchases ne .)
1399194   +and ( NumWebPurchases ne .)
1399195   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1399196   +and ( Recency ne .)
1399197   +and ( Teenhome ne .)
1399198   +and ( Year_Birth ne .)
1399199   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
The SAS System
 
.) and ( Year_Birth ne .) then do;
1399200   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1399201   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1399202   +end;
MPRINT(EM_DIAGRAM):   end;
1399203   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1399204   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1399205    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1399206    quit;
1399207    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1399208    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1399209    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1399210    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1399211    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1399212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399213    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1399214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1399216    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1399217    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399219    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399220    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1399221    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1399222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399223    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1399224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1399225    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1399226    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399228    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1399229    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1399230    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1399231    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399232    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1399233    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1399233  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1399234    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399235    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1399236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399237    %macro varDept(fcmpdata=,id=);
1399238    %global nobs&id scoreFlag&id;
1399239    %let scoreFlag&id = 0;
1399240    %if &id=1 or ^&fcmpStart %then %do;
1399241    proc sort data=&fcmpdata out=_temp&id nodupkey;
1399242    by NAME;
1399243    where id=&id and LHS in( %let j=1;
1399244    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1399245    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1399246    "&var" %let j = %eval(&j+1);
1399247    %end;
1399248    );
1399249    run;
1399250    %let dsid = %sysfunc(open(_temp&id));
1399251    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1399252    %let dsid = %sysfunc(close(&dsid));
1399253    %if &&nobs&id %then %do;
1399254    %let scoreFlag&id = 1;
1399255    %let fcmpStart = 1;
1399256    %end;
1399257    %else %let fcmpStart = 0;
1399258    %end;
1399259    %else %do;
1399260    proc sort data=&fcmpdata out=_tempid;
1399261    where id=&id;
1399262    by LHS;
1399263    run;
1399264    %let dsid = %sysfunc(open(_tempid));
1399265    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1399266    %let dsid = %sysfunc(close(&dsid));
1399267    %if ^&&nobs&id %then %do;
1399268    proc datasets lib=work nolist;
1399269    delete _tempid;
1399270    run;
1399271    quit;
1399272    %end;
1399273    %else %do;
1399274    data _tempAll;
1399275    set %let j=%eval(&id-1);
1399276    %do x=1 %to &j;
1399277    %if &&nobs&x %then %do;
1399278    _temp&x %end;
1399279    %end;
1399280    ;
1399281    run;
1399282    proc sql;
1399283    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1399283  ! work._tempid p2 where p.name=p2.lhs;
1399284    quit;
1399285    data _temp&id;
1399286    set _temp&id;
1399287    where LHS ne '' and NAME ne '' and Node ne '';
1399288    run;
1399289    proc datasets lib=work nolist;
1399290    delete _tempAll;
1399291    run;
1399292    %let dsid = %sysfunc(open(_temp&id));
1399293    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1399294    %let dsid = %sysfunc(close(&dsid));
1399295    %if ^&&nobs&id %then %do;
1399296    proc datasets lib=work nolist;
1399297    delete _temp&id;
1399298    run;
1399299    quit;
1399300    %end;
1399301    %else %do;
1399302    %let scoreFlag&id = 1;
1399303    data _temp&id;
1399304    set _temp&id;
1399305    where LHS ne NAME and node ne '';
1399306    run;
1399307    %let dsid = %sysfunc(open(_temp&id));
1399308    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1399309    %let dsid = %sysfunc(close(&dsid));
1399310    %if ^&&nobs&id %then %do;
1399311    proc datasets lib=work nolist;
1399312    delete _temp&id;
1399313    run;
1399314    quit;
1399315    %end;
1399316    %else %do;
1399317    proc sort data=_temp&id nodupkey;
1399318    by LHS NAME;
1399319    run;
1399320    %end;
1399321    %end;
1399322    %end;
1399323    %end;
1399324    %mend varDept;
1399325    %macro optCode(outdata=fcmpdata);
1399326    %global fcmpStart;
1399327    %let fcmpStart = 0;
1399328    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1399329    %let NumNodes=9;
1399330    %do k=1 %to &NumNodes;
1399331    %vardept(fcmpdata=&outdata, id=&k);
1399332    %end;
1399333    %mend optCode;
1399334    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1399335    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1399336    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1399337    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1399338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399339    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1399340    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1399341    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1399342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399343    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1399344    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1399344  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1399345    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1399346    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1399347    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1399348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399349    filename _pref
1399349  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1399350    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1399351    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1399352   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1399353   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1399354   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1399355   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1399356   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1399357   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1399358   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1399359   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1399360   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1399361   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1399362   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1399363   +LENGTH _WARN_ $4
1399364   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1399365   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1399366   +
1399367   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1399368   +
1399369   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1399370   +
1399371   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1399372   +
1399373   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1399374   +
1399375   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1399376   +
1399377   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1399378   +
1399379   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1399380   +
1399381   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1399382   +
1399383   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1399384   +
1399385   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1399386   +
1399387   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1399388   +
1399389   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1399390   +
1399391   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1399392   +
1399393   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1399394   +
1399395   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1399396   +
1399397   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1399398   +
1399399   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1399400   +
1399401   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1399402   +
1399403   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1399404   +
1399405   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1399406   +
1399407   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1399408   +
1399409   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1399410   +
1399411   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1399412   +
1399413   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1399414   +
1399415   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1399416   +
1399417   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1399418   +
1399419   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1399420   +
1399421   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1399422   +
1399423   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1399424   +
1399425   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1399426   +
1399427   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1399428   +
1399429   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1399430   +
1399431   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1399432   +
1399433   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1399434   +
1399435   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1399436   +
1399437   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1399438   +
1399439   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1399440   +
1399441   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1399442   +
1399443   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1399444   +
1399445   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1399446   +
1399447   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1399448   +
1399449   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1399450   +
1399451   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1399452   +
1399453   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1399454   +
1399455   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1399456   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1399457   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1399458   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1399459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399461   +end;
MPRINT(EM_DIAGRAM):   end;
1399462   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399464   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1399465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399466   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1399467   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1399468   +   end;
MPRINT(EM_DIAGRAM):   end;
1399469   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1399470   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1399471   +   end;
MPRINT(EM_DIAGRAM):   end;
1399472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399473   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1399474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399476   +   end;
MPRINT(EM_DIAGRAM):   end;
1399477   +end;
MPRINT(EM_DIAGRAM):   end;
1399478   +
1399479   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1399480   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1399481   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1399482   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1399483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399485   +end;
MPRINT(EM_DIAGRAM):   end;
1399486   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399488   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1399489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399490   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1399491   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1399492   +   end;
MPRINT(EM_DIAGRAM):   end;
1399493   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1399494   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1399495   +   end;
MPRINT(EM_DIAGRAM):   end;
1399496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399497   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1399498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399500   +   end;
MPRINT(EM_DIAGRAM):   end;
1399501   +end;
MPRINT(EM_DIAGRAM):   end;
1399502   +
1399503   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1399504   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1399505   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1399506   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1399507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399509   +end;
MPRINT(EM_DIAGRAM):   end;
1399510   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399512   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1399513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399514   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1399515   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1399516   +   end;
MPRINT(EM_DIAGRAM):   end;
1399517   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1399518   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1399519   +   end;
MPRINT(EM_DIAGRAM):   end;
1399520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399521   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1399522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399524   +   end;
MPRINT(EM_DIAGRAM):   end;
1399525   +end;
MPRINT(EM_DIAGRAM):   end;
1399526   +
1399527   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1399528   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1399529   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1399530   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1399531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399533   +end;
MPRINT(EM_DIAGRAM):   end;
1399534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399536   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1399537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399538   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1399539   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1399540   +   end;
MPRINT(EM_DIAGRAM):   end;
1399541   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1399542   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1399543   +   end;
MPRINT(EM_DIAGRAM):   end;
1399544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399545   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1399546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399548   +   end;
MPRINT(EM_DIAGRAM):   end;
1399549   +end;
MPRINT(EM_DIAGRAM):   end;
1399550   +
1399551   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1399552   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1399553   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1399554   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1399555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399557   +end;
MPRINT(EM_DIAGRAM):   end;
1399558   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399559   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399560   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1399561   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399562   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1399563   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1399564   +   end;
MPRINT(EM_DIAGRAM):   end;
1399565   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1399566   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1399567   +   end;
MPRINT(EM_DIAGRAM):   end;
1399568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399569   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1399570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399572   +   end;
MPRINT(EM_DIAGRAM):   end;
1399573   +end;
MPRINT(EM_DIAGRAM):   end;
1399574   +
1399575   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1399576   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1399577   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1399578   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1399579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399581   +end;
MPRINT(EM_DIAGRAM):   end;
1399582   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399584   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1399585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399586   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1399587   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1399588   +   end;
MPRINT(EM_DIAGRAM):   end;
1399589   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1399590   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1399591   +   end;
MPRINT(EM_DIAGRAM):   end;
1399592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399593   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1399594   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399595   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399596   +   end;
MPRINT(EM_DIAGRAM):   end;
1399597   +end;
MPRINT(EM_DIAGRAM):   end;
1399598   +
1399599   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1399600   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1399601   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1399602   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1399603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399605   +end;
MPRINT(EM_DIAGRAM):   end;
1399606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399607   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1399608   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1399609   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399610   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1399611   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1399612   +   end;
MPRINT(EM_DIAGRAM):   end;
1399613   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1399614   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1399615   +   end;
MPRINT(EM_DIAGRAM):   end;
1399616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399617   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1399618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399620   +   end;
MPRINT(EM_DIAGRAM):   end;
1399621   +end;
MPRINT(EM_DIAGRAM):   end;
1399622   +
1399623   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1399624   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1399625   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1399626   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1399627   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1399628   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1399629   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1399630   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1399631   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1399632   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1399633   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1399634   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1399635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399637   +end;
MPRINT(EM_DIAGRAM):   end;
1399638   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399639   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1399640   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1399641   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399642   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1399643   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1399644   +   end;
MPRINT(EM_DIAGRAM):   end;
1399645   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1399646   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1399647   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1399648   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1399649   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1399650   +   end;
MPRINT(EM_DIAGRAM):   end;
1399651   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1399652   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1399653   +   end;
MPRINT(EM_DIAGRAM):   end;
1399654   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1399655   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1399656   +   end;
MPRINT(EM_DIAGRAM):   end;
1399657   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1399658   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1399659   +   end;
MPRINT(EM_DIAGRAM):   end;
1399660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399661   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1399662   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1399663   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1399664   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1399665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399667   +   end;
MPRINT(EM_DIAGRAM):   end;
1399668   +end;
MPRINT(EM_DIAGRAM):   end;
1399669   +
1399670   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1399671   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1399672   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1399673   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1399674   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1399675   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1399676   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1399677   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1399678   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1399679   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1399680   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1399681   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1399682   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1399683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1399684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399685   +end;
MPRINT(EM_DIAGRAM):   end;
1399686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1399687   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1399688   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1399689   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1399690   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1399691   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1399692   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1399693   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1399694   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1399695   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1399696   +         end;
MPRINT(EM_DIAGRAM):   end;
1399697   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1399698   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1399699   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1399700   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1399701   +            end;
MPRINT(EM_DIAGRAM):   end;
1399702   +         end;
MPRINT(EM_DIAGRAM):   end;
1399703   +      end;
MPRINT(EM_DIAGRAM):   end;
1399704   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1399705   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1399706   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1399707   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1399708   +         end;
MPRINT(EM_DIAGRAM):   end;
1399709   +      end;
MPRINT(EM_DIAGRAM):   end;
1399710   +   end;
MPRINT(EM_DIAGRAM):   end;
1399711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1399712   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1399713   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1399714   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1399715   +      end;
MPRINT(EM_DIAGRAM):   end;
1399716   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1399717   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1399718   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1399719   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1399720   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1399721   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1399722   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1399723   +         end;
MPRINT(EM_DIAGRAM):   end;
1399724   +      end;
MPRINT(EM_DIAGRAM):   end;
1399725   +   end;
MPRINT(EM_DIAGRAM):   end;
1399726   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1399727   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1399728   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1399729   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1399730   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1399731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1399732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399733   +   end;
MPRINT(EM_DIAGRAM):   end;
1399734   +end;
MPRINT(EM_DIAGRAM):   end;
1399735   +
1399736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399737   +*** Checking missing input Interval
1399738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1399739   +
1399740   +IF NMISS(
1399741   +   AcceptedCmpTotal ,
1399742   +   Age ,
1399743   +   Frq ,
1399744   +   Income ,
1399745   +   Kidhome ,
1399746   +   Mnt ,
1399747   +   MntFishProducts ,
1399748   +   MntFruits ,
1399749   +   MntGoldProds ,
1399750   +   MntMeatProducts ,
1399751   +   MntSweetProducts ,
1399752   +   MntWines ,
1399753   +   MonthsAsCustomer ,
1399754   +   NumCatalogPurchases ,
1399755   +   NumDealsPurchases ,
1399756   +   NumDistPurchases ,
1399757   +   NumStorePurchases ,
1399758   +   NumWebPurchases ,
1399759   +   NumWebVisitsMonth ,
1399760   +   RFMstat ,
1399761   +   RMntFrq ,
1399762   +   Recency ,
1399763   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1399764   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1399765   +
1399766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1399767   +END;
MPRINT(EM_DIAGRAM):   END;
1399768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399769   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1399770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399771   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1399772   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1399773   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1399774   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1399775   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1399776   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1399777   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1399778   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1399779   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1399780   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1399781   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1399782   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1399783   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1399784   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1399785   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1399786   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1399787   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1399788   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1399789   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1399790   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1399791   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1399792   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1399793   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1399794   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1399795   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1399796   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1399797   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1399798   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1399799   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1399800   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1399801   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1399802   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1399803   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1399804   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1399805   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1399806   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1399807   +END;
MPRINT(EM_DIAGRAM):   END;
1399808   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1399809   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1399810   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1399811   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1399812   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1399813   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1399814   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1399815   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1399816   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1399817   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1399818   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1399819   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1399820   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1399821   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1399822   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1399823   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1399824   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1399825   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1399826   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1399827   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1399828   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1399829   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1399830   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1399831   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1399832   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1399833   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1399834   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1399835   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1399836   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1399837   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1399838   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1399839   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1399840   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1399841   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1399842   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1399843   +   ELSE S_NumCatalogPurchases
1399844   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1399845   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1399846   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1399847   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1399848   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1399849   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1399850   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1399851   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1399852   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1399853   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1399854   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1399855   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1399856   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1399857   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1399858   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1399859   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1399860   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1399861   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1399862   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1399863   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1399864   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1399865   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1399866   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1399867   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1399868   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1399869   +END;
MPRINT(EM_DIAGRAM):   END;
1399870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399871   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1399872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399874   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1399875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399877   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1399878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1399880   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1399881   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1399882   +        S_Income  +    -1.07652572934003 * S_Kidhome
1399883   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1399884   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1399885   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1399886   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1399887   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1399888   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1399889   +          +     0.34217069579861 * S_NumDealsPurchases
1399890   +          +      0.7126550962469 * S_NumDistPurchases
1399891   +          +     0.05810128676346 * S_NumStorePurchases
1399892   +          +     -0.1974592461824 * S_NumWebPurchases
1399893   +          +     1.33855646568468 * S_NumWebVisitsMonth
1399894   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1399895   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1399896   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age +
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome +
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 *
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts +
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 *
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 *
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 *
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 *
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq +
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1399897   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1399898   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1399899   +        S_Income  +    -0.00280376715329 * S_Kidhome
1399900   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1399901   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1399902   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1399903   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1399904   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1399905   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1399906   +          +     0.45694604326279 * S_NumDealsPurchases
1399907   +          +      0.1555582457419 * S_NumDistPurchases
1399908   +          +     -0.3340268446813 * S_NumStorePurchases
1399909   +          +    -0.39316217683753 * S_NumWebPurchases
1399910   +          +     0.52431656748667 * S_NumWebVisitsMonth
1399911   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1399912   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1399913   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome +
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 *
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts +
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 *
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 *
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 *
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 *
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq +
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1399914   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1399915   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1399916   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1399917   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1399918   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 *
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 +
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 *
HigherEducationBinary0 ;
1399919   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1399920   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1399921   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1399922   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1399923   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 *
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 +
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 *
HigherEducationBinary0 ;
1399924   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1399925   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1399926   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1399927   +          +     0.46676686502466 * Marital_StatusDivorced
1399928   +          +    -1.27760562209616 * Marital_StatusMarried
1399929   +          +     1.31419230639567 * Marital_StatusSingle
1399930   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 *
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried +
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1399931   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1399932   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1399933   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1399934   +          +     0.07434297903639 * Marital_StatusDivorced
1399935   +          +     0.00294493836325 * Marital_StatusMarried
1399936   +          +    -0.00745595849422 * Marital_StatusSingle
1399937   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 *
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster +
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried +
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1399938   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1399939   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1399940   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1399941   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1399942   +END;
MPRINT(EM_DIAGRAM):   END;
1399943   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1399944   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1399945   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1399946   +END;
MPRINT(EM_DIAGRAM):   END;
1399947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399948   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1399949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399950   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1399951   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1399952   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1399953   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1399954   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1399955   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1399956   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1399957   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1399958   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1399959   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1399960   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1399961   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1399962   +END;
MPRINT(EM_DIAGRAM):   END;
1399963   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1399964   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1399965   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1399966   +END;
MPRINT(EM_DIAGRAM):   END;
1399967   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1399968   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1399969   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1399970   +END;
MPRINT(EM_DIAGRAM):   END;
1399971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399972   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1399973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1399974   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1399975   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1399976   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1399977   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1399978   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1399979   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1399980   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1399981   +END;
MPRINT(EM_DIAGRAM):   END;
1399982   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1399983   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1399984   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1399985   +drop
1399986   +H11
1399987   +H12
1399988   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1399989   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1399990    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1399991    quit;
1399992    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1399993    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1399994    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1399995    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1399996    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1399997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1399998    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1399999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400001    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1400002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400004    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400005    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1400006    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1400007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400008    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1400009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1400010    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1400011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400013    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400014    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1400015    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400016    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400017    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1400018    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1400018  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
1400019    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400020    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1400021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400022    filename _pref
1400022  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1400023    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1400024    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1400025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1400026   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1400027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1400028   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1400029   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1400030   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1400031    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1400032    quit;
1400033    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1400034    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1400035    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1400036    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1400037    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1400038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400039    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1400040    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400042    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1400043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400046    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1400047    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1400048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400049    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1400050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1400051    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1400052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400054    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400055    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1400056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400057    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400058    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1400059    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1400059  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1400060    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400061    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1400062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400063    filename _pref
1400063  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1400064    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1400065    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1400066   +
1400067   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1400068   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1400068  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1400069   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1400070   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1400071   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1400072   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1400073   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1400074    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1400075    quit;
1400076    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1400077    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1400078    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1400079    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1400080    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1400081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400082    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1400083    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400084    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400085    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1400086    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400088    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400089    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1400090    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1400091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400092    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1400093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400094    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1400095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400097    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400098    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1400099    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400100    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400101    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1400102    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1400102  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1400103    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400104    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1400105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400106    filename _pref
1400106  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1400107    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1400108    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1400109   +
1400110   +
1400111   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1400112   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1400113   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1400114   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1400115   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1400116   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400117   +
1400118   +
1400119   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1400120   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1400121   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1400122   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1400123   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1400124   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400125   +
1400126   +
1400127   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1400128   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1400129   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1400130   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1400131   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1400132   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400133   +
1400134   +
1400135   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1400136   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1400137   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1400138   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1400139   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1400140   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400141   +
1400142   +
1400143   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1400144   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1400145   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1400146   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1400147   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1400148   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400149   +
1400150   +
1400151   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1400152   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1400153   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1400154   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1400155   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1400156   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400157   +
1400158   +
1400159   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1400160   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1400161   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1400162   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1400163   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1400164   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400165   +
1400166   +
1400167   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1400168   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1400169   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1400170   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1400171   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1400172   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1400173   +if
1400174   +_FILTERNORM1 not in ( '.')
1400175   + and
1400176   +_FILTERNORM2 not in ( '.')
1400177   + and
1400178   +_FILTERNORM3 not in ( '.')
1400179   + and
1400180   +_FILTERNORM4 not in ( '.')
1400181   + and
1400182   +_FILTERNORM5 not in ( '.')
1400183   + and
1400184   +_FILTERNORM6 not in ( '.')
1400185   + and
1400186   +_FILTERNORM7 not in ( ' ')
1400187   + and
1400188   +_FILTERNORM8 not in ( ' ')
1400189   +and
1400190   +( Dt_Customer ne .)
1400191   +and ( Income ne . and (Income<=107000))
1400192   +and ( Kidhome ne .)
1400193   +and ( MntFishProducts ne .)
1400194   +and ( MntFruits ne .)
1400195   +and ( MntGoldProds ne .)
1400196   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1400197   +and ( MntSweetProducts ne .)
1400198   +and ( MntWines ne .)
1400199   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1400200   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1400201   +and ( NumStorePurchases ne .)
1400202   +and ( NumWebPurchases ne .)
1400203   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1400204   +and ( Recency ne .)
1400205   +and ( Teenhome ne .)
1400206   +and ( Year_Birth ne .)
1400207   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1400208   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1400209   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1400210   +end;
MPRINT(EM_DIAGRAM):   end;
1400211   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1400212   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1400213    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1400214    quit;
1400215    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1400216    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1400217    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1400218    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1400219    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1400220    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400221    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1400222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400224    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1400225    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400227    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400228    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1400229    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1400230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400231    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1400232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1400233    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1400234    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400236    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1400237    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1400238    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1400239    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1400240    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1400241    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1400241  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1400242    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400243    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1400244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400245    %macro varDept(fcmpdata=,id=);
1400246    %global nobs&id scoreFlag&id;
1400247    %let scoreFlag&id = 0;
1400248    %if &id=1 or ^&fcmpStart %then %do;
1400249    proc sort data=&fcmpdata out=_temp&id nodupkey;
1400250    by NAME;
1400251    where id=&id and LHS in( %let j=1;
1400252    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1400253    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1400254    "&var" %let j = %eval(&j+1);
1400255    %end;
1400256    );
1400257    run;
1400258    %let dsid = %sysfunc(open(_temp&id));
1400259    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1400260    %let dsid = %sysfunc(close(&dsid));
1400261    %if &&nobs&id %then %do;
1400262    %let scoreFlag&id = 1;
1400263    %let fcmpStart = 1;
1400264    %end;
1400265    %else %let fcmpStart = 0;
1400266    %end;
1400267    %else %do;
1400268    proc sort data=&fcmpdata out=_tempid;
1400269    where id=&id;
1400270    by LHS;
1400271    run;
1400272    %let dsid = %sysfunc(open(_tempid));
1400273    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1400274    %let dsid = %sysfunc(close(&dsid));
1400275    %if ^&&nobs&id %then %do;
1400276    proc datasets lib=work nolist;
1400277    delete _tempid;
1400278    run;
1400279    quit;
1400280    %end;
1400281    %else %do;
1400282    data _tempAll;
1400283    set %let j=%eval(&id-1);
1400284    %do x=1 %to &j;
1400285    %if &&nobs&x %then %do;
1400286    _temp&x %end;
1400287    %end;
1400288    ;
1400289    run;
1400290    proc sql;
1400291    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1400291  ! work._tempid p2 where p.name=p2.lhs;
1400292    quit;
1400293    data _temp&id;
1400294    set _temp&id;
1400295    where LHS ne '' and NAME ne '' and Node ne '';
1400296    run;
1400297    proc datasets lib=work nolist;
1400298    delete _tempAll;
1400299    run;
1400300    %let dsid = %sysfunc(open(_temp&id));
1400301    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1400302    %let dsid = %sysfunc(close(&dsid));
1400303    %if ^&&nobs&id %then %do;
1400304    proc datasets lib=work nolist;
1400305    delete _temp&id;
1400306    run;
1400307    quit;
1400308    %end;
1400309    %else %do;
1400310    %let scoreFlag&id = 1;
1400311    data _temp&id;
1400312    set _temp&id;
1400313    where LHS ne NAME and node ne '';
1400314    run;
1400315    %let dsid = %sysfunc(open(_temp&id));
1400316    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1400317    %let dsid = %sysfunc(close(&dsid));
1400318    %if ^&&nobs&id %then %do;
1400319    proc datasets lib=work nolist;
1400320    delete _temp&id;
1400321    run;
1400322    quit;
1400323    %end;
1400324    %else %do;
1400325    proc sort data=_temp&id nodupkey;
1400326    by LHS NAME;
1400327    run;
1400328    %end;
1400329    %end;
1400330    %end;
1400331    %end;
1400332    %mend varDept;
1400333    %macro optCode(outdata=fcmpdata);
1400334    %global fcmpStart;
1400335    %let fcmpStart = 0;
1400336    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1400337    %let NumNodes=9;
1400338    %do k=1 %to &NumNodes;
1400339    %vardept(fcmpdata=&outdata, id=&k);
1400340    %end;
1400341    %mend optCode;
1400342    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.21 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1400343    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1400344    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1400345    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1400346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400347    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1400348    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1400349    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1400350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400351    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1400352    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1400352  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1400353    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400354    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1400355    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1400356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1400357    filename _pref
1400357  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1400358    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1400359    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1400360   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1400361   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1400362   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1400363   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1400364   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1400365   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1400366   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1400367   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1400368   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1400369   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1400370   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1400371   +LENGTH _WARN_ $4
1400372   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1400373   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1400374   +
1400375   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1400376   +
1400377   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1400378   +
1400379   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1400380   +
1400381   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1400382   +
1400383   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1400384   +
1400385   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1400386   +
1400387   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1400388   +
1400389   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1400390   +
1400391   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1400392   +
1400393   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1400394   +
1400395   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1400396   +
1400397   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1400398   +
1400399   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1400400   +
1400401   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1400402   +
1400403   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1400404   +
1400405   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1400406   +
1400407   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1400408   +
1400409   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1400410   +
1400411   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1400412   +
1400413   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1400414   +
1400415   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1400416   +
1400417   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1400418   +
1400419   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1400420   +
1400421   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1400422   +
1400423   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1400424   +
1400425   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1400426   +
1400427   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1400428   +
1400429   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1400430   +
1400431   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1400432   +
1400433   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1400434   +
1400435   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1400436   +
1400437   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1400438   +
1400439   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1400440   +
1400441   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1400442   +
1400443   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1400444   +
1400445   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1400446   +
1400447   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1400448   +
1400449   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1400450   +
1400451   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1400452   +
1400453   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1400454   +
1400455   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1400456   +
1400457   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1400458   +
1400459   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1400460   +
1400461   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1400462   +
1400463   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1400464   +
1400465   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1400466   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1400467   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1400468   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1400469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400471   +end;
MPRINT(EM_DIAGRAM):   end;
1400472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400474   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1400475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1400477   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1400478   +   end;
MPRINT(EM_DIAGRAM):   end;
1400479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1400480   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1400481   +   end;
MPRINT(EM_DIAGRAM):   end;
1400482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400483   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1400484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400486   +   end;
MPRINT(EM_DIAGRAM):   end;
1400487   +end;
MPRINT(EM_DIAGRAM):   end;
1400488   +
1400489   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1400490   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1400491   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1400492   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1400493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400495   +end;
MPRINT(EM_DIAGRAM):   end;
1400496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400498   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1400499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1400501   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1400502   +   end;
MPRINT(EM_DIAGRAM):   end;
1400503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1400504   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1400505   +   end;
MPRINT(EM_DIAGRAM):   end;
1400506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400507   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1400508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400510   +   end;
MPRINT(EM_DIAGRAM):   end;
1400511   +end;
MPRINT(EM_DIAGRAM):   end;
1400512   +
1400513   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1400514   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1400515   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1400516   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1400517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400519   +end;
MPRINT(EM_DIAGRAM):   end;
1400520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400522   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1400523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1400525   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1400526   +   end;
MPRINT(EM_DIAGRAM):   end;
1400527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1400528   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1400529   +   end;
MPRINT(EM_DIAGRAM):   end;
1400530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400531   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1400532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400534   +   end;
MPRINT(EM_DIAGRAM):   end;
1400535   +end;
MPRINT(EM_DIAGRAM):   end;
1400536   +
1400537   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1400538   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1400539   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1400540   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1400541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400543   +end;
MPRINT(EM_DIAGRAM):   end;
1400544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400546   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1400547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1400549   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1400550   +   end;
MPRINT(EM_DIAGRAM):   end;
1400551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1400552   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1400553   +   end;
MPRINT(EM_DIAGRAM):   end;
1400554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400555   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1400556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400558   +   end;
MPRINT(EM_DIAGRAM):   end;
1400559   +end;
MPRINT(EM_DIAGRAM):   end;
1400560   +
1400561   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1400562   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1400563   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1400564   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1400565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400567   +end;
MPRINT(EM_DIAGRAM):   end;
1400568   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400570   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1400571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1400573   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1400574   +   end;
MPRINT(EM_DIAGRAM):   end;
1400575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1400576   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1400577   +   end;
MPRINT(EM_DIAGRAM):   end;
1400578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400579   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1400580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400582   +   end;
MPRINT(EM_DIAGRAM):   end;
1400583   +end;
MPRINT(EM_DIAGRAM):   end;
1400584   +
1400585   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1400586   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1400587   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1400588   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1400589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400591   +end;
MPRINT(EM_DIAGRAM):   end;
1400592   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400594   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1400595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400596   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1400597   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1400598   +   end;
MPRINT(EM_DIAGRAM):   end;
1400599   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1400600   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1400601   +   end;
MPRINT(EM_DIAGRAM):   end;
1400602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400603   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1400604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400606   +   end;
MPRINT(EM_DIAGRAM):   end;
1400607   +end;
MPRINT(EM_DIAGRAM):   end;
1400608   +
1400609   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1400610   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1400611   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1400612   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1400613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400615   +end;
MPRINT(EM_DIAGRAM):   end;
1400616   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1400618   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1400619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400620   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1400621   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1400622   +   end;
MPRINT(EM_DIAGRAM):   end;
1400623   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1400624   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1400625   +   end;
MPRINT(EM_DIAGRAM):   end;
1400626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400627   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1400628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400630   +   end;
MPRINT(EM_DIAGRAM):   end;
1400631   +end;
MPRINT(EM_DIAGRAM):   end;
1400632   +
1400633   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1400634   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1400635   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1400636   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1400637   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1400638   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1400639   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1400640   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1400641   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1400642   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1400643   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1400644   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1400645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400647   +end;
MPRINT(EM_DIAGRAM):   end;
1400648   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400649   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1400650   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1400651   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400652   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1400653   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1400654   +   end;
MPRINT(EM_DIAGRAM):   end;
1400655   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1400656   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1400657   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1400658   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1400659   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1400660   +   end;
MPRINT(EM_DIAGRAM):   end;
1400661   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1400662   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1400663   +   end;
MPRINT(EM_DIAGRAM):   end;
1400664   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1400665   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1400666   +   end;
MPRINT(EM_DIAGRAM):   end;
1400667   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1400668   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1400669   +   end;
MPRINT(EM_DIAGRAM):   end;
1400670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400671   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1400672   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1400673   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1400674   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1400675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400677   +   end;
MPRINT(EM_DIAGRAM):   end;
1400678   +end;
MPRINT(EM_DIAGRAM):   end;
1400679   +
1400680   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1400681   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1400682   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1400683   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1400684   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1400685   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1400686   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1400687   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1400688   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1400689   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1400690   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1400691   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1400692   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1400693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1400694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400695   +end;
MPRINT(EM_DIAGRAM):   end;
1400696   +else do;
MPRINT(EM_DIAGRAM):   else do;
1400697   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1400698   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1400699   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1400700   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1400701   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1400702   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1400703   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1400704   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1400705   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1400706   +         end;
MPRINT(EM_DIAGRAM):   end;
1400707   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1400708   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1400709   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1400710   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1400711   +            end;
MPRINT(EM_DIAGRAM):   end;
1400712   +         end;
MPRINT(EM_DIAGRAM):   end;
1400713   +      end;
MPRINT(EM_DIAGRAM):   end;
1400714   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1400715   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1400716   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1400717   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1400718   +         end;
MPRINT(EM_DIAGRAM):   end;
1400719   +      end;
MPRINT(EM_DIAGRAM):   end;
1400720   +   end;
MPRINT(EM_DIAGRAM):   end;
1400721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1400722   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1400723   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1400724   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1400725   +      end;
MPRINT(EM_DIAGRAM):   end;
1400726   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1400727   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1400728   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1400729   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1400730   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1400731   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1400732   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1400733   +         end;
MPRINT(EM_DIAGRAM):   end;
1400734   +      end;
MPRINT(EM_DIAGRAM):   end;
1400735   +   end;
MPRINT(EM_DIAGRAM):   end;
1400736   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1400737   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1400738   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1400739   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1400740   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1400741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1400742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400743   +   end;
MPRINT(EM_DIAGRAM):   end;
1400744   +end;
MPRINT(EM_DIAGRAM):   end;
1400745   +
1400746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400747   +*** Checking missing input Interval
1400748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1400749   +
1400750   +IF NMISS(
1400751   +   AcceptedCmpTotal ,
1400752   +   Age ,
1400753   +   Frq ,
1400754   +   Income ,
1400755   +   Kidhome ,
1400756   +   Mnt ,
1400757   +   MntFishProducts ,
1400758   +   MntFruits ,
1400759   +   MntGoldProds ,
1400760   +   MntMeatProducts ,
1400761   +   MntSweetProducts ,
1400762   +   MntWines ,
1400763   +   MonthsAsCustomer ,
1400764   +   NumCatalogPurchases ,
1400765   +   NumDealsPurchases ,
1400766   +   NumDistPurchases ,
1400767   +   NumStorePurchases ,
1400768   +   NumWebPurchases ,
1400769   +   NumWebVisitsMonth ,
1400770   +   RFMstat ,
1400771   +   RMntFrq ,
1400772   +   Recency ,
1400773   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1400774   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1400775   +
1400776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1400777   +END;
MPRINT(EM_DIAGRAM):   END;
1400778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400779   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1400780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400781   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1400782   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1400783   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1400784   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1400785   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1400786   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1400787   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1400788   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1400789   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1400790   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1400791   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1400792   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1400793   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1400794   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1400795   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1400796   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1400797   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1400798   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1400799   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1400800   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1400801   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1400802   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1400803   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1400804   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1400805   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1400806   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1400807   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1400808   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1400809   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1400810   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1400811   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1400812   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1400813   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1400814   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1400815   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1400816   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1400817   +END;
MPRINT(EM_DIAGRAM):   END;
1400818   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1400819   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1400820   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1400821   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1400822   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1400823   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1400824   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1400825   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1400826   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1400827   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1400828   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1400829   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1400830   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1400831   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1400832   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1400833   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1400834   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1400835   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1400836   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1400837   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1400838   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1400839   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1400840   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1400841   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1400842   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1400843   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1400844   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1400845   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1400846   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1400847   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1400848   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1400849   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1400850   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1400851   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1400852   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1400853   +   ELSE S_NumCatalogPurchases
1400854   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1400855   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1400856   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1400857   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1400858   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1400859   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1400860   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1400861   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1400862   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1400863   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1400864   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1400865   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1400866   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1400867   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1400868   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1400869   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1400870   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1400871   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1400872   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1400873   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1400874   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1400875   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1400876   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1400877   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1400878   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1400879   +END;
MPRINT(EM_DIAGRAM):   END;
1400880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400881   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1400882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400884   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1400885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400887   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1400888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1400890   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1400891   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1400892   +        S_Income  +     0.48614351216065 * S_Kidhome
1400893   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1400894   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1400895   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1400896   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1400897   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1400898   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1400899   +          +     1.38069708066212 * S_NumDealsPurchases
1400900   +          +     0.18758966496994 * S_NumDistPurchases
1400901   +          +    -0.65306017966122 * S_NumStorePurchases
1400902   +          +    -0.65780154318734 * S_NumWebPurchases
1400903   +          +     1.42347048260615 * S_NumWebVisitsMonth
1400904   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1400905   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1400906   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome +
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 *
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts +
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 *
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 *
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 *
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 *
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq +
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1400907   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1400908   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1400909   +        S_Income  +     0.50072567449363 * S_Kidhome
1400910   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1400911   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1400912   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1400913   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1400914   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1400915   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1400916   +          +    -0.75291043162386 * S_NumDealsPurchases
1400917   +          +    -0.06780631818187 * S_NumDistPurchases
1400918   +          +     1.03453599373919 * S_NumStorePurchases
1400919   +          +     1.02348906006707 * S_NumWebPurchases
1400920   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1400921   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1400922   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1400923   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome +
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 *
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts +
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 *
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 *
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 *
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 *
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq +
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1400924   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1400925   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1400926   +        S_Income  +     0.57496607656903 * S_Kidhome
1400927   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1400928   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1400929   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1400930   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1400931   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1400932   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1400933   +          +     0.13431497076806 * S_NumDealsPurchases
1400934   +          +     -0.4516722514278 * S_NumDistPurchases
1400935   +          +     0.08636745161008 * S_NumStorePurchases
1400936   +          +    -0.01091843489919 * S_NumWebPurchases
1400937   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1400938   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1400939   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1400940   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome +
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 *
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts +
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 *
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 *
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 *
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 *
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq +
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1400941   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1400942   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1400943   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1400944   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1400945   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 *
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 +
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 *
HigherEducationBinary0 ;
1400946   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1400947   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1400948   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1400949   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1400950   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 *
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 +
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 *
HigherEducationBinary0 ;
1400951   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1400952   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1400953   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1400954   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1400955   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 *
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 +
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 *
HigherEducationBinary0 ;
1400956   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1400957   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1400958   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1400959   +          +     0.09616912826117 * Marital_StatusDivorced
1400960   +          +     0.15377557778014 * Marital_StatusMarried
1400961   +          +    -0.20686296055741 * Marital_StatusSingle
1400962   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 *
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster +
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried +
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1400963   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1400964   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1400965   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1400966   +          +    -0.18362421441913 * Marital_StatusDivorced
1400967   +          +     0.14861660317702 * Marital_StatusMarried
1400968   +          +    -0.51051982152027 * Marital_StatusSingle
1400969   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 *
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried +
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1400970   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1400971   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1400972   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1400973   +          +    -0.65088528624708 * Marital_StatusDivorced
1400974   +          +     1.85383531288095 * Marital_StatusMarried
1400975   +          +    -1.45031245605509 * Marital_StatusSingle
1400976   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 *
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster +
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried +
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1400977   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1400978   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1400979   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1400980   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1400981   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1400982   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1400983   +END;
MPRINT(EM_DIAGRAM):   END;
1400984   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1400985   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1400986   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1400987   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1400988   +END;
MPRINT(EM_DIAGRAM):   END;
1400989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400990   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1400991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1400992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1400993   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1400994   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 +
-3.46108195946376 * H13 ;
1400995   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1400996   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1400997   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1400998   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1400999   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1401000   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1401001   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1401002   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1401003   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1401004   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1401005   +END;
MPRINT(EM_DIAGRAM):   END;
1401006   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1401007   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1401008   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1401009   +END;
MPRINT(EM_DIAGRAM):   END;
1401010   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1401011   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1401012   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1401013   +END;
MPRINT(EM_DIAGRAM):   END;
1401014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401015   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1401016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401017   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1401018   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1401019   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1401020   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1401021   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1401022   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1401023   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1401024   +END;
MPRINT(EM_DIAGRAM):   END;
1401025   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1401026   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1401027   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1401028   +drop
1401029   +H11
1401030   +H12
1401031   +H13
1401032   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1401033   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1401034    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1401035    quit;
1401036    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1401037    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1401038    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1401039    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1401040    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1401041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401042    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1401043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401045    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1401046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401048    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401049    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1401050    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1401051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401052    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1401053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1401054    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1401055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401057    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401058    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1401059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401060    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401061    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1401062    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1401062  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
1401063    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401064    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1401065    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401066    filename _pref
1401066  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1401067    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1401068    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1401069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1401070   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1401071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1401072   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1401073   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1401074   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1401075    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1401076    quit;
1401077    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1401078    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1401079    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1401080    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1401081    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1401082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401083    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1401084    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401086    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1401087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401090    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1401091    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1401092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401093    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1401094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1401095    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1401096    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401098    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401099    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1401100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401101    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401102    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1401103    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1401103  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1401104    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401105    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1401106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401107    filename _pref
1401107  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1401108    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1401109    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1401110   +
1401111   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1401112   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1401112  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1401113   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1401114   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1401115   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1401116   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1401117   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1401118    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1401119    quit;
1401120    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1401121    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1401122    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1401123    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1401124    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1401125    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401126    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1401127    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401129    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1401130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401132    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401133    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1401134    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1401135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401136    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1401137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401138    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1401139    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401141    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401142    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1401143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401144    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401145    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1401146    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1401146  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1401147    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401148    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1401149    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401150    filename _pref
1401150  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1401151    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1401152    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1401153   +
1401154   +
1401155   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1401156   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1401157   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1401158   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1401159   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1401160   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401161   +
1401162   +
1401163   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1401164   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1401165   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1401166   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1401167   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1401168   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401169   +
1401170   +
1401171   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1401172   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1401173   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1401174   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1401175   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1401176   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401177   +
1401178   +
1401179   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1401180   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1401181   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1401182   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1401183   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1401184   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401185   +
1401186   +
1401187   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1401188   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1401189   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1401190   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1401191   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1401192   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401193   +
1401194   +
1401195   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1401196   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1401197   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1401198   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1401199   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1401200   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401201   +
1401202   +
1401203   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1401204   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1401205   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1401206   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1401207   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1401208   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401209   +
1401210   +
1401211   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1401212   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1401213   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1401214   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1401215   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1401216   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1401217   +if
1401218   +_FILTERNORM1 not in ( '.')
1401219   + and
1401220   +_FILTERNORM2 not in ( '.')
1401221   + and
1401222   +_FILTERNORM3 not in ( '.')
1401223   + and
1401224   +_FILTERNORM4 not in ( '.')
1401225   + and
1401226   +_FILTERNORM5 not in ( '.')
1401227   + and
1401228   +_FILTERNORM6 not in ( '.')
1401229   + and
1401230   +_FILTERNORM7 not in ( ' ')
1401231   + and
1401232   +_FILTERNORM8 not in ( ' ')
1401233   +and
1401234   +( Dt_Customer ne .)
1401235   +and ( Income ne . and (Income<=107000))
1401236   +and ( Kidhome ne .)
1401237   +and ( MntFishProducts ne .)
1401238   +and ( MntFruits ne .)
1401239   +and ( MntGoldProds ne .)
1401240   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1401241   +and ( MntSweetProducts ne .)
1401242   +and ( MntWines ne .)
1401243   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1401244   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1401245   +and ( NumStorePurchases ne .)
1401246   +and ( NumWebPurchases ne .)
1401247   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1401248   +and ( Recency ne .)
1401249   +and ( Teenhome ne .)
1401250   +and ( Year_Birth ne .)
1401251   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1401252   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1401253   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1401254   +end;
MPRINT(EM_DIAGRAM):   end;
1401255   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1401256   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1401257    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1401258    quit;
1401259    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1401260    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1401261    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1401262    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1401263    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1401264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401265    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1401266    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401268    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1401269    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401271    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401272    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1401273    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1401274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1401275    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1401276    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1401277    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1401278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401279    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401280    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1401281    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1401282    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1401283    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401284    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1401285    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1401285  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1401286    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401287    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1401288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401289    %macro varDept(fcmpdata=,id=);
1401290    %global nobs&id scoreFlag&id;
1401291    %let scoreFlag&id = 0;
1401292    %if &id=1 or ^&fcmpStart %then %do;
1401293    proc sort data=&fcmpdata out=_temp&id nodupkey;
1401294    by NAME;
1401295    where id=&id and LHS in( %let j=1;
1401296    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1401297    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1401298    "&var" %let j = %eval(&j+1);
1401299    %end;
1401300    );
1401301    run;
1401302    %let dsid = %sysfunc(open(_temp&id));
1401303    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1401304    %let dsid = %sysfunc(close(&dsid));
1401305    %if &&nobs&id %then %do;
1401306    %let scoreFlag&id = 1;
1401307    %let fcmpStart = 1;
1401308    %end;
1401309    %else %let fcmpStart = 0;
1401310    %end;
1401311    %else %do;
1401312    proc sort data=&fcmpdata out=_tempid;
1401313    where id=&id;
1401314    by LHS;
1401315    run;
1401316    %let dsid = %sysfunc(open(_tempid));
1401317    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1401318    %let dsid = %sysfunc(close(&dsid));
1401319    %if ^&&nobs&id %then %do;
1401320    proc datasets lib=work nolist;
1401321    delete _tempid;
1401322    run;
1401323    quit;
1401324    %end;
1401325    %else %do;
1401326    data _tempAll;
1401327    set %let j=%eval(&id-1);
1401328    %do x=1 %to &j;
1401329    %if &&nobs&x %then %do;
1401330    _temp&x %end;
1401331    %end;
1401332    ;
1401333    run;
1401334    proc sql;
1401335    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1401335  ! work._tempid p2 where p.name=p2.lhs;
1401336    quit;
1401337    data _temp&id;
1401338    set _temp&id;
1401339    where LHS ne '' and NAME ne '' and Node ne '';
1401340    run;
1401341    proc datasets lib=work nolist;
1401342    delete _tempAll;
1401343    run;
1401344    %let dsid = %sysfunc(open(_temp&id));
1401345    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1401346    %let dsid = %sysfunc(close(&dsid));
1401347    %if ^&&nobs&id %then %do;
1401348    proc datasets lib=work nolist;
1401349    delete _temp&id;
1401350    run;
1401351    quit;
1401352    %end;
1401353    %else %do;
1401354    %let scoreFlag&id = 1;
1401355    data _temp&id;
1401356    set _temp&id;
1401357    where LHS ne NAME and node ne '';
1401358    run;
1401359    %let dsid = %sysfunc(open(_temp&id));
1401360    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1401361    %let dsid = %sysfunc(close(&dsid));
1401362    %if ^&&nobs&id %then %do;
1401363    proc datasets lib=work nolist;
1401364    delete _temp&id;
1401365    run;
1401366    quit;
1401367    %end;
1401368    %else %do;
1401369    proc sort data=_temp&id nodupkey;
1401370    by LHS NAME;
1401371    run;
1401372    %end;
1401373    %end;
1401374    %end;
1401375    %end;
1401376    %mend varDept;
1401377    %macro optCode(outdata=fcmpdata);
1401378    %global fcmpStart;
1401379    %let fcmpStart = 0;
1401380    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1401381    %let NumNodes=9;
1401382    %do k=1 %to &NumNodes;
1401383    %vardept(fcmpdata=&outdata, id=&k);
1401384    %end;
1401385    %mend optCode;
1401386    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1401387    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1401388    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1401389    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1401390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401391    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1401392    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1401393    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1401394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401395    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1401396    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1401396  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1401397    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401398    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1401399    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1401400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1401401    filename _pref
1401401  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1401402    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1401403    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1401404   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1401405   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1401406   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1401407   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1401408   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1401409   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1401410   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1401411   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1401412   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1401413   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1401414   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1401415   +LENGTH _WARN_ $4
1401416   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1401417   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1401418   +
1401419   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1401420   +
1401421   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1401422   +
1401423   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1401424   +
1401425   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1401426   +
1401427   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1401428   +
1401429   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1401430   +
1401431   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1401432   +
1401433   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1401434   +
1401435   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1401436   +
1401437   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1401438   +
1401439   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1401440   +
1401441   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1401442   +
1401443   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1401444   +
1401445   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1401446   +
1401447   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1401448   +
1401449   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1401450   +
1401451   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1401452   +
1401453   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1401454   +
1401455   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1401456   +
1401457   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1401458   +
1401459   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1401460   +
1401461   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1401462   +
1401463   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1401464   +
1401465   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1401466   +
1401467   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1401468   +
1401469   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1401470   +
1401471   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1401472   +
1401473   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1401474   +
1401475   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1401476   +
1401477   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1401478   +
1401479   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1401480   +
1401481   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1401482   +
1401483   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1401484   +
1401485   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1401486   +
1401487   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1401488   +
1401489   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1401490   +
1401491   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1401492   +
1401493   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1401494   +
1401495   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1401496   +
1401497   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1401498   +
1401499   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1401500   +
1401501   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1401502   +
1401503   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1401504   +
1401505   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1401506   +
1401507   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1401508   +
1401509   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1401510   +
1401511   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1401512   +
1401513   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1401514   +
1401515   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1401516   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1401517   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1401518   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1401519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401521   +end;
MPRINT(EM_DIAGRAM):   end;
1401522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401524   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1401525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1401527   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1401528   +   end;
MPRINT(EM_DIAGRAM):   end;
1401529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1401530   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1401531   +   end;
MPRINT(EM_DIAGRAM):   end;
1401532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401533   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1401534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401536   +   end;
MPRINT(EM_DIAGRAM):   end;
1401537   +end;
MPRINT(EM_DIAGRAM):   end;
1401538   +
1401539   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1401540   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1401541   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1401542   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1401543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401545   +end;
MPRINT(EM_DIAGRAM):   end;
1401546   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401548   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1401549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1401551   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1401552   +   end;
MPRINT(EM_DIAGRAM):   end;
1401553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1401554   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1401555   +   end;
MPRINT(EM_DIAGRAM):   end;
1401556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401557   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1401558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401560   +   end;
MPRINT(EM_DIAGRAM):   end;
1401561   +end;
MPRINT(EM_DIAGRAM):   end;
1401562   +
1401563   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1401564   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1401565   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1401566   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1401567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401569   +end;
MPRINT(EM_DIAGRAM):   end;
1401570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401572   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1401573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401574   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1401575   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1401576   +   end;
MPRINT(EM_DIAGRAM):   end;
1401577   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1401578   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1401579   +   end;
MPRINT(EM_DIAGRAM):   end;
1401580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401581   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1401582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401584   +   end;
MPRINT(EM_DIAGRAM):   end;
1401585   +end;
MPRINT(EM_DIAGRAM):   end;
1401586   +
1401587   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1401588   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1401589   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1401590   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1401591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401593   +end;
MPRINT(EM_DIAGRAM):   end;
1401594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401596   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1401597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401598   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1401599   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1401600   +   end;
MPRINT(EM_DIAGRAM):   end;
1401601   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1401602   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1401603   +   end;
MPRINT(EM_DIAGRAM):   end;
1401604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401605   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1401606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401608   +   end;
MPRINT(EM_DIAGRAM):   end;
1401609   +end;
MPRINT(EM_DIAGRAM):   end;
1401610   +
1401611   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1401612   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1401613   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1401614   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1401615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401617   +end;
MPRINT(EM_DIAGRAM):   end;
1401618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401620   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1401621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401622   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1401623   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1401624   +   end;
MPRINT(EM_DIAGRAM):   end;
1401625   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1401626   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1401627   +   end;
MPRINT(EM_DIAGRAM):   end;
1401628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401629   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1401630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401632   +   end;
MPRINT(EM_DIAGRAM):   end;
1401633   +end;
MPRINT(EM_DIAGRAM):   end;
1401634   +
1401635   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1401636   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1401637   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1401638   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1401639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401641   +end;
MPRINT(EM_DIAGRAM):   end;
1401642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401644   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1401645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401646   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1401647   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1401648   +   end;
MPRINT(EM_DIAGRAM):   end;
1401649   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1401650   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1401651   +   end;
MPRINT(EM_DIAGRAM):   end;
1401652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401653   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1401654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401656   +   end;
MPRINT(EM_DIAGRAM):   end;
1401657   +end;
MPRINT(EM_DIAGRAM):   end;
1401658   +
1401659   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1401660   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1401661   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1401662   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1401663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401665   +end;
MPRINT(EM_DIAGRAM):   end;
1401666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1401668   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1401669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401670   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1401671   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1401672   +   end;
MPRINT(EM_DIAGRAM):   end;
1401673   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1401674   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1401675   +   end;
MPRINT(EM_DIAGRAM):   end;
1401676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401677   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1401678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401680   +   end;
MPRINT(EM_DIAGRAM):   end;
1401681   +end;
MPRINT(EM_DIAGRAM):   end;
1401682   +
1401683   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1401684   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1401685   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1401686   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1401687   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1401688   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1401689   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1401690   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1401691   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1401692   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1401693   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1401694   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1401695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401697   +end;
MPRINT(EM_DIAGRAM):   end;
1401698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401699   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1401700   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1401701   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401702   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1401703   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1401704   +   end;
MPRINT(EM_DIAGRAM):   end;
1401705   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1401706   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1401707   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1401708   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1401709   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1401710   +   end;
MPRINT(EM_DIAGRAM):   end;
1401711   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1401712   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1401713   +   end;
MPRINT(EM_DIAGRAM):   end;
1401714   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1401715   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1401716   +   end;
MPRINT(EM_DIAGRAM):   end;
1401717   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1401718   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1401719   +   end;
MPRINT(EM_DIAGRAM):   end;
1401720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401721   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1401722   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1401723   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1401724   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1401725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401727   +   end;
MPRINT(EM_DIAGRAM):   end;
1401728   +end;
MPRINT(EM_DIAGRAM):   end;
1401729   +
1401730   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1401731   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1401732   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1401733   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1401734   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1401735   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1401736   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1401737   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1401738   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1401739   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1401740   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1401741   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1401742   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1401743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1401744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401745   +end;
MPRINT(EM_DIAGRAM):   end;
1401746   +else do;
MPRINT(EM_DIAGRAM):   else do;
1401747   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1401748   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1401749   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1401750   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1401751   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1401752   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1401753   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1401754   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1401755   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1401756   +         end;
MPRINT(EM_DIAGRAM):   end;
1401757   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1401758   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1401759   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1401760   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1401761   +            end;
MPRINT(EM_DIAGRAM):   end;
1401762   +         end;
MPRINT(EM_DIAGRAM):   end;
1401763   +      end;
MPRINT(EM_DIAGRAM):   end;
1401764   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1401765   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1401766   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1401767   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1401768   +         end;
MPRINT(EM_DIAGRAM):   end;
1401769   +      end;
MPRINT(EM_DIAGRAM):   end;
1401770   +   end;
MPRINT(EM_DIAGRAM):   end;
1401771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1401772   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1401773   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1401774   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1401775   +      end;
MPRINT(EM_DIAGRAM):   end;
1401776   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1401777   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1401778   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1401779   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1401780   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1401781   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1401782   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1401783   +         end;
MPRINT(EM_DIAGRAM):   end;
1401784   +      end;
MPRINT(EM_DIAGRAM):   end;
1401785   +   end;
MPRINT(EM_DIAGRAM):   end;
1401786   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1401787   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1401788   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1401789   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1401790   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1401791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1401792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401793   +   end;
MPRINT(EM_DIAGRAM):   end;
1401794   +end;
MPRINT(EM_DIAGRAM):   end;
1401795   +
1401796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401797   +*** Checking missing input Interval
1401798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1401799   +
1401800   +IF NMISS(
1401801   +   AcceptedCmpTotal ,
1401802   +   Age ,
1401803   +   Frq ,
1401804   +   Income ,
1401805   +   Kidhome ,
1401806   +   Mnt ,
1401807   +   MntFishProducts ,
1401808   +   MntFruits ,
1401809   +   MntGoldProds ,
1401810   +   MntMeatProducts ,
1401811   +   MntSweetProducts ,
1401812   +   MntWines ,
1401813   +   MonthsAsCustomer ,
1401814   +   NumCatalogPurchases ,
1401815   +   NumDealsPurchases ,
1401816   +   NumDistPurchases ,
1401817   +   NumStorePurchases ,
1401818   +   NumWebPurchases ,
1401819   +   NumWebVisitsMonth ,
1401820   +   RFMstat ,
1401821   +   RMntFrq ,
1401822   +   Recency ,
1401823   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1401824   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1401825   +
1401826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1401827   +END;
MPRINT(EM_DIAGRAM):   END;
1401828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401829   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1401830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1401832   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1401833   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1401834   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1401835   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1401836   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1401837   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1401838   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1401839   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1401840   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1401841   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1401842   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1401843   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1401844   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1401845   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1401846   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1401847   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1401848   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1401849   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1401850   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1401851   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1401852   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1401853   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1401854   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1401855   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1401856   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1401857   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1401858   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1401859   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1401860   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1401861   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1401862   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1401863   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1401864   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1401865   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1401866   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1401867   +END;
MPRINT(EM_DIAGRAM):   END;
1401868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1401869   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1401870   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1401871   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1401872   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1401873   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1401874   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1401875   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1401876   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1401877   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1401878   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1401879   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1401880   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1401881   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1401882   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1401883   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1401884   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1401885   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1401886   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1401887   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1401888   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1401889   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1401890   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1401891   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1401892   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1401893   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1401894   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1401895   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1401896   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1401897   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1401898   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1401899   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1401900   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1401901   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1401902   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1401903   +   ELSE S_NumCatalogPurchases
1401904   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1401905   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1401906   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1401907   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1401908   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1401909   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1401910   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1401911   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1401912   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1401913   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1401914   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1401915   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1401916   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1401917   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1401918   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1401919   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1401920   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1401921   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1401922   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1401923   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1401924   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1401925   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1401926   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1401927   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1401928   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1401929   +END;
MPRINT(EM_DIAGRAM):   END;
1401930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401931   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1401932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401934   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1401935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401937   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1401938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1401939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1401940   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1401941   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1401942   +        S_Income  +     -0.0761121347886 * S_Kidhome
1401943   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1401944   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1401945   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1401946   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1401947   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1401948   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1401949   +          +     0.83893684194413 * S_NumDealsPurchases
1401950   +          +     0.23391006875291 * S_NumDistPurchases
1401951   +          +    -0.63370705462074 * S_NumStorePurchases
1401952   +          +     -0.9137408014067 * S_NumWebPurchases
1401953   +          +     0.89109351479441 * S_NumWebVisitsMonth
1401954   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1401955   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1401956   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age +
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome +
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 *
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts +
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 *
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 *
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 *
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 *
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq +
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1401957   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1401958   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1401959   +        S_Income  +    -0.43909782819329 * S_Kidhome
1401960   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1401961   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1401962   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1401963   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1401964   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1401965   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1401966   +          +      0.2218973353638 * S_NumDealsPurchases
1401967   +          +      0.0062360950528 * S_NumDistPurchases
1401968   +          +    -0.57621747951002 * S_NumStorePurchases
1401969   +          +    -0.33564890905657 * S_NumWebPurchases
1401970   +          +     0.82482365540301 * S_NumWebVisitsMonth
1401971   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1401972   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1401973   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age +
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome +
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 *
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts +
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 *
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 *
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 *
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 *
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq +
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1401974   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1401975   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1401976   +        S_Income  +    -0.03572236011846 * S_Kidhome
1401977   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1401978   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1401979   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1401980   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1401981   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1401982   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1401983   +          +      -0.174147250062 * S_NumDealsPurchases
1401984   +          +    -0.22921682388864 * S_NumDistPurchases
1401985   +          +     0.41526854684299 * S_NumStorePurchases
1401986   +          +    -0.27675565493519 * S_NumWebPurchases
1401987   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1401988   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1401989   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1401990   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome +
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 *
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts +
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 *
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 *
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 *
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 *
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq +
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1401991   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1401992   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1401993   +        S_Income  +    -0.04788369327547 * S_Kidhome
1401994   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1401995   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1401996   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1401997   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1401998   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1401999   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1402000   +          +    -0.46022430102423 * S_NumDealsPurchases
1402001   +          +     0.15831339342044 * S_NumDistPurchases
1402002   +          +     0.22480465173719 * S_NumStorePurchases
1402003   +          +     0.44798923484609 * S_NumWebPurchases
1402004   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1402005   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1402006   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1402007   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age +
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome +
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 *
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts +
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 *
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 *
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 *
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 *
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq +
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1402008   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1402009   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1402010   +        S_Income  +     0.53994304261534 * S_Kidhome
1402011   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1402012   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1402013   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1402014   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1402015   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1402016   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1402017   +          +     0.03650267472167 * S_NumDealsPurchases
1402018   +          +    -0.03322709524939 * S_NumDistPurchases
1402019   +          +     -0.0022226424472 * S_NumStorePurchases
1402020   +          +    -0.10131236740674 * S_NumWebPurchases
1402021   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1402022   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1402023   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1402024   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome +
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 *
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts +
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 *
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 *
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 *
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 *
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq +
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1402025   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1402026   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1402027   +        S_Income  +    -0.52576099429582 * S_Kidhome
1402028   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1402029   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1402030   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1402031   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1402032   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1402033   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1402034   +          +    -0.50209914729324 * S_NumDealsPurchases
1402035   +          +    -0.46217244513696 * S_NumDistPurchases
1402036   +          +      0.1832648560248 * S_NumStorePurchases
1402037   +          +     0.02866153257072 * S_NumWebPurchases
1402038   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1402039   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1402040   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1402041   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age +
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome +
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 *
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts +
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 *
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 *
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 *
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 *
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq +
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1402042   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1402043   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1402044   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1402045   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1402046   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 *
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 +
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 *
HigherEducationBinary0 ;
1402047   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1402048   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1402049   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1402050   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1402051   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 *
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 +
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 *
HigherEducationBinary0 ;
1402052   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1402053   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1402054   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1402055   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1402056   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 *
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 +
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 *
HigherEducationBinary0 ;
1402057   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1402058   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1402059   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1402060   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1402061   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 *
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 +
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 *
HigherEducationBinary0 ;
1402062   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1402063   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1402064   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1402065   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1402066   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 *
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 +
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 *
HigherEducationBinary0 ;
1402067   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1402068   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1402069   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1402070   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1402071   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 *
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 +
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 *
HigherEducationBinary0 ;
1402072   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1402073   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1402074   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1402075   +          +     0.13815069071511 * Marital_StatusDivorced
1402076   +          +      0.0732913060929 * Marital_StatusMarried
1402077   +          +    -0.22858418468746 * Marital_StatusSingle
1402078   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 *
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster +
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried +
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1402079   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1402080   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1402081   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1402082   +          +     0.32909808396509 * Marital_StatusDivorced
1402083   +          +    -0.50160173579004 * Marital_StatusMarried
1402084   +          +     0.57207102211224 * Marital_StatusSingle
1402085   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 *
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried +
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1402086   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1402087   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1402088   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1402089   +          +    -0.07154493730107 * Marital_StatusDivorced
1402090   +          +     0.29126100051603 * Marital_StatusMarried
1402091   +          +    -0.06936325857004 * Marital_StatusSingle
1402092   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 *
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried +
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1402093   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1402094   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1402095   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1402096   +          +    -0.05004640872388 * Marital_StatusDivorced
1402097   +          +     0.22197974032974 * Marital_StatusMarried
1402098   +          +    -0.33931504637453 * Marital_StatusSingle
1402099   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 *
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster +
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried +
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1402100   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1402101   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1402102   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1402103   +          +    -0.07748874669478 * Marital_StatusDivorced
1402104   +          +     1.05442281159109 * Marital_StatusMarried
1402105   +          +    -0.67190984038867 * Marital_StatusSingle
1402106   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 *
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster +
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried +
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1402107   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1402108   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1402109   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1402110   +          +    -0.20478208715114 * Marital_StatusDivorced
1402111   +          +    -0.40186383707642 * Marital_StatusMarried
1402112   +          +     0.43474841662774 * Marital_StatusSingle
1402113   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 *
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried +
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1402114   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1402115   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1402116   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1402117   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1402118   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1402119   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1402120   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1402121   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1402122   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1402123   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1402124   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1402125   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1402126   +END;
MPRINT(EM_DIAGRAM):   END;
1402127   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1402128   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1402129   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1402130   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1402131   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1402132   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1402133   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1402134   +END;
MPRINT(EM_DIAGRAM):   END;
1402135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402136   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1402137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402138   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1402139   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1402140   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1402141   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 +
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 +
-2.02736184847322 * H16 ;
1402142   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1402143   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1402144   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1402145   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1402146   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1402147   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1402148   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1402149   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1402150   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1402151   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1402152   +END;
MPRINT(EM_DIAGRAM):   END;
1402153   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1402154   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1402155   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1402156   +END;
MPRINT(EM_DIAGRAM):   END;
1402157   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1402158   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1402159   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1402160   +END;
MPRINT(EM_DIAGRAM):   END;
1402161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402162   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1402163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402164   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1402165   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1402166   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1402167   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1402168   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1402169   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1402170   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1402171   +END;
MPRINT(EM_DIAGRAM):   END;
1402172   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1402173   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1402174   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1402175   +drop
1402176   +H11
1402177   +H12
1402178   +H13
1402179   +H14
1402180   +H15
1402181   +H16
1402182   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1402183   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1402184    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1402185    quit;
1402186    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1402187    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1402188    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1402189    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1402190    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1402191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402192    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1402193    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402195    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1402196    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402198    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402199    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1402200    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1402201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402202    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1402203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1402204    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1402205    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402207    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402208    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1402209    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402210    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402211    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1402212    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1402212  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
1402213    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402214    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1402215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402216    filename _pref
1402216  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1402217    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1402218    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1402219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1402220   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1402221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1402222   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1402223   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1402224   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1402225    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1402226    quit;
1402227    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1402228    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1402229    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1402230    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1402231    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1402232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402233    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1402234    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402236    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1402237    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402239    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402240    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1402241    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1402242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402243    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1402244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1402245    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1402246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402248    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402249    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1402250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402251    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402252    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1402253    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1402253  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1402254    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402255    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1402256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402257    filename _pref
1402257  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1402258    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1402259    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1402260   +
1402261   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1402262   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1402262  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1402263   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1402264   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1402265   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1402266   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1402267   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1402268    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1402269    quit;
1402270    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1402271    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1402272    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1402273    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1402274    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1402275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402276    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1402277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402279    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1402280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402282    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402283    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1402284    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1402285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402286    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1402287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402288    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1402289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402291    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402292    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1402293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402294    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402295    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1402296    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1402296  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1402297    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402298    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1402299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402300    filename _pref
1402300  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1402301    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1402302    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1402303   +
1402304   +
1402305   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1402306   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1402307   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1402308   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1402309   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1402310   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402311   +
1402312   +
1402313   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1402314   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1402315   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1402316   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1402317   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1402318   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402319   +
1402320   +
1402321   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1402322   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1402323   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1402324   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1402325   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1402326   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402327   +
1402328   +
1402329   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1402330   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1402331   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1402332   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1402333   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1402334   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402335   +
1402336   +
1402337   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1402338   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1402339   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1402340   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1402341   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1402342   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402343   +
1402344   +
1402345   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1402346   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1402347   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1402348   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1402349   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1402350   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402351   +
1402352   +
1402353   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1402354   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1402355   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1402356   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1402357   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1402358   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402359   +
1402360   +
1402361   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1402362   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1402363   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1402364   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1402365   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1402366   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1402367   +if
1402368   +_FILTERNORM1 not in ( '.')
1402369   + and
1402370   +_FILTERNORM2 not in ( '.')
1402371   + and
1402372   +_FILTERNORM3 not in ( '.')
1402373   + and
1402374   +_FILTERNORM4 not in ( '.')
1402375   + and
1402376   +_FILTERNORM5 not in ( '.')
1402377   + and
1402378   +_FILTERNORM6 not in ( '.')
1402379   + and
1402380   +_FILTERNORM7 not in ( ' ')
1402381   + and
1402382   +_FILTERNORM8 not in ( ' ')
1402383   +and
1402384   +( Dt_Customer ne .)
1402385   +and ( Income ne . and (Income<=107000))
1402386   +and ( Kidhome ne .)
1402387   +and ( MntFishProducts ne .)
1402388   +and ( MntFruits ne .)
1402389   +and ( MntGoldProds ne .)
1402390   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1402391   +and ( MntSweetProducts ne .)
1402392   +and ( MntWines ne .)
1402393   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1402394   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1402395   +and ( NumStorePurchases ne .)
1402396   +and ( NumWebPurchases ne .)
1402397   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1402398   +and ( Recency ne .)
1402399   +and ( Teenhome ne .)
1402400   +and ( Year_Birth ne .)
1402401   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1402402   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1402403   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1402404   +end;
MPRINT(EM_DIAGRAM):   end;
1402405   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1402406   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1402407    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1402408    quit;
1402409    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1402410    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1402411    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1402412    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1402413    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1402414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402415    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1402416    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402417    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402418    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1402419    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402421    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402422    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1402423    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1402424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402425    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1402426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1402427    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1402428    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402430    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1402431    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1402432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1402433    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402434    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1402435    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1402435  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1402436    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402437    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1402438    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402439    %macro varDept(fcmpdata=,id=);
1402440    %global nobs&id scoreFlag&id;
1402441    %let scoreFlag&id = 0;
1402442    %if &id=1 or ^&fcmpStart %then %do;
1402443    proc sort data=&fcmpdata out=_temp&id nodupkey;
1402444    by NAME;
1402445    where id=&id and LHS in( %let j=1;
1402446    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1402447    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1402448    "&var" %let j = %eval(&j+1);
1402449    %end;
1402450    );
1402451    run;
1402452    %let dsid = %sysfunc(open(_temp&id));
1402453    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1402454    %let dsid = %sysfunc(close(&dsid));
1402455    %if &&nobs&id %then %do;
1402456    %let scoreFlag&id = 1;
1402457    %let fcmpStart = 1;
1402458    %end;
1402459    %else %let fcmpStart = 0;
1402460    %end;
1402461    %else %do;
1402462    proc sort data=&fcmpdata out=_tempid;
1402463    where id=&id;
1402464    by LHS;
1402465    run;
1402466    %let dsid = %sysfunc(open(_tempid));
1402467    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1402468    %let dsid = %sysfunc(close(&dsid));
1402469    %if ^&&nobs&id %then %do;
1402470    proc datasets lib=work nolist;
1402471    delete _tempid;
1402472    run;
1402473    quit;
1402474    %end;
1402475    %else %do;
1402476    data _tempAll;
1402477    set %let j=%eval(&id-1);
1402478    %do x=1 %to &j;
1402479    %if &&nobs&x %then %do;
1402480    _temp&x %end;
1402481    %end;
1402482    ;
1402483    run;
1402484    proc sql;
1402485    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1402485  ! work._tempid p2 where p.name=p2.lhs;
1402486    quit;
1402487    data _temp&id;
1402488    set _temp&id;
1402489    where LHS ne '' and NAME ne '' and Node ne '';
1402490    run;
1402491    proc datasets lib=work nolist;
1402492    delete _tempAll;
1402493    run;
1402494    %let dsid = %sysfunc(open(_temp&id));
1402495    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1402496    %let dsid = %sysfunc(close(&dsid));
1402497    %if ^&&nobs&id %then %do;
1402498    proc datasets lib=work nolist;
1402499    delete _temp&id;
1402500    run;
1402501    quit;
1402502    %end;
1402503    %else %do;
1402504    %let scoreFlag&id = 1;
1402505    data _temp&id;
1402506    set _temp&id;
1402507    where LHS ne NAME and node ne '';
1402508    run;
1402509    %let dsid = %sysfunc(open(_temp&id));
1402510    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1402511    %let dsid = %sysfunc(close(&dsid));
1402512    %if ^&&nobs&id %then %do;
1402513    proc datasets lib=work nolist;
1402514    delete _temp&id;
1402515    run;
1402516    quit;
1402517    %end;
1402518    %else %do;
1402519    proc sort data=_temp&id nodupkey;
1402520    by LHS NAME;
1402521    run;
1402522    %end;
1402523    %end;
1402524    %end;
1402525    %end;
1402526    %mend varDept;
1402527    %macro optCode(outdata=fcmpdata);
1402528    %global fcmpStart;
1402529    %let fcmpStart = 0;
1402530    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1402531    %let NumNodes=9;
1402532    %do k=1 %to &NumNodes;
1402533    %vardept(fcmpdata=&outdata, id=&k);
1402534    %end;
1402535    %mend optCode;
1402536    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1402537    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1402538    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1402539    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1402540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402541    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1402542    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1402543    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1402544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1402545    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1402546    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1402546  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1402547    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1402548    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1402549    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1402550    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1402551    filename _pref
1402551  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1402552    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1402553    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1402554   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1402555   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1402556   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1402557   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1402558   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1402559   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1402560   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1402561   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1402562   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1402563   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1402564   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1402565   +LENGTH _WARN_ $4
1402566   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1402567   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1402568   +
1402569   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1402570   +
1402571   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1402572   +
1402573   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1402574   +
1402575   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1402576   +
1402577   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1402578   +
1402579   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1402580   +
1402581   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1402582   +
1402583   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1402584   +
1402585   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1402586   +
1402587   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1402588   +
1402589   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1402590   +
1402591   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1402592   +
1402593   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1402594   +
1402595   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1402596   +
1402597   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1402598   +
1402599   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1402600   +
1402601   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1402602   +
1402603   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1402604   +
1402605   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1402606   +
1402607   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1402608   +
1402609   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1402610   +
1402611   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1402612   +
1402613   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1402614   +
1402615   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1402616   +
1402617   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1402618   +
1402619   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1402620   +
1402621   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1402622   +
1402623   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1402624   +
1402625   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1402626   +
1402627   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1402628   +
1402629   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1402630   +
1402631   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1402632   +
1402633   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1402634   +
1402635   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1402636   +
1402637   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1402638   +
1402639   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1402640   +
1402641   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1402642   +
1402643   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1402644   +
1402645   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1402646   +
1402647   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1402648   +
1402649   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1402650   +
1402651   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1402652   +
1402653   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1402654   +
1402655   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1402656   +
1402657   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1402658   +
1402659   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1402660   +
1402661   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1402662   +
1402663   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1402664   +
1402665   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1402666   +
1402667   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1402668   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1402669   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1402670   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1402671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402673   +end;
MPRINT(EM_DIAGRAM):   end;
1402674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402676   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1402677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1402679   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1402680   +   end;
MPRINT(EM_DIAGRAM):   end;
1402681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1402682   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1402683   +   end;
MPRINT(EM_DIAGRAM):   end;
1402684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402685   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1402686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402688   +   end;
MPRINT(EM_DIAGRAM):   end;
1402689   +end;
MPRINT(EM_DIAGRAM):   end;
1402690   +
1402691   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1402692   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1402693   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1402694   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1402695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402697   +end;
MPRINT(EM_DIAGRAM):   end;
1402698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402700   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1402701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1402703   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1402704   +   end;
MPRINT(EM_DIAGRAM):   end;
1402705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1402706   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1402707   +   end;
MPRINT(EM_DIAGRAM):   end;
1402708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402709   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1402710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402712   +   end;
MPRINT(EM_DIAGRAM):   end;
1402713   +end;
MPRINT(EM_DIAGRAM):   end;
1402714   +
1402715   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1402716   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1402717   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1402718   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1402719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402721   +end;
MPRINT(EM_DIAGRAM):   end;
1402722   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402724   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1402725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402726   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1402727   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1402728   +   end;
MPRINT(EM_DIAGRAM):   end;
1402729   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1402730   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1402731   +   end;
MPRINT(EM_DIAGRAM):   end;
1402732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402733   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1402734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402736   +   end;
MPRINT(EM_DIAGRAM):   end;
1402737   +end;
MPRINT(EM_DIAGRAM):   end;
1402738   +
1402739   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1402740   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1402741   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1402742   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1402743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402745   +end;
MPRINT(EM_DIAGRAM):   end;
1402746   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402748   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1402749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1402751   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1402752   +   end;
MPRINT(EM_DIAGRAM):   end;
1402753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1402754   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1402755   +   end;
MPRINT(EM_DIAGRAM):   end;
1402756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402757   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1402758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402760   +   end;
MPRINT(EM_DIAGRAM):   end;
1402761   +end;
MPRINT(EM_DIAGRAM):   end;
1402762   +
1402763   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1402764   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1402765   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1402766   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1402767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402769   +end;
MPRINT(EM_DIAGRAM):   end;
1402770   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402772   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1402773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402774   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1402775   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1402776   +   end;
MPRINT(EM_DIAGRAM):   end;
1402777   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1402778   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1402779   +   end;
MPRINT(EM_DIAGRAM):   end;
1402780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402781   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1402782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402784   +   end;
MPRINT(EM_DIAGRAM):   end;
1402785   +end;
MPRINT(EM_DIAGRAM):   end;
1402786   +
1402787   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1402788   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1402789   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1402790   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1402791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402793   +end;
MPRINT(EM_DIAGRAM):   end;
1402794   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402795   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402796   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1402797   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402798   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1402799   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1402800   +   end;
MPRINT(EM_DIAGRAM):   end;
1402801   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1402802   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1402803   +   end;
MPRINT(EM_DIAGRAM):   end;
1402804   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402805   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1402806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402808   +   end;
MPRINT(EM_DIAGRAM):   end;
1402809   +end;
MPRINT(EM_DIAGRAM):   end;
1402810   +
1402811   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1402812   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1402813   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1402814   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1402815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402817   +end;
MPRINT(EM_DIAGRAM):   end;
1402818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402819   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1402820   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1402821   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402822   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1402823   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1402824   +   end;
MPRINT(EM_DIAGRAM):   end;
1402825   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1402826   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1402827   +   end;
MPRINT(EM_DIAGRAM):   end;
1402828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402829   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1402830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402832   +   end;
MPRINT(EM_DIAGRAM):   end;
1402833   +end;
MPRINT(EM_DIAGRAM):   end;
1402834   +
1402835   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1402836   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1402837   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1402838   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1402839   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1402840   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1402841   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1402842   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1402843   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1402844   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1402845   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1402846   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1402847   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402849   +end;
MPRINT(EM_DIAGRAM):   end;
1402850   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402851   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1402852   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1402853   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402854   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1402855   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1402856   +   end;
MPRINT(EM_DIAGRAM):   end;
1402857   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1402858   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1402859   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1402860   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1402861   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1402862   +   end;
MPRINT(EM_DIAGRAM):   end;
1402863   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1402864   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1402865   +   end;
MPRINT(EM_DIAGRAM):   end;
1402866   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1402867   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1402868   +   end;
MPRINT(EM_DIAGRAM):   end;
1402869   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1402870   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1402871   +   end;
MPRINT(EM_DIAGRAM):   end;
1402872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402873   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1402874   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1402875   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1402876   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1402877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402879   +   end;
MPRINT(EM_DIAGRAM):   end;
1402880   +end;
MPRINT(EM_DIAGRAM):   end;
1402881   +
1402882   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1402883   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1402884   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1402885   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1402886   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1402887   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1402888   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1402889   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1402890   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1402891   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1402892   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1402893   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1402894   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1402895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1402896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402897   +end;
MPRINT(EM_DIAGRAM):   end;
1402898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1402899   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1402900   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1402901   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1402902   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1402903   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1402904   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1402905   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1402906   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1402907   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1402908   +         end;
MPRINT(EM_DIAGRAM):   end;
1402909   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1402910   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1402911   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1402912   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1402913   +            end;
MPRINT(EM_DIAGRAM):   end;
1402914   +         end;
MPRINT(EM_DIAGRAM):   end;
1402915   +      end;
MPRINT(EM_DIAGRAM):   end;
1402916   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1402917   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1402918   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1402919   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1402920   +         end;
MPRINT(EM_DIAGRAM):   end;
1402921   +      end;
MPRINT(EM_DIAGRAM):   end;
1402922   +   end;
MPRINT(EM_DIAGRAM):   end;
1402923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1402924   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1402925   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1402926   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1402927   +      end;
MPRINT(EM_DIAGRAM):   end;
1402928   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1402929   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1402930   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1402931   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1402932   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1402933   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1402934   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1402935   +         end;
MPRINT(EM_DIAGRAM):   end;
1402936   +      end;
MPRINT(EM_DIAGRAM):   end;
1402937   +   end;
MPRINT(EM_DIAGRAM):   end;
1402938   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1402939   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1402940   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1402941   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1402942   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1402943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1402944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402945   +   end;
MPRINT(EM_DIAGRAM):   end;
1402946   +end;
MPRINT(EM_DIAGRAM):   end;
1402947   +
1402948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402949   +*** Checking missing input Interval
1402950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1402951   +
1402952   +IF NMISS(
1402953   +   AcceptedCmpTotal ,
1402954   +   Age ,
1402955   +   Frq ,
1402956   +   Income ,
1402957   +   Kidhome ,
1402958   +   Mnt ,
1402959   +   MntFishProducts ,
1402960   +   MntFruits ,
1402961   +   MntGoldProds ,
1402962   +   MntMeatProducts ,
1402963   +   MntSweetProducts ,
1402964   +   MntWines ,
1402965   +   MonthsAsCustomer ,
1402966   +   NumCatalogPurchases ,
1402967   +   NumDealsPurchases ,
1402968   +   NumDistPurchases ,
1402969   +   NumStorePurchases ,
1402970   +   NumWebPurchases ,
1402971   +   NumWebVisitsMonth ,
1402972   +   RFMstat ,
1402973   +   RMntFrq ,
1402974   +   Recency ,
1402975   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1402976   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1402977   +
1402978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1402979   +END;
MPRINT(EM_DIAGRAM):   END;
1402980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402981   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1402982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1402983   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1402984   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1402985   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1402986   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1402987   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1402988   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1402989   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1402990   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1402991   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1402992   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1402993   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1402994   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1402995   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1402996   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1402997   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1402998   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1402999   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1403000   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1403001   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1403002   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1403003   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1403004   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1403005   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1403006   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1403007   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1403008   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1403009   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1403010   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1403011   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1403012   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1403013   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1403014   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1403015   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1403016   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1403017   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1403018   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1403019   +END;
MPRINT(EM_DIAGRAM):   END;
1403020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1403021   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1403022   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1403023   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1403024   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1403025   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1403026   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1403027   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1403028   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1403029   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1403030   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1403031   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1403032   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1403033   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1403034   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1403035   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1403036   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1403037   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1403038   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1403039   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1403040   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1403041   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1403042   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1403043   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1403044   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1403045   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1403046   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1403047   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1403048   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1403049   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1403050   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1403051   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1403052   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1403053   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
1403054   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1403055   +   ELSE S_NumCatalogPurchases
1403056   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1403057   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1403058   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1403059   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1403060   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1403061   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1403062   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1403063   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1403064   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1403065   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1403066   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1403067   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1403068   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1403069   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1403070   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1403071   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1403072   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1403073   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1403074   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1403075   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1403076   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1403077   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1403078   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1403079   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1403080   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1403081   +END;
MPRINT(EM_DIAGRAM):   END;
1403082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403083   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1403084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403086   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1403087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403089   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1403090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403091   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1403092   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1403093   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1403094   +        S_Income  +    -0.45967008908227 * S_Kidhome
1403095   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1403096   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1403097   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1403098   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1403099   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1403100   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1403101   +          +    -0.23353175442713 * S_NumDealsPurchases
1403102   +          +     0.18635522192442 * S_NumDistPurchases
1403103   +          +     0.37209457890956 * S_NumStorePurchases
1403104   +          +     0.25018232304823 * S_NumWebPurchases
1403105   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1403106   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1403107   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1403108   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome +
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 *
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts +
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 *
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 *
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 *
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 *
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq +
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1403109   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1403110   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1403111   +        S_Income  +     0.23329613045589 * S_Kidhome
1403112   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1403113   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1403114   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1403115   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1403116   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1403117   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1403118   +          +    -0.09699498622435 * S_NumDealsPurchases
1403119   +          +     0.40364070798795 * S_NumDistPurchases
1403120   +          +      0.2162579072164 * S_NumStorePurchases
1403121   +          +     0.26248410135079 * S_NumWebPurchases
1403122   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1403123   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1403124   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1403125   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome +
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 *
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts +
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 *
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 *
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 *
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 *
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq +
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1403126   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1403127   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1403128   +        S_Income  +     0.20139862021528 * S_Kidhome
1403129   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1403130   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1403131   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1403132   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1403133   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1403134   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1403135   +          +     0.09066191700879 * S_NumDealsPurchases
1403136   +          +    -0.05769000978222 * S_NumDistPurchases
1403137   +          +    -0.10089591692167 * S_NumStorePurchases
1403138   +          +    -0.00088654116561 * S_NumWebPurchases
1403139   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1403140   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1403141   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1403142   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome +
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 *
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts +
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 *
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 *
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 *
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 *
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq +
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1403143   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1403144   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1403145   +        S_Income  +      0.2502648333687 * S_Kidhome
1403146   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1403147   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1403148   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1403149   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1403150   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1403151   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1403152   +          +     0.83424444661619 * S_NumDealsPurchases
1403153   +          +     0.31333214543205 * S_NumDistPurchases
1403154   +          +    -0.61732647242019 * S_NumStorePurchases
1403155   +          +    -1.01955156895052 * S_NumWebPurchases
1403156   +          +     0.13017609997428 * S_NumWebVisitsMonth
1403157   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1403158   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1403159   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age +
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome +
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 *
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts +
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 *
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 *
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 *
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 *
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq +
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1403160   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1403161   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1403162   +        S_Income  +    -0.70952256145726 * S_Kidhome
1403163   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1403164   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1403165   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1403166   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1403167   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1403168   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1403169   +          +     0.63522682456102 * S_NumDealsPurchases
1403170   +          +      0.0043057429215 * S_NumDistPurchases
1403171   +          +    -0.76667751707574 * S_NumStorePurchases
1403172   +          +    -0.73436881033241 * S_NumWebPurchases
1403173   +          +     1.59331554601341 * S_NumWebVisitsMonth
1403174   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1403175   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1403176   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome +
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 *
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts +
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 *
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 *
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 *
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 *
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq +
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1403177   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1403178   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1403179   +        S_Income  +    -0.23632967504194 * S_Kidhome
1403180   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1403181   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1403182   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1403183   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
The SAS System
 
1403184   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1403185   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1403186   +          +     -0.3032858959477 * S_NumDealsPurchases
1403187   +          +     0.11343979556999 * S_NumDistPurchases
1403188   +          +     0.19545021266061 * S_NumStorePurchases
1403189   +          +      0.1566777684546 * S_NumWebPurchases
1403190   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1403191   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1403192   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1403193   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome +
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 *
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts +
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 *
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 *
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 *
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 *
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq +
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1403194   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1403195   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1403196   +        S_Income  +    -0.47847362741737 * S_Kidhome
1403197   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1403198   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1403199   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1403200   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1403201   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1403202   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1403203   +          +    -0.17510289915098 * S_NumDealsPurchases
1403204   +          +     0.16952490494417 * S_NumDistPurchases
1403205   +          +     0.11152117614204 * S_NumStorePurchases
1403206   +          +     0.22594341376741 * S_NumWebPurchases
1403207   +          +     0.64523546369354 * S_NumWebVisitsMonth
1403208   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1403209   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1403210   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age +
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome +
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 *
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts +
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 *
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 *
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 *
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 *
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq +
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1403211   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1403212   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1403213   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1403214   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1403215   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 *
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 +
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 *
HigherEducationBinary0 ;
1403216   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1403217   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1403218   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1403219   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1403220   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 *
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 +
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 *
HigherEducationBinary0 ;
1403221   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1403222   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1403223   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1403224   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1403225   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 *
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 +
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 *
HigherEducationBinary0 ;
1403226   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1403227   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1403228   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1403229   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1403230   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 *
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 +
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 *
HigherEducationBinary0 ;
1403231   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1403232   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1403233   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1403234   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1403235   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 *
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 +
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 *
HigherEducationBinary0 ;
1403236   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1403237   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1403238   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1403239   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1403240   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 *
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 +
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 *
HigherEducationBinary0 ;
1403241   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1403242   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1403243   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1403244   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1403245   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 *
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 +
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 *
HigherEducationBinary0 ;
1403246   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1403247   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1403248   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1403249   +          +     0.42319965972117 * Marital_StatusDivorced
1403250   +          +    -0.45015157317991 * Marital_StatusMarried
1403251   +          +     0.43076106925345 * Marital_StatusSingle
1403252   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 *
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster +
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried +
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1403253   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1403254   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1403255   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1403256   +          +     0.11384347873072 * Marital_StatusDivorced
1403257   +          +     0.51442453272823 * Marital_StatusMarried
1403258   +          +    -0.38966058028661 * Marital_StatusSingle
1403259   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 *
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried +
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1403260   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1403261   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1403262   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1403263   +          +    -0.05213342781535 * Marital_StatusDivorced
1403264   +          +     0.07520352092928 * Marital_StatusMarried
1403265   +          +     0.20175107471623 * Marital_StatusSingle
1403266   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 *
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried +
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1403267   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1403268   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1403269   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1403270   +          +    -0.40635592200933 * Marital_StatusDivorced
1403271   +          +     0.64772941459031 * Marital_StatusMarried
1403272   +          +    -0.36402842056603 * Marital_StatusSingle
1403273   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 *
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried +
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1403274   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1403275   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1403276   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1403277   +          +     0.87932592764844 * Marital_StatusDivorced
1403278   +          +    -0.85946473083734 * Marital_StatusMarried
1403279   +          +     0.74505733668545 * Marital_StatusSingle
1403280   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 *
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried +
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1403281   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1403282   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1403283   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1403284   +          +    -0.11861748280641 * Marital_StatusDivorced
1403285   +          +    -0.15869097739395 * Marital_StatusMarried
1403286   +          +     0.34415019828259 * Marital_StatusSingle
1403287   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 *
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried +
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1403288   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1403289   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1403290   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1403291   +          +     0.14995740697816 * Marital_StatusDivorced
1403292   +          +    -1.01788822114068 * Marital_StatusMarried
1403293   +          +     0.70532758126153 * Marital_StatusSingle
1403294   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 *
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried +
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1403295   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1403296   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1403297   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1403298   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1403299   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1403300   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1403301   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1403302   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1403303   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1403304   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1403305   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1403306   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1403307   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1403308   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1403309   +END;
MPRINT(EM_DIAGRAM):   END;
1403310   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1403311   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1403312   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1403313   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1403314   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1403315   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1403316   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1403317   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1403318   +END;
MPRINT(EM_DIAGRAM):   END;
1403319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403320   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1403321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403322   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1403323   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1403324   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1403325   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1403326   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 +
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 *
H16 + 2.13310046968058 * H17 ;
1403327   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1403328   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1403329   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1403330   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1403331   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1403332   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1403333   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1403334   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1403335   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1403336   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1403337   +END;
MPRINT(EM_DIAGRAM):   END;
1403338   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1403339   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1403340   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1403341   +END;
MPRINT(EM_DIAGRAM):   END;
1403342   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1403343   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1403344   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1403345   +END;
MPRINT(EM_DIAGRAM):   END;
1403346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403347   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1403348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1403349   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1403350   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1403351   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1403352   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1403353   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1403354   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1403355   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1403356   +END;
MPRINT(EM_DIAGRAM):   END;
1403357   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1403358   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1403359   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1403360   +drop
1403361   +H11
1403362   +H12
1403363   +H13
1403364   +H14
1403365   +H15
1403366   +H16
1403367   +H17
1403368   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1403369   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1403370    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1403371    quit;
1403372    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1403373    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1403374    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1403375    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1403376    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1403377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403378    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1403379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403381    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1403382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403384    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403385    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1403386    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1403387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403388    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1403389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1403390    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1403391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403393    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403394    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1403395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403396    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403397    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1403398    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1403398  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
1403399    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403400    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1403401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403402    filename _pref
1403402  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1403403    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1403404    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1403405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403406   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1403407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1403408   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1403409   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1403410   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1403411    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1403412    quit;
1403413    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1403414    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1403415    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1403416    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1403417    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1403418    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403419    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1403420    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403422    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1403423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403425    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403426    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1403427    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1403428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403429    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1403430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1403431    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1403432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403434    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403435    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1403436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403437    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403438    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1403439    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1403439  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1403440    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403441    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1403442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403443    filename _pref
1403443  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1403444    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1403445    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1403446   +
1403447   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1403448   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1403448  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1403449   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1403450   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1403451   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1403452   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1403453   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1403454    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1403455    quit;
1403456    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1403457    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1403458    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1403459    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1403460    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1403461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403462    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1403463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403465    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1403466    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403468    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403469    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1403470    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1403471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403472    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1403473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403474    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1403475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403477    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403478    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1403479    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403480    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403481    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1403482    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1403482  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1403483    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403484    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1403485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403486    filename _pref
1403486  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1403487    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1403488    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1403489   +
1403490   +
1403491   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1403492   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1403493   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1403494   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1403495   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1403496   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403497   +
1403498   +
1403499   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1403500   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1403501   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1403502   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1403503   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1403504   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403505   +
1403506   +
1403507   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1403508   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1403509   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1403510   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1403511   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1403512   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403513   +
1403514   +
1403515   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1403516   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1403517   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1403518   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1403519   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1403520   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403521   +
1403522   +
1403523   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1403524   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1403525   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1403526   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1403527   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1403528   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403529   +
1403530   +
1403531   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1403532   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1403533   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1403534   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1403535   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1403536   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403537   +
1403538   +
1403539   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1403540   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1403541   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1403542   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1403543   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1403544   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403545   +
1403546   +
1403547   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1403548   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1403549   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1403550   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1403551   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1403552   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1403553   +if
1403554   +_FILTERNORM1 not in ( '.')
1403555   + and
1403556   +_FILTERNORM2 not in ( '.')
1403557   + and
1403558   +_FILTERNORM3 not in ( '.')
1403559   + and
1403560   +_FILTERNORM4 not in ( '.')
1403561   + and
1403562   +_FILTERNORM5 not in ( '.')
1403563   + and
1403564   +_FILTERNORM6 not in ( '.')
1403565   + and
1403566   +_FILTERNORM7 not in ( ' ')
1403567   + and
1403568   +_FILTERNORM8 not in ( ' ')
1403569   +and
1403570   +( Dt_Customer ne .)
1403571   +and ( Income ne . and (Income<=107000))
1403572   +and ( Kidhome ne .)
1403573   +and ( MntFishProducts ne .)
1403574   +and ( MntFruits ne .)
1403575   +and ( MntGoldProds ne .)
1403576   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1403577   +and ( MntSweetProducts ne .)
1403578   +and ( MntWines ne .)
1403579   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1403580   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1403581   +and ( NumStorePurchases ne .)
1403582   +and ( NumWebPurchases ne .)
1403583   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1403584   +and ( Recency ne .)
1403585   +and ( Teenhome ne .)
1403586   +and ( Year_Birth ne .)
1403587   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1403588   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1403589   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1403590   +end;
MPRINT(EM_DIAGRAM):   end;
1403591   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1403592   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1403593    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1403594    quit;
1403595    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1403596    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1403597    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1403598    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1403599    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1403600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403601    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1403602    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403603    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403604    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1403605    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403607    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403608    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1403609    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1403610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403611    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1403612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1403613    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1403614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403616    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1403617    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1403618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1403619    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403620    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1403621    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1403621  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1403622    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403623    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
1403624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403625    %macro varDept(fcmpdata=,id=);
1403626    %global nobs&id scoreFlag&id;
1403627    %let scoreFlag&id = 0;
1403628    %if &id=1 or ^&fcmpStart %then %do;
1403629    proc sort data=&fcmpdata out=_temp&id nodupkey;
1403630    by NAME;
1403631    where id=&id and LHS in( %let j=1;
1403632    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1403633    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1403634    "&var" %let j = %eval(&j+1);
1403635    %end;
1403636    );
1403637    run;
1403638    %let dsid = %sysfunc(open(_temp&id));
1403639    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1403640    %let dsid = %sysfunc(close(&dsid));
1403641    %if &&nobs&id %then %do;
1403642    %let scoreFlag&id = 1;
1403643    %let fcmpStart = 1;
1403644    %end;
1403645    %else %let fcmpStart = 0;
1403646    %end;
1403647    %else %do;
1403648    proc sort data=&fcmpdata out=_tempid;
1403649    where id=&id;
1403650    by LHS;
1403651    run;
1403652    %let dsid = %sysfunc(open(_tempid));
1403653    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1403654    %let dsid = %sysfunc(close(&dsid));
1403655    %if ^&&nobs&id %then %do;
1403656    proc datasets lib=work nolist;
1403657    delete _tempid;
1403658    run;
1403659    quit;
1403660    %end;
1403661    %else %do;
1403662    data _tempAll;
1403663    set %let j=%eval(&id-1);
1403664    %do x=1 %to &j;
1403665    %if &&nobs&x %then %do;
1403666    _temp&x %end;
1403667    %end;
1403668    ;
1403669    run;
1403670    proc sql;
1403671    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1403671  ! work._tempid p2 where p.name=p2.lhs;
1403672    quit;
1403673    data _temp&id;
1403674    set _temp&id;
1403675    where LHS ne '' and NAME ne '' and Node ne '';
1403676    run;
1403677    proc datasets lib=work nolist;
1403678    delete _tempAll;
1403679    run;
1403680    %let dsid = %sysfunc(open(_temp&id));
1403681    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1403682    %let dsid = %sysfunc(close(&dsid));
1403683    %if ^&&nobs&id %then %do;
1403684    proc datasets lib=work nolist;
1403685    delete _temp&id;
1403686    run;
1403687    quit;
1403688    %end;
1403689    %else %do;
1403690    %let scoreFlag&id = 1;
1403691    data _temp&id;
1403692    set _temp&id;
1403693    where LHS ne NAME and node ne '';
1403694    run;
1403695    %let dsid = %sysfunc(open(_temp&id));
1403696    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1403697    %let dsid = %sysfunc(close(&dsid));
1403698    %if ^&&nobs&id %then %do;
1403699    proc datasets lib=work nolist;
1403700    delete _temp&id;
1403701    run;
1403702    quit;
1403703    %end;
1403704    %else %do;
1403705    proc sort data=_temp&id nodupkey;
1403706    by LHS NAME;
1403707    run;
1403708    %end;
1403709    %end;
1403710    %end;
1403711    %end;
1403712    %mend varDept;
1403713    %macro optCode(outdata=fcmpdata);
1403714    %global fcmpStart;
1403715    %let fcmpStart = 0;
1403716    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1403717    %let NumNodes=9;
1403718    %do k=1 %to &NumNodes;
1403719    %vardept(fcmpdata=&outdata, id=&k);
1403720    %end;
1403721    %mend optCode;
1403722    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1403723    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1403724    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1403725    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1403726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403727    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1403728    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1403729    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1403730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403731    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1403732    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1403732  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1403733    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1403734    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1403735    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1403736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1403737    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1403738    * Ensmbl14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing metadata for TRAIN data;
1403739    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl14_TRAIN out=WORK.M2VADK1E noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VADK1E;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VADK1E(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VADK1E;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VADK1E;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1_FAIQS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1N9KDX3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_FAIQS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl14";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1404059    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1404060    set EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO;
1404061    where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1404062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_EMINFO.
      WHERE (DATA='Ensmbl14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404063    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMINFO;
1404064    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1404065    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1404066    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1404070    run;
1404071    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
1404072    set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
1404073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404074    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
1404075    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1404076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404077    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1404078    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1404079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1404080    proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1404081    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1404082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404083    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
1404084    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1404085    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1404086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404087    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1404088    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1404089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1404090    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                18.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1F74NN3
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1F74NN3 new;
MPRINT(EM_DIAGRAM):   run;
1404114    data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMOUTFIT;
1404115    set EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMOUTFIT;
1404116    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1404117    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1404117  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1404118    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1404119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL14_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL14_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1404120    proc sort data=EMWS8.Ensmbl14_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl14_EMREPORTFIT nothreads;
1404121    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1404122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL14_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL14_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404123    %let _EMwarndup = 0;
1404124    %let _EMtargetdup =;
1404125    %let _EMASEtargetdup =;
1404126    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1404127    set EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMOUTFIT;
1404128    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1404129    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1404130    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1404131    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1404132    end;
MPRINT(EM_DIAGRAM):   end;
1404133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL14_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404134    proc sort data=EMWS8.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural2_CMeta_TRAIN out=WORK.SUBSETINMETA;
1404135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1404136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404137    proc sort data=EMWS8.Ensmbl14_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl14_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1404138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1404139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL14_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1404140    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1404141    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1404142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1404143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1404144    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1404145    set EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_CMeta_TRAIN;
1404146    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1404146  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1404147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1404148    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1404149    set EMWS8.Ensmbl14_TRAIN(keep=
1404150    F_DepVar
1404151    I_DepVar
1404152    P_DepVar0
1404153    P_DepVar1
1404154    R_DepVar0
1404155    R_DepVar1
1404156    U_DepVar
1404157    _WARN_
1404158    DepVar
1404159    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1404160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG5_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL14_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl14_1MXQ4RL nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_1MXQ4RL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1MXQ4RL(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1MXQ4RL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1MXQ4RL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000425828 OVLMAX 0.9999438416 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1408426    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1408427    set EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_CMeta_TRAIN;
1408428    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1408428  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1408429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1408430    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1408431    set EMWS8.Ensmbl14_VALIDATE(keep=
1408432    F_DepVar
1408433    I_DepVar
1408434    P_DepVar0
1408435    P_DepVar1
1408436    R_DepVar0
1408437    R_DepVar1
1408438    U_DepVar
1408439    _WARN_
1408440    DepVar
1408441    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1408442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG5_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL14_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl14_1KASYY9 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl14_1KASYY9;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1KASYY9(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMCLASSIFICATION WORK.Ensmbl14_1KASYY9;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl14_1KASYY9;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000422219 OVLMAX 0.9999311474 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1412717    %let _cn = %sysfunc(getoption(CENTER));
1412718    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1412719    proc print data=EMWS8.Ensmbl14_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMREPORTFIT noobs label;
1412720    var STAT LABEL TRAIN
1412721    VALIDATE
1412722    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1412723    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1412724    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1412725    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1412726    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL14_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1315.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412727    title10;
MPRINT(EM_DIAGRAM):   title10;
1412728    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1412729    proc sort data=EMWS8.Ensmbl14_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl14_EMCLASSIFICATION nothreads;
1412730    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1412731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL14_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412732    %let _cn = %sysfunc(getoption(CENTER));
1412733    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1412734    proc print data=EMWS8.Ensmbl14_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMCLASSIFICATION noobs label;
1412735    var from into pct_row pct_col count percent
1412736    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1412737    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1412738    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1412739    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1412740    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1412741    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1412742    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1412743    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1412744    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1412745    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1412746    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1412747    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL14_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1316.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412748    title9;
MPRINT(EM_DIAGRAM):   title9;
1412749    title10;
MPRINT(EM_DIAGRAM):   title10;
1412750    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1412751    %let _cn = %sysfunc(getoption(CENTER));
1412752    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1412753    data EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMEVENTREPORT;
1412754    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1412754  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1412755    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1412755  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1412755  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1412755  ! FALSEEVENT
1412756    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1412756  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1412756  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1412757       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1412758    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1412759    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1412760    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1412761    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1412762    set EMWS8.Ensmbl14_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMEVENTREPORT;
1412763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL14_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL14_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412764    proc print data=EMWS8.Ensmbl14_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMEVENTREPORT noobs label;
1412765    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1412766    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1412767    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1412768    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL14_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1317.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412769    title10;
MPRINT(EM_DIAGRAM):   title10;
1412770    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1412771    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1412772    modify Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl14_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1412773    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1412774    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1412774  ! ;
MPRINT(EM_DIAGRAM):   run;
1412775    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL14_EMRANK.DATA.
1412776    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
1412777    %let _cn = %sysfunc(getoption(CENTER));
1412778    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1412779    proc print data=EMWS8.Ensmbl14_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMRANK label noobs;
1412780    var
1412781    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1412782    by
1412783    notsorted DATAROLE
1412784    notsorted TARGET
1412785    notsorted TARGETLABEL
1412786    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1412787    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1412788    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1412789    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL14_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1318.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1412790    title10;
MPRINT(EM_DIAGRAM):   title10;
1412791    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1412792    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1412793    modify Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl14_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1412794    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1412794  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1412795    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1412795  ! ;
MPRINT(EM_DIAGRAM):   run;
1412796    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL14_EMSCOREDIST.DATA.
1412797    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl14_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
