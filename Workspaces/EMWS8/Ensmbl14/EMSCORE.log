MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WQ9Q0G 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WQ9Q0G new;
MPRINT(EM_DIAGRAM):   run;
498129     filename emflow
498129   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring AUTONEURAL7_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498130     *------------------------------------------------------------*;
498131     * Ensmbl14: Scoring AUTONEURAL7_TRAIN data;
498132     *------------------------------------------------------------*;
498133     data EMWS8.Ensmbl14_TRAIN
498134     / view=EMWS8.Ensmbl14_TRAIN
498135     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_TRAIN / view=EMWS8.Ensmbl14_TRAIN ;
498136     set EMWS8.AutoNeural7_TRAIN
498137     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_TRAIN ;
498138     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
498139    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498140    +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
498141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498142    +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
498143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498145    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
498146    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
498147    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
498148    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498150    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
498151    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
498152    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
498153    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498155    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
498156    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
498157    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
498158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498160    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
498161    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
498162    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
498163    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498164    +
498165    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
498166    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
498166   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
498167    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
498168    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
498169    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
498170    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
498171    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
498172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498173    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
498174    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
498175    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
498176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498178    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
498179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498180    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
498181    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
498182    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
498183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498184    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
498185    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
498186    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
498187    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498189    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
498190    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
498191    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
498192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498194    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
498195    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
498196    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
498197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498198    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
498199    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
498200    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
498201    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
498202    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
498203    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
498204    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
498205    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
498206    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
498207    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
498208    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
498209    +LENGTH _WARN_ $4
498210    +      F_DepVar  $ 12
498211    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
498212    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
498213    +
498214    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
498215    +
498216    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
498217    +
498218    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
498219    +
498220    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
498221    +
498222    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
498223    +
498224    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
498225    +
498226    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
498227    +
498228    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
498229    +
498230    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
498231    +
498232    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
498233    +
498234    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
498235    +
498236    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
498237    +
498238    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
498239    +
498240    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
498241    +
498242    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
498243    +
498244    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
498245    +
498246    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
498247    +
498248    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
498249    +
498250    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
498251    +
498252    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
498253    +
498254    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
498255    +
498256    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
498257    +
498258    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
498259    +
498260    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
498261    +
498262    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
498263    +
498264    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
498265    +
498266    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
498267    +
498268    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
498269    +
498270    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
498271    +
498272    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
498273    +
498274    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
498275    +
498276    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
498277    +
498278    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
498279    +
498280    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
498281    +
498282    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
498283    +
498284    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
498285    +
498286    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
498287    +
498288    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
498289    +
498290    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
498291    +
498292    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
498293    +
498294    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
498295    +
498296    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
498297    +
498298    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
498299    +
498300    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
498301    +
498302    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
498303    +
498304    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
498305    +
498306    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
498307    +
498308    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
498309    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
498310    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
498311    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
498312    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498313    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498314    +end;
MPRINT(EM_DIAGRAM):   end;
498315    +else do;
MPRINT(EM_DIAGRAM):   else do;
498316    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498317    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
498318    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498319    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
498320    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
498321    +   end;
MPRINT(EM_DIAGRAM):   end;
498322    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
498323    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
498324    +   end;
MPRINT(EM_DIAGRAM):   end;
498325    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498326    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
498327    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498328    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498329    +   end;
MPRINT(EM_DIAGRAM):   end;
498330    +end;
MPRINT(EM_DIAGRAM):   end;
498331    +
498332    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
498333    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
498334    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
498335    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
498336    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498338    +end;
MPRINT(EM_DIAGRAM):   end;
498339    +else do;
MPRINT(EM_DIAGRAM):   else do;
498340    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498341    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
498342    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498343    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
498344    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
498345    +   end;
MPRINT(EM_DIAGRAM):   end;
498346    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
498347    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
498348    +   end;
MPRINT(EM_DIAGRAM):   end;
498349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498350    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
498351    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498352    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498353    +   end;
MPRINT(EM_DIAGRAM):   end;
498354    +end;
MPRINT(EM_DIAGRAM):   end;
498355    +
498356    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
498357    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
498358    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
498359    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
498360    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498361    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498362    +end;
MPRINT(EM_DIAGRAM):   end;
498363    +else do;
MPRINT(EM_DIAGRAM):   else do;
498364    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498365    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
498366    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498367    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
498368    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
498369    +   end;
MPRINT(EM_DIAGRAM):   end;
498370    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
498371    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
498372    +   end;
MPRINT(EM_DIAGRAM):   end;
498373    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498374    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
498375    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498376    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498377    +   end;
MPRINT(EM_DIAGRAM):   end;
498378    +end;
MPRINT(EM_DIAGRAM):   end;
498379    +
498380    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
498381    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
498382    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
498383    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
498384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498386    +end;
MPRINT(EM_DIAGRAM):   end;
498387    +else do;
MPRINT(EM_DIAGRAM):   else do;
498388    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498389    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
498390    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498391    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
498392    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
498393    +   end;
MPRINT(EM_DIAGRAM):   end;
498394    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
498395    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
498396    +   end;
MPRINT(EM_DIAGRAM):   end;
498397    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498398    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
498399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498401    +   end;
MPRINT(EM_DIAGRAM):   end;
498402    +end;
MPRINT(EM_DIAGRAM):   end;
498403    +
498404    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
498405    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
498406    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
498407    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
498408    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498409    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498410    +end;
MPRINT(EM_DIAGRAM):   end;
498411    +else do;
MPRINT(EM_DIAGRAM):   else do;
498412    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498413    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
498414    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498415    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
498416    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
498417    +   end;
MPRINT(EM_DIAGRAM):   end;
498418    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
498419    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
498420    +   end;
MPRINT(EM_DIAGRAM):   end;
498421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498422    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
498423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498425    +   end;
MPRINT(EM_DIAGRAM):   end;
498426    +end;
MPRINT(EM_DIAGRAM):   end;
498427    +
498428    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
498429    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
498430    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
498431    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
498432    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498433    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498434    +end;
MPRINT(EM_DIAGRAM):   end;
498435    +else do;
MPRINT(EM_DIAGRAM):   else do;
498436    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498437    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
498438    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498439    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
498440    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
498441    +   end;
MPRINT(EM_DIAGRAM):   end;
498442    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
498443    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
498444    +   end;
MPRINT(EM_DIAGRAM):   end;
498445    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498446    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
498447    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498448    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498449    +   end;
MPRINT(EM_DIAGRAM):   end;
498450    +end;
MPRINT(EM_DIAGRAM):   end;
498451    +
498452    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
498453    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
498454    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
498455    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
498456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498458    +end;
MPRINT(EM_DIAGRAM):   end;
498459    +else do;
MPRINT(EM_DIAGRAM):   else do;
498460    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
498461    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
498462    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498463    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
498464    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
498465    +   end;
MPRINT(EM_DIAGRAM):   end;
498466    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
498467    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
498468    +   end;
MPRINT(EM_DIAGRAM):   end;
498469    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498470    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
498471    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498472    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498473    +   end;
MPRINT(EM_DIAGRAM):   end;
498474    +end;
MPRINT(EM_DIAGRAM):   end;
498475    +
498476    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
498477    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
498478    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
498479    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
498480    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
498481    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
498482    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
498483    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
498484    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
498485    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
498486    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
498487    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
498488    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498489    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498490    +end;
MPRINT(EM_DIAGRAM):   end;
498491    +else do;
MPRINT(EM_DIAGRAM):   else do;
498492    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
498493    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
498494    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498495    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
498496    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
498497    +   end;
MPRINT(EM_DIAGRAM):   end;
498498    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
498499    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
498500    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
498501    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
498502    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
498503    +   end;
MPRINT(EM_DIAGRAM):   end;
498504    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
498505    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
498506    +   end;
MPRINT(EM_DIAGRAM):   end;
498507    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
498508    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
498509    +   end;
MPRINT(EM_DIAGRAM):   end;
498510    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
498511    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
498512    +   end;
MPRINT(EM_DIAGRAM):   end;
498513    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498514    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
498515    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
498516    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
498517    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
498518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498520    +   end;
MPRINT(EM_DIAGRAM):   end;
498521    +end;
MPRINT(EM_DIAGRAM):   end;
498522    +
498523    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
498524    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
498525    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
498526    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
498527    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
498528    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
498529    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
498530    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
498531    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
498532    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
498533    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
498534    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
498535    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
498536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
498537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498538    +end;
MPRINT(EM_DIAGRAM):   end;
498539    +else do;
MPRINT(EM_DIAGRAM):   else do;
498540    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
498541    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
498542    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498543    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
498544    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
498545    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
498546    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
498547    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
498548    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
498549    +         end;
MPRINT(EM_DIAGRAM):   end;
498550    +         else do;
MPRINT(EM_DIAGRAM):   else do;
498551    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
498552    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
498553    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
498554    +            end;
MPRINT(EM_DIAGRAM):   end;
498555    +         end;
MPRINT(EM_DIAGRAM):   end;
498556    +      end;
MPRINT(EM_DIAGRAM):   end;
498557    +      else do;
MPRINT(EM_DIAGRAM):   else do;
498558    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
498559    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
498560    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
498561    +         end;
MPRINT(EM_DIAGRAM):   end;
498562    +      end;
MPRINT(EM_DIAGRAM):   end;
498563    +   end;
MPRINT(EM_DIAGRAM):   end;
498564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498565    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
498566    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
498567    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
498568    +      end;
MPRINT(EM_DIAGRAM):   end;
498569    +      else do;
MPRINT(EM_DIAGRAM):   else do;
498570    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
498571    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
498572    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
498573    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
498574    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
498575    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
498576    +         end;
MPRINT(EM_DIAGRAM):   end;
498577    +      end;
MPRINT(EM_DIAGRAM):   end;
498578    +   end;
MPRINT(EM_DIAGRAM):   end;
498579    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
498580    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
498581    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
498582    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
498583    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
498584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
498585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498586    +   end;
MPRINT(EM_DIAGRAM):   end;
498587    +end;
MPRINT(EM_DIAGRAM):   end;
498588    +
498589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498590    +*** Checking missing input Interval
498591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
498592    +
498593    +IF NMISS(
498594    +   AcceptedCmpTotal ,
498595    +   Age ,
498596    +   Frq ,
498597    +   Income ,
498598    +   Kidhome ,
498599    +   Mnt ,
498600    +   MntFishProducts ,
498601    +   MntFruits ,
498602    +   MntGoldProds ,
498603    +   MntMeatProducts ,
498604    +   MntSweetProducts ,
498605    +   MntWines ,
498606    +   MonthsAsCustomer ,
498607    +   NumCatalogPurchases ,
498608    +   NumDealsPurchases ,
498609    +   NumDistPurchases ,
498610    +   NumStorePurchases ,
498611    +   NumWebPurchases ,
498612    +   NumWebVisitsMonth ,
498613    +   RFMstat ,
498614    +   RMntFrq ,
498615    +   Recency ,
498616    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
498617    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
498618    +
498619    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
498620    +END;
MPRINT(EM_DIAGRAM):   END;
498621    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498622    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
498623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498624    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
498625    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
498626    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
498627    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
498628    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
498629    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
498630    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
498631    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
498632    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
498633    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
498634    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
498635    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
498636    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
498637    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
498638    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
498639    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
498640    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
498641    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
498642    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
498643    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
498644    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
498645    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
498646    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
498647    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
498648    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
498649    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
498650    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
498651    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
498652    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
498653    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
498654    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
498655    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
498656    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
498657    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
498658    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
498659    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
498660    +END;
MPRINT(EM_DIAGRAM):   END;
498661    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
498662    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
498663    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
498664    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
498665    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
498666    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
498667    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
498668    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
498669    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
498670    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
498671    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
498672    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
498673    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
498674    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
498675    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
498676    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
498677    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
498678    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
498679    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
498680    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
498681    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
498682    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
498683    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
498684    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
498685    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
498686    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
498687    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
498688    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
498689    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
498690    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
498691    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
498692    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
498693    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
498694    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
498695    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
498696    +   ELSE S_NumCatalogPurchases
498697    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
498698    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
498699    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
498700    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
498701    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
498702    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
498703    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
498704    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
498705    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
498706    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
498707    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
498708    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
498709    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
498710    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
498711    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
498712    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
498713    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
498714    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
498715    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
498716    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
498717    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
498718    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
498719    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
498720    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
498721    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
498722    +END;
MPRINT(EM_DIAGRAM):   END;
498723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498724    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
498725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498727    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
498728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498730    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
498731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498732    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
498733    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
498734    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
498735    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
498736    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
498737    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
498738    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
498739    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
498740    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
498741    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
498742    +          +     0.09708841024031 * S_NumDealsPurchases
498743    +          +    -0.29075561032014 * S_NumDistPurchases
498744    +          +    -0.14495394259873 * S_NumStorePurchases
498745    +          +     0.11890705145732 * S_NumWebPurchases
498746    +          +    -0.16954189911344 * S_NumWebVisitsMonth
498747    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
498748    +        S_RMntFrq  +     0.17150719398884 * S_Recency
498749    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
498750    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
498751    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
498752    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
498753    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
498754    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
498755    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
498756    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
498757    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
498758    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
498759    +          +     0.16274478997892 * S_NumDealsPurchases
498760    +          +     0.03966958784582 * S_NumDistPurchases
498761    +          +    -0.04714110726598 * S_NumStorePurchases
498762    +          +    -0.02124229528082 * S_NumWebPurchases
498763    +          +     0.29753299776832 * S_NumWebVisitsMonth
498764    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
498765    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
498766    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
498767    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
498768    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
498769    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
498770    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
498771    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
498772    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
498773    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
498774    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
498775    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
498776    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
498777    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
498778    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
498779    +        EducationGraduation  +     0.00619669837452 * EducationMaster
498780    +          +    -0.05037639679806 * Marital_StatusDivorced
498781    +          +     0.28781968727878 * Marital_StatusMarried
498782    +          +    -0.20382417074384 * Marital_StatusSingle
498783    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
498784    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
498785    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
498786    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
498787    +          +     0.06970969219123 * Marital_StatusDivorced
498788    +          +    -0.15787475744986 * Marital_StatusMarried
498789    +          +     0.14345344072192 * Marital_StatusSingle
498790    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
498791    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
498792    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
498793    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
498794    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
498795    +END;
MPRINT(EM_DIAGRAM):   END;
498796    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
498797    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
498798    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
498799    +END;
MPRINT(EM_DIAGRAM):   END;
498800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498801    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
498802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498803    +
498804    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
498805    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
498806    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
498807    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
498808    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
498809    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
498810    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
498811    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
498812    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
498813    +end;
MPRINT(EM_DIAGRAM):   end;
498814    +else do;
MPRINT(EM_DIAGRAM):   else do;
498815    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
498816    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
498817    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
498818    +   end;
MPRINT(EM_DIAGRAM):   end;
498819    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
498820    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
498821    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
498822    +   end;
MPRINT(EM_DIAGRAM):   end;
498823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
498824    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
498825    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
498826    +   end;
MPRINT(EM_DIAGRAM):   end;
498827    +end;
MPRINT(EM_DIAGRAM):   end;
498828    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
498829    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
498830    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
498831    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
498832    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
498833    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
498834    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
498835    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
498836    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
498837    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
498838    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
498839    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
498840    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
498841    +END;
MPRINT(EM_DIAGRAM):   END;
498842    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
498843    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
498844    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
498845    +END;
MPRINT(EM_DIAGRAM):   END;
498846    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
498847    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
498848    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
498849    +END;
MPRINT(EM_DIAGRAM):   END;
498850    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
498851    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
498852    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
498853    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
498854    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
498855    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
498856    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
498857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498858    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
498859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
498860    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
498861    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
498862    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
498863    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
498864    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
498865    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
498866    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
498867    +END;
MPRINT(EM_DIAGRAM):   END;
498868    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
498869    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
498870    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
498871    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
498872    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
498873    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498874    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
498875    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498876    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
498877    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
498878    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
498879    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
498880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498881    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
498882    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498883    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
498884    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
498885    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
498886    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498887    +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
498888    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498889    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498890    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
498891    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
498892    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
498893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
498894    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
498895    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
498896    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
498897    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
498898    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
498899    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
498900    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
498901    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
498902    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
498903    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
498904    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
498905    +LENGTH _WARN_ $4
498906    +      F_DepVar  $ 12
498907    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
498908    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
498909    +
498910    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
498911    +
498912    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
498913    +
498914    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
498915    +
498916    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
498917    +
498918    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
498919    +
498920    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
498921    +
498922    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
498923    +
498924    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
498925    +
498926    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
498927    +
498928    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
498929    +
498930    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
498931    +
498932    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
498933    +
498934    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
498935    +
498936    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
498937    +
498938    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
498939    +
498940    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
498941    +
498942    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
498943    +
498944    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
498945    +
498946    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
498947    +
498948    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
498949    +
498950    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
498951    +
498952    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
498953    +
498954    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
498955    +
498956    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
498957    +
498958    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
498959    +
498960    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
498961    +
498962    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
498963    +
498964    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
498965    +
498966    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
498967    +
498968    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
498969    +
498970    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
498971    +
498972    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
498973    +
498974    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
498975    +
498976    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
498977    +
498978    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
498979    +
498980    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
498981    +
498982    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
498983    +
498984    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
498985    +
498986    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
498987    +
498988    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
498989    +
498990    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
498991    +
498992    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
498993    +
498994    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
498995    +
498996    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
498997    +
498998    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
498999    +
499000    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
499001    +
499002    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
499003    +
499004    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
499005    +
499006    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
499007    +
499008    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
499009    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
499010    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
499011    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
499012    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499013    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499014    +end;
MPRINT(EM_DIAGRAM):   end;
499015    +else do;
MPRINT(EM_DIAGRAM):   else do;
499016    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499017    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
499018    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499019    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499020    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
499021    +   end;
MPRINT(EM_DIAGRAM):   end;
499022    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499023    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
499024    +   end;
MPRINT(EM_DIAGRAM):   end;
499025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499026    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
499027    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499028    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499029    +   end;
MPRINT(EM_DIAGRAM):   end;
499030    +end;
MPRINT(EM_DIAGRAM):   end;
499031    +
499032    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
499033    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
499034    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
499035    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
499036    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499037    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499038    +end;
MPRINT(EM_DIAGRAM):   end;
499039    +else do;
MPRINT(EM_DIAGRAM):   else do;
499040    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499041    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
499042    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499043    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499044    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
499045    +   end;
MPRINT(EM_DIAGRAM):   end;
499046    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499047    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
499048    +   end;
MPRINT(EM_DIAGRAM):   end;
499049    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499050    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
499051    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499052    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499053    +   end;
MPRINT(EM_DIAGRAM):   end;
499054    +end;
MPRINT(EM_DIAGRAM):   end;
499055    +
499056    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
499057    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
499058    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
499059    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
499060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499062    +end;
MPRINT(EM_DIAGRAM):   end;
499063    +else do;
MPRINT(EM_DIAGRAM):   else do;
499064    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499065    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
499066    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499067    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499068    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
499069    +   end;
MPRINT(EM_DIAGRAM):   end;
499070    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499071    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
499072    +   end;
MPRINT(EM_DIAGRAM):   end;
499073    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499074    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
499075    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499076    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499077    +   end;
MPRINT(EM_DIAGRAM):   end;
499078    +end;
MPRINT(EM_DIAGRAM):   end;
499079    +
499080    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
499081    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
499082    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
499083    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
499084    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499085    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499086    +end;
MPRINT(EM_DIAGRAM):   end;
499087    +else do;
MPRINT(EM_DIAGRAM):   else do;
499088    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499089    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
499090    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499091    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499092    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
499093    +   end;
MPRINT(EM_DIAGRAM):   end;
499094    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499095    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
499096    +   end;
MPRINT(EM_DIAGRAM):   end;
499097    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499098    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
499099    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499100    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499101    +   end;
MPRINT(EM_DIAGRAM):   end;
499102    +end;
MPRINT(EM_DIAGRAM):   end;
499103    +
499104    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
499105    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
499106    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
499107    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
499108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499110    +end;
MPRINT(EM_DIAGRAM):   end;
499111    +else do;
MPRINT(EM_DIAGRAM):   else do;
499112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499113    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
499114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499115    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499116    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
499117    +   end;
MPRINT(EM_DIAGRAM):   end;
499118    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499119    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
499120    +   end;
MPRINT(EM_DIAGRAM):   end;
499121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499122    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
499123    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499124    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499125    +   end;
MPRINT(EM_DIAGRAM):   end;
499126    +end;
MPRINT(EM_DIAGRAM):   end;
499127    +
499128    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
499129    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
499130    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
499131    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
499132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499134    +end;
MPRINT(EM_DIAGRAM):   end;
499135    +else do;
MPRINT(EM_DIAGRAM):   else do;
499136    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499137    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
499138    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499139    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499140    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
499141    +   end;
MPRINT(EM_DIAGRAM):   end;
499142    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499143    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
499144    +   end;
MPRINT(EM_DIAGRAM):   end;
499145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499146    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
499147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499149    +   end;
MPRINT(EM_DIAGRAM):   end;
499150    +end;
MPRINT(EM_DIAGRAM):   end;
499151    +
499152    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
499153    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
499154    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
499155    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
499156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499158    +end;
MPRINT(EM_DIAGRAM):   end;
499159    +else do;
MPRINT(EM_DIAGRAM):   else do;
499160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499161    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
499162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499163    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
499164    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
499165    +   end;
MPRINT(EM_DIAGRAM):   end;
499166    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
499167    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
499168    +   end;
MPRINT(EM_DIAGRAM):   end;
499169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499170    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
499171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499173    +   end;
MPRINT(EM_DIAGRAM):   end;
499174    +end;
MPRINT(EM_DIAGRAM):   end;
499175    +
499176    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
499177    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
499178    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
499179    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
499180    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
499181    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
499182    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
499183    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
499184    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
499185    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
499186    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
499187    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
499188    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499189    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499190    +end;
MPRINT(EM_DIAGRAM):   end;
499191    +else do;
MPRINT(EM_DIAGRAM):   else do;
499192    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
499193    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
499194    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499195    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
499196    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
499197    +   end;
MPRINT(EM_DIAGRAM):   end;
499198    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
499199    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
499200    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
499201    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
499202    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
499203    +   end;
MPRINT(EM_DIAGRAM):   end;
499204    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
499205    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
499206    +   end;
MPRINT(EM_DIAGRAM):   end;
499207    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
499208    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
499209    +   end;
MPRINT(EM_DIAGRAM):   end;
499210    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
499211    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
499212    +   end;
MPRINT(EM_DIAGRAM):   end;
499213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499214    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
499215    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
499216    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
499217    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
499218    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499219    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499220    +   end;
MPRINT(EM_DIAGRAM):   end;
499221    +end;
MPRINT(EM_DIAGRAM):   end;
499222    +
499223    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
499224    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
499225    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
499226    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
499227    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
499228    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
499229    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
499230    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
499231    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
499232    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
499233    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
499234    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
499235    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
499236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499238    +end;
MPRINT(EM_DIAGRAM):   end;
499239    +else do;
MPRINT(EM_DIAGRAM):   else do;
499240    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
499241    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
499242    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499243    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
499244    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
499245    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
499246    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
499247    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
499248    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499249    +         end;
MPRINT(EM_DIAGRAM):   end;
499250    +         else do;
MPRINT(EM_DIAGRAM):   else do;
499251    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
499252    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
499253    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499254    +            end;
MPRINT(EM_DIAGRAM):   end;
499255    +         end;
MPRINT(EM_DIAGRAM):   end;
499256    +      end;
MPRINT(EM_DIAGRAM):   end;
499257    +      else do;
MPRINT(EM_DIAGRAM):   else do;
499258    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
499259    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
499260    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499261    +         end;
MPRINT(EM_DIAGRAM):   end;
499262    +      end;
MPRINT(EM_DIAGRAM):   end;
499263    +   end;
MPRINT(EM_DIAGRAM):   end;
499264    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499265    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
499266    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
499267    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499268    +      end;
MPRINT(EM_DIAGRAM):   end;
499269    +      else do;
MPRINT(EM_DIAGRAM):   else do;
499270    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
499271    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
499272    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
499273    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
499274    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
499275    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499276    +         end;
MPRINT(EM_DIAGRAM):   end;
499277    +      end;
MPRINT(EM_DIAGRAM):   end;
499278    +   end;
MPRINT(EM_DIAGRAM):   end;
499279    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
499280    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
499281    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
499282    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
499283    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
499284    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499285    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499286    +   end;
MPRINT(EM_DIAGRAM):   end;
499287    +end;
MPRINT(EM_DIAGRAM):   end;
499288    +
499289    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499290    +*** Checking missing input Interval
499291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
499292    +
499293    +IF NMISS(
499294    +   AcceptedCmpTotal ,
499295    +   Age ,
499296    +   Frq ,
499297    +   Income ,
499298    +   Kidhome ,
499299    +   Mnt ,
499300    +   MntFishProducts ,
499301    +   MntFruits ,
499302    +   MntGoldProds ,
499303    +   MntMeatProducts ,
499304    +   MntSweetProducts ,
499305    +   MntWines ,
499306    +   MonthsAsCustomer ,
499307    +   NumCatalogPurchases ,
499308    +   NumDealsPurchases ,
499309    +   NumDistPurchases ,
499310    +   NumStorePurchases ,
499311    +   NumWebPurchases ,
499312    +   NumWebVisitsMonth ,
499313    +   RFMstat ,
499314    +   RMntFrq ,
499315    +   Recency ,
499316    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
499317    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
499318    +
499319    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499320    +END;
MPRINT(EM_DIAGRAM):   END;
499321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499322    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
499323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499324    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499325    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
499326    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
499327    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
499328    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
499329    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
499330    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
499331    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
499332    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
499333    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
499334    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
499335    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
499336    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
499337    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
499338    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
499339    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
499340    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
499341    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
499342    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
499343    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
499344    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
499345    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
499346    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
499347    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
499348    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
499349    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
499350    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
499351    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
499352    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
499353    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
499354    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
499355    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
499356    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
499357    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
499358    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
499359    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
499360    +END;
MPRINT(EM_DIAGRAM):   END;
499361    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499362    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
499363    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
499364    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
499365    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
499366    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
499367    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
499368    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
499369    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
499370    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
499371    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
499372    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
499373    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
499374    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
499375    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
499376    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
499377    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
499378    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
499379    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
499380    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
499381    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
499382    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
499383    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
499384    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
499385    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
499386    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
499387    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
499388    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
499389    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
499390    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
499391    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
499392    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
499393    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
499394    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
499395    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
499396    +   ELSE S_NumCatalogPurchases
499397    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
499398    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
499399    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
499400    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
499401    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
499402    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
499403    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
499404    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
499405    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
499406    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
499407    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
499408    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
499409    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
499410    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
499411    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
499412    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
499413    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
499414    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
499415    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
499416    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
499417    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
499418    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
499419    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
499420    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
499421    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
499422    +END;
MPRINT(EM_DIAGRAM):   END;
499423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499424    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
499425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499427    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
499428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499430    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
499431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499432    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499433    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
499434    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
499435    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
499436    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
499437    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
499438    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
499439    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
499440    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
499441    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
499442    +          +    -1.14704878034134 * S_NumDealsPurchases
499443    +          +    -0.17763404274659 * S_NumDistPurchases
499444    +          +     0.08894400267969 * S_NumStorePurchases
499445    +          +     0.59283747891957 * S_NumWebPurchases
499446    +          +     0.85268274682505 * S_NumWebVisitsMonth
499447    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
499448    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
499449    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
499450    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
499451    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
499452    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
499453    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
499454    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
499455    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
499456    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
499457    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
499458    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
499459    +          +    -0.80841566068716 * S_NumDealsPurchases
499460    +          +    -0.17995640033768 * S_NumDistPurchases
499461    +          +     0.00713417460936 * S_NumStorePurchases
499462    +          +     0.57881024323076 * S_NumWebPurchases
499463    +          +    -1.35134224257365 * S_NumWebVisitsMonth
499464    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
499465    +        S_RMntFrq  +     1.16978656262499 * S_Recency
499466    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
499467    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
499468    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
499469    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
499470    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
499471    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
499472    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
499473    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
499474    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
499475    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
499476    +          +     0.57891364118717 * S_NumDealsPurchases
499477    +          +    -0.31024556838688 * S_NumDistPurchases
499478    +          +    -1.48708542986704 * S_NumStorePurchases
499479    +          +    -0.93009875249206 * S_NumWebPurchases
499480    +          +     2.01900039122935 * S_NumWebVisitsMonth
499481    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
499482    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
499483    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
499484    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
499485    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
499486    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
499487    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
499488    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
499489    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
499490    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
499491    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
499492    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
499493    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
499494    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
499495    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
499496    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
499497    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
499498    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
499499    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
499500    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
499501    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
499502    +          +     0.55883606830033 * Marital_StatusDivorced
499503    +          +    -0.54530037567066 * Marital_StatusMarried
499504    +          +    -0.52994736075753 * Marital_StatusSingle
499505    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
499506    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
499507    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
499508    +        EducationGraduation  +     0.31201349236277 * EducationMaster
499509    +          +    -1.07368484057033 * Marital_StatusDivorced
499510    +          +     2.73313504711262 * Marital_StatusMarried
499511    +          +    -2.18530462876058 * Marital_StatusSingle
499512    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
499513    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
499514    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
499515    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
499516    +          +     0.49993144243043 * Marital_StatusDivorced
499517    +          +    -0.38953339116829 * Marital_StatusMarried
499518    +          +    -0.10836287319942 * Marital_StatusSingle
499519    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
499520    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
499521    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
499522    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
499523    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
499524    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
499525    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499526    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
499527    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
499528    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
499529    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
499530    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
499531    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
499532    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
499533    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
499534    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
499535    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
499536    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
499537    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
499538    +END;
MPRINT(EM_DIAGRAM):   END;
499539    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499540    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
499541    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
499542    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
499543    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
499544    +END;
MPRINT(EM_DIAGRAM):   END;
499545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499546    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
499547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499548    +
499549    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
499550    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
499551    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
499552    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
499553    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
499554    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499555    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
499556    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
499557    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
499558    +end;
MPRINT(EM_DIAGRAM):   end;
499559    +else do;
MPRINT(EM_DIAGRAM):   else do;
499560    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
499561    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
499562    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
499563    +   end;
MPRINT(EM_DIAGRAM):   end;
499564    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
499565    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
499566    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
499567    +   end;
MPRINT(EM_DIAGRAM):   end;
499568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499569    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
499570    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
499571    +   end;
MPRINT(EM_DIAGRAM):   end;
499572    +end;
MPRINT(EM_DIAGRAM):   end;
499573    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499574    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
499575    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
499576    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
499577    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
499578    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
499579    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499580    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
499581    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
499582    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
499583    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
499584    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
499585    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
499586    +END;
MPRINT(EM_DIAGRAM):   END;
499587    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499588    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
499589    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
499590    +END;
MPRINT(EM_DIAGRAM):   END;
499591    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
499592    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
499593    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
499594    +END;
MPRINT(EM_DIAGRAM):   END;
499595    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
499596    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
499597    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
499598    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
499599    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
499600    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
499601    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
499602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499603    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
499604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499605    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
499606    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
499607    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
499608    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
499609    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
499610    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
499611    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
499612    +END;
MPRINT(EM_DIAGRAM):   END;
499613    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
499614    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
499615    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
499616    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
499617    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
499618    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499619    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
499620    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499621    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
499622    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
499623    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
499624    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
499625    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499626    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
499627    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499628    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
499629    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
499630    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
499631    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499632    +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
499633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499635    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
499636    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
499637    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
499638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499639    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
499640    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
499641    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
499642    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
499643    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
499644    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
499645    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
499646    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
499647    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
499648    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
499649    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
499650    +LENGTH _WARN_ $4
499651    +      F_DepVar  $ 12
499652    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
499653    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
499654    +
499655    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
499656    +
499657    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
499658    +
499659    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
499660    +
499661    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
499662    +
499663    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
499664    +
499665    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
499666    +
499667    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
499668    +
499669    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
499670    +
499671    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
499672    +
499673    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
499674    +
499675    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
499676    +
499677    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
499678    +
499679    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
499680    +
499681    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
499682    +
499683    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
499684    +
499685    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
499686    +
499687    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
499688    +
499689    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
499690    +
499691    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
499692    +
499693    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
499694    +
499695    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
499696    +
499697    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
499698    +
499699    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
499700    +
499701    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
499702    +
499703    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
499704    +
499705    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
499706    +
499707    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
499708    +
499709    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
499710    +
499711    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
499712    +
499713    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
499714    +
499715    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
499716    +
499717    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
499718    +
499719    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
499720    +
499721    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
499722    +
499723    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
499724    +
499725    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
499726    +
499727    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
499728    +
499729    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
499730    +
499731    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
499732    +
499733    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
499734    +
499735    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
499736    +
499737    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
499738    +
499739    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
499740    +
499741    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
499742    +
499743    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
499744    +
499745    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
499746    +
499747    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
499748    +
499749    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
499750    +
499751    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
499752    +
499753    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
499754    +
499755    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
499756    +
499757    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
499758    +
499759    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
499760    +
499761    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
499762    +
499763    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
499764    +
499765    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
499766    +
499767    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
499768    +
499769    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
499770    +
499771    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
499772    +
499773    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
499774    +
499775    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
499776    +
499777    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
499778    +
499779    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
499780    +
499781    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
499782    +
499783    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
499784    +
499785    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
499786    +
499787    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
499788    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
499789    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
499790    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
499791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499793    +end;
MPRINT(EM_DIAGRAM):   end;
499794    +else do;
MPRINT(EM_DIAGRAM):   else do;
499795    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499796    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
499797    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499798    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499799    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
499800    +   end;
MPRINT(EM_DIAGRAM):   end;
499801    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499802    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
499803    +   end;
MPRINT(EM_DIAGRAM):   end;
499804    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499805    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
499806    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499807    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499808    +   end;
MPRINT(EM_DIAGRAM):   end;
499809    +end;
MPRINT(EM_DIAGRAM):   end;
499810    +
499811    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
499812    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
499813    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
499814    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
499815    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499816    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499817    +end;
MPRINT(EM_DIAGRAM):   end;
499818    +else do;
MPRINT(EM_DIAGRAM):   else do;
499819    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499820    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
499821    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499822    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499823    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
499824    +   end;
MPRINT(EM_DIAGRAM):   end;
499825    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499826    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
499827    +   end;
MPRINT(EM_DIAGRAM):   end;
499828    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499829    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
499830    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499831    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499832    +   end;
MPRINT(EM_DIAGRAM):   end;
499833    +end;
MPRINT(EM_DIAGRAM):   end;
499834    +
499835    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
499836    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
499837    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
499838    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
499839    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499840    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499841    +end;
MPRINT(EM_DIAGRAM):   end;
499842    +else do;
MPRINT(EM_DIAGRAM):   else do;
499843    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499844    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
499845    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499846    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499847    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
499848    +   end;
MPRINT(EM_DIAGRAM):   end;
499849    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499850    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
499851    +   end;
MPRINT(EM_DIAGRAM):   end;
499852    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499853    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
499854    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499855    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499856    +   end;
MPRINT(EM_DIAGRAM):   end;
499857    +end;
MPRINT(EM_DIAGRAM):   end;
499858    +
499859    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
499860    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
499861    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
499862    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
499863    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499864    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499865    +end;
MPRINT(EM_DIAGRAM):   end;
499866    +else do;
MPRINT(EM_DIAGRAM):   else do;
499867    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499868    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
499869    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499870    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499871    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
499872    +   end;
MPRINT(EM_DIAGRAM):   end;
499873    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499874    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
499875    +   end;
MPRINT(EM_DIAGRAM):   end;
499876    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499877    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
499878    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499879    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499880    +   end;
MPRINT(EM_DIAGRAM):   end;
499881    +end;
MPRINT(EM_DIAGRAM):   end;
499882    +
499883    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
499884    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
499885    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
499886    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
499887    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499888    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499889    +end;
MPRINT(EM_DIAGRAM):   end;
499890    +else do;
MPRINT(EM_DIAGRAM):   else do;
499891    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499892    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
499893    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499894    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499895    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
499896    +   end;
MPRINT(EM_DIAGRAM):   end;
499897    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499898    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
499899    +   end;
MPRINT(EM_DIAGRAM):   end;
499900    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499901    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
499902    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499903    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499904    +   end;
MPRINT(EM_DIAGRAM):   end;
499905    +end;
MPRINT(EM_DIAGRAM):   end;
499906    +
499907    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
499908    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
499909    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
499910    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
499911    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499912    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499913    +end;
MPRINT(EM_DIAGRAM):   end;
499914    +else do;
MPRINT(EM_DIAGRAM):   else do;
499915    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499916    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
499917    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499918    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
499919    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
499920    +   end;
MPRINT(EM_DIAGRAM):   end;
499921    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
499922    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
499923    +   end;
MPRINT(EM_DIAGRAM):   end;
499924    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499925    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
499926    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499927    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499928    +   end;
MPRINT(EM_DIAGRAM):   end;
499929    +end;
MPRINT(EM_DIAGRAM):   end;
499930    +
499931    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
499932    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
499933    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
499934    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
499935    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499936    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499937    +end;
MPRINT(EM_DIAGRAM):   end;
499938    +else do;
MPRINT(EM_DIAGRAM):   else do;
499939    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
499940    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
499941    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499942    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
499943    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
499944    +   end;
MPRINT(EM_DIAGRAM):   end;
499945    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
499946    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
499947    +   end;
MPRINT(EM_DIAGRAM):   end;
499948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499949    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
499950    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499951    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499952    +   end;
MPRINT(EM_DIAGRAM):   end;
499953    +end;
MPRINT(EM_DIAGRAM):   end;
499954    +
499955    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
499956    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
499957    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
499958    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
499959    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
499960    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
499961    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
499962    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
499963    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
499964    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
499965    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
499966    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
499967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499969    +end;
MPRINT(EM_DIAGRAM):   end;
499970    +else do;
MPRINT(EM_DIAGRAM):   else do;
499971    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
499972    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
499973    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499974    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
499975    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
499976    +   end;
MPRINT(EM_DIAGRAM):   end;
499977    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
499978    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
499979    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
499980    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
499981    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
499982    +   end;
MPRINT(EM_DIAGRAM):   end;
499983    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
499984    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
499985    +   end;
MPRINT(EM_DIAGRAM):   end;
499986    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
499987    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
499988    +   end;
MPRINT(EM_DIAGRAM):   end;
499989    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
499990    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
499991    +   end;
MPRINT(EM_DIAGRAM):   end;
499992    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499993    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
499994    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
499995    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
499996    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
499997    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499998    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499999    +   end;
MPRINT(EM_DIAGRAM):   end;
500000    +end;
MPRINT(EM_DIAGRAM):   end;
500001    +
500002    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
500003    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
500004    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
500005    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
500006    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
500007    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
500008    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
500009    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
500010    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
500011    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
500012    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
500013    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
500014    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
500015    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
500016    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500017    +end;
MPRINT(EM_DIAGRAM):   end;
500018    +else do;
MPRINT(EM_DIAGRAM):   else do;
500019    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
500020    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
500021    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500022    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
500023    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
500024    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
500025    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
500026    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
500027    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500028    +         end;
MPRINT(EM_DIAGRAM):   end;
500029    +         else do;
MPRINT(EM_DIAGRAM):   else do;
500030    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
500031    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
500032    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500033    +            end;
MPRINT(EM_DIAGRAM):   end;
500034    +         end;
MPRINT(EM_DIAGRAM):   end;
500035    +      end;
MPRINT(EM_DIAGRAM):   end;
500036    +      else do;
MPRINT(EM_DIAGRAM):   else do;
500037    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
500038    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
500039    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500040    +         end;
MPRINT(EM_DIAGRAM):   end;
500041    +      end;
MPRINT(EM_DIAGRAM):   end;
500042    +   end;
MPRINT(EM_DIAGRAM):   end;
500043    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500044    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
500045    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
500046    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500047    +      end;
MPRINT(EM_DIAGRAM):   end;
500048    +      else do;
MPRINT(EM_DIAGRAM):   else do;
500049    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
500050    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
500051    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
500052    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
500053    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
500054    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500055    +         end;
MPRINT(EM_DIAGRAM):   end;
500056    +      end;
MPRINT(EM_DIAGRAM):   end;
500057    +   end;
MPRINT(EM_DIAGRAM):   end;
500058    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
500059    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
500060    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
500061    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
500062    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
500063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
500064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500065    +   end;
MPRINT(EM_DIAGRAM):   end;
500066    +end;
MPRINT(EM_DIAGRAM):   end;
500067    +
500068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500069    +*** Checking missing input Interval
500070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
500071    +
500072    +IF NMISS(
500073    +   AcceptedCmpTotal ,
500074    +   Age ,
500075    +   Frq ,
500076    +   Income ,
500077    +   Kidhome ,
500078    +   Mnt ,
500079    +   MntFishProducts ,
500080    +   MntFruits ,
500081    +   MntGoldProds ,
500082    +   MntMeatProducts ,
500083    +   MntSweetProducts ,
500084    +   MntWines ,
500085    +   MonthsAsCustomer ,
500086    +   NumCatalogPurchases ,
500087    +   NumDealsPurchases ,
500088    +   NumDistPurchases ,
500089    +   NumStorePurchases ,
500090    +   NumWebPurchases ,
500091    +   NumWebVisitsMonth ,
500092    +   RFMstat ,
500093    +   RMntFrq ,
500094    +   Recency ,
500095    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
500096    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
500097    +
500098    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500099    +END;
MPRINT(EM_DIAGRAM):   END;
500100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500101    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
500102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500103    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500104    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
500105    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
500106    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
500107    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
500108    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
500109    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
500110    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
500111    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
500112    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
500113    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
500114    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
500115    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
500116    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
500117    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
500118    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
500119    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
500120    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
500121    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
500122    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
500123    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
500124    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
500125    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
500126    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
500127    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
500128    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
500129    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
500130    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
500131    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
500132    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
500133    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
500134    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
500135    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
500136    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
500137    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
500138    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
500139    +END;
MPRINT(EM_DIAGRAM):   END;
500140    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500141    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
500142    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
500143    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
500144    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
500145    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
500146    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
500147    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
500148    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
500149    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
500150    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
500151    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
500152    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
500153    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
500154    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
500155    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
500156    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
500157    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
500158    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
500159    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
500160    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
500161    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
500162    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
500163    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
500164    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
500165    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
500166    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
500167    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
500168    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
500169    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
500170    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
500171    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
500172    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
500173    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
500174    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
500175    +   ELSE S_NumCatalogPurchases
500176    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
500177    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
500178    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
500179    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
500180    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
500181    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
500182    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
500183    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
500184    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
500185    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
500186    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
500187    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
500188    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
500189    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
500190    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
500191    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
500192    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
500193    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
500194    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
500195    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
500196    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
500197    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
500198    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
500199    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
500200    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
500201    +END;
MPRINT(EM_DIAGRAM):   END;
500202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500203    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
500204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500206    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
500207    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500209    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
500210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500211    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500212    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
500213    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
500214    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
500215    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
500216    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
500217    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
500218    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
500219    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
500220    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
500221    +          +     1.17276395296242 * S_NumDealsPurchases
500222    +          +     0.26632768295477 * S_NumDistPurchases
500223    +          +    -1.26575615903579 * S_NumStorePurchases
500224    +          +    -0.95316107557927 * S_NumWebPurchases
500225    +          +     1.01828574356487 * S_NumWebVisitsMonth
500226    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
500227    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
500228    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
500229    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
500230    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
500231    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
500232    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
500233    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
500234    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
500235    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
500236    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
500237    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
500238    +          +     1.14485571201233 * S_NumDealsPurchases
500239    +          +     0.21414266588987 * S_NumDistPurchases
500240    +          +    -0.10530090074297 * S_NumStorePurchases
500241    +          +    -0.41712321238458 * S_NumWebPurchases
500242    +          +    -0.99760766791108 * S_NumWebVisitsMonth
500243    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
500244    +        S_RMntFrq  +     1.10040128548883 * S_Recency
500245    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
500246    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
500247    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
500248    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
500249    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
500250    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
500251    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
500252    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
500253    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
500254    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
500255    +          +      0.7196418967437 * S_NumDealsPurchases
500256    +          +     0.69035286374177 * S_NumDistPurchases
500257    +          +     0.38027656631135 * S_NumStorePurchases
500258    +          +    -0.18878358997924 * S_NumWebPurchases
500259    +          +     1.61962062004798 * S_NumWebVisitsMonth
500260    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
500261    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
500262    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
500263    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
500264    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
500265    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
500266    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
500267    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
500268    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
500269    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
500270    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
500271    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
500272    +          +    -0.00642902007204 * S_NumDealsPurchases
500273    +          +     0.29785069480367 * S_NumDistPurchases
500274    +          +    -0.42243322063147 * S_NumStorePurchases
500275    +          +     0.54880896338383 * S_NumWebPurchases
500276    +          +    -0.12525846016886 * S_NumWebVisitsMonth
500277    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
500278    +        S_RMntFrq  +     0.10252211581449 * S_Recency
500279    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
500280    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
500281    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
500282    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
500283    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
500284    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
500285    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
500286    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
500287    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
500288    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
500289    +          +    -0.48404738328225 * S_NumDealsPurchases
500290    +          +    -0.02464180457879 * S_NumDistPurchases
500291    +          +     1.17201831082067 * S_NumStorePurchases
500292    +          +     0.57453655167516 * S_NumWebPurchases
500293    +          +    -1.94417019790248 * S_NumWebVisitsMonth
500294    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
500295    +        S_RMntFrq  +      1.6169916658132 * S_Recency
500296    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
500297    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
500298    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
500299    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
500300    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
500301    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
500302    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
500303    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
500304    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
500305    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
500306    +          +    -1.49850531967483 * S_NumDealsPurchases
500307    +          +    -0.82105466264223 * S_NumDistPurchases
500308    +          +     0.29984603642824 * S_NumStorePurchases
500309    +          +     0.06557123721611 * S_NumWebPurchases
500310    +          +     1.04754749365002 * S_NumWebVisitsMonth
500311    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
500312    +        S_RMntFrq  +     0.12396789666359 * S_Recency
500313    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
500314    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
500315    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
500316    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
500317    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
500318    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
500319    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
500320    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
500321    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
500322    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
500323    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
500324    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
500325    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
500326    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
500327    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
500328    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
500329    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
500330    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
500331    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
500332    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
500333    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
500334    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
500335    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
500336    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
500337    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
500338    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
500339    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
500340    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
500341    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
500342    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
500343    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
500344    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
500345    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
500346    +        EducationGraduation  +     0.07595631354847 * EducationMaster
500347    +          +     0.24583509957712 * Marital_StatusDivorced
500348    +          +    -0.22681931588361 * Marital_StatusMarried
500349    +          +    -0.12924106229536 * Marital_StatusSingle
500350    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
500351    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
500352    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
500353    +        EducationGraduation  +     0.23015089246655 * EducationMaster
500354    +          +    -0.12585334311068 * Marital_StatusDivorced
500355    +          +    -0.20835502467207 * Marital_StatusMarried
500356    +          +    -0.13839534449368 * Marital_StatusSingle
500357    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
500358    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
500359    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
500360    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
500361    +          +     0.35106363238113 * Marital_StatusDivorced
500362    +          +     -1.3414808583918 * Marital_StatusMarried
500363    +          +     1.40835320798486 * Marital_StatusSingle
500364    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
500365    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
500366    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
500367    +        EducationGraduation  +      0.1746658332011 * EducationMaster
500368    +          +     0.48174546958393 * Marital_StatusDivorced
500369    +          +    -0.41416978858191 * Marital_StatusMarried
500370    +          +    -0.23376801546265 * Marital_StatusSingle
500371    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
500372    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
500373    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
500374    +        EducationGraduation  +     0.68875064631577 * EducationMaster
500375    +          +    -0.67557643774246 * Marital_StatusDivorced
500376    +          +     1.63844045917367 * Marital_StatusMarried
500377    +          +    -0.70320960247699 * Marital_StatusSingle
500378    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
500379    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
500380    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
500381    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
500382    +          +    -0.11371453086883 * Marital_StatusDivorced
500383    +          +    -0.34226997176291 * Marital_StatusMarried
500384    +          +    -1.01568676685754 * Marital_StatusSingle
500385    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
500386    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
500387    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
500388    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
500389    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
500390    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
500391    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
500392    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
500393    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
500394    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
500395    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500396    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
500397    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
500398    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
500399    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
500400    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
500401    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
500402    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
500403    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
500404    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
500405    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
500406    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
500407    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
500408    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
500409    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
500410    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
500411    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
500412    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
500413    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
500414    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
500415    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
500416    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
500417    +END;
MPRINT(EM_DIAGRAM):   END;
500418    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500419    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
500420    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
500421    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
500422    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
500423    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
500424    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
500425    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
500426    +END;
MPRINT(EM_DIAGRAM):   END;
500427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500428    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
500429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500430    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500431    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
500432    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
500433    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
500434    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
500435    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
500436    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
500437    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
500438    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
500439    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
500440    +          +    -0.87259051567474 * S_NumDealsPurchases
500441    +          +    -0.36454149529139 * S_NumDistPurchases
500442    +          +     0.12447759925061 * S_NumStorePurchases
500443    +          +    -1.08133487947367 * S_NumWebPurchases
500444    +          +    -0.49882157745454 * S_NumWebVisitsMonth
500445    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
500446    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
500447    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
500448    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
500449    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
500450    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
500451    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
500452    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
500453    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
500454    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
500455    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
500456    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
500457    +          +     2.23121497416403 * S_NumDealsPurchases
500458    +          +    -0.48674842191071 * S_NumDistPurchases
500459    +          +     1.77510728607544 * S_NumStorePurchases
500460    +          +     0.14647433155436 * S_NumWebPurchases
500461    +          +    -0.95892686924419 * S_NumWebVisitsMonth
500462    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
500463    +        S_RMntFrq  +     2.46497777428475 * S_Recency
500464    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
500465    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
500466    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
500467    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
500468    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
500469    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
500470    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
500471    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
500472    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
500473    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
500474    +          +     0.14338855349611 * S_NumDealsPurchases
500475    +          +    -2.21071010829235 * S_NumDistPurchases
500476    +          +    -0.21795889348002 * S_NumStorePurchases
500477    +          +     1.98825087883535 * S_NumWebPurchases
500478    +          +     1.02482442531149 * S_NumWebVisitsMonth
500479    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
500480    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
500481    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
500482    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
500483    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
500484    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
500485    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
500486    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
500487    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
500488    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
500489    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
500490    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
500491    +          +     0.30041205661012 * S_NumDealsPurchases
500492    +          +    -0.63499849986918 * S_NumDistPurchases
500493    +          +    -0.34155713433714 * S_NumStorePurchases
500494    +          +    -1.14183354933936 * S_NumWebPurchases
500495    +          +    -0.42681980262973 * S_NumWebVisitsMonth
500496    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
500497    +        S_RMntFrq  +     1.25852246467612 * S_Recency
500498    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
500499    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
500500    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
500501    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
500502    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
500503    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
500504    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
500505    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
500506    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
500507    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
500508    +          +    -0.21237915559831 * S_NumDealsPurchases
500509    +          +     0.48256923764182 * S_NumDistPurchases
500510    +          +    -0.45553093140641 * S_NumStorePurchases
500511    +          +      0.5593655963659 * S_NumWebPurchases
500512    +          +     0.27943768691188 * S_NumWebVisitsMonth
500513    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
500514    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
500515    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
500516    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
500517    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
500518    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
500519    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
500520    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
500521    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
500522    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
500523    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
500524    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
500525    +          +     2.38967021388062 * S_NumDealsPurchases
500526    +          +    -0.97722398866481 * S_NumDistPurchases
500527    +          +     1.57612333191312 * S_NumStorePurchases
500528    +          +    -0.75968679115983 * S_NumWebPurchases
500529    +          +    -0.64207187757251 * S_NumWebVisitsMonth
500530    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
500531    +        S_RMntFrq  +     1.71313869798331 * S_Recency
500532    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
500533    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
500534    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
500535    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
500536    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
500537    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
500538    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
500539    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
500540    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
500541    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
500542    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
500543    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
500544    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
500545    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
500546    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
500547    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
500548    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
500549    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
500550    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
500551    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
500552    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
500553    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
500554    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
500555    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
500556    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
500557    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
500558    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
500559    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
500560    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
500561    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
500562    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
500563    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
500564    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
500565    +        EducationGraduation  +      0.1073450284316 * EducationMaster
500566    +          +     0.96470902298142 * Marital_StatusDivorced
500567    +          +     0.94805959268314 * Marital_StatusMarried
500568    +          +     -0.6523948769616 * Marital_StatusSingle
500569    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
500570    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
500571    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
500572    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
500573    +          +      0.3918249505531 * Marital_StatusDivorced
500574    +          +    -0.00968091979586 * Marital_StatusMarried
500575    +          +     0.84615379885071 * Marital_StatusSingle
500576    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
500577    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
500578    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
500579    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
500580    +          +     1.14335160313191 * Marital_StatusDivorced
500581    +          +     0.50580517192175 * Marital_StatusMarried
500582    +          +     0.17264295020921 * Marital_StatusSingle
500583    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
500584    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
500585    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
500586    +        EducationGraduation  +     1.95818378342783 * EducationMaster
500587    +          +    -0.11238504444225 * Marital_StatusDivorced
500588    +          +    -0.81348274043749 * Marital_StatusMarried
500589    +          +     0.46075415610001 * Marital_StatusSingle
500590    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
500591    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
500592    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
500593    +        EducationGraduation  +     0.08396135672504 * EducationMaster
500594    +          +    -0.46342068701431 * Marital_StatusDivorced
500595    +          +    -0.41667845270204 * Marital_StatusMarried
500596    +          +    -0.47166707496281 * Marital_StatusSingle
500597    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
500598    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
500599    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
500600    +        EducationGraduation  +     0.36656103863186 * EducationMaster
500601    +          +    -0.45376613787812 * Marital_StatusDivorced
500602    +          +     0.01337046049801 * Marital_StatusMarried
500603    +          +    -0.92811489484121 * Marital_StatusSingle
500604    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
500605    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
500606    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
500607    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
500608    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
500609    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
500610    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
500611    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
500612    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
500613    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
500614    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500615    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
500616    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
500617    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
500618    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
500619    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
500620    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
500621    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
500622    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
500623    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
500624    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
500625    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
500626    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
500627    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
500628    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
500629    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
500630    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
500631    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
500632    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
500633    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
500634    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
500635    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
500636    +END;
MPRINT(EM_DIAGRAM):   END;
500637    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500638    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
500639    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
500640    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
500641    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
500642    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
500643    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
500644    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
500645    +END;
MPRINT(EM_DIAGRAM):   END;
500646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500647    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
500648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500649    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500650    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
500651    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
500652    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
500653    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
500654    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
500655    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
500656    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
500657    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
500658    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
500659    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
500660    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
500661    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
500662    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
500663    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
500664    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
500665    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
500666    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
500667    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
500668    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
500669    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
500670    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
500671    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
500672    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
500673    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
500674    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
500675    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
500676    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
500677    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
500678    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
500679    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
500680    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
500681    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
500682    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
500683    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
500684    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
500685    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
500686    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
500687    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
500688    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
500689    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
500690    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
500691    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
500692    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
500693    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
500694    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
500695    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
500696    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
500697    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
500698    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
500699    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
500700    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
500701    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
500702    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
500703    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
500704    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
500705    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
500706    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
500707    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500708    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
500709    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
500710    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
500711    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
500712    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
500713    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
500714    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
500715    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
500716    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
500717    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
500718    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
500719    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
500720    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
500721    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
500722    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
500723    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
500724    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
500725    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
500726    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
500727    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
500728    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
500729    +END;
MPRINT(EM_DIAGRAM):   END;
500730    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500731    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
500732    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
500733    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
500734    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
500735    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
500736    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
500737    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
500738    +END;
MPRINT(EM_DIAGRAM):   END;
500739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500740    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
500741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500742    +
500743    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
500744    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
500745    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
500746    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
500747    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
500748    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500749    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
500750    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
500751    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
500752    +end;
MPRINT(EM_DIAGRAM):   end;
500753    +else do;
MPRINT(EM_DIAGRAM):   else do;
500754    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
500755    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
500756    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
500757    +   end;
MPRINT(EM_DIAGRAM):   end;
500758    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
500759    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
500760    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
500761    +   end;
MPRINT(EM_DIAGRAM):   end;
500762    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500763    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
500764    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
500765    +   end;
MPRINT(EM_DIAGRAM):   end;
500766    +end;
MPRINT(EM_DIAGRAM):   end;
500767    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500768    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
500769    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
500770    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
500771    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
500772    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
500773    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
500774    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
500775    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500776    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
500777    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
500778    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
500779    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
500780    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
500781    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
500782    +END;
MPRINT(EM_DIAGRAM):   END;
500783    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500784    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
500785    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
500786    +END;
MPRINT(EM_DIAGRAM):   END;
500787    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
500788    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
500789    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
500790    +END;
MPRINT(EM_DIAGRAM):   END;
500791    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
500792    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
500793    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
500794    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
500795    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
500796    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
500797    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
500798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500799    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
500800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500801    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
500802    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
500803    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
500804    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
500805    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
500806    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
500807    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
500808    +END;
MPRINT(EM_DIAGRAM):   END;
500809    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
500810    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
500811    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
500812    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
500813    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
500814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500815    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
500816    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500817    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
500818    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
500819    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
500820    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
500821    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500822    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
500823    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500824    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
500825    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
500826    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
500827    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500828    +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
500829    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500830    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500831    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
500832    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
500833    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
500834    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500835    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500836    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
500837    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500838    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
500839    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
500840    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
500841    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
500842    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
500843    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
500844    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
500845    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
500846    +LENGTH _WARN_ $4
500847    +      F_DepVar  $ 12
500848    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
500849    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
500850    +
500851    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
500852    +
500853    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
500854    +
500855    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
500856    +
500857    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
500858    +
500859    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
500860    +
500861    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
500862    +
500863    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
500864    +
500865    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
500866    +
500867    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
500868    +
500869    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
500870    +
500871    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
500872    +
500873    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
500874    +
500875    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
500876    +
500877    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
500878    +
500879    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
500880    +
500881    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
500882    +
500883    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
500884    +
500885    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
500886    +
500887    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
500888    +
500889    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
500890    +
500891    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
500892    +
500893    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
500894    +
500895    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
500896    +
500897    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
500898    +
500899    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
500900    +
500901    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
500902    +
500903    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
500904    +
500905    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
500906    +
500907    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
500908    +
500909    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
500910    +
500911    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
500912    +
500913    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
500914    +
500915    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
500916    +
500917    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
500918    +
500919    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
500920    +
500921    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
500922    +
500923    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
500924    +
500925    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
500926    +
500927    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
500928    +
500929    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
500930    +
500931    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
500932    +
500933    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
500934    +
500935    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
500936    +
500937    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
500938    +
500939    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
500940    +
500941    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
500942    +
500943    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
500944    +
500945    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
500946    +
500947    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
500948    +
500949    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
500950    +
500951    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
500952    +
500953    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
500954    +
500955    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
500956    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
500957    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
500958    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
500959    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
500960    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500961    +end;
MPRINT(EM_DIAGRAM):   end;
500962    +else do;
MPRINT(EM_DIAGRAM):   else do;
500963    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
500964    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
500965    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500966    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
500967    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
500968    +   end;
MPRINT(EM_DIAGRAM):   end;
500969    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
500970    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
500971    +   end;
MPRINT(EM_DIAGRAM):   end;
500972    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500973    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
500974    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
500975    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500976    +   end;
MPRINT(EM_DIAGRAM):   end;
500977    +end;
MPRINT(EM_DIAGRAM):   end;
500978    +
500979    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
500980    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
500981    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
500982    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
500983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
500984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500985    +end;
MPRINT(EM_DIAGRAM):   end;
500986    +else do;
MPRINT(EM_DIAGRAM):   else do;
500987    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
500988    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
500989    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500990    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
500991    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
500992    +   end;
MPRINT(EM_DIAGRAM):   end;
500993    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
500994    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
500995    +   end;
MPRINT(EM_DIAGRAM):   end;
500996    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500997    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
500998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
500999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501000    +   end;
MPRINT(EM_DIAGRAM):   end;
501001    +end;
MPRINT(EM_DIAGRAM):   end;
501002    +
501003    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
501004    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
501005    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
501006    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501009    +end;
MPRINT(EM_DIAGRAM):   end;
501010    +else do;
MPRINT(EM_DIAGRAM):   else do;
501011    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501012    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
501013    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501014    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501015    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
501016    +   end;
MPRINT(EM_DIAGRAM):   end;
501017    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501018    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
501019    +   end;
MPRINT(EM_DIAGRAM):   end;
501020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501021    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501024    +   end;
MPRINT(EM_DIAGRAM):   end;
501025    +end;
MPRINT(EM_DIAGRAM):   end;
501026    +
501027    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
501028    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
501029    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
501030    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501031    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501032    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501033    +end;
MPRINT(EM_DIAGRAM):   end;
501034    +else do;
MPRINT(EM_DIAGRAM):   else do;
501035    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501036    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
501037    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501038    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501039    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
501040    +   end;
MPRINT(EM_DIAGRAM):   end;
501041    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501042    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
501043    +   end;
MPRINT(EM_DIAGRAM):   end;
501044    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501045    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501046    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501047    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501048    +   end;
MPRINT(EM_DIAGRAM):   end;
501049    +end;
MPRINT(EM_DIAGRAM):   end;
501050    +
501051    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
501052    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
501053    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
501054    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501055    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501057    +end;
MPRINT(EM_DIAGRAM):   end;
501058    +else do;
MPRINT(EM_DIAGRAM):   else do;
501059    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501060    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
501061    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501062    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501063    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
501064    +   end;
MPRINT(EM_DIAGRAM):   end;
501065    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501066    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
501067    +   end;
MPRINT(EM_DIAGRAM):   end;
501068    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501069    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501070    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501071    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501072    +   end;
MPRINT(EM_DIAGRAM):   end;
501073    +end;
MPRINT(EM_DIAGRAM):   end;
501074    +
501075    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
501076    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
501077    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
501078    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501079    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501080    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501081    +end;
MPRINT(EM_DIAGRAM):   end;
501082    +else do;
MPRINT(EM_DIAGRAM):   else do;
501083    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501084    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
501085    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501086    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501087    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
501088    +   end;
MPRINT(EM_DIAGRAM):   end;
501089    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501090    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
501091    +   end;
MPRINT(EM_DIAGRAM):   end;
501092    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501093    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501094    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501095    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501096    +   end;
MPRINT(EM_DIAGRAM):   end;
501097    +end;
MPRINT(EM_DIAGRAM):   end;
501098    +
501099    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
501100    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
501101    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
501102    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501103    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501104    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501105    +end;
MPRINT(EM_DIAGRAM):   end;
501106    +else do;
MPRINT(EM_DIAGRAM):   else do;
501107    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501108    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
501109    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501110    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
501111    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
501112    +   end;
MPRINT(EM_DIAGRAM):   end;
501113    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
501114    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
501115    +   end;
MPRINT(EM_DIAGRAM):   end;
501116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501117    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501118    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501119    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501120    +   end;
MPRINT(EM_DIAGRAM):   end;
501121    +end;
MPRINT(EM_DIAGRAM):   end;
501122    +
501123    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
501124    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
501125    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
501126    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
501127    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
501128    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
501129    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
501130    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
501131    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
501132    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
501133    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
501134    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
501135    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501136    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501137    +end;
MPRINT(EM_DIAGRAM):   end;
501138    +else do;
MPRINT(EM_DIAGRAM):   else do;
501139    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
501140    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
501141    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501142    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
501143    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
501144    +   end;
MPRINT(EM_DIAGRAM):   end;
501145    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
501146    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
501147    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
501148    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
501149    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
501150    +   end;
MPRINT(EM_DIAGRAM):   end;
501151    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
501152    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
501153    +   end;
MPRINT(EM_DIAGRAM):   end;
501154    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
501155    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
501156    +   end;
MPRINT(EM_DIAGRAM):   end;
501157    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
501158    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
501159    +   end;
MPRINT(EM_DIAGRAM):   end;
501160    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501161    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
501162    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
501163    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
501164    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
501165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501167    +   end;
MPRINT(EM_DIAGRAM):   end;
501168    +end;
MPRINT(EM_DIAGRAM):   end;
501169    +
501170    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
501171    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
501172    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
501173    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
501174    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
501175    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
501176    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
501177    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
501178    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
501179    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
501180    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
501181    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
501182    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
501183    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501184    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501185    +end;
MPRINT(EM_DIAGRAM):   end;
501186    +else do;
MPRINT(EM_DIAGRAM):   else do;
501187    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
501188    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
501189    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501190    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
501191    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
501192    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
501193    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
501194    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
501195    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501196    +         end;
MPRINT(EM_DIAGRAM):   end;
501197    +         else do;
MPRINT(EM_DIAGRAM):   else do;
501198    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
501199    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
501200    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501201    +            end;
MPRINT(EM_DIAGRAM):   end;
501202    +         end;
MPRINT(EM_DIAGRAM):   end;
501203    +      end;
MPRINT(EM_DIAGRAM):   end;
501204    +      else do;
MPRINT(EM_DIAGRAM):   else do;
501205    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
501206    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
501207    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501208    +         end;
MPRINT(EM_DIAGRAM):   end;
501209    +      end;
MPRINT(EM_DIAGRAM):   end;
501210    +   end;
MPRINT(EM_DIAGRAM):   end;
501211    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501212    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
501213    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
501214    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501215    +      end;
MPRINT(EM_DIAGRAM):   end;
501216    +      else do;
MPRINT(EM_DIAGRAM):   else do;
501217    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
501218    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
501219    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
501220    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
501221    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
501222    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
501223    +         end;
MPRINT(EM_DIAGRAM):   end;
501224    +      end;
MPRINT(EM_DIAGRAM):   end;
501225    +   end;
MPRINT(EM_DIAGRAM):   end;
501226    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
501227    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
501228    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
501229    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
501230    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
501231    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501232    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501233    +   end;
MPRINT(EM_DIAGRAM):   end;
501234    +end;
MPRINT(EM_DIAGRAM):   end;
501235    +
501236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501237    +*** Checking missing input Interval
501238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
501239    +
501240    +IF NMISS(
501241    +   AcceptedCmpTotal ,
501242    +   Age ,
501243    +   Frq ,
501244    +   Income ,
501245    +   Kidhome ,
501246    +   Mnt ,
501247    +   MntFishProducts ,
501248    +   MntFruits ,
501249    +   MntGoldProds ,
501250    +   MntMeatProducts ,
501251    +   MntSweetProducts ,
501252    +   MntWines ,
501253    +   MonthsAsCustomer ,
501254    +   NumCatalogPurchases ,
501255    +   NumDealsPurchases ,
501256    +   NumDistPurchases ,
501257    +   NumStorePurchases ,
501258    +   NumWebPurchases ,
501259    +   NumWebVisitsMonth ,
501260    +   RFMstat ,
501261    +   RMntFrq ,
501262    +   Recency ,
501263    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
501264    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
501265    +
501266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501267    +END;
MPRINT(EM_DIAGRAM):   END;
501268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501269    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
501270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501271    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501272    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
501273    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
501274    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
501275    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
501276    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
501277    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
501278    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
501279    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
501280    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
501281    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
501282    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
501283    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
501284    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
501285    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
501286    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
501287    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
501288    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
501289    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
501290    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
501291    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
501292    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
501293    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
501294    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
501295    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
501296    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
501297    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
501298    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
501299    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
501300    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
501301    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
501302    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
501303    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
501304    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
501305    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
501306    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
501307    +END;
MPRINT(EM_DIAGRAM):   END;
501308    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501309    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
501310    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
501311    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
501312    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
501313    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
501314    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
501315    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
501316    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
501317    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
501318    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
501319    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
501320    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
501321    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
501322    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
501323    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
501324    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
501325    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
501326    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
501327    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
501328    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
501329    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
501330    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
501331    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
501332    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
501333    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
501334    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
501335    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
501336    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
501337    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
501338    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
501339    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
501340    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
501341    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
501342    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
501343    +   ELSE S_NumCatalogPurchases
501344    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
501345    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
501346    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
501347    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
501348    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
501349    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
501350    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
501351    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
501352    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
501353    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
501354    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
501355    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
501356    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
501357    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
501358    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
501359    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
501360    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
501361    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
501362    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
501363    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
501364    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
501365    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
501366    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
501367    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
501368    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
501369    +END;
MPRINT(EM_DIAGRAM):   END;
501370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501371    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
501372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501374    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
501375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501377    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
501378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501379    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501380    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
501381    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
501382    +        S_Income  +    -0.48272554811946 * S_Kidhome
501383    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
501384    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
501385    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
501386    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
501387    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
501388    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
501389    +          +    -0.21965892172232 * S_NumDealsPurchases
501390    +          +     0.18147972034868 * S_NumDistPurchases
501391    +          +     0.36657814181657 * S_NumStorePurchases
501392    +          +      0.2558783559717 * S_NumWebPurchases
501393    +          +    -0.12008925196796 * S_NumWebVisitsMonth
501394    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
501395    +        S_RMntFrq  +     0.37914209292496 * S_Recency
501396    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
501397    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
501398    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
501399    +        S_Income  +     0.24387947620062 * S_Kidhome
501400    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
501401    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
501402    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
501403    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
501404    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
501405    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
501406    +          +    -0.05257082874614 * S_NumDealsPurchases
501407    +          +     0.41456571712035 * S_NumDistPurchases
501408    +          +     0.23489798619427 * S_NumStorePurchases
501409    +          +     0.27816946712153 * S_NumWebPurchases
501410    +          +    -0.60321927125997 * S_NumWebVisitsMonth
501411    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
501412    +        S_RMntFrq  +     0.37992942536792 * S_Recency
501413    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
501414    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
501415    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
501416    +        S_Income  +     0.20262487803684 * S_Kidhome
501417    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
501418    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
501419    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
501420    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
501421    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
501422    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
501423    +          +      0.0913099268589 * S_NumDealsPurchases
501424    +          +    -0.05574305289625 * S_NumDistPurchases
501425    +          +    -0.09928560475828 * S_NumStorePurchases
501426    +          +     0.00041482984053 * S_NumWebPurchases
501427    +          +    -0.03314322750163 * S_NumWebVisitsMonth
501428    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
501429    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
501430    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
501431    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
501432    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
501433    +        S_Income  +     0.26225843602768 * S_Kidhome
501434    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
501435    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
501436    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
501437    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
501438    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
501439    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
501440    +          +     0.83559002761395 * S_NumDealsPurchases
501441    +          +     0.30813434559451 * S_NumDistPurchases
501442    +          +    -0.61391039002598 * S_NumStorePurchases
501443    +          +    -1.03190502679863 * S_NumWebPurchases
501444    +          +     0.13374464245621 * S_NumWebVisitsMonth
501445    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
501446    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
501447    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
501448    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
501449    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
501450    +        S_Income  +      -0.692179901076 * S_Kidhome
501451    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
501452    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
501453    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
501454    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
501455    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
501456    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
501457    +          +     0.65604427948051 * S_NumDealsPurchases
501458    +          +     0.01430165674945 * S_NumDistPurchases
501459    +          +    -0.76865963932685 * S_NumStorePurchases
501460    +          +    -0.72521754496401 * S_NumWebPurchases
501461    +          +     1.59453686210397 * S_NumWebVisitsMonth
501462    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
501463    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
501464    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
501465    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
501466    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
501467    +        S_Income  +    -0.23602869688727 * S_Kidhome
501468    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
501469    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
501470    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
501471    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
501472    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
501473    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
501474    +          +    -0.30337362777997 * S_NumDealsPurchases
501475    +          +     0.11551482249746 * S_NumDistPurchases
501476    +          +     0.19719845223838 * S_NumStorePurchases
501477    +          +     0.16011319337206 * S_NumWebPurchases
501478    +          +    -0.19222801416081 * S_NumWebVisitsMonth
501479    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
501480    +        S_RMntFrq  +     0.01056840325776 * S_Recency
501481    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
501482    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
501483    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
501484    +        S_Income  +    -0.47270881977809 * S_Kidhome
501485    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
501486    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
501487    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
501488    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
501489    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
501490    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
501491    +          +    -0.16806813676368 * S_NumDealsPurchases
501492    +          +      0.1680540538046 * S_NumDistPurchases
501493    +          +     0.09845423109173 * S_NumStorePurchases
501494    +          +     0.22281606853536 * S_NumWebPurchases
501495    +          +       0.650769024744 * S_NumWebVisitsMonth
501496    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
501497    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
501498    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
501499    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
501500    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
501501    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
501502    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
501503    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
501504    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
501505    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
501506    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
501507    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
501508    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
501509    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
501510    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
501511    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
501512    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
501513    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
501514    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
501515    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
501516    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
501517    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
501518    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
501519    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
501520    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
501521    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
501522    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
501523    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
501524    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
501525    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
501526    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
501527    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
501528    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
501529    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
501530    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
501531    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
501532    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
501533    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
501534    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
501535    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
501536    +        EducationGraduation  +     0.02445863067232 * EducationMaster
501537    +          +     0.42984001630756 * Marital_StatusDivorced
501538    +          +     -0.4660144877239 * Marital_StatusMarried
501539    +          +     0.44888148801285 * Marital_StatusSingle
501540    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
501541    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
501542    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
501543    +        EducationGraduation  +     0.28773168978233 * EducationMaster
501544    +          +     0.10758942571981 * Marital_StatusDivorced
501545    +          +     0.51795960036213 * Marital_StatusMarried
501546    +          +    -0.40242992087783 * Marital_StatusSingle
501547    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
501548    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
501549    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
501550    +        EducationGraduation  +      0.1986661885803 * EducationMaster
501551    +          +    -0.05264595890678 * Marital_StatusDivorced
501552    +          +     0.07468414180829 * Marital_StatusMarried
501553    +          +     0.20145352309024 * Marital_StatusSingle
501554    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
501555    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
501556    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
501557    +        EducationGraduation  +     0.28768591072195 * EducationMaster
501558    +          +    -0.41440932029593 * Marital_StatusDivorced
501559    +          +     0.65630698363184 * Marital_StatusMarried
501560    +          +    -0.37277384861759 * Marital_StatusSingle
501561    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
501562    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
501563    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
501564    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
501565    +          +     0.86284304352233 * Marital_StatusDivorced
501566    +          +    -0.85716490342524 * Marital_StatusMarried
501567    +          +     0.74516572826411 * Marital_StatusSingle
501568    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
501569    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
501570    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
501571    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
501572    +          +    -0.11928801837478 * Marital_StatusDivorced
501573    +          +    -0.15909233409421 * Marital_StatusMarried
501574    +          +     0.34325131781601 * Marital_StatusSingle
501575    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
501576    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
501577    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
501578    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
501579    +          +     0.15109481730803 * Marital_StatusDivorced
501580    +          +    -1.01578758379559 * Marital_StatusMarried
501581    +          +     0.70421923836193 * Marital_StatusSingle
501582    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
501583    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
501584    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
501585    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
501586    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
501587    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
501588    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
501589    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
501590    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
501591    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
501592    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
501593    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
501594    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
501595    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
501596    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
501597    +END;
MPRINT(EM_DIAGRAM):   END;
501598    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501599    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
501600    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
501601    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
501602    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
501603    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
501604    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
501605    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
501606    +END;
MPRINT(EM_DIAGRAM):   END;
501607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501608    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
501609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501610    +
501611    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
501612    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
501613    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501614    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
501615    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
501616    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501617    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
501618    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501619    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501620    +end;
MPRINT(EM_DIAGRAM):   end;
501621    +else do;
MPRINT(EM_DIAGRAM):   else do;
501622    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
501623    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
501624    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
501625    +   end;
MPRINT(EM_DIAGRAM):   end;
501626    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
501627    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
501628    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
501629    +   end;
MPRINT(EM_DIAGRAM):   end;
501630    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501631    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501632    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501633    +   end;
MPRINT(EM_DIAGRAM):   end;
501634    +end;
MPRINT(EM_DIAGRAM):   end;
501635    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501636    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
501637    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
501638    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
501639    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
501640    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
501641    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
501642    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
501643    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
501644    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
501645    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
501646    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
501647    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
501648    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
501649    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
501650    +END;
MPRINT(EM_DIAGRAM):   END;
501651    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501652    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
501653    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
501654    +END;
MPRINT(EM_DIAGRAM):   END;
501655    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
501656    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
501657    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
501658    +END;
MPRINT(EM_DIAGRAM):   END;
501659    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
501660    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
501661    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
501662    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
501663    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
501664    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
501665    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
501666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501667    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
501668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501669    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
501670    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
501671    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
501672    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
501673    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
501674    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
501675    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
501676    +END;
MPRINT(EM_DIAGRAM):   END;
501677    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501678    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
501679    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501680    +drop
501681    +H11
501682    +H12
501683    +H13
501684    +H14
501685    +H15
501686    +H16
501687    +H17
501688    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
501689    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
501690    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
501691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501692    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
501693    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501694    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
501695    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
501696    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
501697    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
501698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501699    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
501700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501701    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
501702    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
501703    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
501704    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501705    +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
501706    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501708    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
501709    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
501710    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
501711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
501712    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
501713    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
501714    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
501715    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
501716    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
501717    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
501718    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
501719    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
501720    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
501721    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
501722    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
501723    +LENGTH _WARN_ $4
501724    +      F_DepVar  $ 12
501725    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
501726    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
501727    +
501728    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
501729    +
501730    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
501731    +
501732    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
501733    +
501734    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
501735    +
501736    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
501737    +
501738    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
501739    +
501740    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
501741    +
501742    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
501743    +
501744    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
501745    +
501746    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
501747    +
501748    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
501749    +
501750    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
501751    +
501752    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
501753    +
501754    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
501755    +
501756    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
501757    +
501758    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
501759    +
501760    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
501761    +
501762    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
501763    +
501764    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
501765    +
501766    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
501767    +
501768    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
501769    +
501770    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
501771    +
501772    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
501773    +
501774    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
501775    +
501776    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
501777    +
501778    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
501779    +
501780    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
501781    +
501782    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
501783    +
501784    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
501785    +
501786    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
501787    +
501788    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
501789    +
501790    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
501791    +
501792    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
501793    +
501794    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
501795    +
501796    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
501797    +
501798    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
501799    +
501800    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
501801    +
501802    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
501803    +
501804    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
501805    +
501806    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
501807    +
501808    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
501809    +
501810    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
501811    +
501812    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
501813    +
501814    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
501815    +
501816    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501817    +
501818    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
501819    +
501820    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
501821    +
501822    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
501823    +
501824    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
501825    +
501826    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
501827    +
501828    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
501829    +
501830    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
501831    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
501832    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
501833    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
501834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501835    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501836    +end;
MPRINT(EM_DIAGRAM):   end;
501837    +else do;
MPRINT(EM_DIAGRAM):   else do;
501838    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501839    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
501840    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501841    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501842    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
501843    +   end;
MPRINT(EM_DIAGRAM):   end;
501844    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501845    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
501846    +   end;
MPRINT(EM_DIAGRAM):   end;
501847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501848    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
501849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501851    +   end;
MPRINT(EM_DIAGRAM):   end;
501852    +end;
MPRINT(EM_DIAGRAM):   end;
501853    +
501854    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
501855    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
501856    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
501857    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
501858    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501860    +end;
MPRINT(EM_DIAGRAM):   end;
501861    +else do;
MPRINT(EM_DIAGRAM):   else do;
501862    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501863    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
501864    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501865    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501866    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
501867    +   end;
MPRINT(EM_DIAGRAM):   end;
501868    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501869    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
501870    +   end;
MPRINT(EM_DIAGRAM):   end;
501871    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501872    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
501873    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501874    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501875    +   end;
MPRINT(EM_DIAGRAM):   end;
501876    +end;
MPRINT(EM_DIAGRAM):   end;
501877    +
501878    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
501879    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
501880    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
501881    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501882    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501883    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501884    +end;
MPRINT(EM_DIAGRAM):   end;
501885    +else do;
MPRINT(EM_DIAGRAM):   else do;
501886    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501887    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
501888    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501889    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501890    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
501891    +   end;
MPRINT(EM_DIAGRAM):   end;
501892    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501893    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
501894    +   end;
MPRINT(EM_DIAGRAM):   end;
501895    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501896    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
501897    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501898    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501899    +   end;
MPRINT(EM_DIAGRAM):   end;
501900    +end;
MPRINT(EM_DIAGRAM):   end;
501901    +
501902    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
501903    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
501904    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
501905    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501906    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501907    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501908    +end;
MPRINT(EM_DIAGRAM):   end;
501909    +else do;
MPRINT(EM_DIAGRAM):   else do;
501910    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501911    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
501912    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501913    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501914    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
501915    +   end;
MPRINT(EM_DIAGRAM):   end;
501916    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501917    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
501918    +   end;
MPRINT(EM_DIAGRAM):   end;
501919    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501920    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
501921    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501922    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501923    +   end;
MPRINT(EM_DIAGRAM):   end;
501924    +end;
MPRINT(EM_DIAGRAM):   end;
501925    +
501926    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
501927    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
501928    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
501929    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501930    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501931    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501932    +end;
MPRINT(EM_DIAGRAM):   end;
501933    +else do;
MPRINT(EM_DIAGRAM):   else do;
501934    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501935    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
501936    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501937    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501938    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
501939    +   end;
MPRINT(EM_DIAGRAM):   end;
501940    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501941    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
501942    +   end;
MPRINT(EM_DIAGRAM):   end;
501943    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501944    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
501945    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501946    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501947    +   end;
MPRINT(EM_DIAGRAM):   end;
501948    +end;
MPRINT(EM_DIAGRAM):   end;
501949    +
501950    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
501951    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
501952    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
501953    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501956    +end;
MPRINT(EM_DIAGRAM):   end;
501957    +else do;
MPRINT(EM_DIAGRAM):   else do;
501958    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501959    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
501960    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501961    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
501962    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
501963    +   end;
MPRINT(EM_DIAGRAM):   end;
501964    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
501965    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
501966    +   end;
MPRINT(EM_DIAGRAM):   end;
501967    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501968    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
501969    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501970    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501971    +   end;
MPRINT(EM_DIAGRAM):   end;
501972    +end;
MPRINT(EM_DIAGRAM):   end;
501973    +
501974    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
501975    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
501976    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
501977    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501978    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
501979    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501980    +end;
MPRINT(EM_DIAGRAM):   end;
501981    +else do;
MPRINT(EM_DIAGRAM):   else do;
501982    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
501983    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
501984    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501985    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
501986    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
501987    +   end;
MPRINT(EM_DIAGRAM):   end;
501988    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
501989    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
501990    +   end;
MPRINT(EM_DIAGRAM):   end;
501991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501992    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
501993    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
501994    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
501995    +   end;
MPRINT(EM_DIAGRAM):   end;
501996    +end;
MPRINT(EM_DIAGRAM):   end;
501997    +
501998    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
501999    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
502000    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
502001    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
502002    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
502003    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
502004    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
502005    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
502006    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
502007    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
502008    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
502009    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
502010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502012    +end;
MPRINT(EM_DIAGRAM):   end;
502013    +else do;
MPRINT(EM_DIAGRAM):   else do;
502014    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
502015    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
502016    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502017    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
502018    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
502019    +   end;
MPRINT(EM_DIAGRAM):   end;
502020    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
502021    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
502022    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
502023    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
502024    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
502025    +   end;
MPRINT(EM_DIAGRAM):   end;
502026    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
502027    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
502028    +   end;
MPRINT(EM_DIAGRAM):   end;
502029    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
502030    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
502031    +   end;
MPRINT(EM_DIAGRAM):   end;
502032    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
502033    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
502034    +   end;
MPRINT(EM_DIAGRAM):   end;
502035    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502036    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
502037    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
502038    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
502039    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
502040    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502041    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502042    +   end;
MPRINT(EM_DIAGRAM):   end;
502043    +end;
MPRINT(EM_DIAGRAM):   end;
502044    +
502045    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
502046    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
502047    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
502048    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
502049    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
502050    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
502051    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
502052    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
502053    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
502054    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502055    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502056    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502057    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502058    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502059    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502060    +end;
MPRINT(EM_DIAGRAM):   end;
502061    +else do;
MPRINT(EM_DIAGRAM):   else do;
502062    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
502063    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
502064    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502065    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
502066    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
502067    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
502068    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
502069    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
502070    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502071    +         end;
MPRINT(EM_DIAGRAM):   end;
502072    +         else do;
MPRINT(EM_DIAGRAM):   else do;
502073    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
502074    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
502075    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502076    +            end;
MPRINT(EM_DIAGRAM):   end;
502077    +         end;
MPRINT(EM_DIAGRAM):   end;
502078    +      end;
MPRINT(EM_DIAGRAM):   end;
502079    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502080    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
502081    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
502082    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502083    +         end;
MPRINT(EM_DIAGRAM):   end;
502084    +      end;
MPRINT(EM_DIAGRAM):   end;
502085    +   end;
MPRINT(EM_DIAGRAM):   end;
502086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502087    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
502088    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
502089    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502090    +      end;
MPRINT(EM_DIAGRAM):   end;
502091    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502092    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
502093    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
502094    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
502095    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
502096    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
502097    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502098    +         end;
MPRINT(EM_DIAGRAM):   end;
502099    +      end;
MPRINT(EM_DIAGRAM):   end;
502100    +   end;
MPRINT(EM_DIAGRAM):   end;
502101    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
502102    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502103    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502104    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502105    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502108    +   end;
MPRINT(EM_DIAGRAM):   end;
502109    +end;
MPRINT(EM_DIAGRAM):   end;
502110    +
502111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502112    +*** Checking missing input Interval
502113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
502114    +
502115    +IF NMISS(
502116    +   AcceptedCmpTotal ,
502117    +   Age ,
502118    +   Frq ,
502119    +   Income ,
502120    +   Kidhome ,
502121    +   Mnt ,
502122    +   MntFishProducts ,
502123    +   MntFruits ,
502124    +   MntGoldProds ,
502125    +   MntMeatProducts ,
502126    +   MntSweetProducts ,
502127    +   MntWines ,
502128    +   MonthsAsCustomer ,
502129    +   NumCatalogPurchases ,
502130    +   NumDealsPurchases ,
502131    +   NumDistPurchases ,
502132    +   NumStorePurchases ,
502133    +   NumWebPurchases ,
502134    +   NumWebVisitsMonth ,
502135    +   RFMstat ,
502136    +   RMntFrq ,
502137    +   Recency ,
502138    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
502139    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
502140    +
502141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502142    +END;
MPRINT(EM_DIAGRAM):   END;
502143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502144    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
502145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502146    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502147    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
502148    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
502149    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
502150    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
502151    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
502152    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
502153    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
502154    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
502155    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
502156    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
502157    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
502158    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
502159    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
502160    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
502161    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
502162    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
502163    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
502164    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
502165    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
502166    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
502167    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
502168    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
502169    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
502170    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
502171    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
502172    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
502173    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
502174    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
502175    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
502176    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
502177    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
502178    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
502179    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
502180    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
502181    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
502182    +END;
MPRINT(EM_DIAGRAM):   END;
502183    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502184    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
502185    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
502186    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
502187    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
502188    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
502189    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
502190    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
502191    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
502192    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
502193    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
502194    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
502195    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
502196    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
502197    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
502198    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
502199    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
502200    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
502201    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
502202    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
502203    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
502204    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
502205    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
502206    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
502207    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
502208    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
502209    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
502210    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
502211    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
502212    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
502213    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
502214    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
502215    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
502216    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
502217    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
502218    +   ELSE S_NumCatalogPurchases
502219    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
502220    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
502221    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
502222    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
502223    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
502224    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
502225    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
502226    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
502227    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
502228    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
502229    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
502230    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
502231    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
502232    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
502233    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
502234    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
502235    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
502236    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
502237    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
502238    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
502239    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
502240    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
502241    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
502242    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
502243    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
502244    +END;
MPRINT(EM_DIAGRAM):   END;
502245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502246    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
502247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502249    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
502250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502252    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
502253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502254    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502255    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
502256    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
502257    +        S_Income  +    -0.07407502089271 * S_Kidhome
502258    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
502259    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
502260    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
502261    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
502262    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
502263    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
502264    +          +     0.85324794786604 * S_NumDealsPurchases
502265    +          +     0.23632583007911 * S_NumDistPurchases
502266    +          +    -0.63089078988761 * S_NumStorePurchases
502267    +          +    -0.92352748602374 * S_NumWebPurchases
502268    +          +     0.90081938176641 * S_NumWebVisitsMonth
502269    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
502270    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
502271    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
502272    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
502273    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
502274    +        S_Income  +    -0.46092998969912 * S_Kidhome
502275    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
502276    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
502277    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
502278    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
502279    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
502280    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
502281    +          +     0.19685325076814 * S_NumDealsPurchases
502282    +          +     -0.0145000015739 * S_NumDistPurchases
502283    +          +     -0.5790386407956 * S_NumStorePurchases
502284    +          +    -0.36258404984745 * S_NumWebPurchases
502285    +          +     0.85107574614775 * S_NumWebVisitsMonth
502286    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
502287    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
502288    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
502289    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
502290    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
502291    +        S_Income  +    -0.03273972934545 * S_Kidhome
502292    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
502293    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
502294    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
502295    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
502296    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
502297    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
502298    +          +    -0.17268337796364 * S_NumDealsPurchases
502299    +          +    -0.23588860225052 * S_NumDistPurchases
502300    +          +     0.41380073293559 * S_NumStorePurchases
502301    +          +    -0.28143763726207 * S_NumWebPurchases
502302    +          +    -0.30914618130297 * S_NumWebVisitsMonth
502303    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
502304    +        S_RMntFrq  +     0.81671444530655 * S_Recency
502305    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
502306    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
502307    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
502308    +        S_Income  +    -0.06518326597517 * S_Kidhome
502309    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
502310    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
502311    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
502312    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
502313    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
502314    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
502315    +          +    -0.46119515763011 * S_NumDealsPurchases
502316    +          +     0.16268822540635 * S_NumDistPurchases
502317    +          +     0.21653483412929 * S_NumStorePurchases
502318    +          +     0.46040401497854 * S_NumWebPurchases
502319    +          +     -0.7361096668674 * S_NumWebVisitsMonth
502320    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
502321    +        S_RMntFrq  +     0.80628261349293 * S_Recency
502322    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
502323    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
502324    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
502325    +        S_Income  +     0.55328239552566 * S_Kidhome
502326    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
502327    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
502328    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
502329    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
502330    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
502331    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
502332    +          +     0.05502131610199 * S_NumDealsPurchases
502333    +          +    -0.03756550292536 * S_NumDistPurchases
502334    +          +    -0.03538043876599 * S_NumStorePurchases
502335    +          +     -0.0907757250737 * S_NumWebPurchases
502336    +          +    -0.70112968521759 * S_NumWebVisitsMonth
502337    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
502338    +        S_RMntFrq  +     0.94295210651466 * S_Recency
502339    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
502340    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
502341    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
502342    +        S_Income  +    -0.52750514886673 * S_Kidhome
502343    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
502344    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
502345    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
502346    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
502347    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
502348    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
502349    +          +    -0.50827570715861 * S_NumDealsPurchases
502350    +          +    -0.47409547329081 * S_NumDistPurchases
502351    +          +     0.18399962481918 * S_NumStorePurchases
502352    +          +     0.02681212324713 * S_NumWebPurchases
502353    +          +    -0.20824959103725 * S_NumWebVisitsMonth
502354    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
502355    +        S_RMntFrq  +     0.04705531474734 * S_Recency
502356    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
502357    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
502358    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
502359    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
502360    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
502361    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
502362    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
502363    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
502364    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
502365    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
502366    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
502367    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
502368    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
502369    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
502370    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
502371    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
502372    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
502373    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
502374    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
502375    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
502376    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
502377    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
502378    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
502379    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
502380    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
502381    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
502382    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
502383    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
502384    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
502385    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
502386    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
502387    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
502388    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
502389    +        EducationGraduation  +     0.02690714866809 * EducationMaster
502390    +          +      0.1401475547652 * Marital_StatusDivorced
502391    +          +     0.09801106519846 * Marital_StatusMarried
502392    +          +    -0.26003432053167 * Marital_StatusSingle
502393    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
502394    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
502395    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
502396    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
502397    +          +     0.33965651292585 * Marital_StatusDivorced
502398    +          +    -0.51738607463653 * Marital_StatusMarried
502399    +          +     0.57209809625866 * Marital_StatusSingle
502400    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
502401    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
502402    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
502403    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
502404    +          +     -0.0712692029901 * Marital_StatusDivorced
502405    +          +      0.2989539150548 * Marital_StatusMarried
502406    +          +    -0.07088797938783 * Marital_StatusSingle
502407    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
502408    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
502409    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
502410    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
502411    +          +    -0.06075465978816 * Marital_StatusDivorced
502412    +          +     0.23328087967095 * Marital_StatusMarried
502413    +          +    -0.34401062494093 * Marital_StatusSingle
502414    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
502415    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
502416    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
502417    +        EducationGraduation  +     0.36213037498234 * EducationMaster
502418    +          +    -0.07312045395545 * Marital_StatusDivorced
502419    +          +     1.08247738273721 * Marital_StatusMarried
502420    +          +    -0.68676298741916 * Marital_StatusSingle
502421    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
502422    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
502423    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
502424    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
502425    +          +    -0.20451618892357 * Marital_StatusDivorced
502426    +          +    -0.41145969312049 * Marital_StatusMarried
502427    +          +     0.44568613045702 * Marital_StatusSingle
502428    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
502429    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
502430    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
502431    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
502432    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
502433    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
502434    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
502435    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
502436    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
502437    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
502438    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
502439    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
502440    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
502441    +END;
MPRINT(EM_DIAGRAM):   END;
502442    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502443    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
502444    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
502445    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
502446    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
502447    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
502448    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
502449    +END;
MPRINT(EM_DIAGRAM):   END;
502450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502451    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
502452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502453    +
502454    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
502455    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
502456    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
502457    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
502458    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
502459    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502460    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
502461    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
502462    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
502463    +end;
MPRINT(EM_DIAGRAM):   end;
502464    +else do;
MPRINT(EM_DIAGRAM):   else do;
502465    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
502466    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
502467    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
502468    +   end;
MPRINT(EM_DIAGRAM):   end;
502469    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
502470    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
502471    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
502472    +   end;
MPRINT(EM_DIAGRAM):   end;
502473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502474    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
502475    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
502476    +   end;
MPRINT(EM_DIAGRAM):   end;
502477    +end;
MPRINT(EM_DIAGRAM):   end;
502478    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
502479    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
502480    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
502481    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
502482    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
502483    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
502484    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
502485    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
502486    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
502487    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
502488    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
502489    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
502490    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
502491    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
502492    +END;
MPRINT(EM_DIAGRAM):   END;
502493    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
502494    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
502495    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
502496    +END;
MPRINT(EM_DIAGRAM):   END;
502497    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
502498    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
502499    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
502500    +END;
MPRINT(EM_DIAGRAM):   END;
502501    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
502502    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
502503    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
502504    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
502505    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
502506    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
502507    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
502508    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502509    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
502510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502511    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
502512    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
502513    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
502514    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
502515    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
502516    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
502517    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
502518    +END;
MPRINT(EM_DIAGRAM):   END;
502519    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
502520    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
502521    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
502522    +drop
502523    +H11
502524    +H12
502525    +H13
502526    +H14
502527    +H15
502528    +H16
502529    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
502530    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
502531    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
502532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502533    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
502534    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502535    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
502536    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
502537    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
502538    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
502539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502540    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
502541    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502542    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
502543    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
502544    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
502545    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502546    +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
502547    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502549    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
502550    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
502551    +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
502552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
502553    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
502554    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
502555    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
502556    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
502557    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
502558    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
502559    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
502560    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
502561    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
502562    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
502563    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
502564    +LENGTH _WARN_ $4
502565    +      F_DepVar  $ 12
502566    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
502567    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
502568    +
502569    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
502570    +
502571    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
502572    +
502573    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
502574    +
502575    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
502576    +
502577    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
502578    +
502579    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
502580    +
502581    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
502582    +
502583    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
502584    +
502585    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
502586    +
502587    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
502588    +
502589    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
502590    +
502591    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
502592    +
502593    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
502594    +
502595    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
502596    +
502597    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
502598    +
502599    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
502600    +
502601    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
502602    +
502603    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
502604    +
502605    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
502606    +
502607    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
502608    +
502609    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
502610    +
502611    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
502612    +
502613    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
502614    +
502615    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
502616    +
502617    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
502618    +
502619    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
502620    +
502621    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
502622    +
502623    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
502624    +
502625    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
502626    +
502627    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
502628    +
502629    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
502630    +
502631    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
502632    +
502633    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
502634    +
502635    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
502636    +
502637    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
502638    +
502639    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
502640    +
502641    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
502642    +
502643    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
502644    +
502645    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
502646    +
502647    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
502648    +
502649    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
502650    +
502651    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
502652    +
502653    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
502654    +
502655    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
502656    +
502657    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
502658    +
502659    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
502660    +
502661    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
502662    +
502663    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
502664    +
502665    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
502666    +
502667    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
502668    +
502669    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
502670    +
502671    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
502672    +
502673    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
502674    +
502675    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
502676    +
502677    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
502678    +
502679    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
502680    +
502681    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
502682    +
502683    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
502684    +
502685    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
502686    +
502687    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
502688    +
502689    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
502690    +
502691    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
502692    +
502693    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
502694    +
502695    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
502696    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
502697    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
502698    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
502699    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502700    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502701    +end;
MPRINT(EM_DIAGRAM):   end;
502702    +else do;
MPRINT(EM_DIAGRAM):   else do;
502703    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502704    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
502705    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502706    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502707    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
502708    +   end;
MPRINT(EM_DIAGRAM):   end;
502709    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502710    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
502711    +   end;
MPRINT(EM_DIAGRAM):   end;
502712    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502713    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
502714    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502715    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502716    +   end;
MPRINT(EM_DIAGRAM):   end;
502717    +end;
MPRINT(EM_DIAGRAM):   end;
502718    +
502719    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
502720    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
502721    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
502722    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
502723    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502724    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502725    +end;
MPRINT(EM_DIAGRAM):   end;
502726    +else do;
MPRINT(EM_DIAGRAM):   else do;
502727    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502728    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
502729    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502730    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502731    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
502732    +   end;
MPRINT(EM_DIAGRAM):   end;
502733    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502734    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
502735    +   end;
MPRINT(EM_DIAGRAM):   end;
502736    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502737    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
502738    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502739    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502740    +   end;
MPRINT(EM_DIAGRAM):   end;
502741    +end;
MPRINT(EM_DIAGRAM):   end;
502742    +
502743    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
502744    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
502745    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
502746    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
502747    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502748    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502749    +end;
MPRINT(EM_DIAGRAM):   end;
502750    +else do;
MPRINT(EM_DIAGRAM):   else do;
502751    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502752    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
502753    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502754    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502755    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
502756    +   end;
MPRINT(EM_DIAGRAM):   end;
502757    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502758    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
502759    +   end;
MPRINT(EM_DIAGRAM):   end;
502760    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502761    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
502762    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502763    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502764    +   end;
MPRINT(EM_DIAGRAM):   end;
502765    +end;
MPRINT(EM_DIAGRAM):   end;
502766    +
502767    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
502768    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
502769    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
502770    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
502771    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502772    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502773    +end;
MPRINT(EM_DIAGRAM):   end;
502774    +else do;
MPRINT(EM_DIAGRAM):   else do;
502775    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502776    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
502777    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502778    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502779    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
502780    +   end;
MPRINT(EM_DIAGRAM):   end;
502781    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502782    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
502783    +   end;
MPRINT(EM_DIAGRAM):   end;
502784    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502785    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
502786    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502787    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502788    +   end;
MPRINT(EM_DIAGRAM):   end;
502789    +end;
MPRINT(EM_DIAGRAM):   end;
502790    +
502791    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
502792    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
502793    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
502794    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
502795    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502796    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502797    +end;
MPRINT(EM_DIAGRAM):   end;
502798    +else do;
MPRINT(EM_DIAGRAM):   else do;
502799    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502800    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
502801    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502802    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502803    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
502804    +   end;
MPRINT(EM_DIAGRAM):   end;
502805    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502806    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
502807    +   end;
MPRINT(EM_DIAGRAM):   end;
502808    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502809    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
502810    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502811    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502812    +   end;
MPRINT(EM_DIAGRAM):   end;
502813    +end;
MPRINT(EM_DIAGRAM):   end;
502814    +
502815    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
502816    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
502817    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
502818    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
502819    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502820    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502821    +end;
MPRINT(EM_DIAGRAM):   end;
502822    +else do;
MPRINT(EM_DIAGRAM):   else do;
502823    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502824    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
502825    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502826    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
502827    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
502828    +   end;
MPRINT(EM_DIAGRAM):   end;
502829    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
502830    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
502831    +   end;
MPRINT(EM_DIAGRAM):   end;
502832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502833    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
502834    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502835    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502836    +   end;
MPRINT(EM_DIAGRAM):   end;
502837    +end;
MPRINT(EM_DIAGRAM):   end;
502838    +
502839    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
502840    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
502841    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
502842    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
502843    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502844    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502845    +end;
MPRINT(EM_DIAGRAM):   end;
502846    +else do;
MPRINT(EM_DIAGRAM):   else do;
502847    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
502848    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
502849    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502850    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
502851    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
502852    +   end;
MPRINT(EM_DIAGRAM):   end;
502853    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
502854    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
502855    +   end;
MPRINT(EM_DIAGRAM):   end;
502856    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502857    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
502858    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502859    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502860    +   end;
MPRINT(EM_DIAGRAM):   end;
502861    +end;
MPRINT(EM_DIAGRAM):   end;
502862    +
502863    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
502864    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
502865    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
502866    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
502867    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
502868    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
502869    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
502870    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
502871    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
502872    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
502873    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
502874    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
502875    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502876    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502877    +end;
MPRINT(EM_DIAGRAM):   end;
502878    +else do;
MPRINT(EM_DIAGRAM):   else do;
502879    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
502880    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
502881    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502882    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
502883    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
502884    +   end;
MPRINT(EM_DIAGRAM):   end;
502885    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
502886    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
502887    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
502888    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
502889    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
502890    +   end;
MPRINT(EM_DIAGRAM):   end;
502891    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
502892    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
502893    +   end;
MPRINT(EM_DIAGRAM):   end;
502894    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
502895    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
502896    +   end;
MPRINT(EM_DIAGRAM):   end;
502897    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
502898    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
502899    +   end;
MPRINT(EM_DIAGRAM):   end;
502900    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502901    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
502902    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
502903    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
502904    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
502905    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502906    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502907    +   end;
MPRINT(EM_DIAGRAM):   end;
502908    +end;
MPRINT(EM_DIAGRAM):   end;
502909    +
502910    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
502911    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
502912    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
502913    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
502914    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
502915    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
502916    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
502917    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
502918    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
502919    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502920    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502921    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502922    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502923    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
502924    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502925    +end;
MPRINT(EM_DIAGRAM):   end;
502926    +else do;
MPRINT(EM_DIAGRAM):   else do;
502927    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
502928    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
502929    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
502930    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
502931    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
502932    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
502933    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
502934    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
502935    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502936    +         end;
MPRINT(EM_DIAGRAM):   end;
502937    +         else do;
MPRINT(EM_DIAGRAM):   else do;
502938    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
502939    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
502940    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502941    +            end;
MPRINT(EM_DIAGRAM):   end;
502942    +         end;
MPRINT(EM_DIAGRAM):   end;
502943    +      end;
MPRINT(EM_DIAGRAM):   end;
502944    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502945    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
502946    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
502947    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502948    +         end;
MPRINT(EM_DIAGRAM):   end;
502949    +      end;
MPRINT(EM_DIAGRAM):   end;
502950    +   end;
MPRINT(EM_DIAGRAM):   end;
502951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
502952    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
502953    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
502954    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502955    +      end;
MPRINT(EM_DIAGRAM):   end;
502956    +      else do;
MPRINT(EM_DIAGRAM):   else do;
502957    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
502958    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
502959    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
502960    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
502961    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
502962    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
502963    +         end;
MPRINT(EM_DIAGRAM):   end;
502964    +      end;
MPRINT(EM_DIAGRAM):   end;
502965    +   end;
MPRINT(EM_DIAGRAM):   end;
502966    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
502967    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
502968    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
502969    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
502970    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
502971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
502972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
502973    +   end;
MPRINT(EM_DIAGRAM):   end;
502974    +end;
MPRINT(EM_DIAGRAM):   end;
502975    +
502976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
502977    +*** Checking missing input Interval
502978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
502979    +
502980    +IF NMISS(
502981    +   AcceptedCmpTotal ,
502982    +   Age ,
502983    +   Frq ,
502984    +   Income ,
502985    +   Kidhome ,
502986    +   Mnt ,
502987    +   MntFishProducts ,
502988    +   MntFruits ,
502989    +   MntGoldProds ,
502990    +   MntMeatProducts ,
502991    +   MntSweetProducts ,
502992    +   MntWines ,
502993    +   MonthsAsCustomer ,
502994    +   NumCatalogPurchases ,
502995    +   NumDealsPurchases ,
502996    +   NumDistPurchases ,
502997    +   NumStorePurchases ,
502998    +   NumWebPurchases ,
502999    +   NumWebVisitsMonth ,
503000    +   RFMstat ,
503001    +   RMntFrq ,
503002    +   Recency ,
503003    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
503004    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
503005    +
503006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503007    +END;
MPRINT(EM_DIAGRAM):   END;
503008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503009    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
503010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503011    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503012    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
503013    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
503014    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
503015    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
503016    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
503017    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
503018    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
503019    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
503020    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
503021    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
503022    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
503023    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
503024    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
503025    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
503026    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
503027    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
503028    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
503029    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
503030    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
503031    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
503032    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
503033    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
503034    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
503035    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
503036    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
503037    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
503038    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
503039    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
503040    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
503041    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
503042    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
503043    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
503044    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
503045    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
503046    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
503047    +END;
MPRINT(EM_DIAGRAM):   END;
503048    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503049    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
503050    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
503051    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
503052    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
503053    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
503054    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
503055    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
503056    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
503057    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
503058    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
503059    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
503060    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
503061    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
503062    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
503063    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
503064    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
503065    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
503066    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
503067    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
503068    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
503069    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
503070    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
503071    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
503072    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
503073    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
503074    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
503075    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
503076    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
503077    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
503078    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
503079    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
503080    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
503081    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
503082    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
503083    +   ELSE S_NumCatalogPurchases
503084    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
503085    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
503086    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
503087    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
503088    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
503089    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
503090    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
503091    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
503092    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
503093    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
503094    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
503095    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
503096    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
503097    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
503098    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
503099    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
503100    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
503101    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
503102    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
503103    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
503104    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
503105    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
503106    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
503107    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
503108    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
503109    +END;
MPRINT(EM_DIAGRAM):   END;
503110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503111    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
503112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503114    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
503115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503117    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
503118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503119    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503120    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
503121    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
503122    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
503123    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
503124    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
503125    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
503126    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
503127    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
503128    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
503129    +          +     0.89422627895323 * S_NumDealsPurchases
503130    +          +    -0.13304125929765 * S_NumDistPurchases
503131    +          +    -1.04568442570811 * S_NumStorePurchases
503132    +          +    -0.28677765126751 * S_NumWebPurchases
503133    +          +      1.2327638737509 * S_NumWebVisitsMonth
503134    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
503135    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
503136    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
503137    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
503138    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
503139    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
503140    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
503141    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
503142    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
503143    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
503144    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
503145    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
503146    +          +     0.04224590196535 * S_NumDealsPurchases
503147    +          +     0.76554742700113 * S_NumDistPurchases
503148    +          +    -0.49155496870812 * S_NumStorePurchases
503149    +          +     0.59606812744403 * S_NumWebPurchases
503150    +          +     1.86809286276405 * S_NumWebVisitsMonth
503151    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
503152    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
503153    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
503154    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
503155    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
503156    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
503157    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
503158    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
503159    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
503160    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
503161    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
503162    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
503163    +          +    -0.04866536993486 * S_NumDealsPurchases
503164    +          +    -0.53535979020214 * S_NumDistPurchases
503165    +          +     2.20634071253676 * S_NumStorePurchases
503166    +          +      0.6164564989007 * S_NumWebPurchases
503167    +          +    -0.43396314395263 * S_NumWebVisitsMonth
503168    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
503169    +        S_RMntFrq  +     2.37293441098349 * S_Recency
503170    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
503171    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
503172    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
503173    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
503174    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
503175    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
503176    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
503177    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
503178    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
503179    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
503180    +          +     1.37461255707863 * S_NumDealsPurchases
503181    +          +    -0.17684775000818 * S_NumDistPurchases
503182    +          +    -0.62755623855535 * S_NumStorePurchases
503183    +          +    -1.46551649022657 * S_NumWebPurchases
503184    +          +     3.35784247878638 * S_NumWebVisitsMonth
503185    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
503186    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
503187    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
503188    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
503189    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
503190    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
503191    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
503192    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
503193    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
503194    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
503195    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
503196    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
503197    +          +    -0.76256677907121 * S_NumDealsPurchases
503198    +          +    -0.31591571751692 * S_NumDistPurchases
503199    +          +      0.0506832614089 * S_NumStorePurchases
503200    +          +      1.4636796923764 * S_NumWebPurchases
503201    +          +     0.37743519705036 * S_NumWebVisitsMonth
503202    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
503203    +        S_RMntFrq  +     0.16854775832723 * S_Recency
503204    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
503205    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
503206    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
503207    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
503208    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
503209    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
503210    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
503211    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
503212    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
503213    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
503214    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
503215    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
503216    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
503217    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
503218    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
503219    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
503220    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
503221    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
503222    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
503223    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
503224    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
503225    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
503226    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
503227    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
503228    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
503229    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
503230    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
503231    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
503232    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
503233    +          +     0.68641668264565 * Marital_StatusDivorced
503234    +          +    -0.81586871439732 * Marital_StatusMarried
503235    +          +     0.63758920518451 * Marital_StatusSingle
503236    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
503237    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
503238    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
503239    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
503240    +          +     0.05137560133238 * Marital_StatusDivorced
503241    +          +    -2.24401993266209 * Marital_StatusMarried
503242    +          +     1.57359386216115 * Marital_StatusSingle
503243    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
503244    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
503245    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
503246    +        EducationGraduation  +     0.61492669859334 * EducationMaster
503247    +          +     -1.0649987815942 * Marital_StatusDivorced
503248    +          +     0.76065111692388 * Marital_StatusMarried
503249    +          +    -0.21694149754801 * Marital_StatusSingle
503250    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
503251    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
503252    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
503253    +        EducationGraduation  +     0.04208620358211 * EducationMaster
503254    +          +     2.02155453548328 * Marital_StatusDivorced
503255    +          +    -2.60190649735306 * Marital_StatusMarried
503256    +          +     1.09149388354927 * Marital_StatusSingle
503257    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
503258    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
503259    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
503260    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
503261    +          +     0.66315970650309 * Marital_StatusDivorced
503262    +          +    -1.20476729758152 * Marital_StatusMarried
503263    +          +     0.56175027826397 * Marital_StatusSingle
503264    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
503265    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
503266    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
503267    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
503268    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
503269    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
503270    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
503271    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
503272    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
503273    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
503274    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
503275    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
503276    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
503277    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
503278    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
503279    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
503280    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
503281    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
The SAS System

MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
503282    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
503283    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
503284    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
503285    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
503286    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
503287    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
503288    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
503289    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
503290    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
503291    +END;
MPRINT(EM_DIAGRAM):   END;
503292    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503293    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
503294    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
503295    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
503296    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
503297    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
503298    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
503299    +END;
MPRINT(EM_DIAGRAM):   END;
503300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503301    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
503302    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503303    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503304    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
503305    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
503306    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
503307    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
503308    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
503309    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
503310    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
503311    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
503312    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
503313    +          +     1.50005927423985 * S_NumDealsPurchases
503314    +          +      0.5590536933569 * S_NumDistPurchases
503315    +          +    -0.61757824339318 * S_NumStorePurchases
503316    +          +     0.37259686538158 * S_NumWebPurchases
503317    +          +     2.59725437895564 * S_NumWebVisitsMonth
503318    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
503319    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
503320    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
503321    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
503322    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
503323    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
503324    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
503325    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
503326    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
503327    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
503328    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
503329    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
503330    +          +    -0.09282222088797 * S_NumDealsPurchases
503331    +          +     0.10726247938321 * S_NumDistPurchases
503332    +          +     -1.1235971458527 * S_NumStorePurchases
503333    +          +    -0.78304387839877 * S_NumWebPurchases
503334    +          +    -0.44139243179956 * S_NumWebVisitsMonth
503335    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
503336    +        S_RMntFrq  +     2.19072220135069 * S_Recency
503337    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
503338    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
503339    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
503340    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
503341    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
503342    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
503343    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
503344    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
503345    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
503346    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
503347    +          +     0.35349185459988 * S_NumDealsPurchases
503348    +          +     0.06853677714859 * S_NumDistPurchases
503349    +          +    -1.47546012999338 * S_NumStorePurchases
503350    +          +     0.20926435398916 * S_NumWebPurchases
503351    +          +    -1.00535683639093 * S_NumWebVisitsMonth
503352    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
503353    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
503354    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
503355    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
503356    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
503357    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
503358    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
503359    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
503360    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
503361    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
503362    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
503363    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
503364    +          +      0.3873586120272 * S_NumDealsPurchases
503365    +          +     0.25911651157596 * S_NumDistPurchases
503366    +          +     1.58922489084287 * S_NumStorePurchases
503367    +          +     0.49041797743368 * S_NumWebPurchases
503368    +          +     -1.5425586871929 * S_NumWebVisitsMonth
503369    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
503370    +        S_RMntFrq  +     1.03099569333498 * S_Recency
503371    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
503372    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
503373    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
503374    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
503375    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
503376    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
503377    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
503378    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
503379    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
503380    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
503381    +          +    -0.60830880287865 * S_NumDealsPurchases
503382    +          +      0.0745331267194 * S_NumDistPurchases
503383    +          +    -1.39472448256952 * S_NumStorePurchases
503384    +          +     1.95372179969087 * S_NumWebPurchases
503385    +          +    -0.63307356390404 * S_NumWebVisitsMonth
503386    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
503387    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
503388    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
503389    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
503390    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
503391    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
503392    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
503393    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
503394    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
503395    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
503396    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
503397    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
503398    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
503399    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
503400    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
503401    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
503402    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
503403    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
503404    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
503405    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
503406    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
503407    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
503408    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
503409    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
503410    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
503411    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
503412    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
503413    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
503414    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
503415    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
503416    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
503417    +          +    -1.33377871643323 * Marital_StatusDivorced
503418    +          +    -0.87184228840898 * Marital_StatusMarried
503419    +          +     1.41223186340257 * Marital_StatusSingle
503420    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
503421    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
503422    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
503423    +        EducationGraduation  +     0.38341272155343 * EducationMaster
503424    +          +    -0.21479890935233 * Marital_StatusDivorced
503425    +          +     -0.0025459519579 * Marital_StatusMarried
503426    +          +     1.33900491702264 * Marital_StatusSingle
503427    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
503428    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
503429    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
503430    +        EducationGraduation  +     0.60739269725685 * EducationMaster
503431    +          +    -0.38307267471999 * Marital_StatusDivorced
503432    +          +     0.97088969451415 * Marital_StatusMarried
503433    +          +    -0.28578224473381 * Marital_StatusSingle
503434    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
503435    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
503436    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
503437    +        EducationGraduation  +     0.14160673378252 * EducationMaster
503438    +          +    -1.42229401093569 * Marital_StatusDivorced
503439    +          +      0.7234508382397 * Marital_StatusMarried
503440    +          +    -0.29062202974628 * Marital_StatusSingle
503441    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
503442    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
503443    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
503444    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
503445    +          +    -0.99067637207205 * Marital_StatusDivorced
503446    +          +    -0.50245902142079 * Marital_StatusMarried
503447    +          +     0.54214494533793 * Marital_StatusSingle
503448    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
503449    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
503450    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
503451    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
503452    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
503453    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
503454    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
503455    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
503456    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
503457    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
503458    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
503459    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
503460    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
503461    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
503462    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
503463    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
503464    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
503465    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
503466    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
503467    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
503468    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
503469    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
503470    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
503471    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
503472    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
503473    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
503474    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
503475    +END;
MPRINT(EM_DIAGRAM):   END;
503476    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503477    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
503478    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
503479    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
503480    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
503481    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
503482    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
503483    +END;
MPRINT(EM_DIAGRAM):   END;
503484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503485    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
503486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503487    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503488    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
503489    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
503490    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
503491    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
503492    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
503493    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
503494    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
503495    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
503496    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
503497    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
503498    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
503499    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
503500    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
503501    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
503502    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
503503    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
503504    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
503505    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
503506    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
503507    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
503508    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
503509    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
503510    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
503511    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
503512    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
503513    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
503514    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
503515    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
503516    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
503517    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
503518    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
503519    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
503520    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
503521    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
503522    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
503523    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
503524    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
503525    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
503526    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
503527    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
503528    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
503529    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
503530    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
503531    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
503532    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
503533    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
503534    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
503535    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
503536    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
503537    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
503538    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
503539    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
503540    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
503541    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
503542    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
503543    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
503544    +END;
MPRINT(EM_DIAGRAM):   END;
503545    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503546    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
503547    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
503548    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
503549    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
503550    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
503551    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
503552    +END;
MPRINT(EM_DIAGRAM):   END;
503553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503554    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
503555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503556    +
503557    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
503558    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
503559    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
503560    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
503561    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
503562    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503563    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
503564    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
503565    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
503566    +end;
MPRINT(EM_DIAGRAM):   end;
503567    +else do;
MPRINT(EM_DIAGRAM):   else do;
503568    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
503569    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
503570    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
503571    +   end;
MPRINT(EM_DIAGRAM):   end;
503572    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
503573    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
503574    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
503575    +   end;
MPRINT(EM_DIAGRAM):   end;
503576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503577    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
503578    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
503579    +   end;
MPRINT(EM_DIAGRAM):   end;
503580    +end;
MPRINT(EM_DIAGRAM):   end;
503581    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
503582    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
503583    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
503584    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
503585    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
503586    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
503587    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
503588    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
503589    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
503590    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
503591    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
503592    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
503593    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
503594    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
503595    +END;
MPRINT(EM_DIAGRAM):   END;
503596    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
503597    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
503598    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
503599    +END;
MPRINT(EM_DIAGRAM):   END;
503600    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
503601    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
503602    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
503603    +END;
MPRINT(EM_DIAGRAM):   END;
503604    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
503605    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
503606    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
503607    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
503608    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
503609    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
503610    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
503611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503612    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
503613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
503614    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
503615    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
503616    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
503617    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
503618    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
503619    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
503620    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
503621    +END;
MPRINT(EM_DIAGRAM):   END;
503622    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
503623    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
503624    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
503625    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
503626    +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
503627    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503628    +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
503629    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503630    +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
503631    +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
503632    +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
503633    +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
503634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503635    +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
503636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503637    +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
503638    +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
503639    +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
503640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503641    +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
503642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503643    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503644    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
503645    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
503646    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
503647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
503648    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
503649    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
503650    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
503651    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
503652    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
503653    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
503654    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
503655    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
503656    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
503657    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
503658    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
503659    +LENGTH _WARN_ $4
503660    +      F_DepVar  $ 12
503661    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
503662    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
503663    +
503664    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
503665    +
503666    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
503667    +
503668    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
503669    +
503670    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
503671    +
503672    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
503673    +
503674    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
503675    +
503676    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
503677    +
503678    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
503679    +
503680    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
503681    +
503682    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
503683    +
503684    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
503685    +
503686    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
503687    +
503688    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
503689    +
503690    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
503691    +
503692    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
503693    +
503694    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
503695    +
503696    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
503697    +
503698    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
503699    +
503700    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
503701    +
503702    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
503703    +
503704    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
503705    +
503706    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
503707    +
503708    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
503709    +
503710    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
503711    +
503712    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
503713    +
503714    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
503715    +
503716    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
503717    +
503718    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
503719    +
503720    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
503721    +
503722    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
503723    +
503724    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
503725    +
503726    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
503727    +
503728    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
503729    +
503730    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
503731    +
503732    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
503733    +
503734    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
503735    +
503736    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
503737    +
503738    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
503739    +
503740    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
503741    +
503742    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
503743    +
503744    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
503745    +
503746    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
503747    +
503748    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
503749    +
503750    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
503751    +
503752    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
503753    +
503754    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
503755    +
503756    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
503757    +
503758    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
503759    +
503760    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
503761    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
503762    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
503763    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
503764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503766    +end;
MPRINT(EM_DIAGRAM):   end;
503767    +else do;
MPRINT(EM_DIAGRAM):   else do;
503768    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503769    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
503770    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503771    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503772    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
503773    +   end;
MPRINT(EM_DIAGRAM):   end;
503774    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503775    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
503776    +   end;
MPRINT(EM_DIAGRAM):   end;
503777    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503778    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
503779    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503780    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503781    +   end;
MPRINT(EM_DIAGRAM):   end;
503782    +end;
MPRINT(EM_DIAGRAM):   end;
503783    +
503784    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
503785    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
503786    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
503787    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
503788    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503789    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503790    +end;
MPRINT(EM_DIAGRAM):   end;
503791    +else do;
MPRINT(EM_DIAGRAM):   else do;
503792    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503793    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
503794    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503795    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503796    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
503797    +   end;
MPRINT(EM_DIAGRAM):   end;
503798    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503799    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
503800    +   end;
MPRINT(EM_DIAGRAM):   end;
503801    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503802    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
503803    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503804    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503805    +   end;
MPRINT(EM_DIAGRAM):   end;
503806    +end;
MPRINT(EM_DIAGRAM):   end;
503807    +
503808    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
503809    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
503810    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
503811    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
503812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503814    +end;
MPRINT(EM_DIAGRAM):   end;
503815    +else do;
MPRINT(EM_DIAGRAM):   else do;
503816    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503817    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
503818    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503819    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503820    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
503821    +   end;
MPRINT(EM_DIAGRAM):   end;
503822    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503823    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
503824    +   end;
MPRINT(EM_DIAGRAM):   end;
503825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503826    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
503827    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503828    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503829    +   end;
MPRINT(EM_DIAGRAM):   end;
503830    +end;
MPRINT(EM_DIAGRAM):   end;
503831    +
503832    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
503833    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
503834    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
503835    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
503836    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503837    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503838    +end;
MPRINT(EM_DIAGRAM):   end;
503839    +else do;
MPRINT(EM_DIAGRAM):   else do;
503840    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503841    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
503842    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503843    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503844    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
503845    +   end;
MPRINT(EM_DIAGRAM):   end;
503846    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503847    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
503848    +   end;
MPRINT(EM_DIAGRAM):   end;
503849    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503850    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
503851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503853    +   end;
MPRINT(EM_DIAGRAM):   end;
503854    +end;
MPRINT(EM_DIAGRAM):   end;
503855    +
503856    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
503857    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
503858    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
503859    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
503860    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503862    +end;
MPRINT(EM_DIAGRAM):   end;
503863    +else do;
MPRINT(EM_DIAGRAM):   else do;
503864    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503865    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
503866    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503867    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503868    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
503869    +   end;
MPRINT(EM_DIAGRAM):   end;
503870    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503871    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
503872    +   end;
MPRINT(EM_DIAGRAM):   end;
503873    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503874    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
503875    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503876    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503877    +   end;
MPRINT(EM_DIAGRAM):   end;
503878    +end;
MPRINT(EM_DIAGRAM):   end;
503879    +
503880    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
503881    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
503882    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
503883    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
503884    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503885    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503886    +end;
MPRINT(EM_DIAGRAM):   end;
503887    +else do;
MPRINT(EM_DIAGRAM):   else do;
503888    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503889    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
503890    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503891    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
503892    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
503893    +   end;
MPRINT(EM_DIAGRAM):   end;
503894    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
503895    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
503896    +   end;
MPRINT(EM_DIAGRAM):   end;
503897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503898    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
503899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503901    +   end;
MPRINT(EM_DIAGRAM):   end;
503902    +end;
MPRINT(EM_DIAGRAM):   end;
503903    +
503904    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
503905    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
503906    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
503907    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
503908    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503910    +end;
MPRINT(EM_DIAGRAM):   end;
503911    +else do;
MPRINT(EM_DIAGRAM):   else do;
503912    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
503913    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
503914    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503915    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
503916    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
503917    +   end;
MPRINT(EM_DIAGRAM):   end;
503918    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
503919    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
503920    +   end;
MPRINT(EM_DIAGRAM):   end;
503921    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503922    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
503923    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503924    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503925    +   end;
MPRINT(EM_DIAGRAM):   end;
503926    +end;
MPRINT(EM_DIAGRAM):   end;
503927    +
503928    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
503929    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
503930    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
503931    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
503932    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
503933    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
503934    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
503935    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
503936    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
503937    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
503938    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
503939    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
503940    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503941    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503942    +end;
MPRINT(EM_DIAGRAM):   end;
503943    +else do;
MPRINT(EM_DIAGRAM):   else do;
503944    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
503945    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
503946    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503947    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
503948    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
503949    +   end;
MPRINT(EM_DIAGRAM):   end;
503950    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
503951    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
503952    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
503953    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
503954    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
503955    +   end;
MPRINT(EM_DIAGRAM):   end;
503956    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
503957    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
503958    +   end;
MPRINT(EM_DIAGRAM):   end;
503959    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
503960    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
503961    +   end;
MPRINT(EM_DIAGRAM):   end;
503962    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
503963    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
503964    +   end;
MPRINT(EM_DIAGRAM):   end;
503965    +   else do;
MPRINT(EM_DIAGRAM):   else do;
503966    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
503967    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
503968    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
503969    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
503970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
503971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503972    +   end;
MPRINT(EM_DIAGRAM):   end;
503973    +end;
MPRINT(EM_DIAGRAM):   end;
503974    +
503975    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
503976    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
503977    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
503978    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
503979    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
503980    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
503981    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
503982    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
503983    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
503984    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
503985    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
503986    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
503987    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
503988    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
503989    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
503990    +end;
MPRINT(EM_DIAGRAM):   end;
503991    +else do;
MPRINT(EM_DIAGRAM):   else do;
503992    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
503993    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
503994    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
503995    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
503996    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
503997    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
503998    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
503999    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
504000    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504001    +         end;
MPRINT(EM_DIAGRAM):   end;
504002    +         else do;
MPRINT(EM_DIAGRAM):   else do;
504003    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
504004    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
504005    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504006    +            end;
MPRINT(EM_DIAGRAM):   end;
504007    +         end;
MPRINT(EM_DIAGRAM):   end;
504008    +      end;
MPRINT(EM_DIAGRAM):   end;
504009    +      else do;
MPRINT(EM_DIAGRAM):   else do;
504010    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
504011    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
504012    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504013    +         end;
MPRINT(EM_DIAGRAM):   end;
504014    +      end;
MPRINT(EM_DIAGRAM):   end;
504015    +   end;
MPRINT(EM_DIAGRAM):   end;
504016    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504017    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
504018    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
504019    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504020    +      end;
MPRINT(EM_DIAGRAM):   end;
504021    +      else do;
MPRINT(EM_DIAGRAM):   else do;
504022    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
504023    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
504024    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
504025    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
504026    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
504027    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504028    +         end;
MPRINT(EM_DIAGRAM):   end;
504029    +      end;
MPRINT(EM_DIAGRAM):   end;
504030    +   end;
MPRINT(EM_DIAGRAM):   end;
504031    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
504032    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
504033    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
504034    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
504035    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
504036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504038    +   end;
MPRINT(EM_DIAGRAM):   end;
504039    +end;
MPRINT(EM_DIAGRAM):   end;
504040    +
504041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504042    +*** Checking missing input Interval
504043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
504044    +
504045    +IF NMISS(
504046    +   AcceptedCmpTotal ,
504047    +   Age ,
504048    +   Frq ,
504049    +   Income ,
504050    +   Kidhome ,
504051    +   Mnt ,
504052    +   MntFishProducts ,
504053    +   MntFruits ,
504054    +   MntGoldProds ,
504055    +   MntMeatProducts ,
504056    +   MntSweetProducts ,
504057    +   MntWines ,
504058    +   MonthsAsCustomer ,
504059    +   NumCatalogPurchases ,
504060    +   NumDealsPurchases ,
504061    +   NumDistPurchases ,
504062    +   NumStorePurchases ,
504063    +   NumWebPurchases ,
504064    +   NumWebVisitsMonth ,
504065    +   RFMstat ,
504066    +   RMntFrq ,
504067    +   Recency ,
504068    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
504069    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
504070    +
504071    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504072    +END;
MPRINT(EM_DIAGRAM):   END;
504073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504074    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
504075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504076    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504077    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
504078    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
504079    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
504080    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
504081    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
504082    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
504083    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
504084    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
504085    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
504086    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
504087    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
504088    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
504089    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
504090    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
504091    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
504092    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
504093    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
504094    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
504095    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
504096    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
504097    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
504098    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
504099    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
504100    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
504101    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
504102    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
504103    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
504104    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
504105    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
504106    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
504107    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
504108    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
504109    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
504110    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
504111    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
504112    +END;
MPRINT(EM_DIAGRAM):   END;
504113    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
504114    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
504115    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
504116    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
504117    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
504118    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
504119    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
504120    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
504121    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
504122    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
504123    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
504124    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
504125    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
504126    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
504127    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
504128    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
504129    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
504130    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
504131    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
504132    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
504133    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
504134    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
504135    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
504136    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
504137    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
504138    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
504139    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
504140    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
504141    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
504142    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
504143    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
504144    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
504145    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
504146    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
504147    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
504148    +   ELSE S_NumCatalogPurchases
504149    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
504150    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
504151    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
504152    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
504153    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
504154    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
504155    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
504156    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
504157    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
504158    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
504159    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
504160    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
504161    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
504162    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
504163    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
504164    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
504165    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
504166    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
504167    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
504168    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
504169    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
504170    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
504171    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
504172    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
504173    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
504174    +END;
MPRINT(EM_DIAGRAM):   END;
504175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504176    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
504177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504179    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
504180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504182    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
504183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504184    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504185    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
504186    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
504187    +        S_Income  +      0.4880522012865 * S_Kidhome
504188    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
504189    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
504190    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
504191    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
504192    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
504193    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
504194    +          +     1.28630491068585 * S_NumDealsPurchases
504195    +          +     0.12175737778271 * S_NumDistPurchases
504196    +          +    -0.62012456448967 * S_NumStorePurchases
504197    +          +     -0.6092351519122 * S_NumWebPurchases
504198    +          +     1.46336740414795 * S_NumWebVisitsMonth
504199    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
504200    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
504201    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
504202    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
504203    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
504204    +        S_Income  +     0.63026291057347 * S_Kidhome
504205    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
504206    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
504207    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
504208    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
504209    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
504210    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
504211    +          +    -0.66569109065716 * S_NumDealsPurchases
504212    +          +    -0.04991685336251 * S_NumDistPurchases
504213    +          +     0.97830186941279 * S_NumStorePurchases
504214    +          +     1.01041490205359 * S_NumWebPurchases
504215    +          +    -1.32418956036577 * S_NumWebVisitsMonth
504216    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
504217    +        S_RMntFrq  +     1.45035992156192 * S_Recency
504218    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
504219    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
504220    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
504221    +        S_Income  +     0.56998894495459 * S_Kidhome
504222    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
504223    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
504224    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
504225    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
504226    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
504227    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
504228    +          +     0.07739967453744 * S_NumDealsPurchases
504229    +          +    -0.43729543807168 * S_NumDistPurchases
504230    +          +      0.0856627398024 * S_NumStorePurchases
504231    +          +     -0.0045478100059 * S_NumWebPurchases
504232    +          +    -0.64123054514198 * S_NumWebVisitsMonth
504233    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
504234    +        S_RMntFrq  +     1.48732817876807 * S_Recency
504235    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
504236    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
504237    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
504238    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
504239    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
504240    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
504241    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
504242    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
504243    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
504244    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
504245    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
504246    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
504247    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
504248    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
504249    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
504250    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
504251    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
504252    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
504253    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
504254    +          +     0.16155355707944 * Marital_StatusDivorced
504255    +          +     0.04915644167404 * Marital_StatusMarried
504256    +          +    -0.16886350906837 * Marital_StatusSingle
504257    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
504258    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
504259    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
504260    +        EducationGraduation  +     0.03310756432448 * EducationMaster
504261    +          +    -0.15094637092036 * Marital_StatusDivorced
504262    +          +     0.07664831456886 * Marital_StatusMarried
504263    +          +    -0.47693612610813 * Marital_StatusSingle
504264    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
504265    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
504266    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
504267    +        EducationGraduation  +     0.20173383445657 * EducationMaster
504268    +          +    -0.58672623647391 * Marital_StatusDivorced
504269    +          +      1.8684271616322 * Marital_StatusMarried
504270    +          +    -1.30134837394569 * Marital_StatusSingle
504271    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
504272    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
504273    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
504274    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
504275    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
504276    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
504277    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
504278    +END;
MPRINT(EM_DIAGRAM):   END;
504279    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
504280    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
504281    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
504282    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
504283    +END;
MPRINT(EM_DIAGRAM):   END;
504284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504285    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
504286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504287    +
504288    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
504289    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
504290    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
504291    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
504292    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
504293    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504294    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
504295    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
504296    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
504297    +end;
MPRINT(EM_DIAGRAM):   end;
504298    +else do;
MPRINT(EM_DIAGRAM):   else do;
504299    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
504300    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
504301    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
504302    +   end;
MPRINT(EM_DIAGRAM):   end;
504303    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
504304    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
504305    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
504306    +   end;
MPRINT(EM_DIAGRAM):   end;
504307    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504308    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
504309    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
504310    +   end;
MPRINT(EM_DIAGRAM):   end;
504311    +end;
MPRINT(EM_DIAGRAM):   end;
504312    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504313    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
504314    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
504315    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
504316    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
504317    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
504318    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
504319    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
504320    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
504321    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
504322    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
504323    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
504324    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
504325    +END;
MPRINT(EM_DIAGRAM):   END;
504326    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
504327    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
504328    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
504329    +END;
MPRINT(EM_DIAGRAM):   END;
504330    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
504331    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
504332    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
504333    +END;
MPRINT(EM_DIAGRAM):   END;
504334    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
504335    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
504336    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
504337    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
504338    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
504339    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
504340    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
504341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504342    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
504343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504344    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
504345    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
504346    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
504347    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
504348    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
504349    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
504350    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
504351    +END;
MPRINT(EM_DIAGRAM):   END;
504352    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
504353    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
504354    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
504355    +drop
504356    +H11
504357    +H12
504358    +H13
504359    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
504360    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
504361    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
504362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504363    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
504364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504365    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
504366    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
504367    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
504368    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
504369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504370    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
504371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504372    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
504373    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
504374    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
504375    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504376    +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
504377    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504378    +P_DepVar1 = (
504379    +AutoNeural7_P_DepVar1 +
504380    +AutoNeural9_P_DepVar1 +
504381    +AutoNeural12_P_DepVar1 +
504382    +Neural10_P_DepVar1 +
504383    +Neural9_P_DepVar1 +
504384    +AutoNeural11_P_DepVar1 +
504385    +Neural3_P_DepVar1
504386    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural7_P_DepVar1 + AutoNeural9_P_DepVar1 + 
AutoNeural12_P_DepVar1 + Neural10_P_DepVar1 + Neural9_P_DepVar1 + AutoNeural11_P_DepVar1 + 
Neural3_P_DepVar1 )/7;
504387    +P_DepVar0 = (
504388    +AutoNeural7_P_DepVar0 +
504389    +AutoNeural9_P_DepVar0 +
504390    +AutoNeural12_P_DepVar0 +
504391    +Neural10_P_DepVar0 +
504392    +Neural9_P_DepVar0 +
504393    +AutoNeural11_P_DepVar0 +
504394    +Neural3_P_DepVar0
504395    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural7_P_DepVar0 + AutoNeural9_P_DepVar0 + 
AutoNeural12_P_DepVar0 + Neural10_P_DepVar0 + Neural9_P_DepVar0 + AutoNeural11_P_DepVar0 + 
Neural3_P_DepVar0 )/7;
504396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504397    +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
504398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504399    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
504400    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
504401    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
504402    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
504403    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
504404    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
504405    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
504406    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
504407    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
504408    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
504409    +end;
MPRINT(EM_DIAGRAM):   end;
504410    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
504411    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
504412    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
504413    +end;
MPRINT(EM_DIAGRAM):   end;
504414    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
504415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504416    +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
504417    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504418    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
504419    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
504420    +else
504421    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
504422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504423    +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
504424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504425    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
504426    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
504427    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
504428    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
504428   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
504429    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
504429   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
504430    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
504430   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
504431    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
504431   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
504432    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
504432   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
504433    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
504433   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
504434    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
504434   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
504435    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
504435   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
504436    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
504436   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
504437    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
504437   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
504438    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
504438   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
504439    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
504439   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
504440    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
504440   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
504441    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
504441   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
504442    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
504442   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
504443    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
504443   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
504444    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
504445    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
504446    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
504447    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
504448    +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
504448   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
504449    +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
504449   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
504450    +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
504450   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
504451    +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
504451   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
504452    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
504453    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
504454    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
504455    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
504456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504457    +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
504458    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504459    +if
504460    +F_DepVar NE '1'
504461    +AND F_DepVar NE '0'
504462    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
504463    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
504464    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
504465    +end;
MPRINT(EM_DIAGRAM):   end;
504466    +else do;
MPRINT(EM_DIAGRAM):   else do;
504467    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
504468    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
504469    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
504470    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
504471    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
504472    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
504473    +END;
MPRINT(EM_DIAGRAM):   END;
504474    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
504475     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.29 seconds
      

MPRINT(EM_DIAGRAM):   quit;
504476     quit;
504477     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
504478     filename emflow
504478   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring AUTONEURAL7_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504479     *------------------------------------------------------------*;
504480     * Ensmbl14: Scoring AUTONEURAL7_VALIDATE data;
504481     *------------------------------------------------------------*;
504482     data EMWS8.Ensmbl14_VALIDATE
504483     / view=EMWS8.Ensmbl14_VALIDATE
504484     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_VALIDATE / view=EMWS8.Ensmbl14_VALIDATE ;
504485     set EMWS8.AutoNeural7_VALIDATE
504486     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_VALIDATE ;
504487     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
504488    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504489    +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
504490    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504491    +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
504492    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504493    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504494    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
504495    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
504496    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
504497    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504499    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
504500    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
504501    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
504502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504504    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
504505    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
504506    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
504507    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504508    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504509    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
504510    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
504511    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
504512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504513    +
504514    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
504515    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
504515   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
504516    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
504517    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
504518    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
504519    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
504520    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
504521    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504522    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
504523    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
504524    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
504525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504527    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
504528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504529    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
504530    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
504531    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
504532    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504533    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
504534    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
504535    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
504536    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504538    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
504539    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
504540    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
504541    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504542    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504543    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
504544    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
504545    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
504546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
504547    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
504548    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
504549    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
504550    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
504551    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
504552    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
504553    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
504554    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
504555    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
504556    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
504557    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
504558    +LENGTH _WARN_ $4
504559    +      F_DepVar  $ 12
504560    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
504561    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
504562    +
504563    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
504564    +
504565    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
504566    +
504567    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
504568    +
504569    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
504570    +
504571    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
504572    +
504573    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
504574    +
504575    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
504576    +
504577    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
504578    +
504579    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
504580    +
504581    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
504582    +
504583    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
504584    +
504585    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
504586    +
504587    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
504588    +
504589    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
504590    +
504591    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
504592    +
504593    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
504594    +
504595    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
504596    +
504597    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
504598    +
504599    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
504600    +
504601    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
504602    +
504603    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
504604    +
504605    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
504606    +
504607    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
504608    +
504609    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
504610    +
504611    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
504612    +
504613    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
504614    +
504615    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
504616    +
504617    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
504618    +
504619    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
504620    +
504621    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
504622    +
504623    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
504624    +
504625    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
504626    +
504627    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
504628    +
504629    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
504630    +
504631    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
504632    +
504633    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
504634    +
504635    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
504636    +
504637    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
504638    +
504639    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
504640    +
504641    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
504642    +
504643    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
504644    +
504645    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
504646    +
504647    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
504648    +
504649    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
504650    +
504651    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
504652    +
504653    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
504654    +
504655    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
504656    +
504657    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
504658    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
504659    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
504660    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
504661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504663    +end;
MPRINT(EM_DIAGRAM):   end;
504664    +else do;
MPRINT(EM_DIAGRAM):   else do;
504665    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504666    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
504667    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504668    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504669    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
504670    +   end;
MPRINT(EM_DIAGRAM):   end;
504671    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504672    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
504673    +   end;
MPRINT(EM_DIAGRAM):   end;
504674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504675    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
504676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504678    +   end;
MPRINT(EM_DIAGRAM):   end;
504679    +end;
MPRINT(EM_DIAGRAM):   end;
504680    +
504681    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
504682    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
504683    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
504684    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
504685    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504686    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504687    +end;
MPRINT(EM_DIAGRAM):   end;
504688    +else do;
MPRINT(EM_DIAGRAM):   else do;
504689    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504690    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
504691    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504692    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504693    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
504694    +   end;
MPRINT(EM_DIAGRAM):   end;
504695    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504696    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
504697    +   end;
MPRINT(EM_DIAGRAM):   end;
504698    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504699    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
504700    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504701    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504702    +   end;
MPRINT(EM_DIAGRAM):   end;
504703    +end;
MPRINT(EM_DIAGRAM):   end;
504704    +
504705    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
504706    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
504707    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
504708    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
504709    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504710    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504711    +end;
MPRINT(EM_DIAGRAM):   end;
504712    +else do;
MPRINT(EM_DIAGRAM):   else do;
504713    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504714    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
504715    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504716    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504717    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
504718    +   end;
MPRINT(EM_DIAGRAM):   end;
504719    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504720    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
504721    +   end;
MPRINT(EM_DIAGRAM):   end;
504722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504723    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
504724    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504725    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504726    +   end;
MPRINT(EM_DIAGRAM):   end;
504727    +end;
MPRINT(EM_DIAGRAM):   end;
504728    +
504729    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
504730    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
504731    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
504732    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
504733    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504734    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504735    +end;
MPRINT(EM_DIAGRAM):   end;
504736    +else do;
MPRINT(EM_DIAGRAM):   else do;
504737    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504738    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
504739    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504740    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504741    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
504742    +   end;
MPRINT(EM_DIAGRAM):   end;
504743    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504744    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
504745    +   end;
MPRINT(EM_DIAGRAM):   end;
504746    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504747    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
504748    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504749    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504750    +   end;
MPRINT(EM_DIAGRAM):   end;
504751    +end;
MPRINT(EM_DIAGRAM):   end;
504752    +
504753    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
504754    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
504755    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
504756    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
504757    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504758    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504759    +end;
MPRINT(EM_DIAGRAM):   end;
504760    +else do;
MPRINT(EM_DIAGRAM):   else do;
504761    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504762    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
504763    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504764    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504765    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
504766    +   end;
MPRINT(EM_DIAGRAM):   end;
504767    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504768    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
504769    +   end;
MPRINT(EM_DIAGRAM):   end;
504770    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504771    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
504772    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504773    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504774    +   end;
MPRINT(EM_DIAGRAM):   end;
504775    +end;
MPRINT(EM_DIAGRAM):   end;
504776    +
504777    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
504778    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
504779    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
504780    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
504781    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504782    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504783    +end;
MPRINT(EM_DIAGRAM):   end;
504784    +else do;
MPRINT(EM_DIAGRAM):   else do;
504785    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504786    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
504787    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504788    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
504789    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
504790    +   end;
MPRINT(EM_DIAGRAM):   end;
504791    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
504792    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
504793    +   end;
MPRINT(EM_DIAGRAM):   end;
504794    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504795    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
504796    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504797    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504798    +   end;
MPRINT(EM_DIAGRAM):   end;
504799    +end;
MPRINT(EM_DIAGRAM):   end;
504800    +
504801    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
504802    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
504803    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
504804    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
504805    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504806    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504807    +end;
MPRINT(EM_DIAGRAM):   end;
504808    +else do;
MPRINT(EM_DIAGRAM):   else do;
504809    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
504810    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
504811    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504812    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
504813    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
504814    +   end;
MPRINT(EM_DIAGRAM):   end;
504815    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
504816    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
504817    +   end;
MPRINT(EM_DIAGRAM):   end;
504818    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504819    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
504820    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504821    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504822    +   end;
MPRINT(EM_DIAGRAM):   end;
504823    +end;
MPRINT(EM_DIAGRAM):   end;
504824    +
504825    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
504826    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
504827    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
504828    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
504829    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
504830    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
504831    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
504832    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
504833    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
504834    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
504835    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
504836    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
504837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504839    +end;
MPRINT(EM_DIAGRAM):   end;
504840    +else do;
MPRINT(EM_DIAGRAM):   else do;
504841    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
504842    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
504843    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504844    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
504845    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
504846    +   end;
MPRINT(EM_DIAGRAM):   end;
504847    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
504848    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
504849    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
504850    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
504851    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
504852    +   end;
MPRINT(EM_DIAGRAM):   end;
504853    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
504854    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
504855    +   end;
MPRINT(EM_DIAGRAM):   end;
504856    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
504857    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
504858    +   end;
MPRINT(EM_DIAGRAM):   end;
504859    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
504860    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
504861    +   end;
MPRINT(EM_DIAGRAM):   end;
504862    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504863    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
504864    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
504865    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
504866    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
504867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504869    +   end;
MPRINT(EM_DIAGRAM):   end;
504870    +end;
MPRINT(EM_DIAGRAM):   end;
504871    +
504872    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
504873    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
504874    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
504875    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
504876    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
504877    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
504878    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
504879    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
504880    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
504881    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
504882    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
504883    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
504884    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
504885    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
504886    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504887    +end;
MPRINT(EM_DIAGRAM):   end;
504888    +else do;
MPRINT(EM_DIAGRAM):   else do;
504889    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
504890    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
504891    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
504892    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
504893    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
504894    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
504895    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
504896    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
504897    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504898    +         end;
MPRINT(EM_DIAGRAM):   end;
504899    +         else do;
MPRINT(EM_DIAGRAM):   else do;
504900    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
504901    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
504902    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504903    +            end;
MPRINT(EM_DIAGRAM):   end;
504904    +         end;
MPRINT(EM_DIAGRAM):   end;
504905    +      end;
MPRINT(EM_DIAGRAM):   end;
504906    +      else do;
MPRINT(EM_DIAGRAM):   else do;
504907    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
504908    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
504909    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504910    +         end;
MPRINT(EM_DIAGRAM):   end;
504911    +      end;
MPRINT(EM_DIAGRAM):   end;
504912    +   end;
MPRINT(EM_DIAGRAM):   end;
504913    +   else do;
MPRINT(EM_DIAGRAM):   else do;
504914    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
504915    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
504916    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504917    +      end;
MPRINT(EM_DIAGRAM):   end;
504918    +      else do;
MPRINT(EM_DIAGRAM):   else do;
504919    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
504920    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
504921    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
504922    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
504923    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
504924    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
504925    +         end;
MPRINT(EM_DIAGRAM):   end;
504926    +      end;
MPRINT(EM_DIAGRAM):   end;
504927    +   end;
MPRINT(EM_DIAGRAM):   end;
504928    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
504929    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
504930    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
504931    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
504932    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
504933    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
504934    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504935    +   end;
MPRINT(EM_DIAGRAM):   end;
504936    +end;
MPRINT(EM_DIAGRAM):   end;
504937    +
504938    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504939    +*** Checking missing input Interval
504940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
504941    +
504942    +IF NMISS(
504943    +   AcceptedCmpTotal ,
504944    +   Age ,
504945    +   Frq ,
504946    +   Income ,
504947    +   Kidhome ,
504948    +   Mnt ,
504949    +   MntFishProducts ,
504950    +   MntFruits ,
504951    +   MntGoldProds ,
504952    +   MntMeatProducts ,
504953    +   MntSweetProducts ,
504954    +   MntWines ,
504955    +   MonthsAsCustomer ,
504956    +   NumCatalogPurchases ,
504957    +   NumDealsPurchases ,
504958    +   NumDistPurchases ,
504959    +   NumStorePurchases ,
504960    +   NumWebPurchases ,
504961    +   NumWebVisitsMonth ,
504962    +   RFMstat ,
504963    +   RMntFrq ,
504964    +   Recency ,
504965    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
504966    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
504967    +
504968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
504969    +END;
MPRINT(EM_DIAGRAM):   END;
504970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504971    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
504972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
504973    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
504974    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
504975    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
504976    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
504977    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
504978    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
504979    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
504980    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
504981    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
504982    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
504983    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
504984    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
504985    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
504986    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
504987    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
504988    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
504989    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
504990    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
504991    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
504992    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
504993    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
504994    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
504995    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
504996    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
504997    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
504998    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
504999    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
505000    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
505001    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
505002    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
505003    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
505004    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
505005    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
505006    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
505007    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
505008    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
505009    +END;
MPRINT(EM_DIAGRAM):   END;
505010    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
505011    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
505012    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
505013    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
505014    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
505015    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
505016    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
505017    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
505018    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
505019    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
505020    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
505021    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
505022    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
505023    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
505024    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
505025    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
505026    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
505027    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
505028    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
505029    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
505030    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
505031    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
505032    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
505033    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
505034    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
505035    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
505036    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
505037    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
505038    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
505039    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
505040    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
505041    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
505042    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
505043    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
505044    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
505045    +   ELSE S_NumCatalogPurchases
505046    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
505047    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
505048    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
505049    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
505050    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
505051    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
505052    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
505053    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
505054    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
505055    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
505056    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
505057    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
505058    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
505059    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
505060    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
505061    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
505062    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
505063    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
505064    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
505065    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
505066    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
505067    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
505068    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
505069    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
505070    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
505071    +END;
MPRINT(EM_DIAGRAM):   END;
505072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505073    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
505074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505076    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
505077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505079    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
505080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505081    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
505082    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
505083    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
505084    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
505085    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
505086    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
505087    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
505088    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
505089    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
505090    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
505091    +          +     0.09708841024031 * S_NumDealsPurchases
505092    +          +    -0.29075561032014 * S_NumDistPurchases
505093    +          +    -0.14495394259873 * S_NumStorePurchases
505094    +          +     0.11890705145732 * S_NumWebPurchases
505095    +          +    -0.16954189911344 * S_NumWebVisitsMonth
505096    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
505097    +        S_RMntFrq  +     0.17150719398884 * S_Recency
505098    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
505099    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
505100    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
505101    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
505102    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
505103    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
505104    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
505105    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
505106    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
505107    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
505108    +          +     0.16274478997892 * S_NumDealsPurchases
505109    +          +     0.03966958784582 * S_NumDistPurchases
505110    +          +    -0.04714110726598 * S_NumStorePurchases
505111    +          +    -0.02124229528082 * S_NumWebPurchases
505112    +          +     0.29753299776832 * S_NumWebVisitsMonth
505113    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
505114    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
505115    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
505116    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
505117    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
505118    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
505119    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
505120    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
505121    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
505122    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
505123    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
505124    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
505125    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
505126    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
505127    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
505128    +        EducationGraduation  +     0.00619669837452 * EducationMaster
505129    +          +    -0.05037639679806 * Marital_StatusDivorced
505130    +          +     0.28781968727878 * Marital_StatusMarried
505131    +          +    -0.20382417074384 * Marital_StatusSingle
505132    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
505133    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
505134    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
505135    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
505136    +          +     0.06970969219123 * Marital_StatusDivorced
505137    +          +    -0.15787475744986 * Marital_StatusMarried
505138    +          +     0.14345344072192 * Marital_StatusSingle
505139    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
505140    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
505141    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
505142    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
505143    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
505144    +END;
MPRINT(EM_DIAGRAM):   END;
505145    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
505146    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
505147    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
505148    +END;
MPRINT(EM_DIAGRAM):   END;
505149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505150    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
505151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505152    +
505153    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
505154    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
505155    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
505156    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
505157    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
505158    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505159    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
505160    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
505161    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
505162    +end;
MPRINT(EM_DIAGRAM):   end;
505163    +else do;
MPRINT(EM_DIAGRAM):   else do;
505164    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
505165    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
505166    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
505167    +   end;
MPRINT(EM_DIAGRAM):   end;
505168    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
505169    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
505170    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
505171    +   end;
MPRINT(EM_DIAGRAM):   end;
505172    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505173    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
505174    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
505175    +   end;
MPRINT(EM_DIAGRAM):   end;
505176    +end;
MPRINT(EM_DIAGRAM):   end;
505177    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
505178    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
505179    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
505180    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
505181    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
505182    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
505183    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
505184    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
505185    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
505186    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
505187    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
505188    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
505189    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
505190    +END;
MPRINT(EM_DIAGRAM):   END;
505191    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
505192    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
505193    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
505194    +END;
MPRINT(EM_DIAGRAM):   END;
505195    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
505196    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
505197    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
505198    +END;
MPRINT(EM_DIAGRAM):   END;
505199    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
505200    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
505201    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
505202    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
505203    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
505204    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
505205    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
505206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505207    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
505208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505209    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
505210    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
505211    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
505212    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
505213    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
505214    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
505215    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
505216    +END;
MPRINT(EM_DIAGRAM):   END;
505217    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
505218    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
505219    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
505220    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
505221    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
505222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505223    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
505224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505225    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
505226    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
505227    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
505228    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
505229    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505230    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
505231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505232    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
505233    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
505234    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
505235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505236    +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
505237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505238    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505239    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
505240    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
505241    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
505242    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505243    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
505244    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
505245    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
505246    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
505247    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
505248    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
505249    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
505250    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
505251    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
505252    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
505253    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
505254    +LENGTH _WARN_ $4
505255    +      F_DepVar  $ 12
505256    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
505257    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
505258    +
505259    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
505260    +
505261    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
505262    +
505263    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
505264    +
505265    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
505266    +
505267    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
505268    +
505269    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
505270    +
505271    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
505272    +
505273    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
505274    +
505275    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
505276    +
505277    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
505278    +
505279    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
505280    +
505281    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
505282    +
505283    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
505284    +
505285    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
505286    +
505287    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
505288    +
505289    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
505290    +
505291    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
505292    +
505293    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
505294    +
505295    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
505296    +
505297    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
505298    +
505299    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
505300    +
505301    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
505302    +
505303    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
505304    +
505305    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
505306    +
505307    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
505308    +
505309    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
505310    +
505311    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
505312    +
505313    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
505314    +
505315    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
505316    +
505317    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
505318    +
505319    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
505320    +
505321    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
505322    +
505323    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
505324    +
505325    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
505326    +
505327    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
505328    +
505329    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
505330    +
505331    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
505332    +
505333    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
505334    +
505335    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
505336    +
505337    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
505338    +
505339    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
505340    +
505341    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
505342    +
505343    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
505344    +
505345    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
505346    +
505347    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
505348    +
505349    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
505350    +
505351    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
505352    +
505353    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
505354    +
505355    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
505356    +
505357    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
505358    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
505359    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
505360    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
505361    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505362    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505363    +end;
MPRINT(EM_DIAGRAM):   end;
505364    +else do;
MPRINT(EM_DIAGRAM):   else do;
505365    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505366    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
505367    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505368    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505369    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
505370    +   end;
MPRINT(EM_DIAGRAM):   end;
505371    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505372    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
505373    +   end;
MPRINT(EM_DIAGRAM):   end;
505374    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505375    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
505376    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505377    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505378    +   end;
MPRINT(EM_DIAGRAM):   end;
505379    +end;
MPRINT(EM_DIAGRAM):   end;
505380    +
505381    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
505382    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
505383    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
505384    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
505385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505387    +end;
MPRINT(EM_DIAGRAM):   end;
505388    +else do;
MPRINT(EM_DIAGRAM):   else do;
505389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505390    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
505391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505392    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505393    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
505394    +   end;
MPRINT(EM_DIAGRAM):   end;
505395    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505396    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
505397    +   end;
MPRINT(EM_DIAGRAM):   end;
505398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505399    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
505400    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505401    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505402    +   end;
MPRINT(EM_DIAGRAM):   end;
505403    +end;
MPRINT(EM_DIAGRAM):   end;
505404    +
505405    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
505406    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
505407    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
505408    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
505409    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505410    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505411    +end;
MPRINT(EM_DIAGRAM):   end;
505412    +else do;
MPRINT(EM_DIAGRAM):   else do;
505413    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505414    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
505415    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505416    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505417    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
505418    +   end;
MPRINT(EM_DIAGRAM):   end;
505419    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505420    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
505421    +   end;
MPRINT(EM_DIAGRAM):   end;
505422    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505423    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
505424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505426    +   end;
MPRINT(EM_DIAGRAM):   end;
505427    +end;
MPRINT(EM_DIAGRAM):   end;
505428    +
505429    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
505430    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
505431    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
505432    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
505433    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505434    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505435    +end;
MPRINT(EM_DIAGRAM):   end;
505436    +else do;
MPRINT(EM_DIAGRAM):   else do;
505437    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505438    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
505439    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505440    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505441    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
505442    +   end;
MPRINT(EM_DIAGRAM):   end;
505443    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505444    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
505445    +   end;
MPRINT(EM_DIAGRAM):   end;
505446    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505447    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
505448    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505449    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505450    +   end;
MPRINT(EM_DIAGRAM):   end;
505451    +end;
MPRINT(EM_DIAGRAM):   end;
505452    +
505453    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
505454    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
505455    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
505456    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
505457    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505459    +end;
MPRINT(EM_DIAGRAM):   end;
505460    +else do;
MPRINT(EM_DIAGRAM):   else do;
505461    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505462    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
505463    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505464    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505465    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
505466    +   end;
MPRINT(EM_DIAGRAM):   end;
505467    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505468    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
505469    +   end;
MPRINT(EM_DIAGRAM):   end;
505470    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505471    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
505472    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505473    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505474    +   end;
MPRINT(EM_DIAGRAM):   end;
505475    +end;
MPRINT(EM_DIAGRAM):   end;
505476    +
505477    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
505478    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
505479    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
505480    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
505481    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505483    +end;
MPRINT(EM_DIAGRAM):   end;
505484    +else do;
MPRINT(EM_DIAGRAM):   else do;
505485    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505486    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
505487    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505488    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
505489    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
505490    +   end;
MPRINT(EM_DIAGRAM):   end;
505491    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
505492    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
505493    +   end;
MPRINT(EM_DIAGRAM):   end;
505494    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505495    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
505496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505498    +   end;
MPRINT(EM_DIAGRAM):   end;
505499    +end;
MPRINT(EM_DIAGRAM):   end;
505500    +
505501    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
505502    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
505503    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
505504    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
505505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505507    +end;
MPRINT(EM_DIAGRAM):   end;
505508    +else do;
MPRINT(EM_DIAGRAM):   else do;
505509    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
505510    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
505511    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505512    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
505513    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
505514    +   end;
MPRINT(EM_DIAGRAM):   end;
505515    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
505516    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
505517    +   end;
MPRINT(EM_DIAGRAM):   end;
505518    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505519    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
505520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505522    +   end;
MPRINT(EM_DIAGRAM):   end;
505523    +end;
MPRINT(EM_DIAGRAM):   end;
505524    +
505525    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
505526    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
505527    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
505528    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
505529    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
505530    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
505531    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
505532    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
505533    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
505534    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
505535    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
505536    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
505537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505539    +end;
MPRINT(EM_DIAGRAM):   end;
505540    +else do;
MPRINT(EM_DIAGRAM):   else do;
505541    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
505542    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
505543    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505544    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
505545    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
505546    +   end;
MPRINT(EM_DIAGRAM):   end;
505547    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
505548    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
505549    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
505550    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
505551    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
505552    +   end;
MPRINT(EM_DIAGRAM):   end;
505553    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
505554    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
505555    +   end;
MPRINT(EM_DIAGRAM):   end;
505556    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
505557    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
505558    +   end;
MPRINT(EM_DIAGRAM):   end;
505559    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
505560    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
505561    +   end;
MPRINT(EM_DIAGRAM):   end;
505562    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505563    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
505564    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
505565    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
505566    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
505567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505569    +   end;
MPRINT(EM_DIAGRAM):   end;
505570    +end;
MPRINT(EM_DIAGRAM):   end;
505571    +
505572    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
505573    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
505574    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
505575    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
505576    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
505577    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
505578    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
505579    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
505580    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
505581    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
505582    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
505583    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
505584    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
505585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
505586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505587    +end;
MPRINT(EM_DIAGRAM):   end;
505588    +else do;
MPRINT(EM_DIAGRAM):   else do;
505589    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
505590    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
505591    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505592    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
505593    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
505594    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
505595    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
505596    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
505597    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505598    +         end;
MPRINT(EM_DIAGRAM):   end;
505599    +         else do;
MPRINT(EM_DIAGRAM):   else do;
505600    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
505601    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
505602    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505603    +            end;
MPRINT(EM_DIAGRAM):   end;
505604    +         end;
MPRINT(EM_DIAGRAM):   end;
505605    +      end;
MPRINT(EM_DIAGRAM):   end;
505606    +      else do;
MPRINT(EM_DIAGRAM):   else do;
505607    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
505608    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
505609    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505610    +         end;
MPRINT(EM_DIAGRAM):   end;
505611    +      end;
MPRINT(EM_DIAGRAM):   end;
505612    +   end;
MPRINT(EM_DIAGRAM):   end;
505613    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505614    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
505615    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
505616    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505617    +      end;
MPRINT(EM_DIAGRAM):   end;
505618    +      else do;
MPRINT(EM_DIAGRAM):   else do;
505619    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
505620    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
505621    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
505622    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
505623    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
505624    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
505625    +         end;
MPRINT(EM_DIAGRAM):   end;
505626    +      end;
MPRINT(EM_DIAGRAM):   end;
505627    +   end;
MPRINT(EM_DIAGRAM):   end;
505628    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
505629    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
505630    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
505631    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
505632    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
505633    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
505634    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505635    +   end;
MPRINT(EM_DIAGRAM):   end;
505636    +end;
MPRINT(EM_DIAGRAM):   end;
505637    +
505638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505639    +*** Checking missing input Interval
505640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
505641    +
505642    +IF NMISS(
505643    +   AcceptedCmpTotal ,
505644    +   Age ,
505645    +   Frq ,
505646    +   Income ,
505647    +   Kidhome ,
505648    +   Mnt ,
505649    +   MntFishProducts ,
505650    +   MntFruits ,
505651    +   MntGoldProds ,
505652    +   MntMeatProducts ,
505653    +   MntSweetProducts ,
505654    +   MntWines ,
505655    +   MonthsAsCustomer ,
505656    +   NumCatalogPurchases ,
505657    +   NumDealsPurchases ,
505658    +   NumDistPurchases ,
505659    +   NumStorePurchases ,
505660    +   NumWebPurchases ,
505661    +   NumWebVisitsMonth ,
505662    +   RFMstat ,
505663    +   RMntFrq ,
505664    +   Recency ,
505665    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
505666    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
505667    +
505668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
505669    +END;
MPRINT(EM_DIAGRAM):   END;
505670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505671    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
505672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505673    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
505674    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
505675    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
505676    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
505677    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
505678    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
505679    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
505680    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
505681    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
505682    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
505683    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
505684    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
505685    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
505686    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
505687    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
505688    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
505689    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
505690    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
505691    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
505692    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
505693    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
505694    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
505695    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
505696    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
505697    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
505698    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
505699    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
505700    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
505701    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
505702    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
505703    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
505704    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
505705    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
505706    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
505707    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
505708    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
505709    +END;
MPRINT(EM_DIAGRAM):   END;
505710    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
505711    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
505712    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
505713    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
505714    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
505715    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
505716    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
505717    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
505718    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
505719    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
505720    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
505721    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
505722    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
505723    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
505724    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
505725    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
505726    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
505727    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
505728    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
505729    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
505730    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
505731    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
505732    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
505733    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
505734    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
505735    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
505736    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
505737    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
505738    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
505739    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
505740    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
505741    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
505742    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
505743    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
505744    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
505745    +   ELSE S_NumCatalogPurchases
505746    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
505747    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
505748    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
505749    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
505750    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
505751    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
505752    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
505753    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
505754    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
505755    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
505756    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
505757    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
505758    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
505759    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
505760    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
505761    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
505762    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
505763    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
505764    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
505765    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
505766    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
505767    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
505768    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
505769    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
505770    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
505771    +END;
MPRINT(EM_DIAGRAM):   END;
505772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505773    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
505774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505776    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
505777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505779    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
505780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505781    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
505782    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
505783    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
505784    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
505785    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
505786    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
505787    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
505788    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
505789    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
505790    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
505791    +          +    -1.14704878034134 * S_NumDealsPurchases
505792    +          +    -0.17763404274659 * S_NumDistPurchases
505793    +          +     0.08894400267969 * S_NumStorePurchases
505794    +          +     0.59283747891957 * S_NumWebPurchases
505795    +          +     0.85268274682505 * S_NumWebVisitsMonth
505796    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
505797    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
505798    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
505799    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
505800    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
505801    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
505802    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
505803    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
505804    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
505805    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
505806    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
505807    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
505808    +          +    -0.80841566068716 * S_NumDealsPurchases
505809    +          +    -0.17995640033768 * S_NumDistPurchases
505810    +          +     0.00713417460936 * S_NumStorePurchases
505811    +          +     0.57881024323076 * S_NumWebPurchases
505812    +          +    -1.35134224257365 * S_NumWebVisitsMonth
505813    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
505814    +        S_RMntFrq  +     1.16978656262499 * S_Recency
505815    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
505816    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
505817    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
505818    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
505819    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
505820    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
505821    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
505822    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
505823    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
505824    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
505825    +          +     0.57891364118717 * S_NumDealsPurchases
505826    +          +    -0.31024556838688 * S_NumDistPurchases
505827    +          +    -1.48708542986704 * S_NumStorePurchases
505828    +          +    -0.93009875249206 * S_NumWebPurchases
505829    +          +     2.01900039122935 * S_NumWebVisitsMonth
505830    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
505831    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
505832    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
505833    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
505834    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
505835    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
505836    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
505837    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
505838    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
505839    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
505840    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
505841    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
505842    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
505843    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
505844    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
505845    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
505846    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
505847    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
505848    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
505849    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
505850    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
505851    +          +     0.55883606830033 * Marital_StatusDivorced
505852    +          +    -0.54530037567066 * Marital_StatusMarried
505853    +          +    -0.52994736075753 * Marital_StatusSingle
505854    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
505855    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
505856    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
505857    +        EducationGraduation  +     0.31201349236277 * EducationMaster
505858    +          +    -1.07368484057033 * Marital_StatusDivorced
505859    +          +     2.73313504711262 * Marital_StatusMarried
505860    +          +    -2.18530462876058 * Marital_StatusSingle
505861    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
505862    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
505863    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
505864    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
505865    +          +     0.49993144243043 * Marital_StatusDivorced
505866    +          +    -0.38953339116829 * Marital_StatusMarried
505867    +          +    -0.10836287319942 * Marital_StatusSingle
505868    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
505869    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
505870    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
505871    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
505872    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
505873    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
505874    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
505875    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
505876    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
505877    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
505878    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
505879    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
505880    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
505881    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
505882    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
505883    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
505884    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
505885    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
505886    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
505887    +END;
MPRINT(EM_DIAGRAM):   END;
505888    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
505889    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
505890    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
505891    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
505892    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
505893    +END;
MPRINT(EM_DIAGRAM):   END;
505894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505895    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
505896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505897    +
505898    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
505899    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
505900    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
505901    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
505902    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
505903    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
505904    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
505905    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
505906    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
505907    +end;
MPRINT(EM_DIAGRAM):   end;
505908    +else do;
MPRINT(EM_DIAGRAM):   else do;
505909    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
505910    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
505911    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
505912    +   end;
MPRINT(EM_DIAGRAM):   end;
505913    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
505914    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
505915    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
505916    +   end;
MPRINT(EM_DIAGRAM):   end;
505917    +   else do;
MPRINT(EM_DIAGRAM):   else do;
505918    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
505919    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
505920    +   end;
MPRINT(EM_DIAGRAM):   end;
505921    +end;
MPRINT(EM_DIAGRAM):   end;
505922    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
505923    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
505924    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
505925    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
505926    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
505927    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
505928    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
505929    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
505930    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
505931    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
505932    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
505933    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
505934    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
505935    +END;
MPRINT(EM_DIAGRAM):   END;
505936    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
505937    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
505938    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
505939    +END;
MPRINT(EM_DIAGRAM):   END;
505940    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
505941    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
505942    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
505943    +END;
MPRINT(EM_DIAGRAM):   END;
505944    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
505945    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
505946    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
505947    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
505948    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
505949    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
505950    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
505951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505952    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
505953    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
505954    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
505955    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
505956    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
505957    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
505958    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
505959    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
505960    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
505961    +END;
MPRINT(EM_DIAGRAM):   END;
505962    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
505963    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
505964    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
505965    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
505966    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
505967    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505968    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
505969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505970    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
505971    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
505972    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
505973    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
505974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505975    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
505976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505977    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
505978    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
505979    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
505980    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505981    +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
505982    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505984    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
505985    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
505986    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
505987    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
505988    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
505989    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
505990    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
505991    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
505992    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
505993    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
505994    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
505995    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
505996    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
505997    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
505998    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
505999    +LENGTH _WARN_ $4
506000    +      F_DepVar  $ 12
506001    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
506002    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
506003    +
506004    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
506005    +
506006    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
506007    +
506008    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
506009    +
506010    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
506011    +
506012    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
506013    +
506014    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
506015    +
506016    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
506017    +
506018    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
506019    +
506020    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
506021    +
506022    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
506023    +
506024    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
506025    +
506026    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
506027    +
506028    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
506029    +
506030    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
506031    +
506032    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
506033    +
506034    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
506035    +
506036    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
506037    +
506038    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
506039    +
506040    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
506041    +
506042    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
506043    +
506044    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
506045    +
506046    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
506047    +
506048    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
506049    +
506050    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
506051    +
506052    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
506053    +
506054    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
506055    +
506056    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
506057    +
506058    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
506059    +
506060    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
506061    +
506062    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
506063    +
506064    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
506065    +
506066    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
506067    +
506068    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
506069    +
506070    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
506071    +
506072    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
506073    +
506074    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
506075    +
506076    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
506077    +
506078    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
506079    +
506080    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
506081    +
506082    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
506083    +
506084    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
506085    +
506086    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
506087    +
506088    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
506089    +
506090    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
506091    +
506092    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
506093    +
506094    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
506095    +
506096    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
506097    +
506098    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
506099    +
506100    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
506101    +
506102    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
506103    +
506104    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
506105    +
506106    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
506107    +
506108    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
506109    +
506110    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
506111    +
506112    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
506113    +
506114    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
506115    +
506116    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
506117    +
506118    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
506119    +
506120    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
506121    +
506122    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
506123    +
506124    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
506125    +
506126    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
506127    +
506128    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
506129    +
506130    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
506131    +
506132    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
506133    +
506134    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
506135    +
506136    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
506137    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
506138    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
506139    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
506140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506142    +end;
MPRINT(EM_DIAGRAM):   end;
506143    +else do;
MPRINT(EM_DIAGRAM):   else do;
506144    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506145    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
506146    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506147    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506148    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
506149    +   end;
MPRINT(EM_DIAGRAM):   end;
506150    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506151    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
506152    +   end;
MPRINT(EM_DIAGRAM):   end;
506153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506154    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
506155    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506156    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506157    +   end;
MPRINT(EM_DIAGRAM):   end;
506158    +end;
MPRINT(EM_DIAGRAM):   end;
506159    +
506160    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
506161    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
506162    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
506163    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
506164    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506166    +end;
MPRINT(EM_DIAGRAM):   end;
506167    +else do;
MPRINT(EM_DIAGRAM):   else do;
506168    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506169    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
506170    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506171    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506172    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
506173    +   end;
MPRINT(EM_DIAGRAM):   end;
506174    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506175    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
506176    +   end;
MPRINT(EM_DIAGRAM):   end;
506177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506178    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
506179    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506180    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506181    +   end;
MPRINT(EM_DIAGRAM):   end;
506182    +end;
MPRINT(EM_DIAGRAM):   end;
506183    +
506184    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
506185    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
506186    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
506187    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
506188    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506189    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506190    +end;
MPRINT(EM_DIAGRAM):   end;
506191    +else do;
MPRINT(EM_DIAGRAM):   else do;
506192    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506193    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
506194    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506195    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506196    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
506197    +   end;
MPRINT(EM_DIAGRAM):   end;
506198    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506199    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
506200    +   end;
MPRINT(EM_DIAGRAM):   end;
506201    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506202    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
506203    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506204    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506205    +   end;
MPRINT(EM_DIAGRAM):   end;
506206    +end;
MPRINT(EM_DIAGRAM):   end;
506207    +
506208    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
506209    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
506210    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
506211    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
506212    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506213    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506214    +end;
MPRINT(EM_DIAGRAM):   end;
506215    +else do;
MPRINT(EM_DIAGRAM):   else do;
506216    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506217    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
506218    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506219    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506220    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
506221    +   end;
MPRINT(EM_DIAGRAM):   end;
506222    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506223    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
506224    +   end;
MPRINT(EM_DIAGRAM):   end;
506225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506226    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
506227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506229    +   end;
MPRINT(EM_DIAGRAM):   end;
506230    +end;
MPRINT(EM_DIAGRAM):   end;
506231    +
506232    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
506233    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
506234    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
506235    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
506236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506238    +end;
MPRINT(EM_DIAGRAM):   end;
506239    +else do;
MPRINT(EM_DIAGRAM):   else do;
506240    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506241    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
506242    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506243    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506244    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
506245    +   end;
MPRINT(EM_DIAGRAM):   end;
506246    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506247    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
506248    +   end;
MPRINT(EM_DIAGRAM):   end;
506249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506250    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
506251    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506252    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506253    +   end;
MPRINT(EM_DIAGRAM):   end;
506254    +end;
MPRINT(EM_DIAGRAM):   end;
506255    +
506256    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
506257    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
506258    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
506259    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
506260    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506262    +end;
MPRINT(EM_DIAGRAM):   end;
506263    +else do;
MPRINT(EM_DIAGRAM):   else do;
506264    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506265    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
506266    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506267    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
506268    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
506269    +   end;
MPRINT(EM_DIAGRAM):   end;
506270    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
506271    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
506272    +   end;
MPRINT(EM_DIAGRAM):   end;
506273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506274    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
506275    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506276    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506277    +   end;
MPRINT(EM_DIAGRAM):   end;
506278    +end;
MPRINT(EM_DIAGRAM):   end;
506279    +
506280    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
506281    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
506282    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
506283    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
506284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506286    +end;
MPRINT(EM_DIAGRAM):   end;
506287    +else do;
MPRINT(EM_DIAGRAM):   else do;
506288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
506289    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
506290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506291    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
506292    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
506293    +   end;
MPRINT(EM_DIAGRAM):   end;
506294    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
506295    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
506296    +   end;
MPRINT(EM_DIAGRAM):   end;
506297    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506298    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
506299    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506300    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506301    +   end;
MPRINT(EM_DIAGRAM):   end;
506302    +end;
MPRINT(EM_DIAGRAM):   end;
506303    +
506304    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
506305    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
506306    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
506307    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
506308    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
506309    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
506310    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
506311    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
506312    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
506313    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
506314    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
506315    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
506316    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506317    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506318    +end;
MPRINT(EM_DIAGRAM):   end;
506319    +else do;
MPRINT(EM_DIAGRAM):   else do;
506320    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
506321    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
506322    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506323    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
506324    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
506325    +   end;
MPRINT(EM_DIAGRAM):   end;
506326    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
506327    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
506328    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
506329    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
506330    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
506331    +   end;
MPRINT(EM_DIAGRAM):   end;
506332    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
506333    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
506334    +   end;
MPRINT(EM_DIAGRAM):   end;
506335    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
506336    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
506337    +   end;
MPRINT(EM_DIAGRAM):   end;
506338    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
506339    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
506340    +   end;
MPRINT(EM_DIAGRAM):   end;
506341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506342    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
506343    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
506344    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
506345    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
506346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506348    +   end;
MPRINT(EM_DIAGRAM):   end;
506349    +end;
MPRINT(EM_DIAGRAM):   end;
506350    +
506351    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
506352    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
506353    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
506354    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
506355    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
506356    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
506357    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
506358    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
506359    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
506360    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
506361    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
506362    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
506363    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
506364    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
506365    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506366    +end;
MPRINT(EM_DIAGRAM):   end;
506367    +else do;
MPRINT(EM_DIAGRAM):   else do;
506368    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
506369    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
506370    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
506371    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
506372    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
506373    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
506374    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
506375    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
506376    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506377    +         end;
MPRINT(EM_DIAGRAM):   end;
506378    +         else do;
MPRINT(EM_DIAGRAM):   else do;
506379    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
506380    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
506381    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506382    +            end;
MPRINT(EM_DIAGRAM):   end;
506383    +         end;
MPRINT(EM_DIAGRAM):   end;
506384    +      end;
MPRINT(EM_DIAGRAM):   end;
506385    +      else do;
MPRINT(EM_DIAGRAM):   else do;
506386    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
506387    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
506388    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506389    +         end;
MPRINT(EM_DIAGRAM):   end;
506390    +      end;
MPRINT(EM_DIAGRAM):   end;
506391    +   end;
MPRINT(EM_DIAGRAM):   end;
506392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
506393    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
506394    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
506395    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506396    +      end;
MPRINT(EM_DIAGRAM):   end;
506397    +      else do;
MPRINT(EM_DIAGRAM):   else do;
506398    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
506399    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
506400    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
506401    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
506402    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
506403    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
506404    +         end;
MPRINT(EM_DIAGRAM):   end;
506405    +      end;
MPRINT(EM_DIAGRAM):   end;
506406    +   end;
MPRINT(EM_DIAGRAM):   end;
506407    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
506408    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
506409    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
506410    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
506411    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
506412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
506413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506414    +   end;
MPRINT(EM_DIAGRAM):   end;
506415    +end;
MPRINT(EM_DIAGRAM):   end;
506416    +
506417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506418    +*** Checking missing input Interval
506419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
506420    +
506421    +IF NMISS(
506422    +   AcceptedCmpTotal ,
506423    +   Age ,
506424    +   Frq ,
506425    +   Income ,
506426    +   Kidhome ,
506427    +   Mnt ,
506428    +   MntFishProducts ,
506429    +   MntFruits ,
506430    +   MntGoldProds ,
506431    +   MntMeatProducts ,
506432    +   MntSweetProducts ,
506433    +   MntWines ,
506434    +   MonthsAsCustomer ,
506435    +   NumCatalogPurchases ,
506436    +   NumDealsPurchases ,
506437    +   NumDistPurchases ,
506438    +   NumStorePurchases ,
506439    +   NumWebPurchases ,
506440    +   NumWebVisitsMonth ,
506441    +   RFMstat ,
506442    +   RMntFrq ,
506443    +   Recency ,
506444    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
506445    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
506446    +
506447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
506448    +END;
MPRINT(EM_DIAGRAM):   END;
506449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506450    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
506451    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506452    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506453    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
506454    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
506455    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
506456    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
506457    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
506458    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
506459    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
506460    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
506461    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
506462    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
506463    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
506464    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
506465    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
506466    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
506467    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
506468    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
506469    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
506470    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
506471    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
506472    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
506473    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
506474    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
506475    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
506476    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
506477    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
506478    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
506479    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
506480    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
506481    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
506482    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
506483    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
506484    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
506485    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
506486    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
506487    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
506488    +END;
MPRINT(EM_DIAGRAM):   END;
506489    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506490    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
506491    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
506492    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
506493    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
506494    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
506495    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
506496    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
506497    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
506498    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
506499    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
506500    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
506501    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
506502    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
506503    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
506504    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
506505    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
506506    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
506507    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
506508    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
506509    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
506510    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
506511    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
506512    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
506513    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
506514    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
506515    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
506516    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
506517    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
506518    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
506519    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
506520    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
506521    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
506522    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
506523    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
506524    +   ELSE S_NumCatalogPurchases
506525    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
506526    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
506527    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
506528    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
506529    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
506530    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
506531    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
506532    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
506533    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
506534    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
506535    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
506536    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
506537    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
506538    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
506539    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
506540    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
506541    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
506542    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
506543    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
506544    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
506545    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
506546    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
506547    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
506548    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
506549    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
506550    +END;
MPRINT(EM_DIAGRAM):   END;
506551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506552    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
506553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506555    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
506556    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506558    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
506559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506560    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506561    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
506562    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
506563    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
506564    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
506565    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
506566    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
506567    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
506568    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
506569    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
506570    +          +     1.17276395296242 * S_NumDealsPurchases
506571    +          +     0.26632768295477 * S_NumDistPurchases
506572    +          +    -1.26575615903579 * S_NumStorePurchases
506573    +          +    -0.95316107557927 * S_NumWebPurchases
506574    +          +     1.01828574356487 * S_NumWebVisitsMonth
506575    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
506576    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
506577    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
506578    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
506579    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
506580    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
506581    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
506582    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
506583    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
506584    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
506585    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
506586    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
506587    +          +     1.14485571201233 * S_NumDealsPurchases
506588    +          +     0.21414266588987 * S_NumDistPurchases
506589    +          +    -0.10530090074297 * S_NumStorePurchases
506590    +          +    -0.41712321238458 * S_NumWebPurchases
506591    +          +    -0.99760766791108 * S_NumWebVisitsMonth
506592    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
506593    +        S_RMntFrq  +     1.10040128548883 * S_Recency
506594    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
506595    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
506596    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
506597    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
506598    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
506599    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
506600    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
506601    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
506602    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
506603    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
506604    +          +      0.7196418967437 * S_NumDealsPurchases
506605    +          +     0.69035286374177 * S_NumDistPurchases
506606    +          +     0.38027656631135 * S_NumStorePurchases
506607    +          +    -0.18878358997924 * S_NumWebPurchases
506608    +          +     1.61962062004798 * S_NumWebVisitsMonth
506609    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
506610    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
506611    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
506612    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
506613    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
506614    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
506615    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
506616    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
506617    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
506618    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
506619    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
506620    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
506621    +          +    -0.00642902007204 * S_NumDealsPurchases
506622    +          +     0.29785069480367 * S_NumDistPurchases
506623    +          +    -0.42243322063147 * S_NumStorePurchases
506624    +          +     0.54880896338383 * S_NumWebPurchases
506625    +          +    -0.12525846016886 * S_NumWebVisitsMonth
506626    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
506627    +        S_RMntFrq  +     0.10252211581449 * S_Recency
506628    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
506629    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
506630    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
506631    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
506632    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
506633    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
506634    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
506635    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
506636    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
506637    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
506638    +          +    -0.48404738328225 * S_NumDealsPurchases
506639    +          +    -0.02464180457879 * S_NumDistPurchases
506640    +          +     1.17201831082067 * S_NumStorePurchases
506641    +          +     0.57453655167516 * S_NumWebPurchases
506642    +          +    -1.94417019790248 * S_NumWebVisitsMonth
506643    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
506644    +        S_RMntFrq  +      1.6169916658132 * S_Recency
506645    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
506646    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
506647    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
506648    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
506649    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
506650    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
506651    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
506652    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
506653    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
506654    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
506655    +          +    -1.49850531967483 * S_NumDealsPurchases
506656    +          +    -0.82105466264223 * S_NumDistPurchases
506657    +          +     0.29984603642824 * S_NumStorePurchases
506658    +          +     0.06557123721611 * S_NumWebPurchases
506659    +          +     1.04754749365002 * S_NumWebVisitsMonth
506660    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
506661    +        S_RMntFrq  +     0.12396789666359 * S_Recency
506662    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
506663    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
506664    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
506665    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
506666    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
506667    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
506668    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
506669    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
506670    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
506671    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
506672    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
506673    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
506674    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
506675    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
506676    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
506677    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
506678    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
506679    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
506680    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
506681    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
506682    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
506683    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
506684    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
506685    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
506686    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
506687    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
506688    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
506689    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
506690    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
506691    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
506692    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
506693    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
506694    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
506695    +        EducationGraduation  +     0.07595631354847 * EducationMaster
506696    +          +     0.24583509957712 * Marital_StatusDivorced
506697    +          +    -0.22681931588361 * Marital_StatusMarried
506698    +          +    -0.12924106229536 * Marital_StatusSingle
506699    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
506700    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
506701    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
506702    +        EducationGraduation  +     0.23015089246655 * EducationMaster
506703    +          +    -0.12585334311068 * Marital_StatusDivorced
506704    +          +    -0.20835502467207 * Marital_StatusMarried
506705    +          +    -0.13839534449368 * Marital_StatusSingle
506706    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
506707    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
506708    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
506709    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
506710    +          +     0.35106363238113 * Marital_StatusDivorced
506711    +          +     -1.3414808583918 * Marital_StatusMarried
506712    +          +     1.40835320798486 * Marital_StatusSingle
506713    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
506714    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
506715    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
506716    +        EducationGraduation  +      0.1746658332011 * EducationMaster
506717    +          +     0.48174546958393 * Marital_StatusDivorced
506718    +          +    -0.41416978858191 * Marital_StatusMarried
506719    +          +    -0.23376801546265 * Marital_StatusSingle
506720    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
506721    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
506722    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
506723    +        EducationGraduation  +     0.68875064631577 * EducationMaster
506724    +          +    -0.67557643774246 * Marital_StatusDivorced
506725    +          +     1.63844045917367 * Marital_StatusMarried
506726    +          +    -0.70320960247699 * Marital_StatusSingle
506727    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
506728    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
506729    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
506730    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
506731    +          +    -0.11371453086883 * Marital_StatusDivorced
506732    +          +    -0.34226997176291 * Marital_StatusMarried
506733    +          +    -1.01568676685754 * Marital_StatusSingle
506734    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
506735    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
506736    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
506737    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
506738    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
506739    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
506740    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
506741    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
506742    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
506743    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
506744    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
506745    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
506746    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
506747    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
506748    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
506749    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
506750    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
506751    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
506752    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
506753    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
506754    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
506755    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
506756    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
506757    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
506758    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
506759    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
506760    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
506761    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
506762    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
506763    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
506764    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
506765    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
506766    +END;
MPRINT(EM_DIAGRAM):   END;
506767    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506768    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
506769    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
506770    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
506771    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
506772    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
506773    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
506774    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
506775    +END;
MPRINT(EM_DIAGRAM):   END;
506776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506777    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
506778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506779    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506780    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
506781    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
506782    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
506783    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
506784    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
506785    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
506786    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
506787    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
506788    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
506789    +          +    -0.87259051567474 * S_NumDealsPurchases
506790    +          +    -0.36454149529139 * S_NumDistPurchases
506791    +          +     0.12447759925061 * S_NumStorePurchases
506792    +          +    -1.08133487947367 * S_NumWebPurchases
506793    +          +    -0.49882157745454 * S_NumWebVisitsMonth
506794    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
506795    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
506796    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
506797    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
506798    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
506799    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
506800    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
506801    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
506802    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
506803    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
506804    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
506805    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
506806    +          +     2.23121497416403 * S_NumDealsPurchases
506807    +          +    -0.48674842191071 * S_NumDistPurchases
506808    +          +     1.77510728607544 * S_NumStorePurchases
506809    +          +     0.14647433155436 * S_NumWebPurchases
506810    +          +    -0.95892686924419 * S_NumWebVisitsMonth
506811    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
506812    +        S_RMntFrq  +     2.46497777428475 * S_Recency
506813    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
506814    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
506815    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
506816    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
506817    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
506818    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
506819    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
506820    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
506821    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
506822    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
506823    +          +     0.14338855349611 * S_NumDealsPurchases
506824    +          +    -2.21071010829235 * S_NumDistPurchases
506825    +          +    -0.21795889348002 * S_NumStorePurchases
506826    +          +     1.98825087883535 * S_NumWebPurchases
506827    +          +     1.02482442531149 * S_NumWebVisitsMonth
506828    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
506829    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
506830    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
506831    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
506832    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
506833    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
506834    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
506835    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
506836    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
506837    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
506838    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
506839    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
506840    +          +     0.30041205661012 * S_NumDealsPurchases
506841    +          +    -0.63499849986918 * S_NumDistPurchases
506842    +          +    -0.34155713433714 * S_NumStorePurchases
506843    +          +    -1.14183354933936 * S_NumWebPurchases
506844    +          +    -0.42681980262973 * S_NumWebVisitsMonth
506845    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
506846    +        S_RMntFrq  +     1.25852246467612 * S_Recency
506847    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
506848    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
506849    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
506850    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
506851    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
506852    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
506853    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
506854    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
506855    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
506856    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
506857    +          +    -0.21237915559831 * S_NumDealsPurchases
506858    +          +     0.48256923764182 * S_NumDistPurchases
506859    +          +    -0.45553093140641 * S_NumStorePurchases
506860    +          +      0.5593655963659 * S_NumWebPurchases
506861    +          +     0.27943768691188 * S_NumWebVisitsMonth
506862    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
506863    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
506864    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
506865    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
506866    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
506867    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
506868    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
506869    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
506870    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
506871    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
506872    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
506873    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
506874    +          +     2.38967021388062 * S_NumDealsPurchases
506875    +          +    -0.97722398866481 * S_NumDistPurchases
506876    +          +     1.57612333191312 * S_NumStorePurchases
506877    +          +    -0.75968679115983 * S_NumWebPurchases
506878    +          +    -0.64207187757251 * S_NumWebVisitsMonth
506879    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
506880    +        S_RMntFrq  +     1.71313869798331 * S_Recency
506881    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
506882    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
506883    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
506884    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
506885    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
506886    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
506887    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
506888    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
506889    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
506890    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
506891    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
506892    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
506893    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
506894    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
506895    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
506896    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
506897    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
506898    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
506899    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
506900    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
506901    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
506902    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
506903    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
506904    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
506905    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
506906    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
506907    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
506908    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
506909    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
506910    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
506911    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
506912    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
506913    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
506914    +        EducationGraduation  +      0.1073450284316 * EducationMaster
506915    +          +     0.96470902298142 * Marital_StatusDivorced
506916    +          +     0.94805959268314 * Marital_StatusMarried
506917    +          +     -0.6523948769616 * Marital_StatusSingle
506918    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
506919    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
506920    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
506921    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
506922    +          +      0.3918249505531 * Marital_StatusDivorced
506923    +          +    -0.00968091979586 * Marital_StatusMarried
506924    +          +     0.84615379885071 * Marital_StatusSingle
506925    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
506926    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
506927    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
506928    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
506929    +          +     1.14335160313191 * Marital_StatusDivorced
506930    +          +     0.50580517192175 * Marital_StatusMarried
506931    +          +     0.17264295020921 * Marital_StatusSingle
506932    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
506933    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
506934    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
506935    +        EducationGraduation  +     1.95818378342783 * EducationMaster
506936    +          +    -0.11238504444225 * Marital_StatusDivorced
506937    +          +    -0.81348274043749 * Marital_StatusMarried
506938    +          +     0.46075415610001 * Marital_StatusSingle
506939    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
506940    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
506941    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
506942    +        EducationGraduation  +     0.08396135672504 * EducationMaster
506943    +          +    -0.46342068701431 * Marital_StatusDivorced
506944    +          +    -0.41667845270204 * Marital_StatusMarried
506945    +          +    -0.47166707496281 * Marital_StatusSingle
506946    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
506947    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
506948    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
506949    +        EducationGraduation  +     0.36656103863186 * EducationMaster
506950    +          +    -0.45376613787812 * Marital_StatusDivorced
506951    +          +     0.01337046049801 * Marital_StatusMarried
506952    +          +    -0.92811489484121 * Marital_StatusSingle
506953    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
506954    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
506955    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
506956    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
506957    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
506958    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
506959    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
506960    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
506961    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
506962    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
506963    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
506964    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
506965    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
506966    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
506967    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
506968    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
506969    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
506970    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
506971    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
506972    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
506973    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
506974    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
506975    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
506976    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
506977    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
506978    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
506979    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
506980    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
506981    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
506982    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
506983    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
506984    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
506985    +END;
MPRINT(EM_DIAGRAM):   END;
506986    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
506987    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
506988    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
506989    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
506990    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
506991    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
506992    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
506993    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
506994    +END;
MPRINT(EM_DIAGRAM):   END;
506995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506996    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
506997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
506998    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
506999    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
507000    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
507001    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
507002    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
507003    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
507004    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
507005    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
507006    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
507007    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
507008    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
507009    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
507010    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
507011    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
507012    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
507013    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
507014    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
507015    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
507016    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
507017    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
507018    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
507019    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
507020    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
507021    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
507022    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
507023    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
507024    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
507025    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
507026    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
507027    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
507028    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
507029    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
507030    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
507031    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
507032    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
507033    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
507034    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
507035    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
507036    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
507037    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
507038    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
507039    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
507040    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
507041    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
507042    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
507043    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
507044    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
507045    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
507046    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
507047    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
507048    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
507049    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
507050    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
507051    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
507052    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
507053    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
507054    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
507055    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
507056    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
507057    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
507058    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
507059    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
507060    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
507061    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
507062    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
507063    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
507064    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
507065    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
507066    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
507067    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
507068    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
507069    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
507070    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
507071    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
507072    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
507073    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
507074    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
507075    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
507076    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
507077    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
507078    +END;
MPRINT(EM_DIAGRAM):   END;
507079    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507080    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
507081    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
507082    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
507083    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
507084    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
507085    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
507086    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
507087    +END;
MPRINT(EM_DIAGRAM):   END;
507088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507089    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
507090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507091    +
507092    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
507093    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
507094    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507095    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
507096    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
507097    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507098    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
507099    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507100    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507101    +end;
MPRINT(EM_DIAGRAM):   end;
507102    +else do;
MPRINT(EM_DIAGRAM):   else do;
507103    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
507104    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
507105    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
507106    +   end;
MPRINT(EM_DIAGRAM):   end;
507107    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
507108    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
507109    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
507110    +   end;
MPRINT(EM_DIAGRAM):   end;
507111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507112    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507113    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507114    +   end;
MPRINT(EM_DIAGRAM):   end;
507115    +end;
MPRINT(EM_DIAGRAM):   end;
507116    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507117    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
507118    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
507119    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
507120    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
507121    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
507122    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
507123    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
507124    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
507125    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
507126    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
507127    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
507128    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
507129    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
507130    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
507131    +END;
MPRINT(EM_DIAGRAM):   END;
507132    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507133    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
507134    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
507135    +END;
MPRINT(EM_DIAGRAM):   END;
507136    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
507137    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
507138    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
507139    +END;
MPRINT(EM_DIAGRAM):   END;
507140    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
507141    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
507142    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
507143    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
507144    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
507145    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
507146    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
507147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507148    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
507149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507150    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
507151    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
507152    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
507153    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
507154    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
507155    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
507156    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
507157    +END;
MPRINT(EM_DIAGRAM):   END;
507158    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
507159    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
507160    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
507161    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
507162    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
507163    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507164    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
507165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507166    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
507167    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
507168    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
507169    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
507170    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507171    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
507172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507173    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
507174    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
507175    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
507176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507177    +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
507178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507180    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
507181    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
507182    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
507183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
507184    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
507185    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
507186    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
507187    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
507188    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
507189    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
507190    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
507191    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
507192    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
507193    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
507194    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
507195    +LENGTH _WARN_ $4
507196    +      F_DepVar  $ 12
507197    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
507198    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
507199    +
507200    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
507201    +
507202    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
507203    +
507204    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
507205    +
507206    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
507207    +
507208    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
507209    +
507210    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
507211    +
507212    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
507213    +
507214    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
507215    +
507216    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
507217    +
507218    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
507219    +
507220    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
507221    +
507222    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
507223    +
507224    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
507225    +
507226    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
507227    +
507228    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
507229    +
507230    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
507231    +
507232    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
507233    +
507234    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
507235    +
507236    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
507237    +
507238    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
507239    +
507240    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
507241    +
507242    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
507243    +
507244    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
507245    +
507246    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
507247    +
507248    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
507249    +
507250    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
507251    +
507252    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
507253    +
507254    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
507255    +
507256    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
507257    +
507258    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
507259    +
507260    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
507261    +
507262    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
507263    +
507264    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
507265    +
507266    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
507267    +
507268    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
507269    +
507270    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
507271    +
507272    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
507273    +
507274    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
507275    +
507276    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
507277    +
507278    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
507279    +
507280    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
507281    +
507282    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
507283    +
507284    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
507285    +
507286    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
507287    +
507288    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
507289    +
507290    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507291    +
507292    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
507293    +
507294    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
507295    +
507296    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
507297    +
507298    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
507299    +
507300    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
507301    +
507302    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
507303    +
507304    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
507305    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
507306    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
507307    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
507308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507310    +end;
MPRINT(EM_DIAGRAM):   end;
507311    +else do;
MPRINT(EM_DIAGRAM):   else do;
507312    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507313    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
507314    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507315    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507316    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
507317    +   end;
MPRINT(EM_DIAGRAM):   end;
507318    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507319    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
507320    +   end;
MPRINT(EM_DIAGRAM):   end;
507321    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507322    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
507323    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507324    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507325    +   end;
MPRINT(EM_DIAGRAM):   end;
507326    +end;
MPRINT(EM_DIAGRAM):   end;
507327    +
507328    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
507329    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
507330    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
507331    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
507332    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507333    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507334    +end;
MPRINT(EM_DIAGRAM):   end;
507335    +else do;
MPRINT(EM_DIAGRAM):   else do;
507336    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507337    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
507338    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507339    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507340    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
507341    +   end;
MPRINT(EM_DIAGRAM):   end;
507342    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507343    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
507344    +   end;
MPRINT(EM_DIAGRAM):   end;
507345    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507346    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
507347    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507348    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507349    +   end;
MPRINT(EM_DIAGRAM):   end;
507350    +end;
MPRINT(EM_DIAGRAM):   end;
507351    +
507352    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
507353    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
507354    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
507355    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
507356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507358    +end;
MPRINT(EM_DIAGRAM):   end;
507359    +else do;
MPRINT(EM_DIAGRAM):   else do;
507360    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507361    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
507362    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507363    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507364    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
507365    +   end;
MPRINT(EM_DIAGRAM):   end;
507366    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507367    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
507368    +   end;
MPRINT(EM_DIAGRAM):   end;
507369    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507370    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
507371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507373    +   end;
MPRINT(EM_DIAGRAM):   end;
507374    +end;
MPRINT(EM_DIAGRAM):   end;
507375    +
507376    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
507377    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
507378    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
507379    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
507380    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507381    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507382    +end;
MPRINT(EM_DIAGRAM):   end;
507383    +else do;
MPRINT(EM_DIAGRAM):   else do;
507384    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507385    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
507386    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507387    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507388    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
507389    +   end;
MPRINT(EM_DIAGRAM):   end;
507390    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507391    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
507392    +   end;
MPRINT(EM_DIAGRAM):   end;
507393    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507394    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
507395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507397    +   end;
MPRINT(EM_DIAGRAM):   end;
507398    +end;
MPRINT(EM_DIAGRAM):   end;
507399    +
507400    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
507401    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
507402    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
507403    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
507404    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507405    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507406    +end;
MPRINT(EM_DIAGRAM):   end;
507407    +else do;
MPRINT(EM_DIAGRAM):   else do;
507408    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507409    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
507410    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507411    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507412    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
507413    +   end;
MPRINT(EM_DIAGRAM):   end;
507414    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507415    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
507416    +   end;
MPRINT(EM_DIAGRAM):   end;
507417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507418    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
507419    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507420    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507421    +   end;
MPRINT(EM_DIAGRAM):   end;
507422    +end;
MPRINT(EM_DIAGRAM):   end;
507423    +
507424    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
507425    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
507426    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
507427    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
507428    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507429    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507430    +end;
MPRINT(EM_DIAGRAM):   end;
507431    +else do;
MPRINT(EM_DIAGRAM):   else do;
507432    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507433    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
507434    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507435    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
507436    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
507437    +   end;
MPRINT(EM_DIAGRAM):   end;
507438    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
507439    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
507440    +   end;
MPRINT(EM_DIAGRAM):   end;
507441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507442    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
507443    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507444    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507445    +   end;
MPRINT(EM_DIAGRAM):   end;
507446    +end;
MPRINT(EM_DIAGRAM):   end;
507447    +
507448    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
507449    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
507450    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
507451    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
507452    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507453    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507454    +end;
MPRINT(EM_DIAGRAM):   end;
507455    +else do;
MPRINT(EM_DIAGRAM):   else do;
507456    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
507457    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
507458    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507459    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
507460    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
507461    +   end;
MPRINT(EM_DIAGRAM):   end;
507462    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
507463    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
507464    +   end;
MPRINT(EM_DIAGRAM):   end;
507465    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507466    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
507467    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507468    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507469    +   end;
MPRINT(EM_DIAGRAM):   end;
507470    +end;
MPRINT(EM_DIAGRAM):   end;
507471    +
507472    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
507473    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
507474    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
507475    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
507476    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
507477    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
507478    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
507479    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
507480    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
507481    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
507482    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
507483    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
507484    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507485    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507486    +end;
MPRINT(EM_DIAGRAM):   end;
507487    +else do;
MPRINT(EM_DIAGRAM):   else do;
507488    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
507489    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
507490    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507491    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
507492    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
507493    +   end;
MPRINT(EM_DIAGRAM):   end;
507494    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
507495    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
507496    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
507497    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
507498    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
507499    +   end;
MPRINT(EM_DIAGRAM):   end;
507500    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
507501    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
507502    +   end;
MPRINT(EM_DIAGRAM):   end;
507503    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
507504    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
507505    +   end;
MPRINT(EM_DIAGRAM):   end;
507506    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
507507    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
507508    +   end;
MPRINT(EM_DIAGRAM):   end;
507509    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507510    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
507511    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
507512    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
507513    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
507514    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507515    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507516    +   end;
MPRINT(EM_DIAGRAM):   end;
507517    +end;
MPRINT(EM_DIAGRAM):   end;
507518    +
507519    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
507520    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
507521    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
507522    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
507523    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
507524    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
507525    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
507526    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
507527    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
507528    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
507529    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
507530    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
507531    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
507532    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
507533    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507534    +end;
MPRINT(EM_DIAGRAM):   end;
507535    +else do;
MPRINT(EM_DIAGRAM):   else do;
507536    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
507537    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
507538    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507539    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
507540    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
507541    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
507542    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
507543    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
507544    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507545    +         end;
MPRINT(EM_DIAGRAM):   end;
507546    +         else do;
MPRINT(EM_DIAGRAM):   else do;
507547    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
507548    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
507549    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507550    +            end;
MPRINT(EM_DIAGRAM):   end;
507551    +         end;
MPRINT(EM_DIAGRAM):   end;
507552    +      end;
MPRINT(EM_DIAGRAM):   end;
507553    +      else do;
MPRINT(EM_DIAGRAM):   else do;
507554    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
507555    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
507556    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507557    +         end;
MPRINT(EM_DIAGRAM):   end;
507558    +      end;
MPRINT(EM_DIAGRAM):   end;
507559    +   end;
MPRINT(EM_DIAGRAM):   end;
507560    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507561    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
507562    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
507563    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507564    +      end;
MPRINT(EM_DIAGRAM):   end;
507565    +      else do;
MPRINT(EM_DIAGRAM):   else do;
507566    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
507567    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
507568    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
507569    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
507570    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
507571    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
507572    +         end;
MPRINT(EM_DIAGRAM):   end;
507573    +      end;
MPRINT(EM_DIAGRAM):   end;
507574    +   end;
MPRINT(EM_DIAGRAM):   end;
507575    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
507576    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
507577    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
507578    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
507579    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
507580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
507581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507582    +   end;
MPRINT(EM_DIAGRAM):   end;
507583    +end;
MPRINT(EM_DIAGRAM):   end;
507584    +
507585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507586    +*** Checking missing input Interval
507587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
507588    +
507589    +IF NMISS(
507590    +   AcceptedCmpTotal ,
507591    +   Age ,
507592    +   Frq ,
507593    +   Income ,
507594    +   Kidhome ,
507595    +   Mnt ,
507596    +   MntFishProducts ,
507597    +   MntFruits ,
507598    +   MntGoldProds ,
507599    +   MntMeatProducts ,
507600    +   MntSweetProducts ,
507601    +   MntWines ,
507602    +   MonthsAsCustomer ,
507603    +   NumCatalogPurchases ,
507604    +   NumDealsPurchases ,
507605    +   NumDistPurchases ,
507606    +   NumStorePurchases ,
507607    +   NumWebPurchases ,
507608    +   NumWebVisitsMonth ,
507609    +   RFMstat ,
507610    +   RMntFrq ,
507611    +   Recency ,
507612    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
507613    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
507614    +
507615    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
507616    +END;
MPRINT(EM_DIAGRAM):   END;
507617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507618    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
507619    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507620    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507621    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
507622    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
507623    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
507624    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
507625    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
507626    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
507627    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
507628    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
507629    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
507630    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
507631    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
507632    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
507633    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
507634    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
507635    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
507636    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
507637    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
507638    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
507639    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
507640    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
507641    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
507642    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
507643    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
507644    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
507645    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
507646    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
507647    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
507648    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
507649    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
507650    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
507651    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
507652    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
507653    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
507654    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
507655    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
507656    +END;
MPRINT(EM_DIAGRAM):   END;
507657    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507658    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
507659    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
507660    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
507661    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
507662    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
507663    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
507664    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
507665    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
507666    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
507667    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
507668    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
507669    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
507670    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
507671    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
507672    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
507673    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
507674    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
507675    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
507676    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
507677    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
507678    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
507679    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
507680    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
507681    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
507682    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
507683    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
507684    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
507685    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
507686    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
507687    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
507688    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
507689    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
507690    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
507691    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
507692    +   ELSE S_NumCatalogPurchases
507693    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
507694    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
507695    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
507696    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
507697    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
507698    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
507699    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
507700    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
507701    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
507702    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
507703    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
507704    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
507705    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
507706    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
507707    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
507708    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
507709    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
507710    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
507711    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
507712    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
507713    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
507714    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
507715    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
507716    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
507717    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
507718    +END;
MPRINT(EM_DIAGRAM):   END;
507719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507720    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
507721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507723    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
507724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507726    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
507727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507728    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507729    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
507730    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
507731    +        S_Income  +    -0.48272554811946 * S_Kidhome
507732    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
507733    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
507734    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
507735    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
507736    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
507737    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
507738    +          +    -0.21965892172232 * S_NumDealsPurchases
507739    +          +     0.18147972034868 * S_NumDistPurchases
507740    +          +     0.36657814181657 * S_NumStorePurchases
507741    +          +      0.2558783559717 * S_NumWebPurchases
507742    +          +    -0.12008925196796 * S_NumWebVisitsMonth
507743    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
507744    +        S_RMntFrq  +     0.37914209292496 * S_Recency
507745    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
507746    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
507747    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
507748    +        S_Income  +     0.24387947620062 * S_Kidhome
507749    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
507750    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
507751    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
507752    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
507753    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
507754    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
507755    +          +    -0.05257082874614 * S_NumDealsPurchases
507756    +          +     0.41456571712035 * S_NumDistPurchases
507757    +          +     0.23489798619427 * S_NumStorePurchases
507758    +          +     0.27816946712153 * S_NumWebPurchases
507759    +          +    -0.60321927125997 * S_NumWebVisitsMonth
507760    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
507761    +        S_RMntFrq  +     0.37992942536792 * S_Recency
507762    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
507763    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
507764    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
507765    +        S_Income  +     0.20262487803684 * S_Kidhome
507766    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
507767    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
507768    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
507769    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
507770    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
507771    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
507772    +          +      0.0913099268589 * S_NumDealsPurchases
507773    +          +    -0.05574305289625 * S_NumDistPurchases
507774    +          +    -0.09928560475828 * S_NumStorePurchases
507775    +          +     0.00041482984053 * S_NumWebPurchases
507776    +          +    -0.03314322750163 * S_NumWebVisitsMonth
507777    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
507778    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
507779    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
507780    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
507781    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
507782    +        S_Income  +     0.26225843602768 * S_Kidhome
507783    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
507784    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
507785    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
507786    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
507787    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
507788    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
507789    +          +     0.83559002761395 * S_NumDealsPurchases
507790    +          +     0.30813434559451 * S_NumDistPurchases
507791    +          +    -0.61391039002598 * S_NumStorePurchases
507792    +          +    -1.03190502679863 * S_NumWebPurchases
507793    +          +     0.13374464245621 * S_NumWebVisitsMonth
507794    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
507795    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
507796    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
507797    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
507798    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
507799    +        S_Income  +      -0.692179901076 * S_Kidhome
507800    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
507801    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
507802    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
507803    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
507804    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
507805    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
507806    +          +     0.65604427948051 * S_NumDealsPurchases
507807    +          +     0.01430165674945 * S_NumDistPurchases
507808    +          +    -0.76865963932685 * S_NumStorePurchases
507809    +          +    -0.72521754496401 * S_NumWebPurchases
507810    +          +     1.59453686210397 * S_NumWebVisitsMonth
507811    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
507812    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
507813    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
507814    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
507815    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
507816    +        S_Income  +    -0.23602869688727 * S_Kidhome
507817    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
507818    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
507819    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
507820    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
507821    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
507822    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
507823    +          +    -0.30337362777997 * S_NumDealsPurchases
507824    +          +     0.11551482249746 * S_NumDistPurchases
507825    +          +     0.19719845223838 * S_NumStorePurchases
507826    +          +     0.16011319337206 * S_NumWebPurchases
507827    +          +    -0.19222801416081 * S_NumWebVisitsMonth
507828    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
507829    +        S_RMntFrq  +     0.01056840325776 * S_Recency
507830    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
507831    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
507832    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
507833    +        S_Income  +    -0.47270881977809 * S_Kidhome
507834    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
507835    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
507836    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
507837    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
507838    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
507839    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
507840    +          +    -0.16806813676368 * S_NumDealsPurchases
507841    +          +      0.1680540538046 * S_NumDistPurchases
507842    +          +     0.09845423109173 * S_NumStorePurchases
507843    +          +     0.22281606853536 * S_NumWebPurchases
507844    +          +       0.650769024744 * S_NumWebVisitsMonth
507845    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
507846    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
507847    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
507848    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
507849    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
507850    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
507851    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
507852    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
507853    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
507854    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
507855    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
507856    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
507857    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
507858    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
507859    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
507860    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
507861    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
507862    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
507863    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
507864    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
507865    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
507866    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
507867    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
507868    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
507869    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
507870    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
507871    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
507872    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
507873    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
507874    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
507875    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
507876    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
507877    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
507878    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
507879    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
507880    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
507881    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
507882    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
507883    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
507884    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
507885    +        EducationGraduation  +     0.02445863067232 * EducationMaster
507886    +          +     0.42984001630756 * Marital_StatusDivorced
507887    +          +     -0.4660144877239 * Marital_StatusMarried
507888    +          +     0.44888148801285 * Marital_StatusSingle
507889    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
507890    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
507891    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
507892    +        EducationGraduation  +     0.28773168978233 * EducationMaster
507893    +          +     0.10758942571981 * Marital_StatusDivorced
507894    +          +     0.51795960036213 * Marital_StatusMarried
507895    +          +    -0.40242992087783 * Marital_StatusSingle
507896    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
507897    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
507898    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
507899    +        EducationGraduation  +      0.1986661885803 * EducationMaster
507900    +          +    -0.05264595890678 * Marital_StatusDivorced
507901    +          +     0.07468414180829 * Marital_StatusMarried
507902    +          +     0.20145352309024 * Marital_StatusSingle
507903    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
507904    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
507905    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
507906    +        EducationGraduation  +     0.28768591072195 * EducationMaster
507907    +          +    -0.41440932029593 * Marital_StatusDivorced
507908    +          +     0.65630698363184 * Marital_StatusMarried
507909    +          +    -0.37277384861759 * Marital_StatusSingle
507910    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
507911    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
507912    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
507913    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
507914    +          +     0.86284304352233 * Marital_StatusDivorced
507915    +          +    -0.85716490342524 * Marital_StatusMarried
507916    +          +     0.74516572826411 * Marital_StatusSingle
507917    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
507918    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
507919    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
507920    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
507921    +          +    -0.11928801837478 * Marital_StatusDivorced
507922    +          +    -0.15909233409421 * Marital_StatusMarried
507923    +          +     0.34325131781601 * Marital_StatusSingle
507924    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
507925    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
507926    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
507927    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
507928    +          +     0.15109481730803 * Marital_StatusDivorced
507929    +          +    -1.01578758379559 * Marital_StatusMarried
507930    +          +     0.70421923836193 * Marital_StatusSingle
507931    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
507932    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
507933    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
507934    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
507935    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
507936    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
507937    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
507938    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
507939    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
507940    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
507941    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
507942    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
507943    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
507944    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
507945    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
507946    +END;
MPRINT(EM_DIAGRAM):   END;
507947    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
507948    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
507949    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
507950    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
507951    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
507952    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
507953    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
507954    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
507955    +END;
MPRINT(EM_DIAGRAM):   END;
507956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507957    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
507958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
507959    +
507960    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
507961    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
507962    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
507963    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
507964    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
507965    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
507966    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
507967    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507968    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507969    +end;
MPRINT(EM_DIAGRAM):   end;
507970    +else do;
MPRINT(EM_DIAGRAM):   else do;
507971    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
507972    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
507973    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
507974    +   end;
MPRINT(EM_DIAGRAM):   end;
507975    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
507976    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
507977    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
507978    +   end;
MPRINT(EM_DIAGRAM):   end;
507979    +   else do;
MPRINT(EM_DIAGRAM):   else do;
507980    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
507981    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
507982    +   end;
MPRINT(EM_DIAGRAM):   end;
507983    +end;
MPRINT(EM_DIAGRAM):   end;
507984    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
507985    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
507986    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
507987    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
507988    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
507989    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
507990    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
507991    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
507992    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
507993    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
507994    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
507995    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
507996    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
507997    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
507998    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
507999    +END;
MPRINT(EM_DIAGRAM):   END;
508000    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508001    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
508002    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
508003    +END;
MPRINT(EM_DIAGRAM):   END;
508004    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
508005    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
508006    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
508007    +END;
MPRINT(EM_DIAGRAM):   END;
508008    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
508009    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
508010    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
508011    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
508012    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
508013    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
508014    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
508015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508016    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
508017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508018    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
508019    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
508020    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
508021    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
508022    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
508023    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
508024    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
508025    +END;
MPRINT(EM_DIAGRAM):   END;
508026    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
508027    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
508028    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
508029    +drop
508030    +H11
508031    +H12
508032    +H13
508033    +H14
508034    +H15
508035    +H16
508036    +H17
508037    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
508038    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
508039    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
508040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508041    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
508042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508043    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
508044    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
508045    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
508046    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
508047    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508048    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
508049    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508050    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
508051    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
508052    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
508053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508054    +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
508055    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508056    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508057    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
508058    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
508059    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
508060    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508061    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
508062    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
508063    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
508064    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
508065    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
508066    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
508067    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
508068    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
508069    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
508070    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
508071    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
508072    +LENGTH _WARN_ $4
508073    +      F_DepVar  $ 12
508074    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
508075    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
508076    +
508077    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
508078    +
508079    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
508080    +
508081    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
508082    +
508083    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
508084    +
508085    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
508086    +
508087    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
508088    +
508089    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
508090    +
508091    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
508092    +
508093    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
508094    +
508095    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
508096    +
508097    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
508098    +
508099    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
508100    +
508101    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
508102    +
508103    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
508104    +
508105    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
508106    +
508107    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
508108    +
508109    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
508110    +
508111    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
508112    +
508113    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
508114    +
508115    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
508116    +
508117    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
508118    +
508119    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
508120    +
508121    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
508122    +
508123    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
508124    +
508125    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
508126    +
508127    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
508128    +
508129    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
508130    +
508131    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
508132    +
508133    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
508134    +
508135    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
508136    +
508137    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
508138    +
508139    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
508140    +
508141    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
508142    +
508143    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
508144    +
508145    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
508146    +
508147    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
508148    +
508149    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
508150    +
508151    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
508152    +
508153    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
508154    +
508155    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
508156    +
508157    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
508158    +
508159    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
508160    +
508161    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
508162    +
508163    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
508164    +
508165    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
508166    +
508167    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
508168    +
508169    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
508170    +
508171    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
508172    +
508173    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
508174    +
508175    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
508176    +
508177    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
508178    +
508179    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
508180    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
508181    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
508182    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
508183    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508184    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508185    +end;
MPRINT(EM_DIAGRAM):   end;
508186    +else do;
MPRINT(EM_DIAGRAM):   else do;
508187    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508188    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
508189    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508190    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508191    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
508192    +   end;
MPRINT(EM_DIAGRAM):   end;
508193    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508194    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
508195    +   end;
MPRINT(EM_DIAGRAM):   end;
508196    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508197    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
508198    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508199    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508200    +   end;
MPRINT(EM_DIAGRAM):   end;
508201    +end;
MPRINT(EM_DIAGRAM):   end;
508202    +
508203    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
508204    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
508205    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
508206    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
508207    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508208    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508209    +end;
MPRINT(EM_DIAGRAM):   end;
508210    +else do;
MPRINT(EM_DIAGRAM):   else do;
508211    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508212    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
508213    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508214    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508215    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
508216    +   end;
MPRINT(EM_DIAGRAM):   end;
508217    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508218    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
508219    +   end;
MPRINT(EM_DIAGRAM):   end;
508220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508221    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
508222    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508223    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508224    +   end;
MPRINT(EM_DIAGRAM):   end;
508225    +end;
MPRINT(EM_DIAGRAM):   end;
508226    +
508227    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
508228    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
508229    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
508230    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
508231    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508232    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508233    +end;
MPRINT(EM_DIAGRAM):   end;
508234    +else do;
MPRINT(EM_DIAGRAM):   else do;
508235    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508236    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
508237    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508238    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508239    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
508240    +   end;
MPRINT(EM_DIAGRAM):   end;
508241    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508242    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
508243    +   end;
MPRINT(EM_DIAGRAM):   end;
508244    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508245    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
508246    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508247    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508248    +   end;
MPRINT(EM_DIAGRAM):   end;
508249    +end;
MPRINT(EM_DIAGRAM):   end;
508250    +
508251    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
508252    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
508253    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
508254    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
508255    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508256    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508257    +end;
MPRINT(EM_DIAGRAM):   end;
508258    +else do;
MPRINT(EM_DIAGRAM):   else do;
508259    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508260    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
508261    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508262    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508263    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
508264    +   end;
MPRINT(EM_DIAGRAM):   end;
508265    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508266    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
508267    +   end;
MPRINT(EM_DIAGRAM):   end;
508268    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508269    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
508270    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508271    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508272    +   end;
MPRINT(EM_DIAGRAM):   end;
508273    +end;
MPRINT(EM_DIAGRAM):   end;
508274    +
508275    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
508276    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
508277    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
508278    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
508279    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508280    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508281    +end;
MPRINT(EM_DIAGRAM):   end;
508282    +else do;
MPRINT(EM_DIAGRAM):   else do;
508283    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508284    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
508285    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508286    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508287    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
508288    +   end;
MPRINT(EM_DIAGRAM):   end;
508289    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508290    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
508291    +   end;
MPRINT(EM_DIAGRAM):   end;
508292    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508293    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
508294    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508295    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508296    +   end;
MPRINT(EM_DIAGRAM):   end;
508297    +end;
MPRINT(EM_DIAGRAM):   end;
508298    +
508299    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
508300    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
508301    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
508302    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
508303    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508304    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508305    +end;
MPRINT(EM_DIAGRAM):   end;
508306    +else do;
MPRINT(EM_DIAGRAM):   else do;
508307    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508308    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
508309    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508310    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
508311    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
508312    +   end;
MPRINT(EM_DIAGRAM):   end;
508313    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
508314    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
508315    +   end;
MPRINT(EM_DIAGRAM):   end;
508316    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508317    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
508318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508320    +   end;
MPRINT(EM_DIAGRAM):   end;
508321    +end;
MPRINT(EM_DIAGRAM):   end;
508322    +
508323    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
508324    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
508325    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
508326    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
508327    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508328    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508329    +end;
MPRINT(EM_DIAGRAM):   end;
508330    +else do;
MPRINT(EM_DIAGRAM):   else do;
508331    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
508332    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
508333    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508334    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
508335    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
508336    +   end;
MPRINT(EM_DIAGRAM):   end;
508337    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
508338    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
508339    +   end;
MPRINT(EM_DIAGRAM):   end;
508340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508341    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
508342    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508343    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508344    +   end;
MPRINT(EM_DIAGRAM):   end;
508345    +end;
MPRINT(EM_DIAGRAM):   end;
508346    +
508347    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
508348    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
508349    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
508350    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
508351    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
508352    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
508353    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
508354    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
508355    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
508356    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
508357    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
508358    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
508359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508361    +end;
MPRINT(EM_DIAGRAM):   end;
508362    +else do;
MPRINT(EM_DIAGRAM):   else do;
508363    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
508364    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
508365    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508366    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
508367    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
508368    +   end;
MPRINT(EM_DIAGRAM):   end;
508369    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
508370    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
508371    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
508372    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
508373    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
508374    +   end;
MPRINT(EM_DIAGRAM):   end;
508375    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
508376    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
508377    +   end;
MPRINT(EM_DIAGRAM):   end;
508378    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
508379    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
508380    +   end;
MPRINT(EM_DIAGRAM):   end;
508381    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
508382    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
508383    +   end;
MPRINT(EM_DIAGRAM):   end;
508384    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508385    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
508386    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
508387    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
508388    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
508389    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508390    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508391    +   end;
MPRINT(EM_DIAGRAM):   end;
508392    +end;
MPRINT(EM_DIAGRAM):   end;
508393    +
508394    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
508395    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
508396    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
508397    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
508398    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
508399    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
508400    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
508401    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
508402    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
508403    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
508404    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
508405    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
508406    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
508407    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
508408    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508409    +end;
MPRINT(EM_DIAGRAM):   end;
508410    +else do;
MPRINT(EM_DIAGRAM):   else do;
508411    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
508412    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
508413    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508414    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
508415    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
508416    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
508417    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
508418    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
508419    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508420    +         end;
MPRINT(EM_DIAGRAM):   end;
508421    +         else do;
MPRINT(EM_DIAGRAM):   else do;
508422    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
508423    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
508424    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508425    +            end;
MPRINT(EM_DIAGRAM):   end;
508426    +         end;
MPRINT(EM_DIAGRAM):   end;
508427    +      end;
MPRINT(EM_DIAGRAM):   end;
508428    +      else do;
MPRINT(EM_DIAGRAM):   else do;
508429    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
508430    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
508431    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508432    +         end;
MPRINT(EM_DIAGRAM):   end;
508433    +      end;
MPRINT(EM_DIAGRAM):   end;
508434    +   end;
MPRINT(EM_DIAGRAM):   end;
508435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508436    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
508437    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
508438    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508439    +      end;
MPRINT(EM_DIAGRAM):   end;
508440    +      else do;
MPRINT(EM_DIAGRAM):   else do;
508441    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
508442    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
508443    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
508444    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
508445    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
508446    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
508447    +         end;
MPRINT(EM_DIAGRAM):   end;
508448    +      end;
MPRINT(EM_DIAGRAM):   end;
508449    +   end;
MPRINT(EM_DIAGRAM):   end;
508450    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
508451    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
508452    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
508453    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
508454    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
508455    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
508456    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508457    +   end;
MPRINT(EM_DIAGRAM):   end;
508458    +end;
MPRINT(EM_DIAGRAM):   end;
508459    +
508460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508461    +*** Checking missing input Interval
508462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
508463    +
508464    +IF NMISS(
508465    +   AcceptedCmpTotal ,
508466    +   Age ,
508467    +   Frq ,
508468    +   Income ,
508469    +   Kidhome ,
508470    +   Mnt ,
508471    +   MntFishProducts ,
508472    +   MntFruits ,
508473    +   MntGoldProds ,
508474    +   MntMeatProducts ,
508475    +   MntSweetProducts ,
508476    +   MntWines ,
508477    +   MonthsAsCustomer ,
508478    +   NumCatalogPurchases ,
508479    +   NumDealsPurchases ,
508480    +   NumDistPurchases ,
508481    +   NumStorePurchases ,
508482    +   NumWebPurchases ,
508483    +   NumWebVisitsMonth ,
508484    +   RFMstat ,
508485    +   RMntFrq ,
508486    +   Recency ,
508487    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
508488    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
508489    +
508490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
508491    +END;
MPRINT(EM_DIAGRAM):   END;
508492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508493    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
508494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508495    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
508496    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
508497    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
508498    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
508499    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
508500    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
508501    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
508502    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
508503    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
508504    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
508505    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
508506    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
508507    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
508508    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
508509    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
508510    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
508511    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
508512    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
508513    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
508514    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
508515    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
508516    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
508517    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
508518    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
508519    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
508520    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
508521    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
508522    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
508523    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
508524    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
508525    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
508526    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
508527    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
508528    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
508529    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
508530    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
508531    +END;
MPRINT(EM_DIAGRAM):   END;
508532    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508533    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
508534    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
508535    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
508536    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
508537    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
508538    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
508539    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
508540    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
508541    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
508542    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
508543    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
508544    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
508545    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
508546    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
508547    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
508548    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
508549    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
508550    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
508551    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
508552    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
508553    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
508554    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
508555    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
508556    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
508557    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
508558    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
508559    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
508560    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
508561    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
508562    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
508563    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
508564    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
508565    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
508566    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
508567    +   ELSE S_NumCatalogPurchases
508568    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
508569    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
508570    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
508571    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
508572    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
508573    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
508574    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
508575    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
508576    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
508577    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
508578    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
508579    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
508580    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
508581    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
508582    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
508583    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
508584    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
508585    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
508586    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
508587    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
508588    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
508589    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
508590    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
508591    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
508592    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
508593    +END;
MPRINT(EM_DIAGRAM):   END;
508594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508595    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
508596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508598    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
508599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508601    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
508602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508603    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
508604    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
508605    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
508606    +        S_Income  +    -0.07407502089271 * S_Kidhome
508607    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
508608    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
508609    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
508610    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
508611    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
508612    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
508613    +          +     0.85324794786604 * S_NumDealsPurchases
508614    +          +     0.23632583007911 * S_NumDistPurchases
508615    +          +    -0.63089078988761 * S_NumStorePurchases
508616    +          +    -0.92352748602374 * S_NumWebPurchases
508617    +          +     0.90081938176641 * S_NumWebVisitsMonth
508618    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
508619    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
508620    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
The SAS System

+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
508621    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
508622    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
508623    +        S_Income  +    -0.46092998969912 * S_Kidhome
508624    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
508625    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
508626    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
508627    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
508628    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
508629    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
508630    +          +     0.19685325076814 * S_NumDealsPurchases
508631    +          +     -0.0145000015739 * S_NumDistPurchases
508632    +          +     -0.5790386407956 * S_NumStorePurchases
508633    +          +    -0.36258404984745 * S_NumWebPurchases
508634    +          +     0.85107574614775 * S_NumWebVisitsMonth
508635    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
508636    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
508637    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
508638    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
508639    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
508640    +        S_Income  +    -0.03273972934545 * S_Kidhome
508641    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
508642    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
508643    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
508644    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
508645    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
508646    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
508647    +          +    -0.17268337796364 * S_NumDealsPurchases
508648    +          +    -0.23588860225052 * S_NumDistPurchases
508649    +          +     0.41380073293559 * S_NumStorePurchases
508650    +          +    -0.28143763726207 * S_NumWebPurchases
508651    +          +    -0.30914618130297 * S_NumWebVisitsMonth
508652    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
508653    +        S_RMntFrq  +     0.81671444530655 * S_Recency
508654    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
508655    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
508656    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
508657    +        S_Income  +    -0.06518326597517 * S_Kidhome
508658    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
508659    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
508660    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
508661    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
508662    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
508663    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
508664    +          +    -0.46119515763011 * S_NumDealsPurchases
508665    +          +     0.16268822540635 * S_NumDistPurchases
508666    +          +     0.21653483412929 * S_NumStorePurchases
508667    +          +     0.46040401497854 * S_NumWebPurchases
508668    +          +     -0.7361096668674 * S_NumWebVisitsMonth
508669    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
508670    +        S_RMntFrq  +     0.80628261349293 * S_Recency
508671    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
508672    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
508673    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
508674    +        S_Income  +     0.55328239552566 * S_Kidhome
508675    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
508676    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
508677    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
508678    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
508679    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
508680    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
508681    +          +     0.05502131610199 * S_NumDealsPurchases
508682    +          +    -0.03756550292536 * S_NumDistPurchases
508683    +          +    -0.03538043876599 * S_NumStorePurchases
508684    +          +     -0.0907757250737 * S_NumWebPurchases
508685    +          +    -0.70112968521759 * S_NumWebVisitsMonth
508686    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
508687    +        S_RMntFrq  +     0.94295210651466 * S_Recency
508688    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
508689    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
508690    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
508691    +        S_Income  +    -0.52750514886673 * S_Kidhome
508692    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
508693    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
508694    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
508695    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
508696    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
508697    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
508698    +          +    -0.50827570715861 * S_NumDealsPurchases
508699    +          +    -0.47409547329081 * S_NumDistPurchases
508700    +          +     0.18399962481918 * S_NumStorePurchases
508701    +          +     0.02681212324713 * S_NumWebPurchases
508702    +          +    -0.20824959103725 * S_NumWebVisitsMonth
508703    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
508704    +        S_RMntFrq  +     0.04705531474734 * S_Recency
508705    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
508706    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
508707    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
508708    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
508709    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
508710    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
508711    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
508712    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
508713    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
508714    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
508715    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
508716    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
508717    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
508718    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
508719    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
508720    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
508721    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
508722    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
508723    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
508724    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
508725    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
508726    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
508727    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
508728    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
508729    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
508730    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
508731    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
508732    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
508733    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
508734    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
508735    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
508736    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
508737    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
508738    +        EducationGraduation  +     0.02690714866809 * EducationMaster
508739    +          +      0.1401475547652 * Marital_StatusDivorced
508740    +          +     0.09801106519846 * Marital_StatusMarried
508741    +          +    -0.26003432053167 * Marital_StatusSingle
508742    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
508743    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
508744    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
508745    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
508746    +          +     0.33965651292585 * Marital_StatusDivorced
508747    +          +    -0.51738607463653 * Marital_StatusMarried
508748    +          +     0.57209809625866 * Marital_StatusSingle
508749    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
508750    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
508751    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
508752    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
508753    +          +     -0.0712692029901 * Marital_StatusDivorced
508754    +          +      0.2989539150548 * Marital_StatusMarried
508755    +          +    -0.07088797938783 * Marital_StatusSingle
508756    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
508757    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
508758    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
508759    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
508760    +          +    -0.06075465978816 * Marital_StatusDivorced
508761    +          +     0.23328087967095 * Marital_StatusMarried
508762    +          +    -0.34401062494093 * Marital_StatusSingle
508763    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
508764    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
508765    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
508766    +        EducationGraduation  +     0.36213037498234 * EducationMaster
508767    +          +    -0.07312045395545 * Marital_StatusDivorced
508768    +          +     1.08247738273721 * Marital_StatusMarried
508769    +          +    -0.68676298741916 * Marital_StatusSingle
508770    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
508771    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
508772    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
508773    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
508774    +          +    -0.20451618892357 * Marital_StatusDivorced
508775    +          +    -0.41145969312049 * Marital_StatusMarried
508776    +          +     0.44568613045702 * Marital_StatusSingle
508777    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
508778    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
508779    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
508780    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
508781    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
508782    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
508783    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
508784    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
508785    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
508786    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
508787    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
508788    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
508789    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
508790    +END;
MPRINT(EM_DIAGRAM):   END;
508791    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508792    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
508793    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
508794    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
508795    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
508796    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
508797    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
508798    +END;
MPRINT(EM_DIAGRAM):   END;
508799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508800    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
508801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508802    +
508803    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
508804    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
508805    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
508806    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
508807    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
508808    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
508809    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
508810    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
508811    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
508812    +end;
MPRINT(EM_DIAGRAM):   end;
508813    +else do;
MPRINT(EM_DIAGRAM):   else do;
508814    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
508815    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
508816    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
508817    +   end;
MPRINT(EM_DIAGRAM):   end;
508818    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
508819    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
508820    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
508821    +   end;
MPRINT(EM_DIAGRAM):   end;
508822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
508823    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
508824    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
508825    +   end;
MPRINT(EM_DIAGRAM):   end;
508826    +end;
MPRINT(EM_DIAGRAM):   end;
508827    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
508828    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
508829    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
508830    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
508831    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
508832    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
508833    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
508834    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
508835    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
508836    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
508837    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
508838    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
508839    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
508840    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
508841    +END;
MPRINT(EM_DIAGRAM):   END;
508842    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
508843    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
508844    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
508845    +END;
MPRINT(EM_DIAGRAM):   END;
508846    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
508847    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
508848    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
508849    +END;
MPRINT(EM_DIAGRAM):   END;
508850    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
508851    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
508852    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
508853    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
508854    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
508855    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
508856    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
508857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508858    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
508859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
508860    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
508861    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
508862    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
508863    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
508864    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
508865    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
508866    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
508867    +END;
MPRINT(EM_DIAGRAM):   END;
508868    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
508869    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
508870    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
508871    +drop
508872    +H11
508873    +H12
508874    +H13
508875    +H14
508876    +H15
508877    +H16
508878    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
508879    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
508880    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
508881    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508882    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
508883    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508884    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
508885    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
508886    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
508887    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
508888    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508889    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
508890    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508891    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
508892    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
508893    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
508894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508895    +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
508896    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508897    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508898    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
508899    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
508900    +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
508901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
508902    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
508903    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
508904    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
508905    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
508906    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
508907    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
508908    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
508909    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
508910    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
508911    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
508912    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
508913    +LENGTH _WARN_ $4
508914    +      F_DepVar  $ 12
508915    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
508916    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
508917    +
508918    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
508919    +
508920    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
508921    +
508922    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
508923    +
508924    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
508925    +
508926    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
508927    +
508928    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
508929    +
508930    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
508931    +
508932    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
508933    +
508934    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
508935    +
508936    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
508937    +
508938    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
508939    +
508940    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
508941    +
508942    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
508943    +
508944    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
508945    +
508946    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
508947    +
508948    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
508949    +
508950    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
508951    +
508952    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
508953    +
508954    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
508955    +
508956    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
508957    +
508958    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
508959    +
508960    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
508961    +
508962    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
508963    +
508964    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
508965    +
508966    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
508967    +
508968    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
508969    +
508970    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
508971    +
508972    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
508973    +
508974    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
508975    +
508976    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
508977    +
508978    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
508979    +
508980    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
508981    +
508982    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
508983    +
508984    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
508985    +
508986    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
508987    +
508988    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
508989    +
508990    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
508991    +
508992    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
508993    +
508994    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
508995    +
508996    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
508997    +
508998    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
508999    +
509000    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
509001    +
509002    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
509003    +
509004    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
509005    +
509006    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
509007    +
509008    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
509009    +
509010    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
509011    +
509012    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
509013    +
509014    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
509015    +
509016    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
509017    +
509018    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
509019    +
509020    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
509021    +
509022    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
509023    +
509024    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
509025    +
509026    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
509027    +
509028    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
509029    +
509030    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
509031    +
509032    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
509033    +
509034    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
509035    +
509036    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
509037    +
509038    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
509039    +
509040    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
509041    +
509042    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
509043    +
509044    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
509045    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
509046    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
509047    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
509048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509050    +end;
MPRINT(EM_DIAGRAM):   end;
509051    +else do;
MPRINT(EM_DIAGRAM):   else do;
509052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509053    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
509054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509055    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
509056    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
509057    +   end;
MPRINT(EM_DIAGRAM):   end;
509058    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
509059    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
509060    +   end;
MPRINT(EM_DIAGRAM):   end;
509061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509062    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
509063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509065    +   end;
MPRINT(EM_DIAGRAM):   end;
509066    +end;
MPRINT(EM_DIAGRAM):   end;
509067    +
509068    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
509069    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
509070    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
509071    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
509072    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509073    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509074    +end;
MPRINT(EM_DIAGRAM):   end;
509075    +else do;
MPRINT(EM_DIAGRAM):   else do;
509076    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509077    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
509078    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509079    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
509080    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
509081    +   end;
MPRINT(EM_DIAGRAM):   end;
509082    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
509083    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
509084    +   end;
MPRINT(EM_DIAGRAM):   end;
509085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509086    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
509087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509089    +   end;
MPRINT(EM_DIAGRAM):   end;
509090    +end;
MPRINT(EM_DIAGRAM):   end;
509091    +
509092    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
509093    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
509094    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
509095    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
509096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509098    +end;
MPRINT(EM_DIAGRAM):   end;
509099    +else do;
MPRINT(EM_DIAGRAM):   else do;
509100    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509101    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
509102    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509103    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
509104    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
509105    +   end;
MPRINT(EM_DIAGRAM):   end;
509106    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
509107    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
509108    +   end;
MPRINT(EM_DIAGRAM):   end;
509109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509110    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
509111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509113    +   end;
MPRINT(EM_DIAGRAM):   end;
509114    +end;
MPRINT(EM_DIAGRAM):   end;
509115    +
509116    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
509117    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
509118    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
509119    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
509120    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509121    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509122    +end;
MPRINT(EM_DIAGRAM):   end;
509123    +else do;
MPRINT(EM_DIAGRAM):   else do;
509124    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509125    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
509126    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509127    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
509128    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
509129    +   end;
MPRINT(EM_DIAGRAM):   end;
509130    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
509131    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
509132    +   end;
MPRINT(EM_DIAGRAM):   end;
509133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509134    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
509135    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509136    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509137    +   end;
MPRINT(EM_DIAGRAM):   end;
509138    +end;
MPRINT(EM_DIAGRAM):   end;
509139    +
509140    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
509141    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
509142    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
509143    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
509144    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509145    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509146    +end;
MPRINT(EM_DIAGRAM):   end;
509147    +else do;
MPRINT(EM_DIAGRAM):   else do;
509148    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509149    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
509150    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509151    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
509152    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
509153    +   end;
MPRINT(EM_DIAGRAM):   end;
509154    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
509155    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
509156    +   end;
MPRINT(EM_DIAGRAM):   end;
509157    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509158    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
509159    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509160    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509161    +   end;
MPRINT(EM_DIAGRAM):   end;
509162    +end;
MPRINT(EM_DIAGRAM):   end;
509163    +
509164    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
509165    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
509166    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
509167    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
509168    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509169    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509170    +end;
MPRINT(EM_DIAGRAM):   end;
509171    +else do;
MPRINT(EM_DIAGRAM):   else do;
509172    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509173    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
509174    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509175    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
509176    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
509177    +   end;
MPRINT(EM_DIAGRAM):   end;
509178    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
509179    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
509180    +   end;
MPRINT(EM_DIAGRAM):   end;
509181    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509182    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
509183    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509184    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509185    +   end;
MPRINT(EM_DIAGRAM):   end;
509186    +end;
MPRINT(EM_DIAGRAM):   end;
509187    +
509188    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
509189    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
509190    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
509191    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
509192    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509194    +end;
MPRINT(EM_DIAGRAM):   end;
509195    +else do;
MPRINT(EM_DIAGRAM):   else do;
509196    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
509197    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
509198    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509199    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
509200    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
509201    +   end;
MPRINT(EM_DIAGRAM):   end;
509202    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
509203    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
509204    +   end;
MPRINT(EM_DIAGRAM):   end;
509205    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509206    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
509207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509209    +   end;
MPRINT(EM_DIAGRAM):   end;
509210    +end;
MPRINT(EM_DIAGRAM):   end;
509211    +
509212    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
509213    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
509214    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
509215    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
509216    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
509217    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
509218    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
509219    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
509220    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
509221    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
509222    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
509223    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
509224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509226    +end;
MPRINT(EM_DIAGRAM):   end;
509227    +else do;
MPRINT(EM_DIAGRAM):   else do;
509228    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
509229    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
509230    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509231    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
509232    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
509233    +   end;
MPRINT(EM_DIAGRAM):   end;
509234    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
509235    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
509236    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
509237    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
509238    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
509239    +   end;
MPRINT(EM_DIAGRAM):   end;
509240    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
509241    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
509242    +   end;
MPRINT(EM_DIAGRAM):   end;
509243    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
509244    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
509245    +   end;
MPRINT(EM_DIAGRAM):   end;
509246    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
509247    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
509248    +   end;
MPRINT(EM_DIAGRAM):   end;
509249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509250    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
509251    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
509252    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
509253    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
509254    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509255    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509256    +   end;
MPRINT(EM_DIAGRAM):   end;
509257    +end;
MPRINT(EM_DIAGRAM):   end;
509258    +
509259    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
509260    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
509261    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
509262    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
509263    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
509264    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
509265    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
509266    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
509267    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
509268    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
509269    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
509270    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
509271    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
509272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
509273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509274    +end;
MPRINT(EM_DIAGRAM):   end;
509275    +else do;
MPRINT(EM_DIAGRAM):   else do;
509276    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
509277    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
509278    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509279    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
509280    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
509281    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
509282    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
509283    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
509284    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509285    +         end;
MPRINT(EM_DIAGRAM):   end;
509286    +         else do;
MPRINT(EM_DIAGRAM):   else do;
509287    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
509288    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
509289    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509290    +            end;
MPRINT(EM_DIAGRAM):   end;
509291    +         end;
MPRINT(EM_DIAGRAM):   end;
509292    +      end;
MPRINT(EM_DIAGRAM):   end;
509293    +      else do;
MPRINT(EM_DIAGRAM):   else do;
509294    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
509295    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
509296    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509297    +         end;
MPRINT(EM_DIAGRAM):   end;
509298    +      end;
MPRINT(EM_DIAGRAM):   end;
509299    +   end;
MPRINT(EM_DIAGRAM):   end;
509300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509301    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
509302    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
509303    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509304    +      end;
MPRINT(EM_DIAGRAM):   end;
509305    +      else do;
MPRINT(EM_DIAGRAM):   else do;
509306    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
509307    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
509308    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
509309    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
509310    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
509311    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
509312    +         end;
MPRINT(EM_DIAGRAM):   end;
509313    +      end;
MPRINT(EM_DIAGRAM):   end;
509314    +   end;
MPRINT(EM_DIAGRAM):   end;
509315    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
509316    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
509317    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
509318    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
509319    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
509320    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
509321    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509322    +   end;
MPRINT(EM_DIAGRAM):   end;
509323    +end;
MPRINT(EM_DIAGRAM):   end;
509324    +
509325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509326    +*** Checking missing input Interval
509327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
509328    +
509329    +IF NMISS(
509330    +   AcceptedCmpTotal ,
509331    +   Age ,
509332    +   Frq ,
509333    +   Income ,
509334    +   Kidhome ,
509335    +   Mnt ,
509336    +   MntFishProducts ,
509337    +   MntFruits ,
509338    +   MntGoldProds ,
509339    +   MntMeatProducts ,
509340    +   MntSweetProducts ,
509341    +   MntWines ,
509342    +   MonthsAsCustomer ,
509343    +   NumCatalogPurchases ,
509344    +   NumDealsPurchases ,
509345    +   NumDistPurchases ,
509346    +   NumStorePurchases ,
509347    +   NumWebPurchases ,
509348    +   NumWebVisitsMonth ,
509349    +   RFMstat ,
509350    +   RMntFrq ,
509351    +   Recency ,
509352    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
509353    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
509354    +
509355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
509356    +END;
MPRINT(EM_DIAGRAM):   END;
509357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509358    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
509359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509360    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509361    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
509362    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
509363    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
509364    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
509365    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
509366    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
509367    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
509368    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
509369    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
509370    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
509371    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
509372    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
509373    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
509374    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
509375    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
509376    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
509377    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
509378    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
509379    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
509380    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
509381    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
509382    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
509383    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
509384    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
509385    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
509386    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
509387    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
509388    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
509389    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
509390    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
509391    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
509392    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
509393    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
509394    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
509395    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
509396    +END;
MPRINT(EM_DIAGRAM):   END;
509397    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509398    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
509399    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
509400    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
509401    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
509402    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
509403    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
509404    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
509405    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
509406    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
509407    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
509408    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
509409    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
509410    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
509411    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
509412    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
509413    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
509414    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
509415    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
509416    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
509417    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
509418    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
509419    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
509420    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
509421    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
509422    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
509423    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
509424    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
509425    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
509426    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
509427    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
509428    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
509429    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
509430    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
509431    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
509432    +   ELSE S_NumCatalogPurchases
509433    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
509434    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
509435    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
509436    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
509437    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
509438    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
509439    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
509440    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
509441    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
509442    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
509443    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
509444    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
509445    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
509446    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
509447    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
509448    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
509449    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
509450    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
509451    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
509452    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
509453    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
509454    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
509455    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
509456    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
509457    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
509458    +END;
MPRINT(EM_DIAGRAM):   END;
509459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509460    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
509461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509463    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
509464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509466    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
509467    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509468    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509469    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
509470    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
509471    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
509472    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
509473    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
509474    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
509475    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
509476    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
509477    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
509478    +          +     0.89422627895323 * S_NumDealsPurchases
509479    +          +    -0.13304125929765 * S_NumDistPurchases
509480    +          +    -1.04568442570811 * S_NumStorePurchases
509481    +          +    -0.28677765126751 * S_NumWebPurchases
509482    +          +      1.2327638737509 * S_NumWebVisitsMonth
509483    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
509484    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
509485    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
509486    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
509487    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
509488    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
509489    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
509490    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
509491    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
509492    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
509493    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
509494    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
509495    +          +     0.04224590196535 * S_NumDealsPurchases
509496    +          +     0.76554742700113 * S_NumDistPurchases
509497    +          +    -0.49155496870812 * S_NumStorePurchases
509498    +          +     0.59606812744403 * S_NumWebPurchases
509499    +          +     1.86809286276405 * S_NumWebVisitsMonth
509500    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
509501    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
509502    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
509503    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
509504    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
509505    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
509506    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
509507    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
509508    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
509509    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
509510    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
509511    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
509512    +          +    -0.04866536993486 * S_NumDealsPurchases
509513    +          +    -0.53535979020214 * S_NumDistPurchases
509514    +          +     2.20634071253676 * S_NumStorePurchases
509515    +          +      0.6164564989007 * S_NumWebPurchases
509516    +          +    -0.43396314395263 * S_NumWebVisitsMonth
509517    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
509518    +        S_RMntFrq  +     2.37293441098349 * S_Recency
509519    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
509520    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
509521    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
509522    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
509523    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
509524    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
509525    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
509526    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
509527    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
509528    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
509529    +          +     1.37461255707863 * S_NumDealsPurchases
509530    +          +    -0.17684775000818 * S_NumDistPurchases
509531    +          +    -0.62755623855535 * S_NumStorePurchases
509532    +          +    -1.46551649022657 * S_NumWebPurchases
509533    +          +     3.35784247878638 * S_NumWebVisitsMonth
509534    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
509535    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
509536    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
509537    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
509538    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
509539    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
509540    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
509541    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
509542    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
509543    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
509544    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
509545    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
509546    +          +    -0.76256677907121 * S_NumDealsPurchases
509547    +          +    -0.31591571751692 * S_NumDistPurchases
509548    +          +      0.0506832614089 * S_NumStorePurchases
509549    +          +      1.4636796923764 * S_NumWebPurchases
509550    +          +     0.37743519705036 * S_NumWebVisitsMonth
509551    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
509552    +        S_RMntFrq  +     0.16854775832723 * S_Recency
509553    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
509554    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
509555    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
509556    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
509557    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
509558    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
509559    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
509560    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
509561    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
509562    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
509563    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
509564    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
509565    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
509566    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
509567    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
509568    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
509569    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
509570    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
509571    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
509572    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
509573    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
509574    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
509575    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
509576    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
509577    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
509578    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
509579    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
509580    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
509581    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
509582    +          +     0.68641668264565 * Marital_StatusDivorced
509583    +          +    -0.81586871439732 * Marital_StatusMarried
509584    +          +     0.63758920518451 * Marital_StatusSingle
509585    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
509586    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
509587    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
509588    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
509589    +          +     0.05137560133238 * Marital_StatusDivorced
509590    +          +    -2.24401993266209 * Marital_StatusMarried
509591    +          +     1.57359386216115 * Marital_StatusSingle
509592    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
509593    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
509594    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
509595    +        EducationGraduation  +     0.61492669859334 * EducationMaster
509596    +          +     -1.0649987815942 * Marital_StatusDivorced
509597    +          +     0.76065111692388 * Marital_StatusMarried
509598    +          +    -0.21694149754801 * Marital_StatusSingle
509599    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
509600    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
509601    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
509602    +        EducationGraduation  +     0.04208620358211 * EducationMaster
509603    +          +     2.02155453548328 * Marital_StatusDivorced
509604    +          +    -2.60190649735306 * Marital_StatusMarried
509605    +          +     1.09149388354927 * Marital_StatusSingle
509606    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
509607    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
509608    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
509609    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
509610    +          +     0.66315970650309 * Marital_StatusDivorced
509611    +          +    -1.20476729758152 * Marital_StatusMarried
509612    +          +     0.56175027826397 * Marital_StatusSingle
509613    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
509614    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
509615    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
509616    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
509617    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
509618    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
509619    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
509620    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
509621    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
509622    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
509623    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
509624    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
509625    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
509626    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
509627    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
509628    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
509629    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
509630    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
509631    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
509632    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
509633    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
509634    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
509635    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
509636    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
509637    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
509638    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
509639    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
509640    +END;
MPRINT(EM_DIAGRAM):   END;
509641    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509642    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
509643    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
509644    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
509645    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
509646    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
509647    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
509648    +END;
MPRINT(EM_DIAGRAM):   END;
509649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509650    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
509651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509652    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509653    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
509654    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
509655    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
509656    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
509657    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
509658    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
509659    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
509660    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
509661    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
509662    +          +     1.50005927423985 * S_NumDealsPurchases
509663    +          +      0.5590536933569 * S_NumDistPurchases
509664    +          +    -0.61757824339318 * S_NumStorePurchases
509665    +          +     0.37259686538158 * S_NumWebPurchases
509666    +          +     2.59725437895564 * S_NumWebVisitsMonth
509667    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
509668    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
509669    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
509670    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
509671    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
509672    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
509673    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
509674    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
509675    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
509676    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
509677    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
509678    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
509679    +          +    -0.09282222088797 * S_NumDealsPurchases
509680    +          +     0.10726247938321 * S_NumDistPurchases
509681    +          +     -1.1235971458527 * S_NumStorePurchases
509682    +          +    -0.78304387839877 * S_NumWebPurchases
509683    +          +    -0.44139243179956 * S_NumWebVisitsMonth
509684    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
509685    +        S_RMntFrq  +     2.19072220135069 * S_Recency
509686    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
509687    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
509688    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
509689    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
509690    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
509691    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
509692    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
509693    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
509694    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
509695    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
509696    +          +     0.35349185459988 * S_NumDealsPurchases
509697    +          +     0.06853677714859 * S_NumDistPurchases
509698    +          +    -1.47546012999338 * S_NumStorePurchases
509699    +          +     0.20926435398916 * S_NumWebPurchases
509700    +          +    -1.00535683639093 * S_NumWebVisitsMonth
509701    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
509702    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
509703    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
509704    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
509705    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
509706    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
509707    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
509708    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
509709    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
509710    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
509711    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
509712    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
509713    +          +      0.3873586120272 * S_NumDealsPurchases
509714    +          +     0.25911651157596 * S_NumDistPurchases
509715    +          +     1.58922489084287 * S_NumStorePurchases
509716    +          +     0.49041797743368 * S_NumWebPurchases
509717    +          +     -1.5425586871929 * S_NumWebVisitsMonth
509718    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
509719    +        S_RMntFrq  +     1.03099569333498 * S_Recency
509720    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
509721    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
509722    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
509723    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
509724    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
509725    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
509726    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
509727    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
509728    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
509729    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
509730    +          +    -0.60830880287865 * S_NumDealsPurchases
509731    +          +      0.0745331267194 * S_NumDistPurchases
509732    +          +    -1.39472448256952 * S_NumStorePurchases
509733    +          +     1.95372179969087 * S_NumWebPurchases
509734    +          +    -0.63307356390404 * S_NumWebVisitsMonth
509735    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
509736    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
509737    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
509738    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
509739    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
509740    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
509741    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
509742    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
509743    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
509744    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
509745    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
509746    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
509747    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
509748    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
509749    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
509750    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
509751    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
509752    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
509753    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
509754    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
509755    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
509756    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
509757    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
509758    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
509759    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
509760    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
509761    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
509762    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
509763    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
509764    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
509765    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
509766    +          +    -1.33377871643323 * Marital_StatusDivorced
509767    +          +    -0.87184228840898 * Marital_StatusMarried
509768    +          +     1.41223186340257 * Marital_StatusSingle
509769    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
509770    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
509771    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
509772    +        EducationGraduation  +     0.38341272155343 * EducationMaster
509773    +          +    -0.21479890935233 * Marital_StatusDivorced
509774    +          +     -0.0025459519579 * Marital_StatusMarried
509775    +          +     1.33900491702264 * Marital_StatusSingle
509776    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
509777    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
509778    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
509779    +        EducationGraduation  +     0.60739269725685 * EducationMaster
509780    +          +    -0.38307267471999 * Marital_StatusDivorced
509781    +          +     0.97088969451415 * Marital_StatusMarried
509782    +          +    -0.28578224473381 * Marital_StatusSingle
509783    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
509784    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
509785    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
509786    +        EducationGraduation  +     0.14160673378252 * EducationMaster
509787    +          +    -1.42229401093569 * Marital_StatusDivorced
509788    +          +      0.7234508382397 * Marital_StatusMarried
509789    +          +    -0.29062202974628 * Marital_StatusSingle
509790    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
509791    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
509792    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
509793    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
509794    +          +    -0.99067637207205 * Marital_StatusDivorced
509795    +          +    -0.50245902142079 * Marital_StatusMarried
509796    +          +     0.54214494533793 * Marital_StatusSingle
509797    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
509798    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
509799    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
509800    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
509801    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
509802    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
509803    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
509804    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
509805    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
509806    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
509807    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
509808    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
509809    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
509810    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
509811    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
509812    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
509813    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
509814    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
509815    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
509816    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
509817    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
509818    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
509819    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
509820    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
509821    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
509822    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
509823    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
509824    +END;
MPRINT(EM_DIAGRAM):   END;
509825    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509826    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
509827    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
509828    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
509829    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
509830    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
509831    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
509832    +END;
MPRINT(EM_DIAGRAM):   END;
509833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509834    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
509835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509836    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509837    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
509838    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
509839    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
509840    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
509841    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
509842    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
509843    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
509844    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
509845    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
509846    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
509847    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
509848    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
509849    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
509850    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
509851    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
509852    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
509853    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
509854    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
509855    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
509856    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
509857    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
509858    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
509859    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
509860    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
509861    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
509862    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
509863    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
509864    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
509865    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
509866    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
509867    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
509868    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
509869    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
509870    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
509871    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
509872    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
509873    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
509874    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
509875    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
509876    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
509877    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
509878    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
509879    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
509880    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
509881    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
509882    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
509883    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
509884    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
509885    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
509886    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
509887    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
509888    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
509889    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
509890    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
509891    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
509892    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
509893    +END;
MPRINT(EM_DIAGRAM):   END;
509894    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509895    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
509896    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
509897    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
509898    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
509899    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
509900    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
509901    +END;
MPRINT(EM_DIAGRAM):   END;
509902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509903    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
509904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509905    +
509906    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
509907    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
509908    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
509909    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
509910    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
509911    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
509912    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
509913    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
509914    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
509915    +end;
MPRINT(EM_DIAGRAM):   end;
509916    +else do;
MPRINT(EM_DIAGRAM):   else do;
509917    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
509918    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
509919    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
509920    +   end;
MPRINT(EM_DIAGRAM):   end;
509921    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
509922    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
509923    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
509924    +   end;
MPRINT(EM_DIAGRAM):   end;
509925    +   else do;
MPRINT(EM_DIAGRAM):   else do;
509926    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
509927    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
509928    +   end;
MPRINT(EM_DIAGRAM):   end;
509929    +end;
MPRINT(EM_DIAGRAM):   end;
509930    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
509931    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
509932    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
509933    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
509934    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
509935    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
509936    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
509937    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
509938    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
509939    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
509940    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
509941    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
509942    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
509943    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
509944    +END;
MPRINT(EM_DIAGRAM):   END;
509945    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
509946    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
509947    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
509948    +END;
MPRINT(EM_DIAGRAM):   END;
509949    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
509950    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
509951    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
509952    +END;
MPRINT(EM_DIAGRAM):   END;
509953    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
509954    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
509955    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
509956    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
509957    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
509958    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
509959    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
509960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509961    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
509962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
509963    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
509964    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
509965    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
509966    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
509967    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
509968    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
509969    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
509970    +END;
MPRINT(EM_DIAGRAM):   END;
509971    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
509972    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
509973    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
509974    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
509975    +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
509976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509977    +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
509978    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509979    +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
509980    +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
509981    +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
509982    +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
509983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509984    +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
509985    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509986    +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
509987    +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
509988    +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
509989    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509990    +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
509991    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509993    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
509994    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
509995    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
509996    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
509997    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
509998    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
509999    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
510000    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
510001    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
510002    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
510003    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
510004    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
510005    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
510006    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
510007    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
510008    +LENGTH _WARN_ $4
510009    +      F_DepVar  $ 12
510010    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
510011    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
510012    +
510013    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
510014    +
510015    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
510016    +
510017    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
510018    +
510019    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
510020    +
510021    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
510022    +
510023    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
510024    +
510025    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
510026    +
510027    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
510028    +
510029    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
510030    +
510031    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
510032    +
510033    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
510034    +
510035    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
510036    +
510037    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
510038    +
510039    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
510040    +
510041    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
510042    +
510043    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
510044    +
510045    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
510046    +
510047    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
510048    +
510049    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
510050    +
510051    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
510052    +
510053    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
510054    +
510055    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
510056    +
510057    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
510058    +
510059    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
510060    +
510061    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
510062    +
510063    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
510064    +
510065    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
510066    +
510067    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
510068    +
510069    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
510070    +
510071    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
510072    +
510073    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
510074    +
510075    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
510076    +
510077    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
510078    +
510079    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
510080    +
510081    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
510082    +
510083    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
510084    +
510085    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
510086    +
510087    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
510088    +
510089    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
510090    +
510091    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
510092    +
510093    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
510094    +
510095    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
510096    +
510097    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
510098    +
510099    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
510100    +
510101    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
510102    +
510103    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
510104    +
510105    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
510106    +
510107    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
510108    +
510109    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
510110    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
510111    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
510112    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
510113    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510114    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510115    +end;
MPRINT(EM_DIAGRAM):   end;
510116    +else do;
MPRINT(EM_DIAGRAM):   else do;
510117    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510118    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
510119    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510120    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510121    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
510122    +   end;
MPRINT(EM_DIAGRAM):   end;
510123    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510124    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
510125    +   end;
MPRINT(EM_DIAGRAM):   end;
510126    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510127    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
510128    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510129    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510130    +   end;
MPRINT(EM_DIAGRAM):   end;
510131    +end;
MPRINT(EM_DIAGRAM):   end;
510132    +
510133    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
510134    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
510135    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
510136    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
510137    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510138    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510139    +end;
MPRINT(EM_DIAGRAM):   end;
510140    +else do;
MPRINT(EM_DIAGRAM):   else do;
510141    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510142    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
510143    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510144    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510145    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
510146    +   end;
MPRINT(EM_DIAGRAM):   end;
510147    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510148    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
510149    +   end;
MPRINT(EM_DIAGRAM):   end;
510150    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510151    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
510152    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510153    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510154    +   end;
MPRINT(EM_DIAGRAM):   end;
510155    +end;
MPRINT(EM_DIAGRAM):   end;
510156    +
510157    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
510158    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
510159    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
510160    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
510161    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510162    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510163    +end;
MPRINT(EM_DIAGRAM):   end;
510164    +else do;
MPRINT(EM_DIAGRAM):   else do;
510165    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510166    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
510167    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510168    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510169    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
510170    +   end;
MPRINT(EM_DIAGRAM):   end;
510171    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510172    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
510173    +   end;
MPRINT(EM_DIAGRAM):   end;
510174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510175    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
510176    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510177    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510178    +   end;
MPRINT(EM_DIAGRAM):   end;
510179    +end;
MPRINT(EM_DIAGRAM):   end;
510180    +
510181    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
510182    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
510183    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
510184    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
510185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510187    +end;
MPRINT(EM_DIAGRAM):   end;
510188    +else do;
MPRINT(EM_DIAGRAM):   else do;
510189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510190    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
510191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510192    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510193    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
510194    +   end;
MPRINT(EM_DIAGRAM):   end;
510195    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510196    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
510197    +   end;
MPRINT(EM_DIAGRAM):   end;
510198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510199    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
510200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510202    +   end;
MPRINT(EM_DIAGRAM):   end;
510203    +end;
MPRINT(EM_DIAGRAM):   end;
510204    +
510205    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
510206    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
510207    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
510208    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
510209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510211    +end;
MPRINT(EM_DIAGRAM):   end;
510212    +else do;
MPRINT(EM_DIAGRAM):   else do;
510213    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510214    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
510215    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510216    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510217    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
510218    +   end;
MPRINT(EM_DIAGRAM):   end;
510219    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510220    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
510221    +   end;
MPRINT(EM_DIAGRAM):   end;
510222    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510223    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
510224    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510225    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510226    +   end;
MPRINT(EM_DIAGRAM):   end;
510227    +end;
MPRINT(EM_DIAGRAM):   end;
510228    +
510229    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
510230    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
510231    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
510232    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
510233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510235    +end;
MPRINT(EM_DIAGRAM):   end;
510236    +else do;
MPRINT(EM_DIAGRAM):   else do;
510237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510238    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
510239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510240    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
510241    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
510242    +   end;
MPRINT(EM_DIAGRAM):   end;
510243    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
510244    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
510245    +   end;
MPRINT(EM_DIAGRAM):   end;
510246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510247    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
510248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510250    +   end;
MPRINT(EM_DIAGRAM):   end;
510251    +end;
MPRINT(EM_DIAGRAM):   end;
510252    +
510253    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
510254    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
510255    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
510256    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
510257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510259    +end;
MPRINT(EM_DIAGRAM):   end;
510260    +else do;
MPRINT(EM_DIAGRAM):   else do;
510261    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
510262    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
510263    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510264    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
510265    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
510266    +   end;
MPRINT(EM_DIAGRAM):   end;
510267    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
510268    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
510269    +   end;
MPRINT(EM_DIAGRAM):   end;
510270    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510271    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
510272    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510273    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510274    +   end;
MPRINT(EM_DIAGRAM):   end;
510275    +end;
MPRINT(EM_DIAGRAM):   end;
510276    +
510277    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
510278    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
510279    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
510280    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
510281    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
510282    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
510283    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
510284    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
510285    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
510286    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
510287    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
510288    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
510289    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510291    +end;
MPRINT(EM_DIAGRAM):   end;
510292    +else do;
MPRINT(EM_DIAGRAM):   else do;
510293    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
510294    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
510295    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510296    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
510297    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
510298    +   end;
MPRINT(EM_DIAGRAM):   end;
510299    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
510300    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
510301    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
510302    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
510303    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
510304    +   end;
MPRINT(EM_DIAGRAM):   end;
510305    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
510306    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
510307    +   end;
MPRINT(EM_DIAGRAM):   end;
510308    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
510309    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
510310    +   end;
MPRINT(EM_DIAGRAM):   end;
510311    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
510312    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
510313    +   end;
MPRINT(EM_DIAGRAM):   end;
510314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510315    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
510316    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
510317    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
510318    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
510319    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510320    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510321    +   end;
MPRINT(EM_DIAGRAM):   end;
510322    +end;
MPRINT(EM_DIAGRAM):   end;
510323    +
510324    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
510325    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
510326    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
510327    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
510328    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
510329    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
510330    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
510331    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
510332    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
510333    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
510334    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
510335    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
510336    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
510337    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510338    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510339    +end;
MPRINT(EM_DIAGRAM):   end;
510340    +else do;
MPRINT(EM_DIAGRAM):   else do;
510341    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
510342    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
510343    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510344    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
510345    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
510346    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
510347    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
510348    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
510349    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510350    +         end;
MPRINT(EM_DIAGRAM):   end;
510351    +         else do;
MPRINT(EM_DIAGRAM):   else do;
510352    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
510353    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
510354    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510355    +            end;
MPRINT(EM_DIAGRAM):   end;
510356    +         end;
MPRINT(EM_DIAGRAM):   end;
510357    +      end;
MPRINT(EM_DIAGRAM):   end;
510358    +      else do;
MPRINT(EM_DIAGRAM):   else do;
510359    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
510360    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
510361    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510362    +         end;
MPRINT(EM_DIAGRAM):   end;
510363    +      end;
MPRINT(EM_DIAGRAM):   end;
510364    +   end;
MPRINT(EM_DIAGRAM):   end;
510365    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510366    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
510367    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
510368    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510369    +      end;
MPRINT(EM_DIAGRAM):   end;
510370    +      else do;
MPRINT(EM_DIAGRAM):   else do;
510371    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
510372    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
510373    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
510374    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
510375    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
510376    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
510377    +         end;
MPRINT(EM_DIAGRAM):   end;
510378    +      end;
MPRINT(EM_DIAGRAM):   end;
510379    +   end;
MPRINT(EM_DIAGRAM):   end;
510380    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
510381    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
510382    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
510383    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
510384    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
510385    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
510386    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510387    +   end;
MPRINT(EM_DIAGRAM):   end;
510388    +end;
MPRINT(EM_DIAGRAM):   end;
510389    +
510390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510391    +*** Checking missing input Interval
510392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
510393    +
510394    +IF NMISS(
510395    +   AcceptedCmpTotal ,
510396    +   Age ,
510397    +   Frq ,
510398    +   Income ,
510399    +   Kidhome ,
510400    +   Mnt ,
510401    +   MntFishProducts ,
510402    +   MntFruits ,
510403    +   MntGoldProds ,
510404    +   MntMeatProducts ,
510405    +   MntSweetProducts ,
510406    +   MntWines ,
510407    +   MonthsAsCustomer ,
510408    +   NumCatalogPurchases ,
510409    +   NumDealsPurchases ,
510410    +   NumDistPurchases ,
510411    +   NumStorePurchases ,
510412    +   NumWebPurchases ,
510413    +   NumWebVisitsMonth ,
510414    +   RFMstat ,
510415    +   RMntFrq ,
510416    +   Recency ,
510417    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
510418    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
510419    +
510420    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510421    +END;
MPRINT(EM_DIAGRAM):   END;
510422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510423    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
510424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
510426    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
510427    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
510428    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
510429    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
510430    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
510431    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
510432    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
510433    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
510434    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
510435    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
510436    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
510437    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
510438    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
510439    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
510440    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
510441    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
510442    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
510443    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
510444    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
510445    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
510446    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
510447    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
510448    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
510449    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
510450    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
510451    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
510452    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
510453    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
510454    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
510455    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
510456    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
510457    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
510458    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
510459    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
510460    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
510461    +END;
MPRINT(EM_DIAGRAM):   END;
510462    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
510463    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
510464    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
510465    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
510466    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
510467    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
510468    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
510469    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
510470    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
510471    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
510472    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
510473    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
510474    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
510475    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
510476    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
510477    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
510478    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
510479    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
510480    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
510481    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
510482    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
510483    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
510484    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
510485    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
510486    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
510487    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
510488    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
510489    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
510490    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
510491    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
510492    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
510493    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
510494    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
510495    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
510496    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
510497    +   ELSE S_NumCatalogPurchases
510498    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
510499    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
510500    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
510501    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
510502    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
510503    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
510504    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
510505    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
510506    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
510507    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
510508    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
510509    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
510510    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
510511    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
510512    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
510513    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
510514    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
510515    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
510516    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
510517    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
510518    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
510519    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
510520    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
510521    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
510522    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
510523    +END;
MPRINT(EM_DIAGRAM):   END;
510524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510525    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
510526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510528    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
510529    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510531    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
510532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510533    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
510534    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
510535    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
510536    +        S_Income  +      0.4880522012865 * S_Kidhome
510537    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
510538    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
510539    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
510540    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
510541    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
510542    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
510543    +          +     1.28630491068585 * S_NumDealsPurchases
510544    +          +     0.12175737778271 * S_NumDistPurchases
510545    +          +    -0.62012456448967 * S_NumStorePurchases
510546    +          +     -0.6092351519122 * S_NumWebPurchases
510547    +          +     1.46336740414795 * S_NumWebVisitsMonth
510548    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
510549    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
510550    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
510551    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
510552    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
510553    +        S_Income  +     0.63026291057347 * S_Kidhome
510554    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
510555    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
510556    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
510557    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
510558    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
510559    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
510560    +          +    -0.66569109065716 * S_NumDealsPurchases
510561    +          +    -0.04991685336251 * S_NumDistPurchases
510562    +          +     0.97830186941279 * S_NumStorePurchases
510563    +          +     1.01041490205359 * S_NumWebPurchases
510564    +          +    -1.32418956036577 * S_NumWebVisitsMonth
510565    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
510566    +        S_RMntFrq  +     1.45035992156192 * S_Recency
510567    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
510568    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
510569    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
510570    +        S_Income  +     0.56998894495459 * S_Kidhome
510571    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
510572    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
510573    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
510574    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
510575    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
510576    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
510577    +          +     0.07739967453744 * S_NumDealsPurchases
510578    +          +    -0.43729543807168 * S_NumDistPurchases
510579    +          +      0.0856627398024 * S_NumStorePurchases
510580    +          +     -0.0045478100059 * S_NumWebPurchases
510581    +          +    -0.64123054514198 * S_NumWebVisitsMonth
510582    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
510583    +        S_RMntFrq  +     1.48732817876807 * S_Recency
510584    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
510585    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
510586    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
510587    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
510588    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
510589    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
510590    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
510591    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
510592    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
510593    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
510594    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
510595    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
510596    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
510597    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
510598    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
510599    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
510600    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
510601    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
510602    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
510603    +          +     0.16155355707944 * Marital_StatusDivorced
510604    +          +     0.04915644167404 * Marital_StatusMarried
510605    +          +    -0.16886350906837 * Marital_StatusSingle
510606    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
510607    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
510608    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
510609    +        EducationGraduation  +     0.03310756432448 * EducationMaster
510610    +          +    -0.15094637092036 * Marital_StatusDivorced
510611    +          +     0.07664831456886 * Marital_StatusMarried
510612    +          +    -0.47693612610813 * Marital_StatusSingle
510613    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
510614    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
510615    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
510616    +        EducationGraduation  +     0.20173383445657 * EducationMaster
510617    +          +    -0.58672623647391 * Marital_StatusDivorced
510618    +          +      1.8684271616322 * Marital_StatusMarried
510619    +          +    -1.30134837394569 * Marital_StatusSingle
510620    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
510621    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
510622    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
510623    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
510624    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
510625    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
510626    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
510627    +END;
MPRINT(EM_DIAGRAM):   END;
510628    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
510629    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
510630    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
510631    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
510632    +END;
MPRINT(EM_DIAGRAM):   END;
510633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510634    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
510635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510636    +
510637    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
510638    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
510639    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
510640    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
510641    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
510642    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
510643    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
510644    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
510645    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
510646    +end;
MPRINT(EM_DIAGRAM):   end;
510647    +else do;
MPRINT(EM_DIAGRAM):   else do;
510648    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
510649    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
510650    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
510651    +   end;
MPRINT(EM_DIAGRAM):   end;
510652    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
510653    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
510654    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
510655    +   end;
MPRINT(EM_DIAGRAM):   end;
510656    +   else do;
MPRINT(EM_DIAGRAM):   else do;
510657    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
510658    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
510659    +   end;
MPRINT(EM_DIAGRAM):   end;
510660    +end;
MPRINT(EM_DIAGRAM):   end;
510661    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
510662    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
510663    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
510664    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
510665    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
510666    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
510667    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
510668    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
510669    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
510670    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
510671    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
510672    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
510673    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
510674    +END;
MPRINT(EM_DIAGRAM):   END;
510675    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
510676    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
510677    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
510678    +END;
MPRINT(EM_DIAGRAM):   END;
510679    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
510680    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
510681    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
510682    +END;
MPRINT(EM_DIAGRAM):   END;
510683    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
510684    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
510685    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
510686    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
510687    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
510688    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
510689    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
510690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510691    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
510692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
510693    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
510694    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
510695    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
510696    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
510697    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
510698    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
510699    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
510700    +END;
MPRINT(EM_DIAGRAM):   END;
510701    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
510702    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
510703    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
510704    +drop
510705    +H11
510706    +H12
510707    +H13
510708    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
510709    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
510710    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
510711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510712    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
510713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510714    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
510715    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
510716    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
510717    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
510718    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510719    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
510720    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510721    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
510722    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
510723    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
510724    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510725    +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
510726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510727    +P_DepVar1 = (
510728    +AutoNeural7_P_DepVar1 +
510729    +AutoNeural9_P_DepVar1 +
510730    +AutoNeural12_P_DepVar1 +
510731    +Neural10_P_DepVar1 +
510732    +Neural9_P_DepVar1 +
510733    +AutoNeural11_P_DepVar1 +
510734    +Neural3_P_DepVar1
510735    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural7_P_DepVar1 + AutoNeural9_P_DepVar1 + 
AutoNeural12_P_DepVar1 + Neural10_P_DepVar1 + Neural9_P_DepVar1 + AutoNeural11_P_DepVar1 + 
Neural3_P_DepVar1 )/7;
510736    +P_DepVar0 = (
510737    +AutoNeural7_P_DepVar0 +
510738    +AutoNeural9_P_DepVar0 +
510739    +AutoNeural12_P_DepVar0 +
510740    +Neural10_P_DepVar0 +
510741    +Neural9_P_DepVar0 +
510742    +AutoNeural11_P_DepVar0 +
510743    +Neural3_P_DepVar0
510744    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural7_P_DepVar0 + AutoNeural9_P_DepVar0 + 
AutoNeural12_P_DepVar0 + Neural10_P_DepVar0 + Neural9_P_DepVar0 + AutoNeural11_P_DepVar0 + 
Neural3_P_DepVar0 )/7;
510745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510746    +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
510747    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510748    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
510749    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
510750    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
510751    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
510752    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
510753    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
510754    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
510755    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
510756    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
510757    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
510758    +end;
MPRINT(EM_DIAGRAM):   end;
510759    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
510760    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
510761    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
510762    +end;
MPRINT(EM_DIAGRAM):   end;
510763    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
510764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510765    +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
510766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510767    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
510768    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
510769    +else
510770    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
510771    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510772    +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
510773    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510774    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
510775    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
510776    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
510777    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
510777   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
510778    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
510778   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
510779    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
510779   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
510780    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
510780   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
510781    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
510781   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
510782    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
510782   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
510783    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
510783   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
510784    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
510784   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
510785    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
510785   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
510786    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
510786   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
510787    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
510787   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
510788    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
510788   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
510789    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
510789   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
510790    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
510790   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
510791    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
510791   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
510792    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
510792   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
510793    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
510794    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
510795    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
510796    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
510797    +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
510797   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
510798    +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
510798   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
510799    +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
510799   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
510800    +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
510800   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
510801    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
510802    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
510803    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
510804    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
510805    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510806    +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
510807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
510808    +if
510809    +F_DepVar NE '1'
510810    +AND F_DepVar NE '0'
510811    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
510812    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
510813    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
510814    +end;
MPRINT(EM_DIAGRAM):   end;
510815    +else do;
MPRINT(EM_DIAGRAM):   else do;
510816    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
510817    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
510818    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
510819    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
510820    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
510821    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
510822    +END;
MPRINT(EM_DIAGRAM):   END;
510823    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
510824     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
510825     quit;
510826     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl14_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
510886     filename _pref
510886   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
510887     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
510888     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
510889    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
510890    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
510891    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
510892    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
510893    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
510894    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
510895    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
510896    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
510897    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
510898    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
510899    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
510900    +LENGTH _WARN_ $4
510901    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
510902    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
510903    +
510904    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
510905    +
510906    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
510907    +
510908    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
510909    +
510910    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
510911    +
510912    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
510913    +
510914    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
510915    +
510916    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
510917    +
510918    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
510919    +
510920    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
510921    +
510922    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
510923    +
510924    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
510925    +
510926    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
510927    +
510928    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
510929    +
510930    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
510931    +
510932    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
510933    +
510934    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
510935    +
510936    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
510937    +
510938    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
510939    +
510940    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
510941    +
510942    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
510943    +
510944    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
510945    +
510946    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
510947    +
510948    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
510949    +
510950    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
510951    +
510952    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
510953    +
510954    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
510955    +
510956    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
510957    +
510958    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
510959    +
510960    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
510961    +
510962    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
510963    +
510964    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
510965    +
510966    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
510967    +
510968    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
510969    +
510970    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
510971    +
510972    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
510973    +
510974    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
510975    +
510976    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
510977    +
510978    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
510979    +
510980    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
510981    +
510982    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
510983    +
510984    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
510985    +
510986    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
510987    +
510988    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
510989    +
510990    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
510991    +
510992    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
510993    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
510994    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
510995    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
510996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
510997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
510998    +end;
MPRINT(EM_DIAGRAM):   end;
510999    +else do;
MPRINT(EM_DIAGRAM):   else do;
511000    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511001    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
511002    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511003    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511004    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
511005    +   end;
MPRINT(EM_DIAGRAM):   end;
511006    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511007    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
511008    +   end;
MPRINT(EM_DIAGRAM):   end;
511009    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511010    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
511011    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511012    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511013    +   end;
MPRINT(EM_DIAGRAM):   end;
511014    +end;
MPRINT(EM_DIAGRAM):   end;
511015    +
511016    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
511017    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
511018    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
511019    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
511020    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511021    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511022    +end;
MPRINT(EM_DIAGRAM):   end;
511023    +else do;
MPRINT(EM_DIAGRAM):   else do;
511024    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511025    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
511026    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511027    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511028    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
511029    +   end;
MPRINT(EM_DIAGRAM):   end;
511030    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511031    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
511032    +   end;
MPRINT(EM_DIAGRAM):   end;
511033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511034    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
511035    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511036    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511037    +   end;
MPRINT(EM_DIAGRAM):   end;
511038    +end;
MPRINT(EM_DIAGRAM):   end;
511039    +
511040    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
511041    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
511042    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
511043    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
511044    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511045    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511046    +end;
MPRINT(EM_DIAGRAM):   end;
511047    +else do;
MPRINT(EM_DIAGRAM):   else do;
511048    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511049    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
511050    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511051    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511052    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
511053    +   end;
MPRINT(EM_DIAGRAM):   end;
511054    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511055    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
511056    +   end;
MPRINT(EM_DIAGRAM):   end;
511057    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511058    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
511059    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511060    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511061    +   end;
MPRINT(EM_DIAGRAM):   end;
511062    +end;
MPRINT(EM_DIAGRAM):   end;
511063    +
511064    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
511065    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
511066    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
511067    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
511068    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511069    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511070    +end;
MPRINT(EM_DIAGRAM):   end;
511071    +else do;
MPRINT(EM_DIAGRAM):   else do;
511072    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511073    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
511074    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511075    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511076    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
511077    +   end;
MPRINT(EM_DIAGRAM):   end;
511078    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511079    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
511080    +   end;
MPRINT(EM_DIAGRAM):   end;
511081    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511082    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
511083    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511084    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511085    +   end;
MPRINT(EM_DIAGRAM):   end;
511086    +end;
MPRINT(EM_DIAGRAM):   end;
511087    +
511088    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
511089    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
511090    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
511091    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
511092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511094    +end;
MPRINT(EM_DIAGRAM):   end;
511095    +else do;
MPRINT(EM_DIAGRAM):   else do;
511096    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511097    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
511098    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511099    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511100    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
511101    +   end;
MPRINT(EM_DIAGRAM):   end;
511102    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511103    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
511104    +   end;
MPRINT(EM_DIAGRAM):   end;
511105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511106    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
511107    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511108    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511109    +   end;
MPRINT(EM_DIAGRAM):   end;
511110    +end;
MPRINT(EM_DIAGRAM):   end;
511111    +
511112    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
511113    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
511114    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
511115    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
511116    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511117    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511118    +end;
MPRINT(EM_DIAGRAM):   end;
511119    +else do;
MPRINT(EM_DIAGRAM):   else do;
511120    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511121    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
511122    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511123    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
511124    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
511125    +   end;
MPRINT(EM_DIAGRAM):   end;
511126    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
511127    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
511128    +   end;
MPRINT(EM_DIAGRAM):   end;
511129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511130    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
511131    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511132    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511133    +   end;
MPRINT(EM_DIAGRAM):   end;
511134    +end;
MPRINT(EM_DIAGRAM):   end;
511135    +
511136    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
511137    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
511138    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
511139    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
511140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511142    +end;
MPRINT(EM_DIAGRAM):   end;
511143    +else do;
MPRINT(EM_DIAGRAM):   else do;
511144    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
511145    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
511146    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511147    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
511148    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
511149    +   end;
MPRINT(EM_DIAGRAM):   end;
511150    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
511151    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
511152    +   end;
MPRINT(EM_DIAGRAM):   end;
511153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511154    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
511155    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511156    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511157    +   end;
MPRINT(EM_DIAGRAM):   end;
511158    +end;
MPRINT(EM_DIAGRAM):   end;
511159    +
511160    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
511161    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
511162    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
511163    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
511164    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
511165    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
511166    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
511167    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
511168    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
511169    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
511170    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
511171    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
511172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511174    +end;
MPRINT(EM_DIAGRAM):   end;
511175    +else do;
MPRINT(EM_DIAGRAM):   else do;
511176    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
511177    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
511178    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511179    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
511180    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
511181    +   end;
MPRINT(EM_DIAGRAM):   end;
511182    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
511183    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
511184    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
511185    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
511186    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
511187    +   end;
MPRINT(EM_DIAGRAM):   end;
511188    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
511189    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
511190    +   end;
MPRINT(EM_DIAGRAM):   end;
511191    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
511192    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
511193    +   end;
MPRINT(EM_DIAGRAM):   end;
511194    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
511195    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
511196    +   end;
MPRINT(EM_DIAGRAM):   end;
511197    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511198    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
511199    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
511200    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
511201    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
511202    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511203    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511204    +   end;
MPRINT(EM_DIAGRAM):   end;
511205    +end;
MPRINT(EM_DIAGRAM):   end;
511206    +
511207    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
511208    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
511209    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
511210    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
511211    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
511212    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
511213    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
511214    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
511215    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
511216    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
511217    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
511218    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
511219    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
511220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
511221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511222    +end;
MPRINT(EM_DIAGRAM):   end;
511223    +else do;
MPRINT(EM_DIAGRAM):   else do;
511224    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
511225    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
511226    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
511227    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
511228    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
511229    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
511230    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
511231    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
511232    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511233    +         end;
MPRINT(EM_DIAGRAM):   end;
511234    +         else do;
MPRINT(EM_DIAGRAM):   else do;
511235    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
511236    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
511237    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511238    +            end;
MPRINT(EM_DIAGRAM):   end;
511239    +         end;
MPRINT(EM_DIAGRAM):   end;
511240    +      end;
MPRINT(EM_DIAGRAM):   end;
511241    +      else do;
MPRINT(EM_DIAGRAM):   else do;
511242    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
511243    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
511244    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511245    +         end;
MPRINT(EM_DIAGRAM):   end;
511246    +      end;
MPRINT(EM_DIAGRAM):   end;
511247    +   end;
MPRINT(EM_DIAGRAM):   end;
511248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
511249    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
511250    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
511251    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511252    +      end;
MPRINT(EM_DIAGRAM):   end;
511253    +      else do;
MPRINT(EM_DIAGRAM):   else do;
511254    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
511255    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
511256    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
511257    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
511258    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
511259    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
511260    +         end;
MPRINT(EM_DIAGRAM):   end;
511261    +      end;
MPRINT(EM_DIAGRAM):   end;
511262    +   end;
MPRINT(EM_DIAGRAM):   end;
511263    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
511264    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
511265    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
511266    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
511267    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
511268    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
511269    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511270    +   end;
MPRINT(EM_DIAGRAM):   end;
511271    +end;
MPRINT(EM_DIAGRAM):   end;
511272    +
511273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511274    +*** Checking missing input Interval
511275    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
511276    +
511277    +IF NMISS(
511278    +   AcceptedCmpTotal ,
511279    +   Age ,
511280    +   Frq ,
511281    +   Income ,
511282    +   Kidhome ,
511283    +   Mnt ,
511284    +   MntFishProducts ,
511285    +   MntFruits ,
511286    +   MntGoldProds ,
511287    +   MntMeatProducts ,
511288    +   MntSweetProducts ,
511289    +   MntWines ,
511290    +   MonthsAsCustomer ,
511291    +   NumCatalogPurchases ,
511292    +   NumDealsPurchases ,
511293    +   NumDistPurchases ,
511294    +   NumStorePurchases ,
511295    +   NumWebPurchases ,
511296    +   NumWebVisitsMonth ,
511297    +   RFMstat ,
511298    +   RMntFrq ,
511299    +   Recency ,
511300    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
511301    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
511302    +
511303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
511304    +END;
MPRINT(EM_DIAGRAM):   END;
511305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511306    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
511307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511308    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
511309    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
511310    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
511311    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
511312    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
511313    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
511314    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
511315    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
511316    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
511317    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
511318    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
511319    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
511320    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
511321    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
511322    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
511323    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
511324    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
511325    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
511326    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
511327    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
511328    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
511329    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
511330    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
511331    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
511332    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
511333    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
511334    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
511335    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
511336    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
511337    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
511338    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
511339    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
511340    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
511341    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
511342    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
511343    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
511344    +END;
MPRINT(EM_DIAGRAM):   END;
511345    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
511346    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
511347    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
511348    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
511349    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
511350    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
511351    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
511352    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
511353    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
511354    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
511355    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
511356    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
511357    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
511358    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
511359    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
511360    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
511361    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
511362    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
511363    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
511364    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
511365    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
511366    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
511367    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
511368    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
511369    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
511370    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
511371    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
511372    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
511373    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
511374    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
511375    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
511376    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
511377    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
511378    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
511379    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
511380    +   ELSE S_NumCatalogPurchases
511381    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
511382    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
511383    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
511384    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
511385    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
511386    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
511387    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
511388    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
511389    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
511390    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
511391    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
511392    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
511393    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
511394    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
511395    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
511396    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
511397    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
511398    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
511399    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
511400    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
511401    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
511402    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
511403    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
511404    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
511405    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
511406    +END;
MPRINT(EM_DIAGRAM):   END;
511407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511408    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
511409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511411    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
511412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511414    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
511415    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511416    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
511417    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
511418    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
511419    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
511420    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
511421    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
511422    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
511423    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
511424    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
511425    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
511426    +          +     0.09708841024031 * S_NumDealsPurchases
511427    +          +    -0.29075561032014 * S_NumDistPurchases
511428    +          +    -0.14495394259873 * S_NumStorePurchases
511429    +          +     0.11890705145732 * S_NumWebPurchases
511430    +          +    -0.16954189911344 * S_NumWebVisitsMonth
511431    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
511432    +        S_RMntFrq  +     0.17150719398884 * S_Recency
511433    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
511434    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
511435    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
511436    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
511437    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
511438    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
511439    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
511440    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
511441    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
511442    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
511443    +          +     0.16274478997892 * S_NumDealsPurchases
511444    +          +     0.03966958784582 * S_NumDistPurchases
511445    +          +    -0.04714110726598 * S_NumStorePurchases
511446    +          +    -0.02124229528082 * S_NumWebPurchases
511447    +          +     0.29753299776832 * S_NumWebVisitsMonth
511448    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
511449    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
511450    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
511451    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
511452    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
511453    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
511454    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
511455    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
511456    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
511457    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
511458    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
511459    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
511460    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
511461    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
511462    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
511463    +        EducationGraduation  +     0.00619669837452 * EducationMaster
511464    +          +    -0.05037639679806 * Marital_StatusDivorced
511465    +          +     0.28781968727878 * Marital_StatusMarried
511466    +          +    -0.20382417074384 * Marital_StatusSingle
511467    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
511468    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
511469    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
511470    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
511471    +          +     0.06970969219123 * Marital_StatusDivorced
511472    +          +    -0.15787475744986 * Marital_StatusMarried
511473    +          +     0.14345344072192 * Marital_StatusSingle
511474    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
511475    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
511476    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
511477    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
511478    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
511479    +END;
MPRINT(EM_DIAGRAM):   END;
511480    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
511481    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
511482    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
511483    +END;
MPRINT(EM_DIAGRAM):   END;
511484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511485    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
511486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511487    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
511488    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
511489    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
511490    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
511491    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
511492    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
511493    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
511494    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
511495    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
511496    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
511497    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
511498    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
511499    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
511500    +END;
MPRINT(EM_DIAGRAM):   END;
511501    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
511502    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
511503    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
511504    +END;
MPRINT(EM_DIAGRAM):   END;
511505    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
511506    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
511507    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
511508    +END;
MPRINT(EM_DIAGRAM):   END;
511509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511510    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
511511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
511512    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
511513    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
511514    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
511515    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
511516    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
511517    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
511518    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
511519    +END;
MPRINT(EM_DIAGRAM):   END;
511520    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
511521    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
511522    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
511523    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511524     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
511525     quit;
511526     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511527     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511528     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511529     retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
511530     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511532     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511533     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511535     proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
511536     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511538     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511539     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511540     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511541     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511542     proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
511543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

511544     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511547     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511548     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511549     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511550     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511551     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511552     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511552   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

511553     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511554     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511556     filename _pref
511556   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
511557     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511558     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
511559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
511560    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
511561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
511562    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
511563    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
511564    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511565     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
511566     quit;
511567     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511568     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511569     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511570     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
511571     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511573     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511574     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511576     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
511577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511578     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511579     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511580     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511581     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511583     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
511584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

511585     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511586     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511588     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511589     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511590     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511591     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511592     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511593     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511593   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

511594     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511595     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511597     filename _pref
511597   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
511598     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511599     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
511600    +
511601    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
511602    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
511602   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
511603    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
511604    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
511605    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
511606    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
511607    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511608     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
511609     quit;
511610     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511611     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511612     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511613     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
511614     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511616     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511617     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511619     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
511620     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511622     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511623     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511624     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511625     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511626     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
511627     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511628     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511629     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511631     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511632     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511633     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511634     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511635     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511636     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511636   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

511637     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511638     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511639     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511640     filename _pref
511640   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
511641     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511642     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
511643    +
511644    +
511645    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
511646    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
511647    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
511648    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
511649    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
511650    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511651    +
511652    +
511653    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
511654    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
511655    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
511656    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
511657    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
511658    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511659    +
511660    +
511661    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
511662    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
511663    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
511664    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
511665    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
511666    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511667    +
511668    +
511669    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
511670    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
511671    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
511672    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
511673    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
511674    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511675    +
511676    +
511677    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
511678    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
511679    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
511680    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
511681    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
511682    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511683    +
511684    +
511685    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
511686    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
511687    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
511688    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
511689    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
511690    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511691    +
511692    +
511693    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
511694    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
511695    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
511696    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
511697    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
511698    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511699    +
511700    +
511701    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
511702    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
511703    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
511704    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
511705    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
511706    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
511707    +if
511708    +_FILTERNORM1 not in ( '.')
511709    + and
511710    +_FILTERNORM2 not in ( '.')
511711    + and
511712    +_FILTERNORM3 not in ( '.')
511713    + and
511714    +_FILTERNORM4 not in ( '.')
511715    + and
511716    +_FILTERNORM5 not in ( '.')
511717    + and
511718    +_FILTERNORM6 not in ( '.')
511719    + and
511720    +_FILTERNORM7 not in ( ' ')
511721    + and
511722    +_FILTERNORM8 not in ( ' ')
511723    +and
511724    +( Dt_Customer ne .)
511725    +and ( Income ne . and (Income<=107000))
511726    +and ( Kidhome ne .)
511727    +and ( MntFishProducts ne .)
511728    +and ( MntFruits ne .)
511729    +and ( MntGoldProds ne .)
511730    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
511731    +and ( MntSweetProducts ne .)
511732    +and ( MntWines ne .)
511733    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
511734    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
511735    +and ( NumStorePurchases ne .)
511736    +and ( NumWebPurchases ne .)
511737    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
511738    +and ( Recency ne .)
511739    +and ( Teenhome ne .)
511740    +and ( Year_Birth ne .)
511741    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
511742    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
511743    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
511744    +end;
MPRINT(EM_DIAGRAM):   end;
511745    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
511746    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
511747     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
511748     quit;
511749     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
511750     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
511751     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
511752     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
511753     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
511754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511755     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
511756     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511757     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511758     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
511759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511760     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511761     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511762     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
511763     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
511764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511765     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
511766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511767     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
511768     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511770     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
511771     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
511772     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
511773     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511774     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511775     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
511775   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

511776     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511777     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
511778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511779     %macro varDept(fcmpdata=,id=);
511780     %global nobs&id scoreFlag&id;
511781     %let scoreFlag&id = 0;
511782     %if &id=1 or ^&fcmpStart %then %do;
511783     proc sort data=&fcmpdata out=_temp&id nodupkey;
511784     by NAME;
511785     where id=&id and LHS in( %let j=1;
511786     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
511787     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
511788     "&var" %let j = %eval(&j+1);
511789     %end;
511790     );
511791     run;
511792     %let dsid = %sysfunc(open(_temp&id));
511793     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511794     %let dsid = %sysfunc(close(&dsid));
511795     %if &&nobs&id %then %do;
511796     %let scoreFlag&id = 1;
511797     %let fcmpStart = 1;
511798     %end;
511799     %else %let fcmpStart = 0;
511800     %end;
511801     %else %do;
511802     proc sort data=&fcmpdata out=_tempid;
511803     where id=&id;
511804     by LHS;
511805     run;
511806     %let dsid = %sysfunc(open(_tempid));
511807     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511808     %let dsid = %sysfunc(close(&dsid));
511809     %if ^&&nobs&id %then %do;
511810     proc datasets lib=work nolist;
511811     delete _tempid;
511812     run;
511813     quit;
511814     %end;
511815     %else %do;
511816     data _tempAll;
511817     set %let j=%eval(&id-1);
511818     %do x=1 %to &j;
511819     %if &&nobs&x %then %do;
511820     _temp&x %end;
511821     %end;
511822     ;
511823     run;
511824     proc sql;
511825     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
511825   ! work._tempid p2 where p.name=p2.lhs;
511826     quit;
511827     data _temp&id;
511828     set _temp&id;
511829     where LHS ne '' and NAME ne '' and Node ne '';
511830     run;
511831     proc datasets lib=work nolist;
511832     delete _tempAll;
511833     run;
511834     %let dsid = %sysfunc(open(_temp&id));
511835     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511836     %let dsid = %sysfunc(close(&dsid));
511837     %if ^&&nobs&id %then %do;
511838     proc datasets lib=work nolist;
511839     delete _temp&id;
511840     run;
511841     quit;
511842     %end;
511843     %else %do;
511844     %let scoreFlag&id = 1;
511845     data _temp&id;
511846     set _temp&id;
511847     where LHS ne NAME and node ne '';
511848     run;
511849     %let dsid = %sysfunc(open(_temp&id));
511850     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
511851     %let dsid = %sysfunc(close(&dsid));
511852     %if ^&&nobs&id %then %do;
511853     proc datasets lib=work nolist;
511854     delete _temp&id;
511855     run;
511856     quit;
511857     %end;
511858     %else %do;
511859     proc sort data=_temp&id nodupkey;
511860     by LHS NAME;
511861     run;
511862     %end;
511863     %end;
511864     %end;
511865     %end;
511866     %mend varDept;
511867     %macro optCode(outdata=fcmpdata);
511868     %global fcmpStart;
511869     %let fcmpStart = 0;
511870     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
511871     %let NumNodes=9;
511872     %do k=1 %to &NumNodes;
511873     %vardept(fcmpdata=&outdata, id=&k);
511874     %end;
511875     %mend optCode;
511876     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

511877     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
511878     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
511879     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
511880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511881     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
511882     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
511883     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
511884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

511885     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
511886     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
511886   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

511887     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

511888     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
511889     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
511890     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

511891     filename _pref
511891   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
511892     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
511893     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
511894    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
511895    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
511896    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
511897    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
511898    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
511899    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
511900    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
511901    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
511902    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
511903    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
511904    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
511905    +LENGTH _WARN_ $4
511906    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
511907    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
511908    +
511909    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
511910    +
511911    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
511912    +
511913    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
511914    +
511915    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
511916    +
511917    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
511918    +
511919    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
511920    +
511921    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
511922    +
511923    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
511924    +
511925    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
511926    +
511927    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
511928    +
511929    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
511930    +
511931    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
511932    +
511933    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
511934    +
511935    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
511936    +
511937    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
511938    +
511939    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
511940    +
511941    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
511942    +
511943    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
511944    +
511945    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
511946    +
511947    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
511948    +
511949    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
511950    +
511951    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
511952    +
511953    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
511954    +
511955    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
511956    +
511957    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
511958    +
511959    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
511960    +
511961    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
511962    +
511963    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
511964    +
511965    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
511966    +
511967    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
511968    +
511969    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
511970    +
511971    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
511972    +
511973    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
511974    +
511975    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
511976    +
511977    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
511978    +
511979    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
511980    +
511981    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
511982    +
511983    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
511984    +
511985    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
511986    +
511987    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
511988    +
511989    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
511990    +
511991    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
511992    +
511993    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
511994    +
511995    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
511996    +
511997    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
511998    +
511999    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
512000    +
512001    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
512002    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
512003    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
512004    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
512005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512007    +end;
MPRINT(EM_DIAGRAM):   end;
512008    +else do;
MPRINT(EM_DIAGRAM):   else do;
512009    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512010    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
512011    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512012    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512013    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
512014    +   end;
MPRINT(EM_DIAGRAM):   end;
512015    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512016    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
512017    +   end;
MPRINT(EM_DIAGRAM):   end;
512018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512019    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
512020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512022    +   end;
MPRINT(EM_DIAGRAM):   end;
512023    +end;
MPRINT(EM_DIAGRAM):   end;
512024    +
512025    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
512026    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
512027    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
512028    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
512029    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512030    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512031    +end;
MPRINT(EM_DIAGRAM):   end;
512032    +else do;
MPRINT(EM_DIAGRAM):   else do;
512033    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512034    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
512035    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512036    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512037    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
512038    +   end;
MPRINT(EM_DIAGRAM):   end;
512039    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512040    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
512041    +   end;
MPRINT(EM_DIAGRAM):   end;
512042    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512043    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
512044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512046    +   end;
MPRINT(EM_DIAGRAM):   end;
512047    +end;
MPRINT(EM_DIAGRAM):   end;
512048    +
512049    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
512050    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
512051    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
512052    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
512053    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512054    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512055    +end;
MPRINT(EM_DIAGRAM):   end;
512056    +else do;
MPRINT(EM_DIAGRAM):   else do;
512057    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512058    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
512059    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512060    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512061    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
512062    +   end;
MPRINT(EM_DIAGRAM):   end;
512063    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512064    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
512065    +   end;
MPRINT(EM_DIAGRAM):   end;
512066    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512067    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
512068    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512069    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512070    +   end;
MPRINT(EM_DIAGRAM):   end;
512071    +end;
MPRINT(EM_DIAGRAM):   end;
512072    +
512073    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
512074    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
512075    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
512076    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
512077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512079    +end;
MPRINT(EM_DIAGRAM):   end;
512080    +else do;
MPRINT(EM_DIAGRAM):   else do;
512081    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512082    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
512083    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512084    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512085    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
512086    +   end;
MPRINT(EM_DIAGRAM):   end;
512087    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512088    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
512089    +   end;
MPRINT(EM_DIAGRAM):   end;
512090    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512091    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
512092    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512093    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512094    +   end;
MPRINT(EM_DIAGRAM):   end;
512095    +end;
MPRINT(EM_DIAGRAM):   end;
512096    +
512097    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
512098    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
512099    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
512100    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
512101    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512102    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512103    +end;
MPRINT(EM_DIAGRAM):   end;
512104    +else do;
MPRINT(EM_DIAGRAM):   else do;
512105    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512106    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
512107    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512108    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512109    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
512110    +   end;
MPRINT(EM_DIAGRAM):   end;
512111    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512112    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
512113    +   end;
MPRINT(EM_DIAGRAM):   end;
512114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512115    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
512116    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512117    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512118    +   end;
MPRINT(EM_DIAGRAM):   end;
512119    +end;
MPRINT(EM_DIAGRAM):   end;
512120    +
512121    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
512122    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
512123    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
512124    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
512125    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512126    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512127    +end;
MPRINT(EM_DIAGRAM):   end;
512128    +else do;
MPRINT(EM_DIAGRAM):   else do;
512129    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512130    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
512131    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512132    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
512133    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
512134    +   end;
MPRINT(EM_DIAGRAM):   end;
512135    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
512136    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
512137    +   end;
MPRINT(EM_DIAGRAM):   end;
512138    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512139    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
512140    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512141    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512142    +   end;
MPRINT(EM_DIAGRAM):   end;
512143    +end;
MPRINT(EM_DIAGRAM):   end;
512144    +
512145    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
512146    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
512147    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
512148    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
512149    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512150    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512151    +end;
MPRINT(EM_DIAGRAM):   end;
512152    +else do;
MPRINT(EM_DIAGRAM):   else do;
512153    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
512154    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
512155    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512156    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
512157    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
512158    +   end;
MPRINT(EM_DIAGRAM):   end;
512159    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
512160    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
512161    +   end;
MPRINT(EM_DIAGRAM):   end;
512162    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512163    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
512164    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512165    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512166    +   end;
MPRINT(EM_DIAGRAM):   end;
512167    +end;
MPRINT(EM_DIAGRAM):   end;
512168    +
512169    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
512170    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
512171    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
512172    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
512173    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
512174    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
512175    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
512176    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
512177    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
512178    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
512179    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
512180    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
512181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512183    +end;
MPRINT(EM_DIAGRAM):   end;
512184    +else do;
MPRINT(EM_DIAGRAM):   else do;
512185    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
512186    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
512187    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512188    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
512189    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
512190    +   end;
MPRINT(EM_DIAGRAM):   end;
512191    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
512192    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
512193    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
512194    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
512195    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
512196    +   end;
MPRINT(EM_DIAGRAM):   end;
512197    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
512198    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
512199    +   end;
MPRINT(EM_DIAGRAM):   end;
512200    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
512201    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
512202    +   end;
MPRINT(EM_DIAGRAM):   end;
512203    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
512204    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
512205    +   end;
MPRINT(EM_DIAGRAM):   end;
512206    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512207    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
512208    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
512209    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
512210    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
512211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512213    +   end;
MPRINT(EM_DIAGRAM):   end;
512214    +end;
MPRINT(EM_DIAGRAM):   end;
512215    +
512216    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
512217    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
512218    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
512219    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
512220    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
512221    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
512222    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
512223    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
512224    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
512225    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
512226    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
512227    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
512228    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
512229    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
512230    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512231    +end;
MPRINT(EM_DIAGRAM):   end;
512232    +else do;
MPRINT(EM_DIAGRAM):   else do;
512233    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
512234    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
512235    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
512236    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
512237    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
512238    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
512239    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
512240    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
512241    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512242    +         end;
MPRINT(EM_DIAGRAM):   end;
512243    +         else do;
MPRINT(EM_DIAGRAM):   else do;
512244    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
512245    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
512246    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512247    +            end;
MPRINT(EM_DIAGRAM):   end;
512248    +         end;
MPRINT(EM_DIAGRAM):   end;
512249    +      end;
MPRINT(EM_DIAGRAM):   end;
512250    +      else do;
MPRINT(EM_DIAGRAM):   else do;
512251    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
512252    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
512253    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512254    +         end;
MPRINT(EM_DIAGRAM):   end;
512255    +      end;
MPRINT(EM_DIAGRAM):   end;
512256    +   end;
MPRINT(EM_DIAGRAM):   end;
512257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
512258    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
512259    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
512260    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512261    +      end;
MPRINT(EM_DIAGRAM):   end;
512262    +      else do;
MPRINT(EM_DIAGRAM):   else do;
512263    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
512264    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
512265    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
512266    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
512267    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
512268    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
512269    +         end;
MPRINT(EM_DIAGRAM):   end;
512270    +      end;
MPRINT(EM_DIAGRAM):   end;
512271    +   end;
MPRINT(EM_DIAGRAM):   end;
512272    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
512273    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
512274    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
512275    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
512276    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
512277    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
512278    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512279    +   end;
MPRINT(EM_DIAGRAM):   end;
512280    +end;
MPRINT(EM_DIAGRAM):   end;
512281    +
512282    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512283    +*** Checking missing input Interval
512284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
512285    +
512286    +IF NMISS(
512287    +   AcceptedCmpTotal ,
512288    +   Age ,
512289    +   Frq ,
512290    +   Income ,
512291    +   Kidhome ,
512292    +   Mnt ,
512293    +   MntFishProducts ,
512294    +   MntFruits ,
512295    +   MntGoldProds ,
512296    +   MntMeatProducts ,
512297    +   MntSweetProducts ,
512298    +   MntWines ,
512299    +   MonthsAsCustomer ,
512300    +   NumCatalogPurchases ,
512301    +   NumDealsPurchases ,
512302    +   NumDistPurchases ,
512303    +   NumStorePurchases ,
512304    +   NumWebPurchases ,
512305    +   NumWebVisitsMonth ,
512306    +   RFMstat ,
512307    +   RMntFrq ,
512308    +   Recency ,
512309    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
512310    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
512311    +
512312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
512313    +END;
MPRINT(EM_DIAGRAM):   END;
512314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512315    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
512316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512317    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
512318    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
512319    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
512320    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
512321    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
512322    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
512323    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
512324    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
512325    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
512326    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
512327    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
512328    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
512329    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
512330    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
512331    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
512332    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
512333    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
512334    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
512335    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
512336    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
512337    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
512338    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
512339    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
512340    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
512341    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
512342    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
512343    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
512344    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
512345    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
512346    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
512347    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
512348    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
512349    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
512350    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
512351    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
512352    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
512353    +END;
MPRINT(EM_DIAGRAM):   END;
512354    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
512355    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
512356    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
512357    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
512358    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
512359    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
512360    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
512361    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
512362    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
512363    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
512364    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
512365    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
512366    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
512367    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
512368    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
512369    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
512370    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
512371    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
512372    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
512373    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
512374    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
512375    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
512376    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
512377    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
512378    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
512379    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
512380    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
512381    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
512382    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
512383    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
512384    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
512385    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
512386    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
512387    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
512388    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
512389    +   ELSE S_NumCatalogPurchases
512390    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
512391    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
512392    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
512393    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
512394    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
512395    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
512396    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
512397    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
512398    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
512399    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
512400    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
512401    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
512402    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
512403    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
512404    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
512405    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
512406    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
512407    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
512408    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
512409    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
512410    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
512411    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
512412    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
512413    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
512414    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
512415    +END;
MPRINT(EM_DIAGRAM):   END;
512416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512417    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
512418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512420    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
512421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512423    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
512424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
512426    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
512427    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
512428    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
512429    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
512430    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
512431    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
512432    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
512433    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
512434    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
512435    +          +    -1.14704878034134 * S_NumDealsPurchases
512436    +          +    -0.17763404274659 * S_NumDistPurchases
512437    +          +     0.08894400267969 * S_NumStorePurchases
512438    +          +     0.59283747891957 * S_NumWebPurchases
512439    +          +     0.85268274682505 * S_NumWebVisitsMonth
512440    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
512441    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
512442    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
512443    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
512444    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
512445    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
512446    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
512447    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
512448    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
512449    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
512450    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
512451    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
512452    +          +    -0.80841566068716 * S_NumDealsPurchases
512453    +          +    -0.17995640033768 * S_NumDistPurchases
512454    +          +     0.00713417460936 * S_NumStorePurchases
512455    +          +     0.57881024323076 * S_NumWebPurchases
512456    +          +    -1.35134224257365 * S_NumWebVisitsMonth
512457    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
512458    +        S_RMntFrq  +     1.16978656262499 * S_Recency
512459    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
512460    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
512461    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
512462    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
512463    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
512464    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
512465    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
512466    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
512467    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
512468    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
512469    +          +     0.57891364118717 * S_NumDealsPurchases
512470    +          +    -0.31024556838688 * S_NumDistPurchases
512471    +          +    -1.48708542986704 * S_NumStorePurchases
512472    +          +    -0.93009875249206 * S_NumWebPurchases
512473    +          +     2.01900039122935 * S_NumWebVisitsMonth
512474    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
512475    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
512476    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
512477    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
512478    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
512479    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
512480    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
512481    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
512482    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
512483    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
512484    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
512485    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
512486    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
512487    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
512488    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
512489    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
512490    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
512491    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
512492    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
512493    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
512494    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
512495    +          +     0.55883606830033 * Marital_StatusDivorced
512496    +          +    -0.54530037567066 * Marital_StatusMarried
512497    +          +    -0.52994736075753 * Marital_StatusSingle
512498    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
512499    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
512500    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
512501    +        EducationGraduation  +     0.31201349236277 * EducationMaster
512502    +          +    -1.07368484057033 * Marital_StatusDivorced
512503    +          +     2.73313504711262 * Marital_StatusMarried
512504    +          +    -2.18530462876058 * Marital_StatusSingle
512505    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
512506    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
512507    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
512508    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
512509    +          +     0.49993144243043 * Marital_StatusDivorced
512510    +          +    -0.38953339116829 * Marital_StatusMarried
512511    +          +    -0.10836287319942 * Marital_StatusSingle
512512    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
512513    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
512514    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
512515    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
512516    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
512517    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
512518    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
512519    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
512520    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
512521    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
512522    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
512523    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
512524    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
512525    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
512526    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
512527    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
512528    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
512529    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
512530    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
512531    +END;
MPRINT(EM_DIAGRAM):   END;
512532    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
512533    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
512534    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
512535    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
512536    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
512537    +END;
MPRINT(EM_DIAGRAM):   END;
512538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512539    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
512540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512541    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
512542    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
512543    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
512544    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
512545    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
512546    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
512547    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
512548    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
512549    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
512550    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
512551    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
512552    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
512553    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
512554    +END;
MPRINT(EM_DIAGRAM):   END;
512555    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
512556    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
512557    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
512558    +END;
MPRINT(EM_DIAGRAM):   END;
512559    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
512560    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
512561    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
512562    +END;
MPRINT(EM_DIAGRAM):   END;
512563    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512564    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
512565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
512566    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
512567    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
512568    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
512569    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
512570    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
512571    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
512572    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
512573    +END;
MPRINT(EM_DIAGRAM):   END;
512574    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
512575    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
512576    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
512577    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512578     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
512579     quit;
512580     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512581     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512582     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512583     retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
512584     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512585     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512586     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512587     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512588     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512589     proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
512590     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512592     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512593     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512594     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512596     proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
512597     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

512598     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512599     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512600     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512601     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512602     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512603     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512604     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512605     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512606     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512606   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

512607     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512608     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512610     filename _pref
512610   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
512611     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512612     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
512613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
512614    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
512615    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
512616    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
512617    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
512618    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512619     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
512620     quit;
512621     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512622     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512623     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512624     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
512625     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512626     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512627     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512628     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512630     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
512631     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512632     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512633     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512634     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512635     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512636     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512637     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
512638     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

512639     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512640     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512641     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512642     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512643     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512644     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512645     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512646     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512647     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512647   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

512648     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512649     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512651     filename _pref
512651   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
512652     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512653     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
512654    +
512655    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
512656    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
512656   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
512657    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
512658    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
512659    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
512660    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
512661    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512662     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
512663     quit;
512664     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512665     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512666     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512667     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
512668     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512669     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512670     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512671     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512672     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512673     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
512674     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512675     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512676     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512677     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512678     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512679     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512680     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
512681     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512682     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512683     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512684     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512685     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512686     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512687     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512688     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512689     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512690     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512690   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

512691     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512692     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512694     filename _pref
512694   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
512695     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512696     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
512697    +
512698    +
512699    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
512700    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
512701    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
512702    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
512703    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
512704    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512705    +
512706    +
512707    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
512708    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
512709    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
512710    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
512711    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
512712    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512713    +
512714    +
512715    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
512716    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
512717    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
512718    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
512719    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
512720    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512721    +
512722    +
512723    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
512724    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
512725    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
512726    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
512727    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
512728    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512729    +
512730    +
512731    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
512732    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
512733    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
512734    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
512735    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
512736    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512737    +
512738    +
512739    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
512740    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
512741    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
512742    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
512743    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
512744    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512745    +
512746    +
512747    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
512748    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
512749    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
512750    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
512751    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
512752    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512753    +
512754    +
512755    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
512756    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
512757    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
512758    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
512759    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
512760    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
512761    +if
512762    +_FILTERNORM1 not in ( '.')
512763    + and
512764    +_FILTERNORM2 not in ( '.')
512765    + and
512766    +_FILTERNORM3 not in ( '.')
512767    + and
512768    +_FILTERNORM4 not in ( '.')
512769    + and
512770    +_FILTERNORM5 not in ( '.')
512771    + and
512772    +_FILTERNORM6 not in ( '.')
512773    + and
512774    +_FILTERNORM7 not in ( ' ')
512775    + and
512776    +_FILTERNORM8 not in ( ' ')
512777    +and
512778    +( Dt_Customer ne .)
512779    +and ( Income ne . and (Income<=107000))
512780    +and ( Kidhome ne .)
512781    +and ( MntFishProducts ne .)
512782    +and ( MntFruits ne .)
512783    +and ( MntGoldProds ne .)
512784    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
512785    +and ( MntSweetProducts ne .)
512786    +and ( MntWines ne .)
512787    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
512788    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
512789    +and ( NumStorePurchases ne .)
512790    +and ( NumWebPurchases ne .)
512791    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
512792    +and ( Recency ne .)
512793    +and ( Teenhome ne .)
512794    +and ( Year_Birth ne .)
512795    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
512796    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
512797    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
512798    +end;
MPRINT(EM_DIAGRAM):   end;
512799    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
512800    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
512801     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
512802     quit;
512803     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
512804     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
512805     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
512806     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
512807     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
512808     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512809     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
512810     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512811     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512812     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
512813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512814     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512815     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512816     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
512817     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
512818     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512819     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
512820     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

512821     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
512822     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512823     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512824     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
512825     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
512826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
512827     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512828     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512829     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
512829   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

512830     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512831     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
512832     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512833     %macro varDept(fcmpdata=,id=);
512834     %global nobs&id scoreFlag&id;
512835     %let scoreFlag&id = 0;
512836     %if &id=1 or ^&fcmpStart %then %do;
512837     proc sort data=&fcmpdata out=_temp&id nodupkey;
512838     by NAME;
512839     where id=&id and LHS in( %let j=1;
512840     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
512841     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
512842     "&var" %let j = %eval(&j+1);
512843     %end;
512844     );
512845     run;
512846     %let dsid = %sysfunc(open(_temp&id));
512847     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512848     %let dsid = %sysfunc(close(&dsid));
512849     %if &&nobs&id %then %do;
512850     %let scoreFlag&id = 1;
512851     %let fcmpStart = 1;
512852     %end;
512853     %else %let fcmpStart = 0;
512854     %end;
512855     %else %do;
512856     proc sort data=&fcmpdata out=_tempid;
512857     where id=&id;
512858     by LHS;
512859     run;
512860     %let dsid = %sysfunc(open(_tempid));
512861     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512862     %let dsid = %sysfunc(close(&dsid));
512863     %if ^&&nobs&id %then %do;
512864     proc datasets lib=work nolist;
512865     delete _tempid;
512866     run;
512867     quit;
512868     %end;
512869     %else %do;
512870     data _tempAll;
512871     set %let j=%eval(&id-1);
512872     %do x=1 %to &j;
512873     %if &&nobs&x %then %do;
512874     _temp&x %end;
512875     %end;
512876     ;
512877     run;
512878     proc sql;
512879     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
512879   ! work._tempid p2 where p.name=p2.lhs;
512880     quit;
512881     data _temp&id;
512882     set _temp&id;
512883     where LHS ne '' and NAME ne '' and Node ne '';
512884     run;
512885     proc datasets lib=work nolist;
512886     delete _tempAll;
512887     run;
512888     %let dsid = %sysfunc(open(_temp&id));
512889     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512890     %let dsid = %sysfunc(close(&dsid));
512891     %if ^&&nobs&id %then %do;
512892     proc datasets lib=work nolist;
512893     delete _temp&id;
512894     run;
512895     quit;
512896     %end;
512897     %else %do;
512898     %let scoreFlag&id = 1;
512899     data _temp&id;
512900     set _temp&id;
512901     where LHS ne NAME and node ne '';
512902     run;
512903     %let dsid = %sysfunc(open(_temp&id));
512904     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
512905     %let dsid = %sysfunc(close(&dsid));
512906     %if ^&&nobs&id %then %do;
512907     proc datasets lib=work nolist;
512908     delete _temp&id;
512909     run;
512910     quit;
512911     %end;
512912     %else %do;
512913     proc sort data=_temp&id nodupkey;
512914     by LHS NAME;
512915     run;
512916     %end;
512917     %end;
512918     %end;
512919     %end;
512920     %mend varDept;
512921     %macro optCode(outdata=fcmpdata);
512922     %global fcmpStart;
512923     %let fcmpStart = 0;
512924     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
512925     %let NumNodes=9;
512926     %do k=1 %to &NumNodes;
512927     %vardept(fcmpdata=&outdata, id=&k);
512928     %end;
512929     %mend optCode;
512930     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

512931     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
512932     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
512933     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
512934     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512935     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
512936     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
512937     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
512938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512939     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
512940     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
512940   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

512941     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

512942     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
512943     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
512944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

512945     filename _pref
512945   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
512946     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
512947     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
512948    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
512949    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
512950    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
512951    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
512952    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
512953    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
512954    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
512955    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
512956    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
512957    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
512958    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
512959    +LENGTH _WARN_ $4
512960    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
512961    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
512962    +
512963    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
512964    +
512965    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
512966    +
512967    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
512968    +
512969    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
512970    +
512971    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
512972    +
512973    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
512974    +
512975    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
512976    +
512977    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
512978    +
512979    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
512980    +
512981    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
512982    +
512983    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
512984    +
512985    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
512986    +
512987    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
512988    +
512989    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
512990    +
512991    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
512992    +
512993    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
512994    +
512995    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
512996    +
512997    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
512998    +
512999    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
513000    +
513001    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
513002    +
513003    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
513004    +
513005    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
513006    +
513007    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
513008    +
513009    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
513010    +
513011    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
513012    +
513013    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
513014    +
513015    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
513016    +
513017    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
513018    +
513019    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
513020    +
513021    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
513022    +
513023    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
513024    +
513025    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
513026    +
513027    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
513028    +
513029    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
513030    +
513031    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
513032    +
513033    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
513034    +
513035    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
513036    +
513037    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
513038    +
513039    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
513040    +
513041    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
513042    +
513043    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
513044    +
513045    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
513046    +
513047    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
513048    +
513049    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
513050    +
513051    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
513052    +
513053    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
513054    +
513055    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
513056    +
513057    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
513058    +
513059    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
513060    +
513061    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
513062    +
513063    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
513064    +
513065    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
513066    +
513067    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
513068    +
513069    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
513070    +
513071    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
513072    +
513073    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
513074    +
513075    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
513076    +
513077    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
513078    +
513079    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
513080    +
513081    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
513082    +
513083    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
513084    +
513085    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
513086    +
513087    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
513088    +
513089    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
513090    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
513091    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
513092    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
513093    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513094    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513095    +end;
MPRINT(EM_DIAGRAM):   end;
513096    +else do;
MPRINT(EM_DIAGRAM):   else do;
513097    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513098    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
513099    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513100    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513101    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
513102    +   end;
MPRINT(EM_DIAGRAM):   end;
513103    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513104    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
513105    +   end;
MPRINT(EM_DIAGRAM):   end;
513106    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513107    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
513108    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513109    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513110    +   end;
MPRINT(EM_DIAGRAM):   end;
513111    +end;
MPRINT(EM_DIAGRAM):   end;
513112    +
513113    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
513114    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
513115    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
513116    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
513117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513119    +end;
MPRINT(EM_DIAGRAM):   end;
513120    +else do;
MPRINT(EM_DIAGRAM):   else do;
513121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513122    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
513123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513124    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513125    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
513126    +   end;
MPRINT(EM_DIAGRAM):   end;
513127    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513128    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
513129    +   end;
MPRINT(EM_DIAGRAM):   end;
513130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513131    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
513132    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513133    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513134    +   end;
MPRINT(EM_DIAGRAM):   end;
513135    +end;
MPRINT(EM_DIAGRAM):   end;
513136    +
513137    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
513138    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
513139    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
513140    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
513141    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513142    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513143    +end;
MPRINT(EM_DIAGRAM):   end;
513144    +else do;
MPRINT(EM_DIAGRAM):   else do;
513145    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513146    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
513147    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513148    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513149    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
513150    +   end;
MPRINT(EM_DIAGRAM):   end;
513151    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513152    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
513153    +   end;
MPRINT(EM_DIAGRAM):   end;
513154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513155    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
513156    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513157    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513158    +   end;
MPRINT(EM_DIAGRAM):   end;
513159    +end;
MPRINT(EM_DIAGRAM):   end;
513160    +
513161    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
513162    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
513163    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
513164    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
513165    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513166    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513167    +end;
MPRINT(EM_DIAGRAM):   end;
513168    +else do;
MPRINT(EM_DIAGRAM):   else do;
513169    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513170    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
513171    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513172    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513173    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
513174    +   end;
MPRINT(EM_DIAGRAM):   end;
513175    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513176    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
513177    +   end;
MPRINT(EM_DIAGRAM):   end;
513178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513179    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
513180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513182    +   end;
MPRINT(EM_DIAGRAM):   end;
513183    +end;
MPRINT(EM_DIAGRAM):   end;
513184    +
513185    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
513186    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
513187    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
513188    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
513189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513191    +end;
MPRINT(EM_DIAGRAM):   end;
513192    +else do;
MPRINT(EM_DIAGRAM):   else do;
513193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513194    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
513195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513196    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513197    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
The SAS System

513198    +   end;
MPRINT(EM_DIAGRAM):   end;
513199    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513200    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
513201    +   end;
MPRINT(EM_DIAGRAM):   end;
513202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513203    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
513204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513206    +   end;
MPRINT(EM_DIAGRAM):   end;
513207    +end;
MPRINT(EM_DIAGRAM):   end;
513208    +
513209    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
513210    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
513211    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
513212    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
513213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513215    +end;
MPRINT(EM_DIAGRAM):   end;
513216    +else do;
MPRINT(EM_DIAGRAM):   else do;
513217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513218    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
513219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513220    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
513221    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
513222    +   end;
MPRINT(EM_DIAGRAM):   end;
513223    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
513224    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
513225    +   end;
MPRINT(EM_DIAGRAM):   end;
513226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513227    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
513228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513230    +   end;
MPRINT(EM_DIAGRAM):   end;
513231    +end;
MPRINT(EM_DIAGRAM):   end;
513232    +
513233    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
513234    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
513235    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
513236    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
513237    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513238    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513239    +end;
MPRINT(EM_DIAGRAM):   end;
513240    +else do;
MPRINT(EM_DIAGRAM):   else do;
513241    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
513242    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
513243    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513244    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
513245    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
513246    +   end;
MPRINT(EM_DIAGRAM):   end;
513247    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
513248    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
513249    +   end;
MPRINT(EM_DIAGRAM):   end;
513250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513251    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
513252    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513253    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513254    +   end;
MPRINT(EM_DIAGRAM):   end;
513255    +end;
MPRINT(EM_DIAGRAM):   end;
513256    +
513257    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
513258    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
513259    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
513260    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
513261    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
513262    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
513263    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
513264    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
513265    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
513266    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
513267    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
513268    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
513269    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513270    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513271    +end;
MPRINT(EM_DIAGRAM):   end;
513272    +else do;
MPRINT(EM_DIAGRAM):   else do;
513273    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
513274    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
513275    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513276    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
513277    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
513278    +   end;
MPRINT(EM_DIAGRAM):   end;
513279    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
513280    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
513281    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
513282    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
513283    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
513284    +   end;
MPRINT(EM_DIAGRAM):   end;
513285    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
513286    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
513287    +   end;
MPRINT(EM_DIAGRAM):   end;
513288    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
513289    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
513290    +   end;
MPRINT(EM_DIAGRAM):   end;
513291    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
513292    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
513293    +   end;
MPRINT(EM_DIAGRAM):   end;
513294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513295    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
513296    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
513297    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
513298    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
513299    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513300    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513301    +   end;
MPRINT(EM_DIAGRAM):   end;
513302    +end;
MPRINT(EM_DIAGRAM):   end;
513303    +
513304    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
513305    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
513306    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
513307    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
513308    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
513309    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
513310    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
513311    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
513312    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
513313    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
513314    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
513315    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
513316    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
513317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
513318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513319    +end;
MPRINT(EM_DIAGRAM):   end;
513320    +else do;
MPRINT(EM_DIAGRAM):   else do;
513321    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
513322    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
513323    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
513324    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
513325    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
513326    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
513327    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
513328    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
513329    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513330    +         end;
MPRINT(EM_DIAGRAM):   end;
513331    +         else do;
MPRINT(EM_DIAGRAM):   else do;
513332    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
513333    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
513334    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513335    +            end;
MPRINT(EM_DIAGRAM):   end;
513336    +         end;
MPRINT(EM_DIAGRAM):   end;
513337    +      end;
MPRINT(EM_DIAGRAM):   end;
513338    +      else do;
MPRINT(EM_DIAGRAM):   else do;
513339    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
513340    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
513341    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513342    +         end;
MPRINT(EM_DIAGRAM):   end;
513343    +      end;
MPRINT(EM_DIAGRAM):   end;
513344    +   end;
MPRINT(EM_DIAGRAM):   end;
513345    +   else do;
MPRINT(EM_DIAGRAM):   else do;
513346    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
513347    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
513348    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513349    +      end;
MPRINT(EM_DIAGRAM):   end;
513350    +      else do;
MPRINT(EM_DIAGRAM):   else do;
513351    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
513352    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
513353    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
513354    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
513355    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
513356    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
513357    +         end;
MPRINT(EM_DIAGRAM):   end;
513358    +      end;
MPRINT(EM_DIAGRAM):   end;
513359    +   end;
MPRINT(EM_DIAGRAM):   end;
513360    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
513361    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
513362    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
513363    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
513364    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
513365    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
513366    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513367    +   end;
MPRINT(EM_DIAGRAM):   end;
513368    +end;
MPRINT(EM_DIAGRAM):   end;
513369    +
513370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513371    +*** Checking missing input Interval
513372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
513373    +
513374    +IF NMISS(
513375    +   AcceptedCmpTotal ,
513376    +   Age ,
513377    +   Frq ,
513378    +   Income ,
513379    +   Kidhome ,
513380    +   Mnt ,
513381    +   MntFishProducts ,
513382    +   MntFruits ,
513383    +   MntGoldProds ,
513384    +   MntMeatProducts ,
513385    +   MntSweetProducts ,
513386    +   MntWines ,
513387    +   MonthsAsCustomer ,
513388    +   NumCatalogPurchases ,
513389    +   NumDealsPurchases ,
513390    +   NumDistPurchases ,
513391    +   NumStorePurchases ,
513392    +   NumWebPurchases ,
513393    +   NumWebVisitsMonth ,
513394    +   RFMstat ,
513395    +   RMntFrq ,
513396    +   Recency ,
513397    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
513398    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
513399    +
513400    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
513401    +END;
MPRINT(EM_DIAGRAM):   END;
513402    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513403    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
513404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513405    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
513406    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
513407    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
513408    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
513409    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
513410    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
513411    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
513412    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
513413    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
513414    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
513415    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
513416    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
513417    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
513418    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
513419    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
513420    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
513421    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
513422    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
513423    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
513424    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
513425    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
513426    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
513427    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
513428    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
513429    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
513430    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
513431    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
513432    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
513433    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
513434    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
513435    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
513436    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
513437    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
513438    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
513439    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
513440    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
513441    +END;
MPRINT(EM_DIAGRAM):   END;
513442    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
513443    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
513444    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
513445    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
513446    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
513447    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
513448    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
513449    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
513450    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
513451    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
513452    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
513453    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
513454    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
513455    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
513456    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
513457    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
513458    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
513459    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
513460    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
513461    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
513462    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
513463    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
513464    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
513465    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
513466    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
513467    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
513468    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
513469    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
513470    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
513471    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
513472    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
513473    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
513474    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
513475    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
513476    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
513477    +   ELSE S_NumCatalogPurchases
513478    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
513479    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
513480    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
513481    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
513482    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
513483    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
513484    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
513485    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
513486    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
513487    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
513488    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
513489    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
513490    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
513491    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
513492    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
513493    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
513494    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
513495    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
513496    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
513497    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
513498    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
513499    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
513500    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
513501    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
513502    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
513503    +END;
MPRINT(EM_DIAGRAM):   END;
513504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513505    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
513506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513508    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
513509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513511    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
513512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513513    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
513514    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
513515    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
513516    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
513517    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
513518    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
513519    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
513520    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
513521    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
513522    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
513523    +          +     1.17276395296242 * S_NumDealsPurchases
513524    +          +     0.26632768295477 * S_NumDistPurchases
513525    +          +    -1.26575615903579 * S_NumStorePurchases
513526    +          +    -0.95316107557927 * S_NumWebPurchases
513527    +          +     1.01828574356487 * S_NumWebVisitsMonth
513528    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
513529    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
513530    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
513531    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
513532    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
513533    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
513534    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
513535    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
513536    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
513537    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
513538    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
513539    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
513540    +          +     1.14485571201233 * S_NumDealsPurchases
513541    +          +     0.21414266588987 * S_NumDistPurchases
513542    +          +    -0.10530090074297 * S_NumStorePurchases
513543    +          +    -0.41712321238458 * S_NumWebPurchases
513544    +          +    -0.99760766791108 * S_NumWebVisitsMonth
513545    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
513546    +        S_RMntFrq  +     1.10040128548883 * S_Recency
513547    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
513548    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
513549    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
513550    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
513551    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
513552    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
513553    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
513554    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
513555    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
513556    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
513557    +          +      0.7196418967437 * S_NumDealsPurchases
513558    +          +     0.69035286374177 * S_NumDistPurchases
513559    +          +     0.38027656631135 * S_NumStorePurchases
513560    +          +    -0.18878358997924 * S_NumWebPurchases
513561    +          +     1.61962062004798 * S_NumWebVisitsMonth
513562    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
513563    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
513564    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
513565    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
513566    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
513567    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
513568    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
513569    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
513570    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
513571    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
513572    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
513573    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
513574    +          +    -0.00642902007204 * S_NumDealsPurchases
513575    +          +     0.29785069480367 * S_NumDistPurchases
513576    +          +    -0.42243322063147 * S_NumStorePurchases
513577    +          +     0.54880896338383 * S_NumWebPurchases
513578    +          +    -0.12525846016886 * S_NumWebVisitsMonth
513579    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
513580    +        S_RMntFrq  +     0.10252211581449 * S_Recency
513581    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
513582    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
513583    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
513584    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
513585    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
513586    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
513587    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
513588    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
513589    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
513590    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
513591    +          +    -0.48404738328225 * S_NumDealsPurchases
513592    +          +    -0.02464180457879 * S_NumDistPurchases
513593    +          +     1.17201831082067 * S_NumStorePurchases
513594    +          +     0.57453655167516 * S_NumWebPurchases
513595    +          +    -1.94417019790248 * S_NumWebVisitsMonth
513596    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
513597    +        S_RMntFrq  +      1.6169916658132 * S_Recency
513598    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
513599    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
513600    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
513601    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
513602    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
513603    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
513604    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
513605    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
513606    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
513607    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
513608    +          +    -1.49850531967483 * S_NumDealsPurchases
513609    +          +    -0.82105466264223 * S_NumDistPurchases
513610    +          +     0.29984603642824 * S_NumStorePurchases
513611    +          +     0.06557123721611 * S_NumWebPurchases
513612    +          +     1.04754749365002 * S_NumWebVisitsMonth
513613    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
513614    +        S_RMntFrq  +     0.12396789666359 * S_Recency
513615    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
513616    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
513617    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
513618    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
513619    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
513620    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
513621    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
513622    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
513623    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
513624    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
513625    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
513626    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
513627    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
513628    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
513629    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
513630    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
513631    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
513632    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
513633    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
513634    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
513635    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
513636    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
513637    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
513638    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
513639    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
513640    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
513641    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
513642    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
513643    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
513644    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
513645    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
513646    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
513647    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
513648    +        EducationGraduation  +     0.07595631354847 * EducationMaster
513649    +          +     0.24583509957712 * Marital_StatusDivorced
513650    +          +    -0.22681931588361 * Marital_StatusMarried
513651    +          +    -0.12924106229536 * Marital_StatusSingle
513652    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
513653    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
513654    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
513655    +        EducationGraduation  +     0.23015089246655 * EducationMaster
513656    +          +    -0.12585334311068 * Marital_StatusDivorced
513657    +          +    -0.20835502467207 * Marital_StatusMarried
513658    +          +    -0.13839534449368 * Marital_StatusSingle
513659    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
513660    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
513661    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
513662    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
513663    +          +     0.35106363238113 * Marital_StatusDivorced
513664    +          +     -1.3414808583918 * Marital_StatusMarried
513665    +          +     1.40835320798486 * Marital_StatusSingle
513666    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
513667    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
513668    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
513669    +        EducationGraduation  +      0.1746658332011 * EducationMaster
513670    +          +     0.48174546958393 * Marital_StatusDivorced
513671    +          +    -0.41416978858191 * Marital_StatusMarried
513672    +          +    -0.23376801546265 * Marital_StatusSingle
513673    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
513674    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
513675    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
513676    +        EducationGraduation  +     0.68875064631577 * EducationMaster
513677    +          +    -0.67557643774246 * Marital_StatusDivorced
513678    +          +     1.63844045917367 * Marital_StatusMarried
513679    +          +    -0.70320960247699 * Marital_StatusSingle
513680    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
513681    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
513682    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
513683    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
513684    +          +    -0.11371453086883 * Marital_StatusDivorced
513685    +          +    -0.34226997176291 * Marital_StatusMarried
513686    +          +    -1.01568676685754 * Marital_StatusSingle
513687    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
513688    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
513689    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
513690    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
513691    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
513692    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
513693    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
513694    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
513695    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
513696    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
513697    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
513698    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
513699    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
513700    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
513701    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
513702    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
513703    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
513704    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
513705    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
513706    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
513707    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
513708    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
513709    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
513710    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
513711    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
513712    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
513713    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
513714    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
513715    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
513716    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
513717    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
513718    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
513719    +END;
MPRINT(EM_DIAGRAM):   END;
513720    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
513721    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
513722    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
513723    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
513724    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
513725    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
513726    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
513727    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
513728    +END;
MPRINT(EM_DIAGRAM):   END;
513729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513730    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
513731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513732    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
513733    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
513734    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
513735    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
513736    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
513737    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
513738    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
513739    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
513740    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
513741    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
513742    +          +    -0.87259051567474 * S_NumDealsPurchases
513743    +          +    -0.36454149529139 * S_NumDistPurchases
513744    +          +     0.12447759925061 * S_NumStorePurchases
513745    +          +    -1.08133487947367 * S_NumWebPurchases
513746    +          +    -0.49882157745454 * S_NumWebVisitsMonth
513747    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
513748    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
513749    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
513750    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
513751    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
513752    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
513753    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
513754    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
513755    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
513756    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
513757    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
513758    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
513759    +          +     2.23121497416403 * S_NumDealsPurchases
513760    +          +    -0.48674842191071 * S_NumDistPurchases
513761    +          +     1.77510728607544 * S_NumStorePurchases
513762    +          +     0.14647433155436 * S_NumWebPurchases
513763    +          +    -0.95892686924419 * S_NumWebVisitsMonth
513764    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
513765    +        S_RMntFrq  +     2.46497777428475 * S_Recency
513766    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
513767    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
513768    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
513769    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
513770    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
513771    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
513772    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
513773    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
513774    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
513775    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
513776    +          +     0.14338855349611 * S_NumDealsPurchases
513777    +          +    -2.21071010829235 * S_NumDistPurchases
513778    +          +    -0.21795889348002 * S_NumStorePurchases
513779    +          +     1.98825087883535 * S_NumWebPurchases
513780    +          +     1.02482442531149 * S_NumWebVisitsMonth
513781    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
513782    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
513783    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
513784    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
513785    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
513786    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
513787    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
513788    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
513789    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
513790    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
513791    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
513792    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
513793    +          +     0.30041205661012 * S_NumDealsPurchases
513794    +          +    -0.63499849986918 * S_NumDistPurchases
513795    +          +    -0.34155713433714 * S_NumStorePurchases
513796    +          +    -1.14183354933936 * S_NumWebPurchases
513797    +          +    -0.42681980262973 * S_NumWebVisitsMonth
513798    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
513799    +        S_RMntFrq  +     1.25852246467612 * S_Recency
513800    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
513801    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
513802    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
513803    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
513804    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
513805    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
513806    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
513807    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
513808    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
513809    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
513810    +          +    -0.21237915559831 * S_NumDealsPurchases
513811    +          +     0.48256923764182 * S_NumDistPurchases
513812    +          +    -0.45553093140641 * S_NumStorePurchases
513813    +          +      0.5593655963659 * S_NumWebPurchases
513814    +          +     0.27943768691188 * S_NumWebVisitsMonth
513815    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
513816    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
513817    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
513818    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
513819    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
513820    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
513821    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
513822    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
513823    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
513824    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
513825    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
513826    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
513827    +          +     2.38967021388062 * S_NumDealsPurchases
513828    +          +    -0.97722398866481 * S_NumDistPurchases
513829    +          +     1.57612333191312 * S_NumStorePurchases
513830    +          +    -0.75968679115983 * S_NumWebPurchases
513831    +          +    -0.64207187757251 * S_NumWebVisitsMonth
513832    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
513833    +        S_RMntFrq  +     1.71313869798331 * S_Recency
513834    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
513835    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
513836    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
513837    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
513838    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
513839    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
513840    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
513841    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
513842    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
513843    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
513844    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
513845    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
513846    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
513847    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
513848    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
513849    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
513850    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
513851    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
513852    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
513853    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
513854    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
513855    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
513856    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
513857    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
513858    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
513859    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
513860    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
513861    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
513862    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
513863    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
513864    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
513865    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
513866    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
513867    +        EducationGraduation  +      0.1073450284316 * EducationMaster
513868    +          +     0.96470902298142 * Marital_StatusDivorced
513869    +          +     0.94805959268314 * Marital_StatusMarried
513870    +          +     -0.6523948769616 * Marital_StatusSingle
513871    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
513872    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
513873    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
513874    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
513875    +          +      0.3918249505531 * Marital_StatusDivorced
513876    +          +    -0.00968091979586 * Marital_StatusMarried
513877    +          +     0.84615379885071 * Marital_StatusSingle
513878    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
513879    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
513880    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
513881    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
513882    +          +     1.14335160313191 * Marital_StatusDivorced
513883    +          +     0.50580517192175 * Marital_StatusMarried
513884    +          +     0.17264295020921 * Marital_StatusSingle
513885    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
513886    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
513887    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
513888    +        EducationGraduation  +     1.95818378342783 * EducationMaster
513889    +          +    -0.11238504444225 * Marital_StatusDivorced
513890    +          +    -0.81348274043749 * Marital_StatusMarried
513891    +          +     0.46075415610001 * Marital_StatusSingle
513892    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
513893    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
513894    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
513895    +        EducationGraduation  +     0.08396135672504 * EducationMaster
513896    +          +    -0.46342068701431 * Marital_StatusDivorced
513897    +          +    -0.41667845270204 * Marital_StatusMarried
513898    +          +    -0.47166707496281 * Marital_StatusSingle
513899    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
513900    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
513901    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
513902    +        EducationGraduation  +     0.36656103863186 * EducationMaster
513903    +          +    -0.45376613787812 * Marital_StatusDivorced
513904    +          +     0.01337046049801 * Marital_StatusMarried
513905    +          +    -0.92811489484121 * Marital_StatusSingle
513906    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
513907    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
513908    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
513909    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
513910    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
513911    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
513912    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
513913    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
513914    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
513915    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
513916    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
513917    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
513918    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
513919    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
513920    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
513921    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
513922    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
513923    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
513924    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
513925    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
513926    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
513927    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
513928    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
513929    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
513930    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
513931    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
513932    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
513933    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
513934    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
513935    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
513936    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
513937    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
513938    +END;
MPRINT(EM_DIAGRAM):   END;
513939    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
513940    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
513941    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
513942    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
513943    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
513944    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
513945    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
513946    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
513947    +END;
MPRINT(EM_DIAGRAM):   END;
513948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513949    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
513950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
513951    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
513952    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
513953    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
513954    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
513955    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
513956    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
513957    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
513958    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
513959    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
513960    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
513961    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
513962    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
513963    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
513964    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
513965    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
513966    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
513967    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
513968    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
513969    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
513970    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
513971    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
513972    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
513973    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
513974    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
513975    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
513976    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
513977    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
513978    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
513979    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
513980    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
513981    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
513982    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
513983    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
513984    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
513985    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
513986    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
513987    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
513988    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
513989    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
513990    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
513991    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
513992    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
513993    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
513994    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
513995    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
513996    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
513997    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
513998    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
513999    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
514000    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
514001    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
514002    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
514003    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
514004    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
514005    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
514006    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
514007    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
514008    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
514009    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
514010    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
514011    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
514012    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
514013    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
514014    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
514015    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
514016    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
514017    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
514018    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
514019    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
514020    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
514021    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
514022    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
514023    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
514024    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
514025    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
514026    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
514027    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
514028    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
514029    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
514030    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
514031    +END;
MPRINT(EM_DIAGRAM):   END;
514032    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
514033    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
514034    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
514035    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
514036    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
514037    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
514038    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
514039    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
514040    +END;
MPRINT(EM_DIAGRAM):   END;
514041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514042    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
514043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514044    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
514045    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
514046    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
514047    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
514048    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
514049    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
514050    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
514051    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
514052    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
514053    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
514054    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
514055    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
514056    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
514057    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
514058    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
514059    +END;
MPRINT(EM_DIAGRAM):   END;
514060    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
514061    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
514062    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
514063    +END;
MPRINT(EM_DIAGRAM):   END;
514064    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
514065    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
514066    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
514067    +END;
MPRINT(EM_DIAGRAM):   END;
514068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514069    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
514070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514071    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
514072    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
514073    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
514074    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
514075    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
514076    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
514077    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
514078    +END;
MPRINT(EM_DIAGRAM):   END;
514079    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
514080    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
514081    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
514082    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514083     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
514084     quit;
514085     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514086     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514087     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514088     retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
514089     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514090     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514091     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514092     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514094     proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
514095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514097     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514098     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514099     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514101     proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
514102     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514103     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514104     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514106     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514107     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514109     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514110     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514111     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514111   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

514112     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514113     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514114     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514115     filename _pref
514115   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
514116     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514117     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
514118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
514119    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
514120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
514121    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
514122    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
514123    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514124     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
514125     quit;
514126     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514127     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514128     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514129     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
514130     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514131     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514132     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514135     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
514136     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514138     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514139     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514140     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514142     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
514143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

514144     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514145     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514147     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514148     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514149     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514150     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514151     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514152     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514152   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

514153     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514154     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514155     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514156     filename _pref
514156   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
514157     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514158     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
514159    +
514160    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
514161    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
514161   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
514162    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
514163    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
514164    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
514165    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
514166    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514167     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
514168     quit;
514169     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514170     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514171     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514172     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
514173     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514175     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514176     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514177     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514178     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
514179     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514180     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514181     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514182     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514183     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514185     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
514186     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514187     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514188     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514190     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514191     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514192     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514193     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514194     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514195     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514195   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

514196     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514197     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514198     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514199     filename _pref
514199   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
514200     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514201     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
514202    +
514203    +
514204    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
514205    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
514206    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
514207    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
514208    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
514209    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514210    +
514211    +
514212    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
514213    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
514214    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
514215    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
514216    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
514217    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514218    +
514219    +
514220    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
514221    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
514222    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
514223    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
514224    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
514225    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514226    +
514227    +
514228    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
514229    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
514230    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
514231    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
514232    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
514233    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514234    +
514235    +
514236    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
514237    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
514238    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
514239    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
514240    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
514241    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514242    +
514243    +
514244    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
514245    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
514246    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
514247    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
514248    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
514249    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514250    +
514251    +
514252    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
514253    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
514254    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
514255    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
514256    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
514257    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514258    +
514259    +
514260    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
514261    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
514262    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
514263    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
514264    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
514265    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
514266    +if
514267    +_FILTERNORM1 not in ( '.')
514268    + and
514269    +_FILTERNORM2 not in ( '.')
514270    + and
514271    +_FILTERNORM3 not in ( '.')
514272    + and
514273    +_FILTERNORM4 not in ( '.')
514274    + and
514275    +_FILTERNORM5 not in ( '.')
514276    + and
514277    +_FILTERNORM6 not in ( '.')
514278    + and
514279    +_FILTERNORM7 not in ( ' ')
514280    + and
514281    +_FILTERNORM8 not in ( ' ')
514282    +and
514283    +( Dt_Customer ne .)
514284    +and ( Income ne . and (Income<=107000))
514285    +and ( Kidhome ne .)
514286    +and ( MntFishProducts ne .)
514287    +and ( MntFruits ne .)
514288    +and ( MntGoldProds ne .)
514289    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
514290    +and ( MntSweetProducts ne .)
514291    +and ( MntWines ne .)
514292    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
514293    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
514294    +and ( NumStorePurchases ne .)
514295    +and ( NumWebPurchases ne .)
514296    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
514297    +and ( Recency ne .)
514298    +and ( Teenhome ne .)
514299    +and ( Year_Birth ne .)
514300    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
514301    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
514302    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
514303    +end;
MPRINT(EM_DIAGRAM):   end;
514304    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
514305    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
514306     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
514307     quit;
514308     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
514309     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
514310     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
514311     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
514312     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
514313     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514314     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
514315     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514316     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514317     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
514318     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514319     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514320     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514321     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
514322     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
514323     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514324     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
514325     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514326     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
514327     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514328     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514329     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
514330     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
514331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
514332     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514333     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514334     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
514334   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

514335     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514336     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
514337     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514338     %macro varDept(fcmpdata=,id=);
514339     %global nobs&id scoreFlag&id;
514340     %let scoreFlag&id = 0;
514341     %if &id=1 or ^&fcmpStart %then %do;
514342     proc sort data=&fcmpdata out=_temp&id nodupkey;
514343     by NAME;
514344     where id=&id and LHS in( %let j=1;
514345     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
514346     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
514347     "&var" %let j = %eval(&j+1);
514348     %end;
514349     );
514350     run;
514351     %let dsid = %sysfunc(open(_temp&id));
514352     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514353     %let dsid = %sysfunc(close(&dsid));
514354     %if &&nobs&id %then %do;
514355     %let scoreFlag&id = 1;
514356     %let fcmpStart = 1;
514357     %end;
514358     %else %let fcmpStart = 0;
514359     %end;
514360     %else %do;
514361     proc sort data=&fcmpdata out=_tempid;
514362     where id=&id;
514363     by LHS;
514364     run;
514365     %let dsid = %sysfunc(open(_tempid));
514366     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514367     %let dsid = %sysfunc(close(&dsid));
514368     %if ^&&nobs&id %then %do;
514369     proc datasets lib=work nolist;
514370     delete _tempid;
514371     run;
514372     quit;
514373     %end;
514374     %else %do;
514375     data _tempAll;
514376     set %let j=%eval(&id-1);
514377     %do x=1 %to &j;
514378     %if &&nobs&x %then %do;
514379     _temp&x %end;
514380     %end;
514381     ;
514382     run;
514383     proc sql;
514384     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
514384   ! work._tempid p2 where p.name=p2.lhs;
514385     quit;
514386     data _temp&id;
514387     set _temp&id;
514388     where LHS ne '' and NAME ne '' and Node ne '';
514389     run;
514390     proc datasets lib=work nolist;
514391     delete _tempAll;
514392     run;
514393     %let dsid = %sysfunc(open(_temp&id));
514394     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514395     %let dsid = %sysfunc(close(&dsid));
514396     %if ^&&nobs&id %then %do;
514397     proc datasets lib=work nolist;
514398     delete _temp&id;
514399     run;
514400     quit;
514401     %end;
514402     %else %do;
514403     %let scoreFlag&id = 1;
514404     data _temp&id;
514405     set _temp&id;
514406     where LHS ne NAME and node ne '';
514407     run;
514408     %let dsid = %sysfunc(open(_temp&id));
514409     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
514410     %let dsid = %sysfunc(close(&dsid));
514411     %if ^&&nobs&id %then %do;
514412     proc datasets lib=work nolist;
514413     delete _temp&id;
514414     run;
514415     quit;
514416     %end;
514417     %else %do;
514418     proc sort data=_temp&id nodupkey;
514419     by LHS NAME;
514420     run;
514421     %end;
514422     %end;
514423     %end;
514424     %end;
514425     %mend varDept;
514426     %macro optCode(outdata=fcmpdata);
514427     %global fcmpStart;
514428     %let fcmpStart = 0;
514429     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
514430     %let NumNodes=9;
514431     %do k=1 %to &NumNodes;
514432     %vardept(fcmpdata=&outdata, id=&k);
514433     %end;
514434     %mend optCode;
514435     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

514436     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
514437     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
514438     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
514439     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514440     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
514441     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
514442     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
514443     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514444     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
514445     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
514445   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

514446     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

514447     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
514448     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
514449     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

514450     filename _pref
514450   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
514451     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
514452     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
514453    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
514454    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
514455    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
514456    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
514457    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
514458    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
514459    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
514460    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
514461    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
514462    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
514463    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
514464    +LENGTH _WARN_ $4
514465    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
514466    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
514467    +
514468    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
514469    +
514470    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
514471    +
514472    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
514473    +
514474    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
514475    +
514476    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
514477    +
514478    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
514479    +
514480    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
514481    +
514482    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
514483    +
514484    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
514485    +
514486    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
514487    +
514488    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
514489    +
514490    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
514491    +
514492    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
514493    +
514494    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
514495    +
514496    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
514497    +
514498    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
514499    +
514500    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
514501    +
514502    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
514503    +
514504    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
514505    +
514506    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
514507    +
514508    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
514509    +
514510    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
514511    +
514512    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
514513    +
514514    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
514515    +
514516    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
514517    +
514518    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
514519    +
514520    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
514521    +
514522    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
514523    +
514524    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
514525    +
514526    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
514527    +
514528    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
514529    +
514530    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
514531    +
514532    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
514533    +
514534    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
514535    +
514536    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
514537    +
514538    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
514539    +
514540    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
514541    +
514542    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
514543    +
514544    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
514545    +
514546    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
514547    +
514548    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
514549    +
514550    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
514551    +
514552    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
514553    +
514554    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
514555    +
514556    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
514557    +
514558    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
514559    +
514560    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
514561    +
514562    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
514563    +
514564    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
514565    +
514566    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
514567    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
514568    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
514569    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
514570    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514571    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514572    +end;
MPRINT(EM_DIAGRAM):   end;
514573    +else do;
MPRINT(EM_DIAGRAM):   else do;
514574    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514575    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
514576    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514577    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514578    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
514579    +   end;
MPRINT(EM_DIAGRAM):   end;
514580    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514581    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
514582    +   end;
MPRINT(EM_DIAGRAM):   end;
514583    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514584    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
514585    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514586    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514587    +   end;
MPRINT(EM_DIAGRAM):   end;
514588    +end;
MPRINT(EM_DIAGRAM):   end;
514589    +
514590    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
514591    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
514592    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
514593    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
514594    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514595    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514596    +end;
MPRINT(EM_DIAGRAM):   end;
514597    +else do;
MPRINT(EM_DIAGRAM):   else do;
514598    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514599    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
514600    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514601    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514602    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
514603    +   end;
MPRINT(EM_DIAGRAM):   end;
514604    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514605    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
514606    +   end;
MPRINT(EM_DIAGRAM):   end;
514607    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514608    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
514609    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514610    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514611    +   end;
MPRINT(EM_DIAGRAM):   end;
514612    +end;
MPRINT(EM_DIAGRAM):   end;
514613    +
514614    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
514615    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
514616    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
514617    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
514618    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514619    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514620    +end;
MPRINT(EM_DIAGRAM):   end;
514621    +else do;
MPRINT(EM_DIAGRAM):   else do;
514622    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514623    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
514624    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514625    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514626    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
514627    +   end;
MPRINT(EM_DIAGRAM):   end;
514628    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514629    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
514630    +   end;
MPRINT(EM_DIAGRAM):   end;
514631    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514632    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
514633    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514634    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514635    +   end;
MPRINT(EM_DIAGRAM):   end;
514636    +end;
MPRINT(EM_DIAGRAM):   end;
514637    +
514638    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
514639    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
514640    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
514641    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
514642    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514643    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514644    +end;
MPRINT(EM_DIAGRAM):   end;
514645    +else do;
MPRINT(EM_DIAGRAM):   else do;
514646    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514647    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
514648    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514649    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514650    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
514651    +   end;
MPRINT(EM_DIAGRAM):   end;
514652    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514653    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
514654    +   end;
MPRINT(EM_DIAGRAM):   end;
514655    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514656    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
514657    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514658    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514659    +   end;
MPRINT(EM_DIAGRAM):   end;
514660    +end;
MPRINT(EM_DIAGRAM):   end;
514661    +
514662    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
514663    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
514664    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
514665    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
514666    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514667    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514668    +end;
MPRINT(EM_DIAGRAM):   end;
514669    +else do;
MPRINT(EM_DIAGRAM):   else do;
514670    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514671    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
514672    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514673    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514674    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
514675    +   end;
MPRINT(EM_DIAGRAM):   end;
514676    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514677    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
514678    +   end;
MPRINT(EM_DIAGRAM):   end;
514679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514680    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
514681    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514682    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514683    +   end;
MPRINT(EM_DIAGRAM):   end;
514684    +end;
MPRINT(EM_DIAGRAM):   end;
514685    +
514686    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
514687    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
514688    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
514689    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
514690    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514691    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514692    +end;
MPRINT(EM_DIAGRAM):   end;
514693    +else do;
MPRINT(EM_DIAGRAM):   else do;
514694    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514695    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
514696    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514697    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
514698    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
514699    +   end;
MPRINT(EM_DIAGRAM):   end;
514700    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
514701    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
514702    +   end;
MPRINT(EM_DIAGRAM):   end;
514703    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514704    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
514705    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514706    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514707    +   end;
MPRINT(EM_DIAGRAM):   end;
514708    +end;
MPRINT(EM_DIAGRAM):   end;
514709    +
514710    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
514711    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
514712    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
514713    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
514714    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514715    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514716    +end;
MPRINT(EM_DIAGRAM):   end;
514717    +else do;
MPRINT(EM_DIAGRAM):   else do;
514718    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
514719    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
514720    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514721    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
514722    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
514723    +   end;
MPRINT(EM_DIAGRAM):   end;
514724    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
514725    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
514726    +   end;
MPRINT(EM_DIAGRAM):   end;
514727    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514728    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
514729    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514730    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514731    +   end;
MPRINT(EM_DIAGRAM):   end;
514732    +end;
MPRINT(EM_DIAGRAM):   end;
514733    +
514734    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
514735    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
514736    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
514737    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
514738    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
514739    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
514740    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
514741    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
514742    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
514743    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
514744    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
514745    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
514746    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514747    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514748    +end;
MPRINT(EM_DIAGRAM):   end;
514749    +else do;
MPRINT(EM_DIAGRAM):   else do;
514750    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
514751    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
514752    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514753    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
514754    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
514755    +   end;
MPRINT(EM_DIAGRAM):   end;
514756    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
514757    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
514758    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
514759    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
514760    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
514761    +   end;
MPRINT(EM_DIAGRAM):   end;
514762    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
514763    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
514764    +   end;
MPRINT(EM_DIAGRAM):   end;
514765    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
514766    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
514767    +   end;
MPRINT(EM_DIAGRAM):   end;
514768    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
514769    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
514770    +   end;
MPRINT(EM_DIAGRAM):   end;
514771    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514772    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
514773    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
514774    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
514775    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
514776    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514777    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514778    +   end;
MPRINT(EM_DIAGRAM):   end;
514779    +end;
MPRINT(EM_DIAGRAM):   end;
514780    +
514781    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
514782    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
514783    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
514784    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
514785    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
514786    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
514787    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
514788    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
514789    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
514790    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
514791    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
514792    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
514793    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
514794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
514795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514796    +end;
MPRINT(EM_DIAGRAM):   end;
514797    +else do;
MPRINT(EM_DIAGRAM):   else do;
514798    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
514799    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
514800    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
514801    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
514802    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
514803    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
514804    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
514805    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
514806    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
514807    +         end;
MPRINT(EM_DIAGRAM):   end;
514808    +         else do;
MPRINT(EM_DIAGRAM):   else do;
514809    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
514810    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
514811    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
514812    +            end;
MPRINT(EM_DIAGRAM):   end;
514813    +         end;
MPRINT(EM_DIAGRAM):   end;
514814    +      end;
MPRINT(EM_DIAGRAM):   end;
514815    +      else do;
MPRINT(EM_DIAGRAM):   else do;
514816    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
514817    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
514818    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
514819    +         end;
MPRINT(EM_DIAGRAM):   end;
514820    +      end;
MPRINT(EM_DIAGRAM):   end;
514821    +   end;
MPRINT(EM_DIAGRAM):   end;
514822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
514823    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
514824    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
514825    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
514826    +      end;
MPRINT(EM_DIAGRAM):   end;
514827    +      else do;
MPRINT(EM_DIAGRAM):   else do;
514828    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
514829    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
514830    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
514831    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
514832    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
514833    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
514834    +         end;
MPRINT(EM_DIAGRAM):   end;
514835    +      end;
MPRINT(EM_DIAGRAM):   end;
514836    +   end;
MPRINT(EM_DIAGRAM):   end;
514837    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
514838    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
514839    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
514840    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
514841    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
514842    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
514843    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514844    +   end;
MPRINT(EM_DIAGRAM):   end;
514845    +end;
MPRINT(EM_DIAGRAM):   end;
514846    +
514847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514848    +*** Checking missing input Interval
514849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
514850    +
514851    +IF NMISS(
514852    +   AcceptedCmpTotal ,
514853    +   Age ,
514854    +   Frq ,
514855    +   Income ,
514856    +   Kidhome ,
514857    +   Mnt ,
514858    +   MntFishProducts ,
514859    +   MntFruits ,
514860    +   MntGoldProds ,
514861    +   MntMeatProducts ,
514862    +   MntSweetProducts ,
514863    +   MntWines ,
514864    +   MonthsAsCustomer ,
514865    +   NumCatalogPurchases ,
514866    +   NumDealsPurchases ,
514867    +   NumDistPurchases ,
514868    +   NumStorePurchases ,
514869    +   NumWebPurchases ,
514870    +   NumWebVisitsMonth ,
514871    +   RFMstat ,
514872    +   RMntFrq ,
514873    +   Recency ,
514874    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
514875    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
514876    +
514877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
514878    +END;
MPRINT(EM_DIAGRAM):   END;
514879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514880    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
514881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
514883    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
514884    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
514885    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
514886    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
514887    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
514888    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
514889    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
514890    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
514891    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
514892    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
514893    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
514894    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
514895    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
514896    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
514897    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
514898    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
514899    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
514900    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
514901    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
514902    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
514903    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
514904    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
514905    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
514906    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
514907    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
514908    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
514909    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
514910    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
514911    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
514912    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
514913    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
514914    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
514915    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
514916    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
514917    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
514918    +END;
MPRINT(EM_DIAGRAM):   END;
514919    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
514920    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
514921    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
514922    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
514923    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
514924    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
514925    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
514926    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
514927    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
514928    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
514929    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
514930    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
514931    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
514932    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
514933    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
514934    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
514935    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
514936    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
514937    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
514938    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
514939    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
514940    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
514941    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
514942    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
514943    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
514944    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
514945    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
514946    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
514947    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
514948    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
514949    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
514950    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
514951    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
514952    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
514953    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
514954    +   ELSE S_NumCatalogPurchases
514955    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
514956    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
514957    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
514958    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
514959    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
514960    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
514961    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
514962    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
514963    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
514964    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
514965    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
514966    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
514967    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
514968    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
514969    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
514970    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
514971    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
514972    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
514973    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
514974    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
514975    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
514976    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
514977    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
514978    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
514979    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
514980    +END;
MPRINT(EM_DIAGRAM):   END;
514981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514982    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
514983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514985    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
514986    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514988    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
514989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
514990    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
514991    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
514992    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
514993    +        S_Income  +    -0.48272554811946 * S_Kidhome
514994    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
514995    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
514996    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
514997    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
514998    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
514999    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
515000    +          +    -0.21965892172232 * S_NumDealsPurchases
515001    +          +     0.18147972034868 * S_NumDistPurchases
515002    +          +     0.36657814181657 * S_NumStorePurchases
515003    +          +      0.2558783559717 * S_NumWebPurchases
515004    +          +    -0.12008925196796 * S_NumWebVisitsMonth
515005    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
515006    +        S_RMntFrq  +     0.37914209292496 * S_Recency
515007    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
515008    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
515009    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
515010    +        S_Income  +     0.24387947620062 * S_Kidhome
515011    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
515012    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
515013    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
515014    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
515015    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
515016    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
515017    +          +    -0.05257082874614 * S_NumDealsPurchases
515018    +          +     0.41456571712035 * S_NumDistPurchases
515019    +          +     0.23489798619427 * S_NumStorePurchases
515020    +          +     0.27816946712153 * S_NumWebPurchases
515021    +          +    -0.60321927125997 * S_NumWebVisitsMonth
515022    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
515023    +        S_RMntFrq  +     0.37992942536792 * S_Recency
515024    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
515025    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
515026    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
515027    +        S_Income  +     0.20262487803684 * S_Kidhome
515028    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
515029    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
515030    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
515031    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
515032    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
515033    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
515034    +          +      0.0913099268589 * S_NumDealsPurchases
515035    +          +    -0.05574305289625 * S_NumDistPurchases
515036    +          +    -0.09928560475828 * S_NumStorePurchases
515037    +          +     0.00041482984053 * S_NumWebPurchases
515038    +          +    -0.03314322750163 * S_NumWebVisitsMonth
515039    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
515040    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
515041    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
515042    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
515043    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
515044    +        S_Income  +     0.26225843602768 * S_Kidhome
515045    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
515046    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
515047    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
515048    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
515049    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
515050    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
515051    +          +     0.83559002761395 * S_NumDealsPurchases
515052    +          +     0.30813434559451 * S_NumDistPurchases
515053    +          +    -0.61391039002598 * S_NumStorePurchases
515054    +          +    -1.03190502679863 * S_NumWebPurchases
515055    +          +     0.13374464245621 * S_NumWebVisitsMonth
515056    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
515057    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
515058    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
515059    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
515060    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
515061    +        S_Income  +      -0.692179901076 * S_Kidhome
515062    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
515063    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
515064    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
515065    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
515066    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
515067    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
515068    +          +     0.65604427948051 * S_NumDealsPurchases
515069    +          +     0.01430165674945 * S_NumDistPurchases
515070    +          +    -0.76865963932685 * S_NumStorePurchases
515071    +          +    -0.72521754496401 * S_NumWebPurchases
515072    +          +     1.59453686210397 * S_NumWebVisitsMonth
515073    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
515074    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
515075    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
515076    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
515077    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
515078    +        S_Income  +    -0.23602869688727 * S_Kidhome
515079    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
515080    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
515081    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
515082    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
515083    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
515084    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
515085    +          +    -0.30337362777997 * S_NumDealsPurchases
515086    +          +     0.11551482249746 * S_NumDistPurchases
515087    +          +     0.19719845223838 * S_NumStorePurchases
515088    +          +     0.16011319337206 * S_NumWebPurchases
515089    +          +    -0.19222801416081 * S_NumWebVisitsMonth
515090    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
515091    +        S_RMntFrq  +     0.01056840325776 * S_Recency
515092    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
515093    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
515094    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
515095    +        S_Income  +    -0.47270881977809 * S_Kidhome
515096    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
515097    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
515098    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
515099    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
515100    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
515101    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
515102    +          +    -0.16806813676368 * S_NumDealsPurchases
515103    +          +      0.1680540538046 * S_NumDistPurchases
515104    +          +     0.09845423109173 * S_NumStorePurchases
515105    +          +     0.22281606853536 * S_NumWebPurchases
515106    +          +       0.650769024744 * S_NumWebVisitsMonth
515107    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
515108    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
515109    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
515110    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
515111    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
515112    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
515113    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
515114    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
515115    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
515116    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
515117    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
515118    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
515119    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
515120    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
515121    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
515122    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
515123    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
515124    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
515125    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
515126    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
515127    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
515128    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
515129    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
515130    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
515131    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
515132    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
515133    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
515134    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
515135    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
515136    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
515137    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
515138    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
515139    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
515140    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
515141    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
515142    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
515143    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
515144    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
515145    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
515146    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
515147    +        EducationGraduation  +     0.02445863067232 * EducationMaster
515148    +          +     0.42984001630756 * Marital_StatusDivorced
515149    +          +     -0.4660144877239 * Marital_StatusMarried
515150    +          +     0.44888148801285 * Marital_StatusSingle
515151    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
515152    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
515153    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
515154    +        EducationGraduation  +     0.28773168978233 * EducationMaster
515155    +          +     0.10758942571981 * Marital_StatusDivorced
515156    +          +     0.51795960036213 * Marital_StatusMarried
515157    +          +    -0.40242992087783 * Marital_StatusSingle
515158    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
515159    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
515160    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
515161    +        EducationGraduation  +      0.1986661885803 * EducationMaster
515162    +          +    -0.05264595890678 * Marital_StatusDivorced
515163    +          +     0.07468414180829 * Marital_StatusMarried
515164    +          +     0.20145352309024 * Marital_StatusSingle
515165    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
515166    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
515167    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
515168    +        EducationGraduation  +     0.28768591072195 * EducationMaster
515169    +          +    -0.41440932029593 * Marital_StatusDivorced
515170    +          +     0.65630698363184 * Marital_StatusMarried
515171    +          +    -0.37277384861759 * Marital_StatusSingle
515172    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
515173    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
515174    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
515175    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
515176    +          +     0.86284304352233 * Marital_StatusDivorced
515177    +          +    -0.85716490342524 * Marital_StatusMarried
515178    +          +     0.74516572826411 * Marital_StatusSingle
515179    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
515180    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
515181    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
515182    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
515183    +          +    -0.11928801837478 * Marital_StatusDivorced
515184    +          +    -0.15909233409421 * Marital_StatusMarried
515185    +          +     0.34325131781601 * Marital_StatusSingle
515186    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
515187    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
515188    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
515189    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
515190    +          +     0.15109481730803 * Marital_StatusDivorced
515191    +          +    -1.01578758379559 * Marital_StatusMarried
515192    +          +     0.70421923836193 * Marital_StatusSingle
515193    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
515194    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
515195    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
515196    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
515197    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
515198    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
515199    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
515200    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
515201    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
515202    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
515203    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
515204    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
515205    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
515206    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
515207    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
515208    +END;
MPRINT(EM_DIAGRAM):   END;
515209    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
515210    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
515211    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
515212    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
515213    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
515214    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
515215    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
515216    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
515217    +END;
MPRINT(EM_DIAGRAM):   END;
515218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515219    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
515220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515221    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
515222    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
515223    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
515224    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
515225    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
515226    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
515227    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
515228    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
515229    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
515230    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
515231    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
515232    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
515233    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
515234    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
515235    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
515236    +END;
MPRINT(EM_DIAGRAM):   END;
515237    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
515238    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
515239    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
515240    +END;
MPRINT(EM_DIAGRAM):   END;
515241    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
515242    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
515243    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
515244    +END;
MPRINT(EM_DIAGRAM):   END;
515245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515246    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
515247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
515248    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
515249    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
515250    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
515251    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
515252    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
515253    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
515254    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
515255    +END;
MPRINT(EM_DIAGRAM):   END;
515256    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
515257    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
515258    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
515259    +drop
515260    +H11
515261    +H12
515262    +H13
515263    +H14
515264    +H15
515265    +H16
515266    +H17
515267    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
515268    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515269     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
515270     quit;
515271     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515272     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515273     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515274     retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
515275     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515277     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515280     proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
515281     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

515283     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515284     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515285     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515287     proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
515288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

515289     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515290     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515291     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515292     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515293     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515295     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515296     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515297     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515297   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

515298     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

515299     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515301     filename _pref
515301   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
515302     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515303     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
515304    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
515305    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
515306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
515307    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
515308    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
515309    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515310     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
515311     quit;
515312     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515313     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515314     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515315     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
515316     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515317     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515318     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515319     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515320     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515321     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
515322     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515323     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515324     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515325     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515326     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515327     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515328     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
515329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

515330     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

515333     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515334     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515336     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515337     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515338     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515338   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

515339     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515340     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515342     filename _pref
515342   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
515343     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515344     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
515345    +
515346    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
515347    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
515347   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
515348    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
515349    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
515350    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
515351    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
515352    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515353     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
515354     quit;
515355     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515356     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515357     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515358     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
515359     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515360     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515361     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515362     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515363     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515364     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
515365     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515366     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515367     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515368     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515369     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515370     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515371     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
515372     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

515373     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515374     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515376     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515377     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515378     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515379     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515380     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515381     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515381   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

515382     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515383     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515385     filename _pref
515385   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
515386     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515387     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
515388    +
515389    +
515390    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
515391    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
515392    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
515393    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
515394    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
515395    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515396    +
515397    +
515398    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
515399    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
515400    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
515401    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
515402    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
515403    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515404    +
515405    +
515406    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
515407    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
515408    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
515409    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
515410    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
515411    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515412    +
515413    +
515414    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
515415    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
515416    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
515417    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
515418    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
515419    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515420    +
515421    +
515422    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
515423    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
515424    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
515425    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
515426    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
515427    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515428    +
515429    +
515430    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
515431    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
515432    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
515433    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
515434    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
515435    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515436    +
515437    +
515438    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
515439    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
515440    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
515441    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
515442    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
515443    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515444    +
515445    +
515446    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
515447    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
515448    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
515449    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
515450    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
515451    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
515452    +if
515453    +_FILTERNORM1 not in ( '.')
515454    + and
515455    +_FILTERNORM2 not in ( '.')
515456    + and
515457    +_FILTERNORM3 not in ( '.')
515458    + and
515459    +_FILTERNORM4 not in ( '.')
515460    + and
515461    +_FILTERNORM5 not in ( '.')
515462    + and
515463    +_FILTERNORM6 not in ( '.')
515464    + and
515465    +_FILTERNORM7 not in ( ' ')
515466    + and
515467    +_FILTERNORM8 not in ( ' ')
515468    +and
515469    +( Dt_Customer ne .)
515470    +and ( Income ne . and (Income<=107000))
515471    +and ( Kidhome ne .)
515472    +and ( MntFishProducts ne .)
515473    +and ( MntFruits ne .)
515474    +and ( MntGoldProds ne .)
515475    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
515476    +and ( MntSweetProducts ne .)
515477    +and ( MntWines ne .)
515478    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
515479    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
515480    +and ( NumStorePurchases ne .)
515481    +and ( NumWebPurchases ne .)
515482    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
515483    +and ( Recency ne .)
515484    +and ( Teenhome ne .)
515485    +and ( Year_Birth ne .)
515486    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
515487    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
515488    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
515489    +end;
MPRINT(EM_DIAGRAM):   end;
515490    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
515491    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
515492     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
515493     quit;
515494     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
515495     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
515496     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
515497     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
515498     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
515499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515500     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
515501     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515502     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515503     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
515504     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515506     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515507     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
515508     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
515509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

515510     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
515511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

515512     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
515513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

515515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
515516     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
515517     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
515518     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515519     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515520     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
515520   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

515521     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515522     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
515523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515524     %macro varDept(fcmpdata=,id=);
515525     %global nobs&id scoreFlag&id;
515526     %let scoreFlag&id = 0;
515527     %if &id=1 or ^&fcmpStart %then %do;
515528     proc sort data=&fcmpdata out=_temp&id nodupkey;
515529     by NAME;
515530     where id=&id and LHS in( %let j=1;
515531     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
515532     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
515533     "&var" %let j = %eval(&j+1);
515534     %end;
515535     );
515536     run;
515537     %let dsid = %sysfunc(open(_temp&id));
515538     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515539     %let dsid = %sysfunc(close(&dsid));
515540     %if &&nobs&id %then %do;
515541     %let scoreFlag&id = 1;
515542     %let fcmpStart = 1;
515543     %end;
515544     %else %let fcmpStart = 0;
515545     %end;
515546     %else %do;
515547     proc sort data=&fcmpdata out=_tempid;
515548     where id=&id;
515549     by LHS;
515550     run;
515551     %let dsid = %sysfunc(open(_tempid));
515552     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515553     %let dsid = %sysfunc(close(&dsid));
515554     %if ^&&nobs&id %then %do;
515555     proc datasets lib=work nolist;
515556     delete _tempid;
515557     run;
515558     quit;
515559     %end;
515560     %else %do;
515561     data _tempAll;
515562     set %let j=%eval(&id-1);
515563     %do x=1 %to &j;
515564     %if &&nobs&x %then %do;
515565     _temp&x %end;
515566     %end;
515567     ;
515568     run;
515569     proc sql;
515570     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
515570   ! work._tempid p2 where p.name=p2.lhs;
515571     quit;
515572     data _temp&id;
515573     set _temp&id;
515574     where LHS ne '' and NAME ne '' and Node ne '';
515575     run;
515576     proc datasets lib=work nolist;
515577     delete _tempAll;
515578     run;
515579     %let dsid = %sysfunc(open(_temp&id));
515580     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515581     %let dsid = %sysfunc(close(&dsid));
515582     %if ^&&nobs&id %then %do;
515583     proc datasets lib=work nolist;
515584     delete _temp&id;
515585     run;
515586     quit;
515587     %end;
515588     %else %do;
515589     %let scoreFlag&id = 1;
515590     data _temp&id;
515591     set _temp&id;
515592     where LHS ne NAME and node ne '';
515593     run;
515594     %let dsid = %sysfunc(open(_temp&id));
515595     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
515596     %let dsid = %sysfunc(close(&dsid));
515597     %if ^&&nobs&id %then %do;
515598     proc datasets lib=work nolist;
515599     delete _temp&id;
515600     run;
515601     quit;
515602     %end;
515603     %else %do;
515604     proc sort data=_temp&id nodupkey;
515605     by LHS NAME;
515606     run;
515607     %end;
515608     %end;
515609     %end;
515610     %end;
515611     %mend varDept;
515612     %macro optCode(outdata=fcmpdata);
515613     %global fcmpStart;
515614     %let fcmpStart = 0;
515615     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
515616     %let NumNodes=9;
515617     %do k=1 %to &NumNodes;
515618     %vardept(fcmpdata=&outdata, id=&k);
515619     %end;
515620     %mend optCode;
515621     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

515622     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
515623     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
515624     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
515625     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515626     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
515627     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
515628     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
515629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515630     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
515631     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
515631   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

515632     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

515633     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
515634     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
515635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

515636     filename _pref
515636   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
515637     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
515638     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
515639    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
515640    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
515641    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
515642    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
515643    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
515644    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
515645    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
515646    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
515647    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
515648    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
515649    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
515650    +LENGTH _WARN_ $4
515651    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
515652    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
515653    +
515654    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
515655    +
515656    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
515657    +
515658    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
515659    +
515660    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
515661    +
515662    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
515663    +
515664    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
515665    +
515666    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
515667    +
515668    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
515669    +
515670    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
515671    +
515672    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
515673    +
515674    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
515675    +
515676    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
515677    +
515678    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
515679    +
515680    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
515681    +
515682    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
515683    +
515684    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
515685    +
515686    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
515687    +
515688    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
515689    +
515690    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
515691    +
515692    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
515693    +
515694    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
515695    +
515696    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
515697    +
515698    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
515699    +
515700    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
515701    +
515702    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
515703    +
515704    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
515705    +
515706    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
515707    +
515708    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
515709    +
515710    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
515711    +
515712    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
515713    +
515714    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
515715    +
515716    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
515717    +
515718    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
515719    +
515720    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
515721    +
515722    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
515723    +
515724    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
515725    +
515726    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
515727    +
515728    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
515729    +
515730    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
515731    +
515732    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
515733    +
515734    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
515735    +
515736    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
515737    +
515738    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
515739    +
515740    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
515741    +
515742    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
515743    +
515744    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
515745    +
515746    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
515747    +
515748    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
515749    +
515750    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
515751    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
515752    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
515753    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
515754    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515755    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515756    +end;
MPRINT(EM_DIAGRAM):   end;
515757    +else do;
MPRINT(EM_DIAGRAM):   else do;
515758    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515759    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
515760    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515761    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
515762    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
515763    +   end;
MPRINT(EM_DIAGRAM):   end;
515764    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
515765    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
515766    +   end;
MPRINT(EM_DIAGRAM):   end;
515767    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515768    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
515769    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515770    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515771    +   end;
MPRINT(EM_DIAGRAM):   end;
515772    +end;
MPRINT(EM_DIAGRAM):   end;
515773    +
515774    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
515775    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
515776    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
515777    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
515778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515780    +end;
MPRINT(EM_DIAGRAM):   end;
515781    +else do;
MPRINT(EM_DIAGRAM):   else do;
515782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515783    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
515784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515785    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
515786    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
515787    +   end;
MPRINT(EM_DIAGRAM):   end;
515788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
515789    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
515790    +   end;
MPRINT(EM_DIAGRAM):   end;
515791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515792    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
515793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515795    +   end;
MPRINT(EM_DIAGRAM):   end;
515796    +end;
MPRINT(EM_DIAGRAM):   end;
515797    +
515798    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
515799    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
515800    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
515801    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
515802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515804    +end;
MPRINT(EM_DIAGRAM):   end;
515805    +else do;
MPRINT(EM_DIAGRAM):   else do;
515806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515807    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
515808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515809    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
515810    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
515811    +   end;
MPRINT(EM_DIAGRAM):   end;
515812    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
515813    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
515814    +   end;
MPRINT(EM_DIAGRAM):   end;
515815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515816    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
515817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515819    +   end;
MPRINT(EM_DIAGRAM):   end;
515820    +end;
MPRINT(EM_DIAGRAM):   end;
515821    +
515822    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
515823    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
515824    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
515825    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
515826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515828    +end;
MPRINT(EM_DIAGRAM):   end;
515829    +else do;
MPRINT(EM_DIAGRAM):   else do;
515830    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515831    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
515832    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515833    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
515834    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
515835    +   end;
MPRINT(EM_DIAGRAM):   end;
515836    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
515837    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
515838    +   end;
MPRINT(EM_DIAGRAM):   end;
515839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515840    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
515841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515843    +   end;
MPRINT(EM_DIAGRAM):   end;
515844    +end;
MPRINT(EM_DIAGRAM):   end;
515845    +
515846    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
515847    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
515848    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
515849    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
515850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515852    +end;
MPRINT(EM_DIAGRAM):   end;
515853    +else do;
MPRINT(EM_DIAGRAM):   else do;
515854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515855    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
515856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515857    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
515858    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
515859    +   end;
MPRINT(EM_DIAGRAM):   end;
515860    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
515861    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
515862    +   end;
MPRINT(EM_DIAGRAM):   end;
515863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515864    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
515865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515867    +   end;
MPRINT(EM_DIAGRAM):   end;
515868    +end;
MPRINT(EM_DIAGRAM):   end;
515869    +
515870    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
515871    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
515872    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
515873    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
515874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515876    +end;
MPRINT(EM_DIAGRAM):   end;
515877    +else do;
MPRINT(EM_DIAGRAM):   else do;
515878    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515879    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
515880    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515881    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
515882    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
515883    +   end;
MPRINT(EM_DIAGRAM):   end;
515884    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
515885    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
515886    +   end;
MPRINT(EM_DIAGRAM):   end;
515887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515888    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
515889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515891    +   end;
MPRINT(EM_DIAGRAM):   end;
515892    +end;
MPRINT(EM_DIAGRAM):   end;
515893    +
515894    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
515895    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
515896    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
515897    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
515898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515900    +end;
MPRINT(EM_DIAGRAM):   end;
515901    +else do;
MPRINT(EM_DIAGRAM):   else do;
515902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
515903    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
515904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515905    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
515906    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
515907    +   end;
MPRINT(EM_DIAGRAM):   end;
515908    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
515909    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
515910    +   end;
MPRINT(EM_DIAGRAM):   end;
515911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515912    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
515913    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515914    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515915    +   end;
MPRINT(EM_DIAGRAM):   end;
515916    +end;
MPRINT(EM_DIAGRAM):   end;
515917    +
515918    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
515919    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
515920    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
515921    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
515922    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
515923    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
515924    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
515925    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
515926    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
515927    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
515928    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
515929    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
515930    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515931    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515932    +end;
MPRINT(EM_DIAGRAM):   end;
515933    +else do;
MPRINT(EM_DIAGRAM):   else do;
515934    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
515935    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
515936    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515937    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
515938    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
515939    +   end;
MPRINT(EM_DIAGRAM):   end;
515940    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
515941    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
515942    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
515943    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
515944    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
515945    +   end;
MPRINT(EM_DIAGRAM):   end;
515946    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
515947    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
515948    +   end;
MPRINT(EM_DIAGRAM):   end;
515949    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
515950    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
515951    +   end;
MPRINT(EM_DIAGRAM):   end;
515952    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
515953    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
515954    +   end;
MPRINT(EM_DIAGRAM):   end;
515955    +   else do;
MPRINT(EM_DIAGRAM):   else do;
515956    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
515957    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
515958    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
515959    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
515960    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
515961    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515962    +   end;
MPRINT(EM_DIAGRAM):   end;
515963    +end;
MPRINT(EM_DIAGRAM):   end;
515964    +
515965    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
515966    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
515967    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
515968    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
515969    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
515970    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
515971    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
515972    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
515973    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
515974    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
515975    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
515976    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
515977    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
515978    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
515979    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
515980    +end;
MPRINT(EM_DIAGRAM):   end;
515981    +else do;
MPRINT(EM_DIAGRAM):   else do;
515982    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
515983    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
515984    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
515985    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
515986    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
515987    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
515988    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
515989    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
515990    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515991    +         end;
MPRINT(EM_DIAGRAM):   end;
515992    +         else do;
MPRINT(EM_DIAGRAM):   else do;
515993    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
515994    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
515995    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
515996    +            end;
MPRINT(EM_DIAGRAM):   end;
515997    +         end;
MPRINT(EM_DIAGRAM):   end;
515998    +      end;
MPRINT(EM_DIAGRAM):   end;
515999    +      else do;
MPRINT(EM_DIAGRAM):   else do;
516000    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
516001    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
516002    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516003    +         end;
MPRINT(EM_DIAGRAM):   end;
516004    +      end;
MPRINT(EM_DIAGRAM):   end;
516005    +   end;
MPRINT(EM_DIAGRAM):   end;
516006    +   else do;
MPRINT(EM_DIAGRAM):   else do;
516007    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
516008    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
516009    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516010    +      end;
MPRINT(EM_DIAGRAM):   end;
516011    +      else do;
MPRINT(EM_DIAGRAM):   else do;
516012    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
516013    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
516014    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
516015    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
516016    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
516017    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
516018    +         end;
MPRINT(EM_DIAGRAM):   end;
516019    +      end;
MPRINT(EM_DIAGRAM):   end;
516020    +   end;
MPRINT(EM_DIAGRAM):   end;
516021    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
516022    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
516023    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
516024    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
516025    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
516026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
516027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516028    +   end;
MPRINT(EM_DIAGRAM):   end;
516029    +end;
MPRINT(EM_DIAGRAM):   end;
516030    +
516031    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516032    +*** Checking missing input Interval
516033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
516034    +
516035    +IF NMISS(
516036    +   AcceptedCmpTotal ,
516037    +   Age ,
516038    +   Frq ,
516039    +   Income ,
516040    +   Kidhome ,
516041    +   Mnt ,
516042    +   MntFishProducts ,
516043    +   MntFruits ,
516044    +   MntGoldProds ,
516045    +   MntMeatProducts ,
516046    +   MntSweetProducts ,
516047    +   MntWines ,
516048    +   MonthsAsCustomer ,
516049    +   NumCatalogPurchases ,
516050    +   NumDealsPurchases ,
516051    +   NumDistPurchases ,
516052    +   NumStorePurchases ,
516053    +   NumWebPurchases ,
516054    +   NumWebVisitsMonth ,
516055    +   RFMstat ,
516056    +   RMntFrq ,
516057    +   Recency ,
516058    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
516059    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
516060    +
516061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516062    +END;
MPRINT(EM_DIAGRAM):   END;
516063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516064    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
516065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516066    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
516067    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
516068    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
516069    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
516070    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
516071    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
516072    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
516073    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
516074    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
516075    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
516076    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
516077    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
516078    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
516079    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
516080    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
516081    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
516082    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
516083    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
516084    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
516085    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
516086    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
516087    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
516088    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
516089    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
516090    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
516091    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
516092    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
516093    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
516094    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
516095    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
516096    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
516097    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
516098    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
516099    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
516100    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
516101    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
516102    +END;
MPRINT(EM_DIAGRAM):   END;
516103    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
516104    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
516105    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
516106    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
516107    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
516108    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
516109    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
516110    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
516111    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
516112    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
516113    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
516114    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
516115    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
516116    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
516117    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
516118    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
516119    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
516120    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
516121    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
516122    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
516123    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
516124    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
516125    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
516126    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
516127    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
516128    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
516129    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
516130    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
516131    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
516132    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
516133    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
516134    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
516135    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
516136    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
516137    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
516138    +   ELSE S_NumCatalogPurchases
516139    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
516140    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
516141    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
516142    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
516143    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
516144    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
516145    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
516146    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
516147    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
516148    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
516149    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
516150    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
516151    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
516152    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
516153    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
516154    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
516155    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
516156    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
516157    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
516158    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
516159    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
516160    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
516161    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
516162    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
516163    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
516164    +END;
MPRINT(EM_DIAGRAM):   END;
516165    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516166    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
516167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516168    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516169    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
516170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516171    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516172    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
516173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516174    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
516175    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
516176    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
516177    +        S_Income  +    -0.07407502089271 * S_Kidhome
516178    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
516179    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
516180    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
516181    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
516182    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
516183    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
516184    +          +     0.85324794786604 * S_NumDealsPurchases
516185    +          +     0.23632583007911 * S_NumDistPurchases
516186    +          +    -0.63089078988761 * S_NumStorePurchases
516187    +          +    -0.92352748602374 * S_NumWebPurchases
516188    +          +     0.90081938176641 * S_NumWebVisitsMonth
516189    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
516190    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
516191    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
516192    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
516193    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
516194    +        S_Income  +    -0.46092998969912 * S_Kidhome
516195    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
516196    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
516197    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
516198    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
516199    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
516200    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
516201    +          +     0.19685325076814 * S_NumDealsPurchases
516202    +          +     -0.0145000015739 * S_NumDistPurchases
516203    +          +     -0.5790386407956 * S_NumStorePurchases
516204    +          +    -0.36258404984745 * S_NumWebPurchases
516205    +          +     0.85107574614775 * S_NumWebVisitsMonth
516206    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
516207    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
516208    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
516209    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
516210    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
516211    +        S_Income  +    -0.03273972934545 * S_Kidhome
516212    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
516213    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
516214    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
516215    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
516216    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
516217    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
516218    +          +    -0.17268337796364 * S_NumDealsPurchases
516219    +          +    -0.23588860225052 * S_NumDistPurchases
516220    +          +     0.41380073293559 * S_NumStorePurchases
516221    +          +    -0.28143763726207 * S_NumWebPurchases
516222    +          +    -0.30914618130297 * S_NumWebVisitsMonth
516223    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
516224    +        S_RMntFrq  +     0.81671444530655 * S_Recency
516225    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
516226    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
516227    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
516228    +        S_Income  +    -0.06518326597517 * S_Kidhome
516229    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
516230    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
516231    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
516232    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
516233    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
516234    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
516235    +          +    -0.46119515763011 * S_NumDealsPurchases
516236    +          +     0.16268822540635 * S_NumDistPurchases
516237    +          +     0.21653483412929 * S_NumStorePurchases
516238    +          +     0.46040401497854 * S_NumWebPurchases
516239    +          +     -0.7361096668674 * S_NumWebVisitsMonth
516240    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
516241    +        S_RMntFrq  +     0.80628261349293 * S_Recency
516242    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
516243    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
516244    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
516245    +        S_Income  +     0.55328239552566 * S_Kidhome
516246    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
516247    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
516248    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
516249    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
516250    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
516251    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
516252    +          +     0.05502131610199 * S_NumDealsPurchases
516253    +          +    -0.03756550292536 * S_NumDistPurchases
516254    +          +    -0.03538043876599 * S_NumStorePurchases
516255    +          +     -0.0907757250737 * S_NumWebPurchases
516256    +          +    -0.70112968521759 * S_NumWebVisitsMonth
516257    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
516258    +        S_RMntFrq  +     0.94295210651466 * S_Recency
516259    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
516260    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
516261    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
516262    +        S_Income  +    -0.52750514886673 * S_Kidhome
516263    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
516264    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
516265    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
516266    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
516267    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
516268    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
516269    +          +    -0.50827570715861 * S_NumDealsPurchases
516270    +          +    -0.47409547329081 * S_NumDistPurchases
516271    +          +     0.18399962481918 * S_NumStorePurchases
516272    +          +     0.02681212324713 * S_NumWebPurchases
516273    +          +    -0.20824959103725 * S_NumWebVisitsMonth
516274    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
516275    +        S_RMntFrq  +     0.04705531474734 * S_Recency
516276    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
516277    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
516278    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
516279    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
516280    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
516281    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
516282    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
516283    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
516284    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
516285    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
516286    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
516287    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
516288    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
516289    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
516290    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
516291    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
516292    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
516293    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
516294    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
516295    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
516296    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
516297    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
516298    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
516299    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
516300    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
516301    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
516302    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
516303    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
516304    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
516305    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
516306    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
516307    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
516308    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
516309    +        EducationGraduation  +     0.02690714866809 * EducationMaster
516310    +          +      0.1401475547652 * Marital_StatusDivorced
516311    +          +     0.09801106519846 * Marital_StatusMarried
516312    +          +    -0.26003432053167 * Marital_StatusSingle
516313    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
516314    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
516315    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
516316    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
516317    +          +     0.33965651292585 * Marital_StatusDivorced
516318    +          +    -0.51738607463653 * Marital_StatusMarried
516319    +          +     0.57209809625866 * Marital_StatusSingle
516320    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
516321    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
516322    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
516323    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
516324    +          +     -0.0712692029901 * Marital_StatusDivorced
516325    +          +      0.2989539150548 * Marital_StatusMarried
516326    +          +    -0.07088797938783 * Marital_StatusSingle
516327    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
516328    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
516329    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
516330    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
516331    +          +    -0.06075465978816 * Marital_StatusDivorced
516332    +          +     0.23328087967095 * Marital_StatusMarried
516333    +          +    -0.34401062494093 * Marital_StatusSingle
516334    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
516335    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
516336    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
516337    +        EducationGraduation  +     0.36213037498234 * EducationMaster
516338    +          +    -0.07312045395545 * Marital_StatusDivorced
516339    +          +     1.08247738273721 * Marital_StatusMarried
516340    +          +    -0.68676298741916 * Marital_StatusSingle
516341    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
516342    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
516343    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
516344    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
516345    +          +    -0.20451618892357 * Marital_StatusDivorced
516346    +          +    -0.41145969312049 * Marital_StatusMarried
516347    +          +     0.44568613045702 * Marital_StatusSingle
516348    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
516349    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
516350    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
516351    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
516352    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
516353    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
516354    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
516355    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
516356    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
516357    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
516358    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
516359    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
516360    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
516361    +END;
MPRINT(EM_DIAGRAM):   END;
516362    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
516363    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
516364    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
516365    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
516366    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
516367    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
516368    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
516369    +END;
MPRINT(EM_DIAGRAM):   END;
516370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516371    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
516372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516373    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
516374    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
516375    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
516376    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
516377    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
516378    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
516379    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
516380    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
516381    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
516382    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
516383    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
516384    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
516385    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
516386    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
516387    +END;
MPRINT(EM_DIAGRAM):   END;
516388    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
516389    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
516390    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
516391    +END;
MPRINT(EM_DIAGRAM):   END;
516392    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
516393    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
516394    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
516395    +END;
MPRINT(EM_DIAGRAM):   END;
516396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516397    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
516398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
516399    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
516400    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
516401    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
516402    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
516403    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
516404    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
516405    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
516406    +END;
MPRINT(EM_DIAGRAM):   END;
516407    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
516408    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
516409    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
516410    +drop
516411    +H11
516412    +H12
516413    +H13
516414    +H14
516415    +H15
516416    +H16
516417    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
516418    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516419     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
516420     quit;
516421     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516422     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516423     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516424     retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
516425     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516426     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516427     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516428     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516429     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516430     proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
516431     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516432     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516433     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516434     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516435     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516437     proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
516438     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

516439     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516440     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516441     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516442     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516443     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516444     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516445     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516446     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516447     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516447   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

516448     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516449     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516450     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516451     filename _pref
516451   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
516452     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516453     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
516454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
516455    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
516456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
516457    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
516458    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
516459    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516460     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
516461     quit;
516462     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516463     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516464     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516465     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
516466     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516467     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516468     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516469     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516470     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516471     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
516472     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516473     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516474     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516475     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516476     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516478     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
516479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

516480     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516481     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516482     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516483     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516484     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516485     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516486     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516487     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516488     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516488   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

516489     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516490     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516491     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516492     filename _pref
516492   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
516493     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516494     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
516495    +
516496    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
516497    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
516497   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
516498    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
516499    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
516500    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
516501    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
516502    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516503     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
516504     quit;
516505     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516506     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516507     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516508     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
516509     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516511     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516512     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516513     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

516514     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
516515     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516516     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516517     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516518     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516519     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516520     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516521     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
516522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516523     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516526     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516527     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516528     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516529     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516530     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516531     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516531   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

516532     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516533     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516535     filename _pref
516535   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
516536     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516537     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
516538    +
516539    +
516540    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
516541    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
516542    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
516543    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
516544    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
516545    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516546    +
516547    +
516548    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
516549    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
516550    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
516551    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
516552    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
516553    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516554    +
516555    +
516556    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
516557    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
516558    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
516559    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
516560    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
516561    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516562    +
516563    +
516564    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
516565    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
516566    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
516567    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
516568    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
516569    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516570    +
516571    +
516572    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
516573    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
516574    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
516575    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
516576    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
516577    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516578    +
516579    +
516580    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
516581    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
516582    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
516583    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
516584    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
516585    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516586    +
516587    +
516588    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
516589    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
516590    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
516591    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
516592    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
516593    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516594    +
516595    +
516596    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
516597    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
516598    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
516599    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
516600    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
516601    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
516602    +if
516603    +_FILTERNORM1 not in ( '.')
516604    + and
516605    +_FILTERNORM2 not in ( '.')
516606    + and
516607    +_FILTERNORM3 not in ( '.')
516608    + and
516609    +_FILTERNORM4 not in ( '.')
516610    + and
516611    +_FILTERNORM5 not in ( '.')
516612    + and
516613    +_FILTERNORM6 not in ( '.')
516614    + and
516615    +_FILTERNORM7 not in ( ' ')
516616    + and
516617    +_FILTERNORM8 not in ( ' ')
516618    +and
516619    +( Dt_Customer ne .)
516620    +and ( Income ne . and (Income<=107000))
516621    +and ( Kidhome ne .)
516622    +and ( MntFishProducts ne .)
516623    +and ( MntFruits ne .)
516624    +and ( MntGoldProds ne .)
516625    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
516626    +and ( MntSweetProducts ne .)
516627    +and ( MntWines ne .)
516628    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
516629    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
516630    +and ( NumStorePurchases ne .)
516631    +and ( NumWebPurchases ne .)
516632    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
516633    +and ( Recency ne .)
516634    +and ( Teenhome ne .)
516635    +and ( Year_Birth ne .)
516636    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
516637    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
516638    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
516639    +end;
MPRINT(EM_DIAGRAM):   end;
516640    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
516641    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
516642     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
516643     quit;
516644     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
516645     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
516646     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
516647     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
516648     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
516649     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.00 seconds
      

516650     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
516651     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516652     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516653     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
516654     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516655     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516656     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516657     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
516658     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
516659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516660     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
516661     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

516662     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
516663     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516664     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516665     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
516666     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
516667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
516668     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516669     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516670     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
516670   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

516671     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516672     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
516673     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516674     %macro varDept(fcmpdata=,id=);
516675     %global nobs&id scoreFlag&id;
516676     %let scoreFlag&id = 0;
516677     %if &id=1 or ^&fcmpStart %then %do;
516678     proc sort data=&fcmpdata out=_temp&id nodupkey;
516679     by NAME;
516680     where id=&id and LHS in( %let j=1;
516681     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
516682     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
516683     "&var" %let j = %eval(&j+1);
516684     %end;
516685     );
516686     run;
516687     %let dsid = %sysfunc(open(_temp&id));
516688     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516689     %let dsid = %sysfunc(close(&dsid));
516690     %if &&nobs&id %then %do;
516691     %let scoreFlag&id = 1;
516692     %let fcmpStart = 1;
516693     %end;
516694     %else %let fcmpStart = 0;
516695     %end;
516696     %else %do;
516697     proc sort data=&fcmpdata out=_tempid;
516698     where id=&id;
516699     by LHS;
516700     run;
516701     %let dsid = %sysfunc(open(_tempid));
516702     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516703     %let dsid = %sysfunc(close(&dsid));
516704     %if ^&&nobs&id %then %do;
516705     proc datasets lib=work nolist;
516706     delete _tempid;
516707     run;
516708     quit;
516709     %end;
516710     %else %do;
516711     data _tempAll;
516712     set %let j=%eval(&id-1);
516713     %do x=1 %to &j;
516714     %if &&nobs&x %then %do;
516715     _temp&x %end;
516716     %end;
516717     ;
516718     run;
516719     proc sql;
516720     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
516720   ! work._tempid p2 where p.name=p2.lhs;
516721     quit;
516722     data _temp&id;
516723     set _temp&id;
516724     where LHS ne '' and NAME ne '' and Node ne '';
516725     run;
516726     proc datasets lib=work nolist;
516727     delete _tempAll;
516728     run;
516729     %let dsid = %sysfunc(open(_temp&id));
516730     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516731     %let dsid = %sysfunc(close(&dsid));
516732     %if ^&&nobs&id %then %do;
516733     proc datasets lib=work nolist;
516734     delete _temp&id;
516735     run;
516736     quit;
516737     %end;
516738     %else %do;
516739     %let scoreFlag&id = 1;
516740     data _temp&id;
516741     set _temp&id;
516742     where LHS ne NAME and node ne '';
516743     run;
516744     %let dsid = %sysfunc(open(_temp&id));
516745     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
516746     %let dsid = %sysfunc(close(&dsid));
516747     %if ^&&nobs&id %then %do;
516748     proc datasets lib=work nolist;
516749     delete _temp&id;
516750     run;
516751     quit;
516752     %end;
516753     %else %do;
516754     proc sort data=_temp&id nodupkey;
516755     by LHS NAME;
516756     run;
516757     %end;
516758     %end;
516759     %end;
516760     %end;
516761     %mend varDept;
516762     %macro optCode(outdata=fcmpdata);
516763     %global fcmpStart;
516764     %let fcmpStart = 0;
516765     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
516766     %let NumNodes=9;
516767     %do k=1 %to &NumNodes;
516768     %vardept(fcmpdata=&outdata, id=&k);
516769     %end;
516770     %mend optCode;
516771     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

516772     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
516773     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
516774     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
516775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

516776     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
516777     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
516778     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
516779     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516780     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
516781     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
516781   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

516782     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

516783     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
516784     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
516785     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

516786     filename _pref
516786   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
516787     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
516788     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
516789    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
516790    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
516791    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
516792    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
516793    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
516794    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
516795    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
516796    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
516797    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
516798    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
516799    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
516800    +LENGTH _WARN_ $4
516801    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
516802    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
516803    +
516804    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
516805    +
516806    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
516807    +
516808    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
516809    +
516810    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
516811    +
516812    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
516813    +
516814    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
516815    +
516816    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
516817    +
516818    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
516819    +
516820    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
516821    +
516822    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
516823    +
516824    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
516825    +
516826    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
516827    +
516828    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
516829    +
516830    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
516831    +
516832    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
516833    +
516834    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
516835    +
516836    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
516837    +
516838    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
516839    +
516840    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
516841    +
516842    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
516843    +
516844    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
516845    +
516846    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
516847    +
516848    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
516849    +
516850    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
516851    +
516852    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
516853    +
516854    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
516855    +
516856    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
516857    +
516858    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
516859    +
516860    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
516861    +
516862    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
516863    +
516864    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
516865    +
516866    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
516867    +
516868    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
516869    +
516870    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
516871    +
516872    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
516873    +
516874    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
516875    +
516876    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
516877    +
516878    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
516879    +
516880    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
516881    +
516882    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
516883    +
516884    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
516885    +
516886    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
516887    +
516888    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
516889    +
516890    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
516891    +
516892    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
516893    +
516894    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
516895    +
516896    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
516897    +
516898    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
516899    +
516900    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
516901    +
516902    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
516903    +
516904    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
516905    +
516906    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
516907    +
516908    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
516909    +
516910    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
516911    +
516912    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
516913    +
516914    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
516915    +
516916    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
516917    +
516918    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
516919    +
516920    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
516921    +
516922    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
516923    +
516924    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
516925    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
516926    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
516927    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
516928    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516929    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516930    +end;
MPRINT(EM_DIAGRAM):   end;
516931    +else do;
MPRINT(EM_DIAGRAM):   else do;
516932    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
516933    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
516934    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
516935    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
516936    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
516937    +   end;
MPRINT(EM_DIAGRAM):   end;
516938    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
516939    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
516940    +   end;
MPRINT(EM_DIAGRAM):   end;
516941    +   else do;
MPRINT(EM_DIAGRAM):   else do;
516942    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
516943    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
516944    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516945    +   end;
MPRINT(EM_DIAGRAM):   end;
516946    +end;
MPRINT(EM_DIAGRAM):   end;
516947    +
516948    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
516949    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
516950    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
516951    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
516952    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516953    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516954    +end;
MPRINT(EM_DIAGRAM):   end;
516955    +else do;
MPRINT(EM_DIAGRAM):   else do;
516956    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
516957    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
516958    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
516959    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
516960    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
516961    +   end;
MPRINT(EM_DIAGRAM):   end;
516962    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
516963    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
516964    +   end;
MPRINT(EM_DIAGRAM):   end;
516965    +   else do;
MPRINT(EM_DIAGRAM):   else do;
516966    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
516967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
516968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516969    +   end;
MPRINT(EM_DIAGRAM):   end;
516970    +end;
MPRINT(EM_DIAGRAM):   end;
516971    +
516972    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
516973    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
516974    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
516975    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
516976    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
516977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516978    +end;
MPRINT(EM_DIAGRAM):   end;
516979    +else do;
MPRINT(EM_DIAGRAM):   else do;
516980    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
516981    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
516982    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
516983    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
516984    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
516985    +   end;
MPRINT(EM_DIAGRAM):   end;
516986    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
516987    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
516988    +   end;
MPRINT(EM_DIAGRAM):   end;
516989    +   else do;
MPRINT(EM_DIAGRAM):   else do;
516990    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
516991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
516992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
516993    +   end;
MPRINT(EM_DIAGRAM):   end;
516994    +end;
MPRINT(EM_DIAGRAM):   end;
516995    +
516996    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
516997    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
516998    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
516999    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
517000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517002    +end;
MPRINT(EM_DIAGRAM):   end;
517003    +else do;
MPRINT(EM_DIAGRAM):   else do;
517004    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
517005    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
517006    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517007    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
517008    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
517009    +   end;
MPRINT(EM_DIAGRAM):   end;
517010    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
517011    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
517012    +   end;
MPRINT(EM_DIAGRAM):   end;
517013    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517014    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
517015    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517016    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517017    +   end;
MPRINT(EM_DIAGRAM):   end;
517018    +end;
MPRINT(EM_DIAGRAM):   end;
517019    +
517020    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
517021    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
517022    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
517023    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
517024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517026    +end;
MPRINT(EM_DIAGRAM):   end;
517027    +else do;
MPRINT(EM_DIAGRAM):   else do;
517028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
517029    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
517030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517031    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
517032    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
517033    +   end;
MPRINT(EM_DIAGRAM):   end;
517034    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
517035    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
517036    +   end;
MPRINT(EM_DIAGRAM):   end;
517037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517038    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
517039    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517040    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517041    +   end;
MPRINT(EM_DIAGRAM):   end;
517042    +end;
MPRINT(EM_DIAGRAM):   end;
517043    +
517044    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
517045    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
517046    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
517047    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
517048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517050    +end;
MPRINT(EM_DIAGRAM):   end;
517051    +else do;
MPRINT(EM_DIAGRAM):   else do;
517052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
517053    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
517054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517055    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
517056    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
517057    +   end;
MPRINT(EM_DIAGRAM):   end;
517058    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
517059    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
517060    +   end;
MPRINT(EM_DIAGRAM):   end;
517061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517062    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
517063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517065    +   end;
MPRINT(EM_DIAGRAM):   end;
517066    +end;
MPRINT(EM_DIAGRAM):   end;
517067    +
517068    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
517069    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
517070    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
517071    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
517072    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517073    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517074    +end;
MPRINT(EM_DIAGRAM):   end;
517075    +else do;
MPRINT(EM_DIAGRAM):   else do;
517076    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
517077    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
517078    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517079    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
517080    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
517081    +   end;
MPRINT(EM_DIAGRAM):   end;
517082    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
517083    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
517084    +   end;
MPRINT(EM_DIAGRAM):   end;
517085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517086    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
517087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517089    +   end;
MPRINT(EM_DIAGRAM):   end;
517090    +end;
MPRINT(EM_DIAGRAM):   end;
517091    +
517092    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
517093    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
517094    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
517095    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
517096    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
517097    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
517098    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
517099    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
517100    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
517101    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
517102    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
517103    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
517104    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517105    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517106    +end;
MPRINT(EM_DIAGRAM):   end;
517107    +else do;
MPRINT(EM_DIAGRAM):   else do;
517108    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
517109    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
517110    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517111    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
517112    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
517113    +   end;
MPRINT(EM_DIAGRAM):   end;
517114    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
517115    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
517116    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
517117    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
517118    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
517119    +   end;
MPRINT(EM_DIAGRAM):   end;
517120    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
517121    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
517122    +   end;
MPRINT(EM_DIAGRAM):   end;
517123    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
517124    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
517125    +   end;
MPRINT(EM_DIAGRAM):   end;
517126    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
517127    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
517128    +   end;
MPRINT(EM_DIAGRAM):   end;
517129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517130    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
517131    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
517132    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
517133    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
517134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517136    +   end;
MPRINT(EM_DIAGRAM):   end;
517137    +end;
MPRINT(EM_DIAGRAM):   end;
517138    +
517139    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
517140    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
517141    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
517142    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
517143    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
517144    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
517145    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
517146    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
517147    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
517148    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
517149    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
517150    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
517151    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
517152    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517153    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517154    +end;
MPRINT(EM_DIAGRAM):   end;
517155    +else do;
MPRINT(EM_DIAGRAM):   else do;
517156    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
517157    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
517158    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517159    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
517160    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
517161    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
517162    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
517163    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
517164    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517165    +         end;
MPRINT(EM_DIAGRAM):   end;
517166    +         else do;
MPRINT(EM_DIAGRAM):   else do;
517167    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
517168    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
517169    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517170    +            end;
MPRINT(EM_DIAGRAM):   end;
517171    +         end;
MPRINT(EM_DIAGRAM):   end;
517172    +      end;
MPRINT(EM_DIAGRAM):   end;
517173    +      else do;
MPRINT(EM_DIAGRAM):   else do;
517174    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
517175    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
517176    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517177    +         end;
MPRINT(EM_DIAGRAM):   end;
517178    +      end;
MPRINT(EM_DIAGRAM):   end;
517179    +   end;
MPRINT(EM_DIAGRAM):   end;
517180    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517181    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
517182    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
517183    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517184    +      end;
MPRINT(EM_DIAGRAM):   end;
517185    +      else do;
MPRINT(EM_DIAGRAM):   else do;
517186    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
517187    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
517188    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
517189    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
517190    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
517191    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517192    +         end;
MPRINT(EM_DIAGRAM):   end;
517193    +      end;
MPRINT(EM_DIAGRAM):   end;
517194    +   end;
MPRINT(EM_DIAGRAM):   end;
517195    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
517196    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
517197    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
517198    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
517199    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
517200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517202    +   end;
MPRINT(EM_DIAGRAM):   end;
517203    +end;
MPRINT(EM_DIAGRAM):   end;
517204    +
517205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517206    +*** Checking missing input Interval
517207    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
517208    +
517209    +IF NMISS(
517210    +   AcceptedCmpTotal ,
517211    +   Age ,
517212    +   Frq ,
517213    +   Income ,
517214    +   Kidhome ,
517215    +   Mnt ,
517216    +   MntFishProducts ,
517217    +   MntFruits ,
517218    +   MntGoldProds ,
517219    +   MntMeatProducts ,
517220    +   MntSweetProducts ,
517221    +   MntWines ,
517222    +   MonthsAsCustomer ,
517223    +   NumCatalogPurchases ,
517224    +   NumDealsPurchases ,
517225    +   NumDistPurchases ,
517226    +   NumStorePurchases ,
517227    +   NumWebPurchases ,
517228    +   NumWebVisitsMonth ,
517229    +   RFMstat ,
517230    +   RMntFrq ,
517231    +   Recency ,
517232    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
517233    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
517234    +
517235    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517236    +END;
MPRINT(EM_DIAGRAM):   END;
517237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517238    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
517239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517240    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517241    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
517242    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
517243    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
517244    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
517245    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
517246    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
517247    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
517248    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
517249    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
517250    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
517251    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
517252    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
517253    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
517254    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
517255    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
517256    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
517257    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
517258    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
517259    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
517260    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
517261    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
517262    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
517263    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
517264    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
517265    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
517266    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
517267    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
517268    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
517269    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
517270    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
517271    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
517272    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
517273    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
517274    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
517275    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
517276    +END;
MPRINT(EM_DIAGRAM):   END;
517277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
517278    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
517279    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
517280    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
517281    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
517282    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
517283    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
517284    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
517285    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
517286    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
517287    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
517288    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
517289    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
517290    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
517291    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
517292    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
517293    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
517294    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
517295    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
517296    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
517297    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
517298    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
517299    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
517300    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
517301    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
517302    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
517303    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
517304    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
517305    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
517306    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
517307    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
517308    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
517309    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
517310    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
517311    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
517312    +   ELSE S_NumCatalogPurchases
517313    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
517314    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
517315    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
517316    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
517317    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
517318    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
517319    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
517320    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
517321    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
517322    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
517323    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
517324    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
517325    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
517326    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
517327    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
517328    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
517329    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
517330    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
517331    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
517332    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
517333    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
517334    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
517335    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
517336    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
517337    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
517338    +END;
MPRINT(EM_DIAGRAM):   END;
517339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517340    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
517341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517343    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
517344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517346    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
517347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517348    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517349    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
517350    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
517351    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
517352    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
517353    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
517354    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
517355    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
517356    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
517357    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
517358    +          +     0.89422627895323 * S_NumDealsPurchases
517359    +          +    -0.13304125929765 * S_NumDistPurchases
517360    +          +    -1.04568442570811 * S_NumStorePurchases
517361    +          +    -0.28677765126751 * S_NumWebPurchases
517362    +          +      1.2327638737509 * S_NumWebVisitsMonth
517363    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
517364    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
517365    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
517366    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
517367    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
517368    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
517369    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
517370    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
517371    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
517372    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
517373    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
517374    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
517375    +          +     0.04224590196535 * S_NumDealsPurchases
517376    +          +     0.76554742700113 * S_NumDistPurchases
517377    +          +    -0.49155496870812 * S_NumStorePurchases
517378    +          +     0.59606812744403 * S_NumWebPurchases
517379    +          +     1.86809286276405 * S_NumWebVisitsMonth
517380    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
517381    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
517382    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
517383    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
517384    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
517385    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
517386    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
517387    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
517388    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
517389    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
517390    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
517391    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
517392    +          +    -0.04866536993486 * S_NumDealsPurchases
517393    +          +    -0.53535979020214 * S_NumDistPurchases
517394    +          +     2.20634071253676 * S_NumStorePurchases
517395    +          +      0.6164564989007 * S_NumWebPurchases
517396    +          +    -0.43396314395263 * S_NumWebVisitsMonth
517397    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
517398    +        S_RMntFrq  +     2.37293441098349 * S_Recency
517399    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
517400    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
517401    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
517402    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
517403    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
517404    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
517405    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
517406    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
517407    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
517408    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
517409    +          +     1.37461255707863 * S_NumDealsPurchases
517410    +          +    -0.17684775000818 * S_NumDistPurchases
517411    +          +    -0.62755623855535 * S_NumStorePurchases
517412    +          +    -1.46551649022657 * S_NumWebPurchases
517413    +          +     3.35784247878638 * S_NumWebVisitsMonth
517414    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
517415    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
517416    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
517417    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
517418    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
517419    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
517420    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
517421    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
517422    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
517423    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
517424    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
517425    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
517426    +          +    -0.76256677907121 * S_NumDealsPurchases
517427    +          +    -0.31591571751692 * S_NumDistPurchases
517428    +          +      0.0506832614089 * S_NumStorePurchases
517429    +          +      1.4636796923764 * S_NumWebPurchases
517430    +          +     0.37743519705036 * S_NumWebVisitsMonth
517431    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
517432    +        S_RMntFrq  +     0.16854775832723 * S_Recency
517433    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
517434    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
517435    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
517436    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
517437    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
517438    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
517439    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
517440    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
517441    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
517442    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
517443    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
517444    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
517445    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
517446    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
517447    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
517448    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
517449    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
517450    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
517451    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
517452    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
517453    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
517454    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
517455    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
517456    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
517457    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
517458    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
The SAS System

0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
517459    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
517460    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
517461    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
517462    +          +     0.68641668264565 * Marital_StatusDivorced
517463    +          +    -0.81586871439732 * Marital_StatusMarried
517464    +          +     0.63758920518451 * Marital_StatusSingle
517465    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
517466    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
517467    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
517468    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
517469    +          +     0.05137560133238 * Marital_StatusDivorced
517470    +          +    -2.24401993266209 * Marital_StatusMarried
517471    +          +     1.57359386216115 * Marital_StatusSingle
517472    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
517473    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
517474    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
517475    +        EducationGraduation  +     0.61492669859334 * EducationMaster
517476    +          +     -1.0649987815942 * Marital_StatusDivorced
517477    +          +     0.76065111692388 * Marital_StatusMarried
517478    +          +    -0.21694149754801 * Marital_StatusSingle
517479    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
517480    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
517481    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
517482    +        EducationGraduation  +     0.04208620358211 * EducationMaster
517483    +          +     2.02155453548328 * Marital_StatusDivorced
517484    +          +    -2.60190649735306 * Marital_StatusMarried
517485    +          +     1.09149388354927 * Marital_StatusSingle
517486    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
517487    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
517488    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
517489    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
517490    +          +     0.66315970650309 * Marital_StatusDivorced
517491    +          +    -1.20476729758152 * Marital_StatusMarried
517492    +          +     0.56175027826397 * Marital_StatusSingle
517493    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
517494    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
517495    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
517496    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
517497    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
517498    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
517499    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
517500    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
517501    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
517502    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
517503    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
517504    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
517505    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
517506    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
517507    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
517508    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
517509    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
517510    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
517511    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
517512    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
517513    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
517514    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
517515    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
517516    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
517517    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
517518    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
517519    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
517520    +END;
MPRINT(EM_DIAGRAM):   END;
517521    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
517522    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
517523    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
517524    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
517525    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
517526    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
517527    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
517528    +END;
MPRINT(EM_DIAGRAM):   END;
517529    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517530    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
517531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517532    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517533    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
517534    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
517535    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
517536    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
517537    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
517538    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
517539    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
517540    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
517541    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
517542    +          +     1.50005927423985 * S_NumDealsPurchases
517543    +          +      0.5590536933569 * S_NumDistPurchases
517544    +          +    -0.61757824339318 * S_NumStorePurchases
517545    +          +     0.37259686538158 * S_NumWebPurchases
517546    +          +     2.59725437895564 * S_NumWebVisitsMonth
517547    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
517548    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
517549    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
517550    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
517551    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
517552    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
517553    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
517554    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
517555    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
517556    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
517557    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
517558    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
517559    +          +    -0.09282222088797 * S_NumDealsPurchases
517560    +          +     0.10726247938321 * S_NumDistPurchases
517561    +          +     -1.1235971458527 * S_NumStorePurchases
517562    +          +    -0.78304387839877 * S_NumWebPurchases
517563    +          +    -0.44139243179956 * S_NumWebVisitsMonth
517564    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
517565    +        S_RMntFrq  +     2.19072220135069 * S_Recency
517566    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
517567    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
517568    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
517569    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
517570    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
517571    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
517572    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
517573    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
517574    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
517575    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
517576    +          +     0.35349185459988 * S_NumDealsPurchases
517577    +          +     0.06853677714859 * S_NumDistPurchases
517578    +          +    -1.47546012999338 * S_NumStorePurchases
517579    +          +     0.20926435398916 * S_NumWebPurchases
517580    +          +    -1.00535683639093 * S_NumWebVisitsMonth
517581    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
517582    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
517583    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
517584    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
517585    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
517586    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
517587    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
517588    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
517589    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
517590    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
517591    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
517592    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
517593    +          +      0.3873586120272 * S_NumDealsPurchases
517594    +          +     0.25911651157596 * S_NumDistPurchases
517595    +          +     1.58922489084287 * S_NumStorePurchases
517596    +          +     0.49041797743368 * S_NumWebPurchases
517597    +          +     -1.5425586871929 * S_NumWebVisitsMonth
517598    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
517599    +        S_RMntFrq  +     1.03099569333498 * S_Recency
517600    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
517601    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
517602    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
517603    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
517604    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
517605    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
517606    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
517607    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
517608    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
517609    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
517610    +          +    -0.60830880287865 * S_NumDealsPurchases
517611    +          +      0.0745331267194 * S_NumDistPurchases
517612    +          +    -1.39472448256952 * S_NumStorePurchases
517613    +          +     1.95372179969087 * S_NumWebPurchases
517614    +          +    -0.63307356390404 * S_NumWebVisitsMonth
517615    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
517616    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
517617    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
517618    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
517619    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
517620    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
517621    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
517622    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
517623    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
517624    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
517625    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
517626    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
517627    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
517628    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
517629    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
517630    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
517631    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
517632    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
517633    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
517634    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
517635    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
517636    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
517637    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
517638    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
517639    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
517640    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
517641    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
517642    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
517643    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
517644    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
517645    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
517646    +          +    -1.33377871643323 * Marital_StatusDivorced
517647    +          +    -0.87184228840898 * Marital_StatusMarried
517648    +          +     1.41223186340257 * Marital_StatusSingle
517649    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
517650    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
517651    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
517652    +        EducationGraduation  +     0.38341272155343 * EducationMaster
517653    +          +    -0.21479890935233 * Marital_StatusDivorced
517654    +          +     -0.0025459519579 * Marital_StatusMarried
517655    +          +     1.33900491702264 * Marital_StatusSingle
517656    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
517657    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
517658    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
517659    +        EducationGraduation  +     0.60739269725685 * EducationMaster
517660    +          +    -0.38307267471999 * Marital_StatusDivorced
517661    +          +     0.97088969451415 * Marital_StatusMarried
517662    +          +    -0.28578224473381 * Marital_StatusSingle
517663    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
517664    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
517665    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
517666    +        EducationGraduation  +     0.14160673378252 * EducationMaster
517667    +          +    -1.42229401093569 * Marital_StatusDivorced
517668    +          +      0.7234508382397 * Marital_StatusMarried
517669    +          +    -0.29062202974628 * Marital_StatusSingle
517670    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
517671    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
517672    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
517673    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
517674    +          +    -0.99067637207205 * Marital_StatusDivorced
517675    +          +    -0.50245902142079 * Marital_StatusMarried
517676    +          +     0.54214494533793 * Marital_StatusSingle
517677    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
517678    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
517679    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
517680    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
517681    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
517682    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
517683    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
517684    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
517685    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
517686    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
517687    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
517688    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
517689    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
517690    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
517691    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
517692    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
517693    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
517694    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
517695    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
517696    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
517697    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
517698    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
517699    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
517700    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
517701    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
517702    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
517703    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
517704    +END;
MPRINT(EM_DIAGRAM):   END;
517705    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
517706    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
517707    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
517708    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
517709    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
517710    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
517711    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
517712    +END;
MPRINT(EM_DIAGRAM):   END;
517713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517714    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
517715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517716    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517717    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
517718    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
517719    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
517720    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
517721    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
517722    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
517723    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
517724    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
517725    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
517726    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
517727    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
517728    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
517729    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
517730    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
517731    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
517732    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
517733    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
517734    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
517735    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
517736    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
517737    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
517738    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
517739    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
517740    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
517741    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
517742    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
517743    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
517744    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
517745    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
517746    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
517747    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
517748    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
517749    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
517750    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
517751    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
517752    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
517753    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
517754    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
517755    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
517756    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
517757    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
517758    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
517759    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
517760    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
517761    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
517762    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
517763    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
517764    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
517765    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
517766    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
517767    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
517768    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
517769    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
517770    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
517771    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
517772    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
517773    +END;
MPRINT(EM_DIAGRAM):   END;
517774    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
517775    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
517776    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
517777    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
517778    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
517779    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
517780    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
517781    +END;
MPRINT(EM_DIAGRAM):   END;
517782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517783    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
517784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517785    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517786    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
517787    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
517788    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
517789    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
517790    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
517791    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
517792    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
517793    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
517794    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
517795    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
517796    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
517797    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
517798    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
517799    +END;
MPRINT(EM_DIAGRAM):   END;
517800    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
517801    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
517802    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
517803    +END;
MPRINT(EM_DIAGRAM):   END;
517804    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
517805    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
517806    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
517807    +END;
MPRINT(EM_DIAGRAM):   END;
517808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517809    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
517810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517811    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
517812    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
517813    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
517814    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
517815    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
517816    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
517817    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
517818    +END;
MPRINT(EM_DIAGRAM):   END;
517819    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
517820    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
517821    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
517822    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
517823     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
517824     quit;
517825     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
517826     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
517827     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
517828     retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
517829     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
517830     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517831     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
517832     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517833     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517834     proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
517835     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517837     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
517838     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
517839     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
517840     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517841     proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
517842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

517843     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
517844     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517845     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517846     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
517847     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
517848     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517849     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517850     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
517851     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
517851   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

517852     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517853     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
517854     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

517855     filename _pref
517855   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
517856     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
517857     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
517858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
517859    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
517860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
517861    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
517862    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
517863    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
517864     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
517865     quit;
517866     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
517867     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
517868     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
517869     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
517870     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
517871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517872     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
517873     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517875     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
517876     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517878     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
517879     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
517880     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
517881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517882     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
517883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

517884     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
517885     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517887     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
517888     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
517889     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517890     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517891     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
517892     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
517892   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

517893     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517894     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
517895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517896     filename _pref
517896   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
517897     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
517898     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
517899    +
517900    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
517901    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
517901   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
517902    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
517903    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
517904    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
517905    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
517906    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
517907     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
517908     quit;
517909     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
517910     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
517911     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
517912     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
517913     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
517914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517915     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
517916     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517917     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517918     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
517919     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517921     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
517922     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
517923     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
517924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517925     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
517926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517927     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
517928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517930     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
517931     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
517932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
517933     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

517934     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
517935     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
517935   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

517936     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517937     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
517938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

517939     filename _pref
517939   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
517940     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
517941     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
517942    +
517943    +
517944    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
517945    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
517946    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
517947    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
517948    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
517949    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517950    +
517951    +
517952    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
517953    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
517954    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
517955    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
517956    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
517957    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517958    +
517959    +
517960    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
517961    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
517962    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
517963    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
517964    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
517965    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517966    +
517967    +
517968    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
517969    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
517970    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
517971    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
517972    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
517973    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517974    +
517975    +
517976    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
517977    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
517978    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
517979    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
517980    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
517981    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517982    +
517983    +
517984    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
517985    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
517986    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
517987    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
517988    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
517989    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517990    +
517991    +
517992    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
517993    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
517994    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
517995    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
517996    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
517997    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
517998    +
517999    +
518000    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
518001    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
518002    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
518003    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
518004    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
518005    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
518006    +if
518007    +_FILTERNORM1 not in ( '.')
518008    + and
518009    +_FILTERNORM2 not in ( '.')
518010    + and
518011    +_FILTERNORM3 not in ( '.')
518012    + and
518013    +_FILTERNORM4 not in ( '.')
518014    + and
518015    +_FILTERNORM5 not in ( '.')
518016    + and
518017    +_FILTERNORM6 not in ( '.')
518018    + and
518019    +_FILTERNORM7 not in ( ' ')
518020    + and
518021    +_FILTERNORM8 not in ( ' ')
518022    +and
518023    +( Dt_Customer ne .)
518024    +and ( Income ne . and (Income<=107000))
518025    +and ( Kidhome ne .)
518026    +and ( MntFishProducts ne .)
518027    +and ( MntFruits ne .)
518028    +and ( MntGoldProds ne .)
518029    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
518030    +and ( MntSweetProducts ne .)
518031    +and ( MntWines ne .)
518032    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
518033    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
518034    +and ( NumStorePurchases ne .)
518035    +and ( NumWebPurchases ne .)
518036    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
518037    +and ( Recency ne .)
518038    +and ( Teenhome ne .)
518039    +and ( Year_Birth ne .)
518040    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
518041    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
518042    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
518043    +end;
MPRINT(EM_DIAGRAM):   end;
518044    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
518045    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518046     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518047     quit;
518048     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
518049     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
518050     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
518051     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
518052     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
518053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518054     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
518055     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518057     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
518058     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518060     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518061     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
518062     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
518063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518064     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
518065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

518066     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
518067     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518069     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518070     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
518071     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518072     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518073     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
518074     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
518074   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

518075     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518076     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
518077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518078     %macro varDept(fcmpdata=,id=);
518079     %global nobs&id scoreFlag&id;
518080     %let scoreFlag&id = 0;
518081     %if &id=1 or ^&fcmpStart %then %do;
518082     proc sort data=&fcmpdata out=_temp&id nodupkey;
518083     by NAME;
518084     where id=&id and LHS in( %let j=1;
518085     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
518086     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
518087     "&var" %let j = %eval(&j+1);
518088     %end;
518089     );
518090     run;
518091     %let dsid = %sysfunc(open(_temp&id));
518092     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
518093     %let dsid = %sysfunc(close(&dsid));
518094     %if &&nobs&id %then %do;
518095     %let scoreFlag&id = 1;
518096     %let fcmpStart = 1;
518097     %end;
518098     %else %let fcmpStart = 0;
518099     %end;
518100     %else %do;
518101     proc sort data=&fcmpdata out=_tempid;
518102     where id=&id;
518103     by LHS;
518104     run;
518105     %let dsid = %sysfunc(open(_tempid));
518106     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
518107     %let dsid = %sysfunc(close(&dsid));
518108     %if ^&&nobs&id %then %do;
518109     proc datasets lib=work nolist;
518110     delete _tempid;
518111     run;
518112     quit;
518113     %end;
518114     %else %do;
518115     data _tempAll;
518116     set %let j=%eval(&id-1);
518117     %do x=1 %to &j;
518118     %if &&nobs&x %then %do;
518119     _temp&x %end;
518120     %end;
518121     ;
518122     run;
518123     proc sql;
518124     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
518124   ! work._tempid p2 where p.name=p2.lhs;
518125     quit;
518126     data _temp&id;
518127     set _temp&id;
518128     where LHS ne '' and NAME ne '' and Node ne '';
518129     run;
518130     proc datasets lib=work nolist;
518131     delete _tempAll;
518132     run;
518133     %let dsid = %sysfunc(open(_temp&id));
518134     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
518135     %let dsid = %sysfunc(close(&dsid));
518136     %if ^&&nobs&id %then %do;
518137     proc datasets lib=work nolist;
518138     delete _temp&id;
518139     run;
518140     quit;
518141     %end;
518142     %else %do;
518143     %let scoreFlag&id = 1;
518144     data _temp&id;
518145     set _temp&id;
518146     where LHS ne NAME and node ne '';
518147     run;
518148     %let dsid = %sysfunc(open(_temp&id));
518149     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
518150     %let dsid = %sysfunc(close(&dsid));
518151     %if ^&&nobs&id %then %do;
518152     proc datasets lib=work nolist;
518153     delete _temp&id;
518154     run;
518155     quit;
518156     %end;
518157     %else %do;
518158     proc sort data=_temp&id nodupkey;
518159     by LHS NAME;
518160     run;
518161     %end;
518162     %end;
518163     %end;
518164     %end;
518165     %mend varDept;
518166     %macro optCode(outdata=fcmpdata);
518167     %global fcmpStart;
518168     %let fcmpStart = 0;
518169     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
518170     %let NumNodes=9;
518171     %do k=1 %to &NumNodes;
518172     %vardept(fcmpdata=&outdata, id=&k);
518173     %end;
518174     %mend optCode;
518175     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

518176     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
518177     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
518178     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
518179     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518180     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
518181     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
518182     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
518183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518184     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
518185     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
518185   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

518186     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518187     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
518188     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
518189     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518190     filename _pref
518190   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
518191     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
518192     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
518193    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518194    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
518195    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518196    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
518197    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
518198    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
518199    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
518200    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
518201    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
518202    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
518203    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
518204    +LENGTH _WARN_ $4
518205    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
518206    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
518207    +
518208    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
518209    +
518210    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
518211    +
518212    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
518213    +
518214    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
518215    +
518216    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
518217    +
518218    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
518219    +
518220    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
518221    +
518222    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
518223    +
518224    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
518225    +
518226    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
518227    +
518228    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
518229    +
518230    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
518231    +
518232    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
518233    +
518234    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
518235    +
518236    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
518237    +
518238    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
518239    +
518240    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
518241    +
518242    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
518243    +
518244    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
518245    +
518246    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
518247    +
518248    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
518249    +
518250    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
518251    +
518252    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
518253    +
518254    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
518255    +
518256    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
518257    +
518258    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
518259    +
518260    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
518261    +
518262    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
518263    +
518264    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
518265    +
518266    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
518267    +
518268    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
518269    +
518270    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
518271    +
518272    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
518273    +
518274    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
518275    +
518276    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
518277    +
518278    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
518279    +
518280    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
518281    +
518282    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
518283    +
518284    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
518285    +
518286    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
518287    +
518288    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
518289    +
518290    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
518291    +
518292    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
518293    +
518294    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
518295    +
518296    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
518297    +
518298    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
518299    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
518300    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
518301    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
518302    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518304    +end;
MPRINT(EM_DIAGRAM):   end;
518305    +else do;
MPRINT(EM_DIAGRAM):   else do;
518306    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518307    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
518308    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518309    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518310    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
518311    +   end;
MPRINT(EM_DIAGRAM):   end;
518312    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518313    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
518314    +   end;
MPRINT(EM_DIAGRAM):   end;
518315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518316    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
518317    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518318    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518319    +   end;
MPRINT(EM_DIAGRAM):   end;
518320    +end;
MPRINT(EM_DIAGRAM):   end;
518321    +
518322    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
518323    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
518324    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
518325    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
518326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518328    +end;
MPRINT(EM_DIAGRAM):   end;
518329    +else do;
MPRINT(EM_DIAGRAM):   else do;
518330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518331    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
518332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518333    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518334    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
518335    +   end;
MPRINT(EM_DIAGRAM):   end;
518336    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518337    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
518338    +   end;
MPRINT(EM_DIAGRAM):   end;
518339    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518340    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
518341    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518342    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518343    +   end;
MPRINT(EM_DIAGRAM):   end;
518344    +end;
MPRINT(EM_DIAGRAM):   end;
518345    +
518346    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
518347    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
518348    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
518349    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
518350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518352    +end;
MPRINT(EM_DIAGRAM):   end;
518353    +else do;
MPRINT(EM_DIAGRAM):   else do;
518354    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518355    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
518356    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518357    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518358    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
518359    +   end;
MPRINT(EM_DIAGRAM):   end;
518360    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518361    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
518362    +   end;
MPRINT(EM_DIAGRAM):   end;
518363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518364    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
518365    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518366    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518367    +   end;
MPRINT(EM_DIAGRAM):   end;
518368    +end;
MPRINT(EM_DIAGRAM):   end;
518369    +
518370    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
518371    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
518372    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
518373    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
518374    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518375    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518376    +end;
MPRINT(EM_DIAGRAM):   end;
518377    +else do;
MPRINT(EM_DIAGRAM):   else do;
518378    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518379    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
518380    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518381    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518382    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
518383    +   end;
MPRINT(EM_DIAGRAM):   end;
518384    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518385    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
518386    +   end;
MPRINT(EM_DIAGRAM):   end;
518387    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518388    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
518389    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518390    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518391    +   end;
MPRINT(EM_DIAGRAM):   end;
518392    +end;
MPRINT(EM_DIAGRAM):   end;
518393    +
518394    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
518395    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
518396    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
518397    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
518398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518400    +end;
MPRINT(EM_DIAGRAM):   end;
518401    +else do;
MPRINT(EM_DIAGRAM):   else do;
518402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518403    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
518404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518405    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518406    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
518407    +   end;
MPRINT(EM_DIAGRAM):   end;
518408    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518409    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
518410    +   end;
MPRINT(EM_DIAGRAM):   end;
518411    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518412    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
518413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518415    +   end;
MPRINT(EM_DIAGRAM):   end;
518416    +end;
MPRINT(EM_DIAGRAM):   end;
518417    +
518418    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
518419    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
518420    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
518421    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
518422    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518423    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518424    +end;
MPRINT(EM_DIAGRAM):   end;
518425    +else do;
MPRINT(EM_DIAGRAM):   else do;
518426    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518427    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
518428    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518429    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518430    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
518431    +   end;
MPRINT(EM_DIAGRAM):   end;
518432    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518433    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
518434    +   end;
MPRINT(EM_DIAGRAM):   end;
518435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518436    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
518437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518439    +   end;
MPRINT(EM_DIAGRAM):   end;
518440    +end;
MPRINT(EM_DIAGRAM):   end;
518441    +
518442    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
518443    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
518444    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
518445    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
518446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518448    +end;
MPRINT(EM_DIAGRAM):   end;
518449    +else do;
MPRINT(EM_DIAGRAM):   else do;
518450    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518451    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
518452    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518453    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
518454    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
518455    +   end;
MPRINT(EM_DIAGRAM):   end;
518456    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
518457    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
518458    +   end;
MPRINT(EM_DIAGRAM):   end;
518459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518460    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
518461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518463    +   end;
MPRINT(EM_DIAGRAM):   end;
518464    +end;
MPRINT(EM_DIAGRAM):   end;
518465    +
518466    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
518467    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
518468    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
518469    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
518470    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
518471    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
518472    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
518473    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
518474    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
518475    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
518476    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
518477    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
518478    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518479    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518480    +end;
MPRINT(EM_DIAGRAM):   end;
518481    +else do;
MPRINT(EM_DIAGRAM):   else do;
518482    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
518483    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
518484    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518485    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
518486    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
518487    +   end;
MPRINT(EM_DIAGRAM):   end;
518488    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
518489    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
518490    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
518491    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
518492    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
518493    +   end;
MPRINT(EM_DIAGRAM):   end;
518494    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
518495    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
518496    +   end;
MPRINT(EM_DIAGRAM):   end;
518497    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
518498    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
518499    +   end;
MPRINT(EM_DIAGRAM):   end;
518500    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
518501    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
518502    +   end;
MPRINT(EM_DIAGRAM):   end;
518503    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518504    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
518505    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
518506    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
518507    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
518508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518510    +   end;
MPRINT(EM_DIAGRAM):   end;
518511    +end;
MPRINT(EM_DIAGRAM):   end;
518512    +
518513    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
518514    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
518515    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
518516    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
518517    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
518518    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
518519    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
518520    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
518521    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
518522    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
518523    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
518524    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
518525    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
518526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518528    +end;
MPRINT(EM_DIAGRAM):   end;
518529    +else do;
MPRINT(EM_DIAGRAM):   else do;
518530    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
518531    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
518532    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518533    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
518534    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
518535    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
518536    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
518537    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
518538    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518539    +         end;
MPRINT(EM_DIAGRAM):   end;
518540    +         else do;
MPRINT(EM_DIAGRAM):   else do;
518541    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
518542    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
518543    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518544    +            end;
MPRINT(EM_DIAGRAM):   end;
518545    +         end;
MPRINT(EM_DIAGRAM):   end;
518546    +      end;
MPRINT(EM_DIAGRAM):   end;
518547    +      else do;
MPRINT(EM_DIAGRAM):   else do;
518548    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
518549    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
518550    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518551    +         end;
MPRINT(EM_DIAGRAM):   end;
518552    +      end;
MPRINT(EM_DIAGRAM):   end;
518553    +   end;
MPRINT(EM_DIAGRAM):   end;
518554    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518555    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
518556    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
518557    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518558    +      end;
MPRINT(EM_DIAGRAM):   end;
518559    +      else do;
MPRINT(EM_DIAGRAM):   else do;
518560    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
518561    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
518562    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
518563    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
518564    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
518565    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518566    +         end;
MPRINT(EM_DIAGRAM):   end;
518567    +      end;
MPRINT(EM_DIAGRAM):   end;
518568    +   end;
MPRINT(EM_DIAGRAM):   end;
518569    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
518570    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
518571    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
518572    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
518573    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
518574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518576    +   end;
MPRINT(EM_DIAGRAM):   end;
518577    +end;
MPRINT(EM_DIAGRAM):   end;
518578    +
518579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518580    +*** Checking missing input Interval
518581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
518582    +
518583    +IF NMISS(
518584    +   AcceptedCmpTotal ,
518585    +   Age ,
518586    +   Frq ,
518587    +   Income ,
518588    +   Kidhome ,
518589    +   Mnt ,
518590    +   MntFishProducts ,
518591    +   MntFruits ,
518592    +   MntGoldProds ,
518593    +   MntMeatProducts ,
518594    +   MntSweetProducts ,
518595    +   MntWines ,
518596    +   MonthsAsCustomer ,
518597    +   NumCatalogPurchases ,
518598    +   NumDealsPurchases ,
518599    +   NumDistPurchases ,
518600    +   NumStorePurchases ,
518601    +   NumWebPurchases ,
518602    +   NumWebVisitsMonth ,
518603    +   RFMstat ,
518604    +   RMntFrq ,
518605    +   Recency ,
518606    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
518607    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
518608    +
518609    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518610    +END;
MPRINT(EM_DIAGRAM):   END;
518611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518612    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
518613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518614    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518615    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
518616    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
518617    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
518618    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
518619    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
518620    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
518621    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
518622    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
518623    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
518624    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
518625    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
518626    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
518627    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
518628    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
518629    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
518630    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
518631    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
518632    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
518633    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
518634    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
518635    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
518636    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
518637    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
518638    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
518639    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
518640    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
518641    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
518642    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
518643    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
518644    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
518645    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
518646    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
518647    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
518648    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
518649    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
518650    +END;
MPRINT(EM_DIAGRAM):   END;
518651    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518652    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
518653    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
518654    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
518655    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
518656    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
518657    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
518658    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
518659    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
518660    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
518661    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
518662    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
518663    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
518664    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
518665    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
518666    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
518667    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
518668    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
518669    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
518670    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
518671    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
518672    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
518673    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
518674    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
518675    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
518676    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
518677    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
518678    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
518679    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
518680    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
518681    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
518682    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
518683    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
518684    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
518685    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
518686    +   ELSE S_NumCatalogPurchases
518687    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
518688    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
518689    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
518690    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
518691    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
518692    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
518693    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
518694    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
518695    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
518696    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
518697    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
518698    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
518699    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
518700    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
518701    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
518702    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
518703    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
518704    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
518705    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
518706    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
518707    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
518708    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
518709    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
518710    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
518711    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
518712    +END;
MPRINT(EM_DIAGRAM):   END;
518713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518714    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
518715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518717    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
518718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518720    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
518721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518722    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518723    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
518724    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
518725    +        S_Income  +      0.4880522012865 * S_Kidhome
518726    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
518727    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
518728    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
518729    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
518730    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
518731    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
518732    +          +     1.28630491068585 * S_NumDealsPurchases
518733    +          +     0.12175737778271 * S_NumDistPurchases
518734    +          +    -0.62012456448967 * S_NumStorePurchases
518735    +          +     -0.6092351519122 * S_NumWebPurchases
518736    +          +     1.46336740414795 * S_NumWebVisitsMonth
518737    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
518738    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
518739    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
518740    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
518741    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
518742    +        S_Income  +     0.63026291057347 * S_Kidhome
518743    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
518744    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
518745    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
518746    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
518747    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
518748    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
518749    +          +    -0.66569109065716 * S_NumDealsPurchases
518750    +          +    -0.04991685336251 * S_NumDistPurchases
518751    +          +     0.97830186941279 * S_NumStorePurchases
518752    +          +     1.01041490205359 * S_NumWebPurchases
518753    +          +    -1.32418956036577 * S_NumWebVisitsMonth
518754    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
518755    +        S_RMntFrq  +     1.45035992156192 * S_Recency
518756    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
518757    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
518758    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
518759    +        S_Income  +     0.56998894495459 * S_Kidhome
518760    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
518761    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
518762    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
518763    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
518764    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
518765    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
518766    +          +     0.07739967453744 * S_NumDealsPurchases
518767    +          +    -0.43729543807168 * S_NumDistPurchases
518768    +          +      0.0856627398024 * S_NumStorePurchases
518769    +          +     -0.0045478100059 * S_NumWebPurchases
518770    +          +    -0.64123054514198 * S_NumWebVisitsMonth
518771    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
518772    +        S_RMntFrq  +     1.48732817876807 * S_Recency
518773    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
518774    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
518775    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
518776    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
518777    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
518778    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
518779    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
518780    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
518781    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
518782    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
518783    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
518784    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
518785    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
518786    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
518787    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
518788    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
518789    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
518790    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
518791    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
518792    +          +     0.16155355707944 * Marital_StatusDivorced
518793    +          +     0.04915644167404 * Marital_StatusMarried
518794    +          +    -0.16886350906837 * Marital_StatusSingle
518795    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
518796    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
518797    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
518798    +        EducationGraduation  +     0.03310756432448 * EducationMaster
518799    +          +    -0.15094637092036 * Marital_StatusDivorced
518800    +          +     0.07664831456886 * Marital_StatusMarried
518801    +          +    -0.47693612610813 * Marital_StatusSingle
518802    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
518803    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
518804    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
518805    +        EducationGraduation  +     0.20173383445657 * EducationMaster
518806    +          +    -0.58672623647391 * Marital_StatusDivorced
518807    +          +      1.8684271616322 * Marital_StatusMarried
518808    +          +    -1.30134837394569 * Marital_StatusSingle
518809    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
518810    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
518811    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
518812    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
518813    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
518814    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
518815    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
518816    +END;
MPRINT(EM_DIAGRAM):   END;
518817    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518818    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
518819    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
518820    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
518821    +END;
MPRINT(EM_DIAGRAM):   END;
518822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518823    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
518824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518825    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518826    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
518827    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
518828    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
518829    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
518830    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
518831    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
518832    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
518833    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
518834    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
518835    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
518836    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
518837    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
518838    +END;
MPRINT(EM_DIAGRAM):   END;
518839    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518840    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
518841    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
518842    +END;
MPRINT(EM_DIAGRAM):   END;
518843    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
518844    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
518845    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
518846    +END;
MPRINT(EM_DIAGRAM):   END;
518847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518848    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
518849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518850    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
518851    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
518852    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
518853    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
518854    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
518855    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
518856    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
518857    +END;
MPRINT(EM_DIAGRAM):   END;
518858    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518859    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
518860    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518861    +drop
518862    +H11
518863    +H12
518864    +H13
518865    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
518866    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518867     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518868     quit;
518869     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
518870     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
518871     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
518872     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
518873     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
518874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518875     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
518876     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

518878     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
518879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518881     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518882     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
518883     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
518884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518885     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
518886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

518887     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
518888     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518890     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518891     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
518892     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518893     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

518894     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
518895     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
518895   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

518896     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518897     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
518898     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518899     filename _pref
518899   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
518900     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
518901     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
518902    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
518903    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
518904    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
518905    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
518906    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
518907    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518908     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518909     quit;
518910     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
518911     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
518912     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
518913     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
518914     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
518915     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518916     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
518917     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518919     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
518920     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518922     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518923     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
518924     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
518925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518926     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
518927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518928     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
518929     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

518931     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518932     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
518933     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518934     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518935     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
518936     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
518936   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

518937     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518938     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
518939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518940     filename _pref
518940   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
518941     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
518942     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
518943    +
518944    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
518945    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
518945   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
518946    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
518947    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
518948    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
518949    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
518950    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518951     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518952     quit;
518953     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
518954     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
518955     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
518956     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
518957     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
518958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

518959     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
518960     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518962     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
518963     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518964     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518965     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518966     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
518967     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
518968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518969     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
518970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518971     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
518972     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518973     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518974     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
518975     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
518976     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
518977     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518978     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
518979     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
518979   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

518980     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

518981     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
518982     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518983     filename _pref
518983   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
518984     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
518985     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
518986    +
518987    +
518988    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
518989    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
518990    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
518991    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
518992    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
518993    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
518994    +
518995    +
518996    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
518997    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
518998    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
518999    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
519000    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
519001    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519002    +
519003    +
519004    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
519005    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
519006    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
519007    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
519008    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
519009    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519010    +
519011    +
519012    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
519013    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
519014    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
519015    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
519016    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
519017    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519018    +
519019    +
519020    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
519021    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
519022    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
519023    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
519024    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
519025    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519026    +
519027    +
519028    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
519029    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
519030    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
519031    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
519032    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
519033    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519034    +
519035    +
519036    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
519037    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
519038    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
519039    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
519040    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
519041    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519042    +
519043    +
519044    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
519045    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
519046    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
519047    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
519048    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
519049    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
519050    +if
519051    +_FILTERNORM1 not in ( '.')
519052    + and
519053    +_FILTERNORM2 not in ( '.')
519054    + and
519055    +_FILTERNORM3 not in ( '.')
519056    + and
519057    +_FILTERNORM4 not in ( '.')
519058    + and
519059    +_FILTERNORM5 not in ( '.')
519060    + and
519061    +_FILTERNORM6 not in ( '.')
519062    + and
519063    +_FILTERNORM7 not in ( ' ')
519064    + and
519065    +_FILTERNORM8 not in ( ' ')
519066    +and
519067    +( Dt_Customer ne .)
519068    +and ( Income ne . and (Income<=107000))
519069    +and ( Kidhome ne .)
519070    +and ( MntFishProducts ne .)
519071    +and ( MntFruits ne .)
519072    +and ( MntGoldProds ne .)
519073    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
519074    +and ( MntSweetProducts ne .)
519075    +and ( MntWines ne .)
519076    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
519077    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
519078    +and ( NumStorePurchases ne .)
519079    +and ( NumWebPurchases ne .)
519080    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
519081    +and ( Recency ne .)
519082    +and ( Teenhome ne .)
519083    +and ( Year_Birth ne .)
519084    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
519085    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
519086    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
519087    +end;
MPRINT(EM_DIAGRAM):   end;
519088    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
519089    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
519090     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
519091     quit;
519092     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
519093     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
519094     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
519095     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
519096     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
519097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519098     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
519099     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
519100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

519101     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
519102     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
519103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519104     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
519105     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
519106     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
519107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519108     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
519109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

519110     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
519111     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
519112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519113     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
519114     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
519115     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
519116     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519117     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
519118     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
519118   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

519119     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519120     proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
519121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

519122     %macro varDept(fcmpdata=,id=);
519123     %global nobs&id scoreFlag&id;
519124     %let scoreFlag&id = 0;
519125     %if &id=1 or ^&fcmpStart %then %do;
519126     proc sort data=&fcmpdata out=_temp&id nodupkey;
519127     by NAME;
519128     where id=&id and LHS in( %let j=1;
519129     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
519130     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
519131     "&var" %let j = %eval(&j+1);
519132     %end;
519133     );
519134     run;
519135     %let dsid = %sysfunc(open(_temp&id));
519136     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
519137     %let dsid = %sysfunc(close(&dsid));
519138     %if &&nobs&id %then %do;
519139     %let scoreFlag&id = 1;
519140     %let fcmpStart = 1;
519141     %end;
519142     %else %let fcmpStart = 0;
519143     %end;
519144     %else %do;
519145     proc sort data=&fcmpdata out=_tempid;
519146     where id=&id;
519147     by LHS;
519148     run;
519149     %let dsid = %sysfunc(open(_tempid));
519150     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
519151     %let dsid = %sysfunc(close(&dsid));
519152     %if ^&&nobs&id %then %do;
519153     proc datasets lib=work nolist;
519154     delete _tempid;
519155     run;
519156     quit;
519157     %end;
519158     %else %do;
519159     data _tempAll;
519160     set %let j=%eval(&id-1);
519161     %do x=1 %to &j;
519162     %if &&nobs&x %then %do;
519163     _temp&x %end;
519164     %end;
519165     ;
519166     run;
519167     proc sql;
519168     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
519168   ! work._tempid p2 where p.name=p2.lhs;
519169     quit;
519170     data _temp&id;
519171     set _temp&id;
519172     where LHS ne '' and NAME ne '' and Node ne '';
519173     run;
519174     proc datasets lib=work nolist;
519175     delete _tempAll;
519176     run;
519177     %let dsid = %sysfunc(open(_temp&id));
519178     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
519179     %let dsid = %sysfunc(close(&dsid));
519180     %if ^&&nobs&id %then %do;
519181     proc datasets lib=work nolist;
519182     delete _temp&id;
519183     run;
519184     quit;
519185     %end;
519186     %else %do;
519187     %let scoreFlag&id = 1;
519188     data _temp&id;
519189     set _temp&id;
519190     where LHS ne NAME and node ne '';
519191     run;
519192     %let dsid = %sysfunc(open(_temp&id));
519193     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
519194     %let dsid = %sysfunc(close(&dsid));
519195     %if ^&&nobs&id %then %do;
519196     proc datasets lib=work nolist;
519197     delete _temp&id;
519198     run;
519199     quit;
519200     %end;
519201     %else %do;
519202     proc sort data=_temp&id nodupkey;
519203     by LHS NAME;
519204     run;
519205     %end;
519206     %end;
519207     %end;
519208     %end;
519209     %mend varDept;
519210     %macro optCode(outdata=fcmpdata);
519211     %global fcmpStart;
519212     %let fcmpStart = 0;
519213     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
519214     %let NumNodes=9;
519215     %do k=1 %to &NumNodes;
519216     %vardept(fcmpdata=&outdata, id=&k);
519217     %end;
519218     %mend optCode;
519219     %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

519220     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
519221     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
519222     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
519223     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

519224     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
519225     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
519226     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
519227     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519228     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
519229     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
519229   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

519230     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

519231     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
519232     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
519233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519234     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
519235     * Ensmbl14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing metadata for TRAIN data;
519236     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl14_TRAIN out=WORK.M3QJEAKL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QJEAKL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QJEAKL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QJEAKL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QJEAKL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3V650B0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BV_K24(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   set WORK.M3V650B0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl14";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
519556     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
519557     set EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO;
519558     where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
519559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_EMINFO.
      WHERE (DATA='Ensmbl14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519560     data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMINFO;
519561     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
519562     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
519563     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
519567     run;
519568     data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
519569     set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
519570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519571     proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
519572     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
519573     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519574     proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
519575     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
519576     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

519577     proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
519578     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
519579     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519580     data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
519581     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
519582     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
519583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

519584     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
519585     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
519586     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
519587     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
