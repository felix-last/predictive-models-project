MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2AU2SP5 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2AU2SP5 new;
MPRINT(EM_DIAGRAM):   run;
2020581    filename emflow
2020581  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring NEURAL10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020582    *------------------------------------------------------------*;
2020583    * Ensmbl14: Scoring NEURAL10_TRAIN data;
2020584    *------------------------------------------------------------*;
2020585    data EMWS8.Ensmbl14_TRAIN
2020586    / view=EMWS8.Ensmbl14_TRAIN
2020587    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_TRAIN / view=EMWS8.Ensmbl14_TRAIN ;
2020588    set EMWS8.Neural10_TRAIN
2020589    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_TRAIN ;
2020590    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
2020591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020592   +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
2020593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020594   +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
2020595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020597   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2020598   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2020599   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2020600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020602   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2020603   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2020604   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2020605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020607   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2020608   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2020609   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2020610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020612   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2020613   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2020614   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2020615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020616   +
2020617   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2020618   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2020618  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2020619   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2020620   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2020621   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2020622   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2020623   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2020624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020625   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2020626   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2020627   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2020628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020630   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2020631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020632   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2020633   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2020634   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2020635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020636   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2020637   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2020638   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2020639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020641   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2020642   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2020643   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2020644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020646   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2020647   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2020648   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
2020649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2020650   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2020651   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2020652   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2020653   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2020654   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2020655   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2020656   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2020657   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2020658   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2020659   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2020660   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2020661   +LENGTH _WARN_ $4
2020662   +      F_DepVar  $ 12
2020663   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2020664   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2020665   +
2020666   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2020667   +
2020668   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2020669   +
2020670   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2020671   +
2020672   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2020673   +
2020674   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2020675   +
2020676   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2020677   +
2020678   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2020679   +
2020680   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2020681   +
2020682   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2020683   +
2020684   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2020685   +
2020686   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2020687   +
2020688   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2020689   +
2020690   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2020691   +
2020692   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2020693   +
2020694   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2020695   +
2020696   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2020697   +
2020698   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2020699   +
2020700   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2020701   +
2020702   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2020703   +
2020704   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2020705   +
2020706   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2020707   +
2020708   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2020709   +
2020710   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2020711   +
2020712   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2020713   +
2020714   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2020715   +
2020716   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2020717   +
2020718   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2020719   +
2020720   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2020721   +
2020722   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2020723   +
2020724   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2020725   +
2020726   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2020727   +
2020728   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2020729   +
2020730   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2020731   +
2020732   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2020733   +
2020734   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2020735   +
2020736   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2020737   +
2020738   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2020739   +
2020740   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2020741   +
2020742   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2020743   +
2020744   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2020745   +
2020746   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2020747   +
2020748   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2020749   +
2020750   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2020751   +
2020752   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2020753   +
2020754   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2020755   +
2020756   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2020757   +
2020758   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2020759   +
2020760   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2020761   +
2020762   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2020763   +
2020764   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2020765   +
2020766   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2020767   +
2020768   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2020769   +
2020770   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2020771   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2020772   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2020773   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2020774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020776   +end;
MPRINT(EM_DIAGRAM):   end;
2020777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020779   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2020780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020781   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2020782   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2020783   +   end;
MPRINT(EM_DIAGRAM):   end;
2020784   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2020785   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2020786   +   end;
MPRINT(EM_DIAGRAM):   end;
2020787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020788   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2020789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020791   +   end;
MPRINT(EM_DIAGRAM):   end;
2020792   +end;
MPRINT(EM_DIAGRAM):   end;
2020793   +
2020794   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2020795   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2020796   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2020797   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2020798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020800   +end;
MPRINT(EM_DIAGRAM):   end;
2020801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020803   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2020804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020805   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2020806   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2020807   +   end;
MPRINT(EM_DIAGRAM):   end;
2020808   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2020809   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2020810   +   end;
MPRINT(EM_DIAGRAM):   end;
2020811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020812   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2020813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020815   +   end;
MPRINT(EM_DIAGRAM):   end;
2020816   +end;
MPRINT(EM_DIAGRAM):   end;
2020817   +
2020818   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2020819   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2020820   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2020821   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2020822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020824   +end;
MPRINT(EM_DIAGRAM):   end;
2020825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020827   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2020828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020829   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2020830   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2020831   +   end;
MPRINT(EM_DIAGRAM):   end;
2020832   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2020833   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2020834   +   end;
MPRINT(EM_DIAGRAM):   end;
2020835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020836   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2020837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020839   +   end;
MPRINT(EM_DIAGRAM):   end;
2020840   +end;
MPRINT(EM_DIAGRAM):   end;
2020841   +
2020842   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2020843   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2020844   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2020845   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2020846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020848   +end;
MPRINT(EM_DIAGRAM):   end;
2020849   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020850   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020851   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2020852   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020853   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2020854   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2020855   +   end;
MPRINT(EM_DIAGRAM):   end;
2020856   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2020857   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2020858   +   end;
MPRINT(EM_DIAGRAM):   end;
2020859   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020860   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2020861   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020862   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020863   +   end;
MPRINT(EM_DIAGRAM):   end;
2020864   +end;
MPRINT(EM_DIAGRAM):   end;
2020865   +
2020866   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2020867   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2020868   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2020869   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2020870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020872   +end;
MPRINT(EM_DIAGRAM):   end;
2020873   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020875   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2020876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020877   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2020878   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2020879   +   end;
MPRINT(EM_DIAGRAM):   end;
2020880   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2020881   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2020882   +   end;
MPRINT(EM_DIAGRAM):   end;
2020883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020884   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2020885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020887   +   end;
MPRINT(EM_DIAGRAM):   end;
2020888   +end;
MPRINT(EM_DIAGRAM):   end;
2020889   +
2020890   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2020891   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2020892   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2020893   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2020894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020896   +end;
MPRINT(EM_DIAGRAM):   end;
2020897   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020898   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020899   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2020900   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020901   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2020902   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2020903   +   end;
MPRINT(EM_DIAGRAM):   end;
2020904   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2020905   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2020906   +   end;
MPRINT(EM_DIAGRAM):   end;
2020907   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020908   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2020909   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020910   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020911   +   end;
MPRINT(EM_DIAGRAM):   end;
2020912   +end;
MPRINT(EM_DIAGRAM):   end;
2020913   +
2020914   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2020915   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2020916   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2020917   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2020918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020920   +end;
MPRINT(EM_DIAGRAM):   end;
2020921   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2020923   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2020924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020925   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2020926   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2020927   +   end;
MPRINT(EM_DIAGRAM):   end;
2020928   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2020929   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2020930   +   end;
MPRINT(EM_DIAGRAM):   end;
2020931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020932   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2020933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020935   +   end;
MPRINT(EM_DIAGRAM):   end;
2020936   +end;
MPRINT(EM_DIAGRAM):   end;
2020937   +
2020938   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2020939   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2020940   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2020941   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2020942   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2020943   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2020944   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2020945   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2020946   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2020947   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2020948   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2020949   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2020950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020952   +end;
MPRINT(EM_DIAGRAM):   end;
2020953   +else do;
MPRINT(EM_DIAGRAM):   else do;
2020954   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2020955   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2020956   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2020957   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2020958   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2020959   +   end;
MPRINT(EM_DIAGRAM):   end;
2020960   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2020961   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2020962   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2020963   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2020964   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2020965   +   end;
MPRINT(EM_DIAGRAM):   end;
2020966   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2020967   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2020968   +   end;
MPRINT(EM_DIAGRAM):   end;
2020969   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2020970   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2020971   +   end;
MPRINT(EM_DIAGRAM):   end;
2020972   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2020973   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2020974   +   end;
MPRINT(EM_DIAGRAM):   end;
2020975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2020976   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2020977   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2020978   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2020979   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2020980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2020981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2020982   +   end;
MPRINT(EM_DIAGRAM):   end;
2020983   +end;
MPRINT(EM_DIAGRAM):   end;
2020984   +
2020985   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2020986   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2020987   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2020988   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2020989   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2020990   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2020991   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2020992   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2020993   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2020994   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2020995   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2020996   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2020997   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2020998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2020999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021000   +end;
MPRINT(EM_DIAGRAM):   end;
2021001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021002   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2021003   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2021004   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021005   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2021006   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2021007   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2021008   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2021009   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2021010   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021011   +         end;
MPRINT(EM_DIAGRAM):   end;
2021012   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2021013   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2021014   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2021015   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021016   +            end;
MPRINT(EM_DIAGRAM):   end;
2021017   +         end;
MPRINT(EM_DIAGRAM):   end;
2021018   +      end;
MPRINT(EM_DIAGRAM):   end;
2021019   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2021020   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2021021   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2021022   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021023   +         end;
MPRINT(EM_DIAGRAM):   end;
2021024   +      end;
MPRINT(EM_DIAGRAM):   end;
2021025   +   end;
MPRINT(EM_DIAGRAM):   end;
2021026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021027   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2021028   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2021029   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021030   +      end;
MPRINT(EM_DIAGRAM):   end;
2021031   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2021032   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2021033   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2021034   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2021035   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2021036   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2021037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021038   +         end;
MPRINT(EM_DIAGRAM):   end;
2021039   +      end;
MPRINT(EM_DIAGRAM):   end;
2021040   +   end;
MPRINT(EM_DIAGRAM):   end;
2021041   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2021042   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2021043   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2021044   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2021045   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2021046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021048   +   end;
MPRINT(EM_DIAGRAM):   end;
2021049   +end;
MPRINT(EM_DIAGRAM):   end;
2021050   +
2021051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021052   +*** Checking missing input Interval
2021053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2021054   +
2021055   +IF NMISS(
2021056   +   AcceptedCmpTotal ,
2021057   +   Age ,
2021058   +   Frq ,
2021059   +   Income ,
2021060   +   Kidhome ,
2021061   +   Mnt ,
2021062   +   MntFishProducts ,
2021063   +   MntFruits ,
2021064   +   MntGoldProds ,
2021065   +   MntMeatProducts ,
2021066   +   MntSweetProducts ,
2021067   +   MntWines ,
2021068   +   MonthsAsCustomer ,
2021069   +   NumCatalogPurchases ,
2021070   +   NumDealsPurchases ,
2021071   +   NumDistPurchases ,
2021072   +   NumStorePurchases ,
2021073   +   NumWebPurchases ,
2021074   +   NumWebVisitsMonth ,
2021075   +   RFMstat ,
2021076   +   RMntFrq ,
2021077   +   Recency ,
2021078   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2021079   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2021080   +
2021081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021082   +END;
MPRINT(EM_DIAGRAM):   END;
2021083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021084   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2021085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021086   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2021087   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2021088   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2021089   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2021090   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2021091   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2021092   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2021093   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2021094   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2021095   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2021096   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2021097   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2021098   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2021099   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2021100   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2021101   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2021102   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2021103   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2021104   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2021105   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2021106   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2021107   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2021108   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2021109   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2021110   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2021111   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2021112   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2021113   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2021114   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2021115   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2021116   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2021117   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2021118   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2021119   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2021120   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2021121   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2021122   +END;
MPRINT(EM_DIAGRAM):   END;
2021123   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2021124   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2021125   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2021126   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2021127   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2021128   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2021129   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2021130   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2021131   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2021132   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2021133   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2021134   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2021135   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2021136   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2021137   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2021138   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2021139   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2021140   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2021141   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2021142   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2021143   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2021144   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2021145   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2021146   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2021147   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2021148   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2021149   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2021150   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2021151   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2021152   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2021153   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2021154   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2021155   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2021156   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2021157   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2021158   +   ELSE S_NumCatalogPurchases
2021159   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2021160   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2021161   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2021162   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2021163   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2021164   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2021165   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2021166   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2021167   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2021168   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2021169   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2021170   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2021171   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2021172   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2021173   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2021174   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2021175   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2021176   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2021177   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2021178   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2021179   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2021180   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2021181   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2021182   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2021183   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2021184   +END;
MPRINT(EM_DIAGRAM):   END;
2021185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021186   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2021187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021189   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2021190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021192   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2021193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021194   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2021195   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
2021196   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
2021197   +        S_Income  +    -0.43070069114587 * S_Kidhome
2021198   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
2021199   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
2021200   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
2021201   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
2021202   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
2021203   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
2021204   +          +    -0.21858146166244 * S_NumDealsPurchases
2021205   +          +     0.18409991080913 * S_NumDistPurchases
2021206   +          +     0.35683163455594 * S_NumStorePurchases
2021207   +          +     0.24429183714976 * S_NumWebPurchases
2021208   +          +     -0.1263739191616 * S_NumWebVisitsMonth
2021209   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
2021210   +        S_RMntFrq  +      0.3452503815146 * S_Recency
2021211   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
2021212   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
2021213   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
2021214   +        S_Income  +     0.24623934031778 * S_Kidhome
2021215   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
2021216   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
2021217   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
2021218   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
2021219   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
2021220   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
2021221   +          +    -0.08125614129909 * S_NumDealsPurchases
2021222   +          +     0.38003696656333 * S_NumDistPurchases
2021223   +          +     0.22006494588298 * S_NumStorePurchases
2021224   +          +     0.26217639358993 * S_NumWebPurchases
2021225   +          +    -0.56905781005459 * S_NumWebVisitsMonth
2021226   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
2021227   +        S_RMntFrq  +     0.33060213336674 * S_Recency
2021228   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
2021229   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
2021230   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
2021231   +        S_Income  +     0.18597632724783 * S_Kidhome
2021232   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
2021233   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
2021234   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
2021235   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
2021236   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
2021237   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
2021238   +          +     0.08121213946217 * S_NumDealsPurchases
2021239   +          +    -0.04963282234139 * S_NumDistPurchases
2021240   +          +    -0.09521586837775 * S_NumStorePurchases
2021241   +          +     0.00630626523742 * S_NumWebPurchases
2021242   +          +    -0.03891587920939 * S_NumWebVisitsMonth
2021243   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
2021244   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
2021245   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
2021246   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
2021247   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
2021248   +        S_Income  +     0.25356767518099 * S_Kidhome
2021249   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
2021250   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
2021251   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
2021252   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
2021253   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
2021254   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
2021255   +          +     0.83749876944877 * S_NumDealsPurchases
2021256   +          +     0.29636537008068 * S_NumDistPurchases
2021257   +          +    -0.61202052257506 * S_NumStorePurchases
2021258   +          +    -0.96921731415369 * S_NumWebPurchases
2021259   +          +     0.10056455703323 * S_NumWebVisitsMonth
2021260   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
2021261   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
2021262   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
2021263   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
2021264   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
2021265   +        S_Income  +    -0.66239517276633 * S_Kidhome
2021266   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
2021267   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
2021268   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
2021269   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
2021270   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
2021271   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
2021272   +          +     0.63122884753912 * S_NumDealsPurchases
2021273   +          +     0.00285388491049 * S_NumDistPurchases
2021274   +          +    -0.76222252593182 * S_NumStorePurchases
2021275   +          +    -0.71485070772733 * S_NumWebPurchases
2021276   +          +     1.59020450778179 * S_NumWebVisitsMonth
2021277   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
2021278   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
2021279   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
2021280   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
2021281   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
2021282   +        S_Income  +    -0.22662005590555 * S_Kidhome
2021283   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
2021284   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
2021285   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
2021286   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
2021287   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
2021288   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
2021289   +          +    -0.28143084367284 * S_NumDealsPurchases
2021290   +          +     0.09640746756361 * S_NumDistPurchases
2021291   +          +      0.1754994442449 * S_NumStorePurchases
2021292   +          +     0.14321475617403 * S_NumWebPurchases
2021293   +          +     -0.1908048876137 * S_NumWebVisitsMonth
2021294   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
2021295   +        S_RMntFrq  +     0.02280616139018 * S_Recency
2021296   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
2021297   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
2021298   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
2021299   +        S_Income  +    -0.45643247613458 * S_Kidhome
2021300   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
2021301   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
2021302   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
2021303   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
2021304   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
2021305   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
2021306   +          +    -0.14623073736275 * S_NumDealsPurchases
2021307   +          +      0.1591142102614 * S_NumDistPurchases
2021308   +          +     0.10364624011419 * S_NumStorePurchases
2021309   +          +     0.21545343951201 * S_NumWebPurchases
2021310   +          +     0.61096997379603 * S_NumWebVisitsMonth
2021311   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
2021312   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
2021313   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
2021314   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
2021315   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
2021316   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
2021317   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
2021318   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
2021319   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
2021320   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
2021321   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
2021322   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
2021323   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
2021324   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
2021325   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
2021326   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
2021327   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
2021328   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
2021329   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
2021330   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
2021331   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
2021332   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
2021333   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
2021334   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
2021335   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
2021336   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
2021337   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
2021338   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
2021339   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
2021340   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
2021341   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
2021342   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
2021343   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
2021344   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
2021345   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
2021346   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
2021347   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
2021348   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
2021349   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
2021350   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
2021351   +        EducationGraduation  +     0.00389495660452 * EducationMaster
2021352   +          +     0.39856598367829 * Marital_StatusDivorced
2021353   +          +    -0.45922754552461 * Marital_StatusMarried
2021354   +          +     0.41270195301891 * Marital_StatusSingle
2021355   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
2021356   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
2021357   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
2021358   +        EducationGraduation  +      0.2609956614651 * EducationMaster
2021359   +          +     0.12002180366932 * Marital_StatusDivorced
2021360   +          +     0.50693056076018 * Marital_StatusMarried
2021361   +          +    -0.40828651697464 * Marital_StatusSingle
2021362   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
2021363   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
2021364   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
2021365   +        EducationGraduation  +     0.20017847825938 * EducationMaster
2021366   +          +    -0.05075621283629 * Marital_StatusDivorced
2021367   +          +     0.06731276969307 * Marital_StatusMarried
2021368   +          +     0.20458391966582 * Marital_StatusSingle
2021369   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
2021370   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
2021371   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
2021372   +        EducationGraduation  +     0.28829384238085 * EducationMaster
2021373   +          +    -0.37925185401218 * Marital_StatusDivorced
2021374   +          +     0.62971134740586 * Marital_StatusMarried
2021375   +          +    -0.36562351730859 * Marital_StatusSingle
2021376   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
2021377   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
2021378   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
2021379   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
2021380   +          +     0.84382044664305 * Marital_StatusDivorced
2021381   +          +    -0.84062627203871 * Marital_StatusMarried
2021382   +          +     0.74100406031127 * Marital_StatusSingle
2021383   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
2021384   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
2021385   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
2021386   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
2021387   +          +     -0.1195105091383 * Marital_StatusDivorced
2021388   +          +    -0.13486422945269 * Marital_StatusMarried
2021389   +          +     0.33592403429156 * Marital_StatusSingle
2021390   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
2021391   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
2021392   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
2021393   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
2021394   +          +     0.14792293029589 * Marital_StatusDivorced
2021395   +          +    -0.96003393582564 * Marital_StatusMarried
2021396   +          +     0.64637652355384 * Marital_StatusSingle
2021397   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
2021398   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
2021399   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
2021400   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
2021401   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
2021402   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
2021403   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
2021404   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
2021405   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2021406   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2021407   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2021408   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2021409   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2021410   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2021411   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2021412   +END;
MPRINT(EM_DIAGRAM):   END;
2021413   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2021414   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2021415   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2021416   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2021417   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2021418   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2021419   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2021420   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2021421   +END;
MPRINT(EM_DIAGRAM):   END;
2021422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021423   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2021424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021425   +
2021426   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2021427   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2021428   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2021429   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2021430   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2021431   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021432   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2021433   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2021434   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2021435   +end;
MPRINT(EM_DIAGRAM):   end;
2021436   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021437   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2021438   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2021439   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2021440   +   end;
MPRINT(EM_DIAGRAM):   end;
2021441   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2021442   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2021443   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2021444   +   end;
MPRINT(EM_DIAGRAM):   end;
2021445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021446   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2021447   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2021448   +   end;
MPRINT(EM_DIAGRAM):   end;
2021449   +end;
MPRINT(EM_DIAGRAM):   end;
2021450   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2021451   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
2021452   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
2021453   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
2021454   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
2021455   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
2021456   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2021457   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2021458   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2021459   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2021460   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2021461   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2021462   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2021463   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2021464   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2021465   +END;
MPRINT(EM_DIAGRAM):   END;
2021466   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2021467   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2021468   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2021469   +END;
MPRINT(EM_DIAGRAM):   END;
2021470   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2021471   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2021472   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2021473   +END;
MPRINT(EM_DIAGRAM):   END;
2021474   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2021475   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2021476   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2021477   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2021478   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2021479   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2021480   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2021481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021482   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2021483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021484   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2021485   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2021486   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2021487   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2021488   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2021489   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2021490   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2021491   +END;
MPRINT(EM_DIAGRAM):   END;
2021492   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2021493   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2021494   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2021495   +drop
2021496   +H11
2021497   +H12
2021498   +H13
2021499   +H14
2021500   +H15
2021501   +H16
2021502   +H17
2021503   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2021504   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2021505   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
2021506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021507   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
2021508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021509   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
2021510   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
2021511   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
2021512   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
2021513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021514   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
2021515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021516   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
2021517   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
2021518   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
2021519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021520   +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
2021521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021523   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2021524   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2021525   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
2021526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2021527   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2021528   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2021529   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2021530   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2021531   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2021532   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2021533   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2021534   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2021535   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2021536   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2021537   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2021538   +LENGTH _WARN_ $4
2021539   +      F_DepVar  $ 12
2021540   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2021541   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2021542   +
2021543   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2021544   +
2021545   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2021546   +
2021547   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2021548   +
2021549   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2021550   +
2021551   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2021552   +
2021553   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2021554   +
2021555   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2021556   +
2021557   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2021558   +
2021559   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2021560   +
2021561   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2021562   +
2021563   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2021564   +
2021565   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2021566   +
2021567   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2021568   +
2021569   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2021570   +
2021571   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2021572   +
2021573   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2021574   +
2021575   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2021576   +
2021577   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2021578   +
2021579   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2021580   +
2021581   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2021582   +
2021583   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2021584   +
2021585   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2021586   +
2021587   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2021588   +
2021589   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2021590   +
2021591   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2021592   +
2021593   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2021594   +
2021595   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2021596   +
2021597   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2021598   +
2021599   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2021600   +
2021601   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2021602   +
2021603   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2021604   +
2021605   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2021606   +
2021607   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2021608   +
2021609   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2021610   +
2021611   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2021612   +
2021613   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2021614   +
2021615   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2021616   +
2021617   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2021618   +
2021619   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2021620   +
2021621   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2021622   +
2021623   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2021624   +
2021625   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2021626   +
2021627   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2021628   +
2021629   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2021630   +
2021631   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2021632   +
2021633   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2021634   +
2021635   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2021636   +
2021637   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2021638   +
2021639   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2021640   +
2021641   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2021642   +
2021643   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2021644   +
2021645   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2021646   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2021647   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2021648   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2021649   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021651   +end;
MPRINT(EM_DIAGRAM):   end;
2021652   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021653   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021654   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2021655   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021656   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2021657   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2021658   +   end;
MPRINT(EM_DIAGRAM):   end;
2021659   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2021660   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2021661   +   end;
MPRINT(EM_DIAGRAM):   end;
2021662   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021663   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2021664   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021665   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021666   +   end;
MPRINT(EM_DIAGRAM):   end;
2021667   +end;
MPRINT(EM_DIAGRAM):   end;
2021668   +
2021669   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2021670   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2021671   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2021672   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2021673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021675   +end;
MPRINT(EM_DIAGRAM):   end;
2021676   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021677   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021678   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2021679   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021680   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2021681   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2021682   +   end;
MPRINT(EM_DIAGRAM):   end;
2021683   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2021684   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2021685   +   end;
MPRINT(EM_DIAGRAM):   end;
2021686   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021687   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2021688   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021689   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021690   +   end;
MPRINT(EM_DIAGRAM):   end;
2021691   +end;
MPRINT(EM_DIAGRAM):   end;
2021692   +
2021693   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2021694   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2021695   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2021696   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2021697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021699   +end;
MPRINT(EM_DIAGRAM):   end;
2021700   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021701   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021702   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2021703   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021704   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2021705   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2021706   +   end;
MPRINT(EM_DIAGRAM):   end;
2021707   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2021708   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2021709   +   end;
MPRINT(EM_DIAGRAM):   end;
2021710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021711   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2021712   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021713   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021714   +   end;
MPRINT(EM_DIAGRAM):   end;
2021715   +end;
MPRINT(EM_DIAGRAM):   end;
2021716   +
2021717   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2021718   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2021719   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2021720   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2021721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021723   +end;
MPRINT(EM_DIAGRAM):   end;
2021724   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021725   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021726   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2021727   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021728   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2021729   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2021730   +   end;
MPRINT(EM_DIAGRAM):   end;
2021731   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2021732   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2021733   +   end;
MPRINT(EM_DIAGRAM):   end;
2021734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021735   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2021736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021738   +   end;
MPRINT(EM_DIAGRAM):   end;
2021739   +end;
MPRINT(EM_DIAGRAM):   end;
2021740   +
2021741   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2021742   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2021743   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2021744   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2021745   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021746   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021747   +end;
MPRINT(EM_DIAGRAM):   end;
2021748   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021749   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021750   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2021751   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021752   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2021753   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2021754   +   end;
MPRINT(EM_DIAGRAM):   end;
2021755   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2021756   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2021757   +   end;
MPRINT(EM_DIAGRAM):   end;
2021758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021759   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2021760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021762   +   end;
MPRINT(EM_DIAGRAM):   end;
2021763   +end;
MPRINT(EM_DIAGRAM):   end;
2021764   +
2021765   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2021766   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2021767   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2021768   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2021769   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021770   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021771   +end;
MPRINT(EM_DIAGRAM):   end;
2021772   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021773   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021774   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2021775   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021776   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2021777   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2021778   +   end;
MPRINT(EM_DIAGRAM):   end;
2021779   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2021780   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2021781   +   end;
MPRINT(EM_DIAGRAM):   end;
2021782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021783   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2021784   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021785   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021786   +   end;
MPRINT(EM_DIAGRAM):   end;
2021787   +end;
MPRINT(EM_DIAGRAM):   end;
2021788   +
2021789   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2021790   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2021791   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2021792   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2021793   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021795   +end;
MPRINT(EM_DIAGRAM):   end;
2021796   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021797   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2021798   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2021799   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021800   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2021801   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2021802   +   end;
MPRINT(EM_DIAGRAM):   end;
2021803   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2021804   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2021805   +   end;
MPRINT(EM_DIAGRAM):   end;
2021806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021807   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2021808   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021809   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021810   +   end;
MPRINT(EM_DIAGRAM):   end;
2021811   +end;
MPRINT(EM_DIAGRAM):   end;
2021812   +
2021813   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2021814   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2021815   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2021816   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2021817   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2021818   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2021819   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2021820   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2021821   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2021822   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2021823   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2021824   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2021825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021827   +end;
MPRINT(EM_DIAGRAM):   end;
2021828   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021829   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2021830   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2021831   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021832   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2021833   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2021834   +   end;
MPRINT(EM_DIAGRAM):   end;
2021835   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2021836   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2021837   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2021838   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2021839   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2021840   +   end;
MPRINT(EM_DIAGRAM):   end;
2021841   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2021842   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2021843   +   end;
MPRINT(EM_DIAGRAM):   end;
2021844   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2021845   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2021846   +   end;
MPRINT(EM_DIAGRAM):   end;
2021847   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2021848   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2021849   +   end;
MPRINT(EM_DIAGRAM):   end;
2021850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021851   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2021852   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2021853   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2021854   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2021855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021857   +   end;
MPRINT(EM_DIAGRAM):   end;
2021858   +end;
MPRINT(EM_DIAGRAM):   end;
2021859   +
2021860   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2021861   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2021862   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2021863   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2021864   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2021865   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2021866   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2021867   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2021868   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2021869   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2021870   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2021871   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2021872   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2021873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2021874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021875   +end;
MPRINT(EM_DIAGRAM):   end;
2021876   +else do;
MPRINT(EM_DIAGRAM):   else do;
2021877   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2021878   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2021879   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2021880   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2021881   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2021882   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2021883   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2021884   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2021885   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021886   +         end;
MPRINT(EM_DIAGRAM):   end;
2021887   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2021888   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2021889   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2021890   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021891   +            end;
MPRINT(EM_DIAGRAM):   end;
2021892   +         end;
MPRINT(EM_DIAGRAM):   end;
2021893   +      end;
MPRINT(EM_DIAGRAM):   end;
2021894   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2021895   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2021896   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2021897   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021898   +         end;
MPRINT(EM_DIAGRAM):   end;
2021899   +      end;
MPRINT(EM_DIAGRAM):   end;
2021900   +   end;
MPRINT(EM_DIAGRAM):   end;
2021901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2021902   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2021903   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2021904   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021905   +      end;
MPRINT(EM_DIAGRAM):   end;
2021906   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2021907   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2021908   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2021909   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2021910   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2021911   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2021912   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2021913   +         end;
MPRINT(EM_DIAGRAM):   end;
2021914   +      end;
MPRINT(EM_DIAGRAM):   end;
2021915   +   end;
MPRINT(EM_DIAGRAM):   end;
2021916   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2021917   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2021918   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2021919   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2021920   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2021921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2021922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021923   +   end;
MPRINT(EM_DIAGRAM):   end;
2021924   +end;
MPRINT(EM_DIAGRAM):   end;
2021925   +
2021926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021927   +*** Checking missing input Interval
2021928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2021929   +
2021930   +IF NMISS(
2021931   +   AcceptedCmpTotal ,
2021932   +   Age ,
2021933   +   Frq ,
2021934   +   Income ,
2021935   +   Kidhome ,
2021936   +   Mnt ,
2021937   +   MntFishProducts ,
2021938   +   MntFruits ,
2021939   +   MntGoldProds ,
2021940   +   MntMeatProducts ,
2021941   +   MntSweetProducts ,
2021942   +   MntWines ,
2021943   +   MonthsAsCustomer ,
2021944   +   NumCatalogPurchases ,
2021945   +   NumDealsPurchases ,
2021946   +   NumDistPurchases ,
2021947   +   NumStorePurchases ,
2021948   +   NumWebPurchases ,
2021949   +   NumWebVisitsMonth ,
2021950   +   RFMstat ,
2021951   +   RMntFrq ,
2021952   +   Recency ,
2021953   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2021954   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2021955   +
2021956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2021957   +END;
MPRINT(EM_DIAGRAM):   END;
2021958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021959   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2021960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2021961   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2021962   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2021963   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2021964   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2021965   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2021966   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2021967   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2021968   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2021969   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2021970   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2021971   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2021972   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2021973   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2021974   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2021975   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2021976   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2021977   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2021978   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2021979   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2021980   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2021981   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2021982   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2021983   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2021984   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2021985   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2021986   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2021987   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2021988   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2021989   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2021990   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2021991   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2021992   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2021993   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2021994   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2021995   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2021996   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2021997   +END;
MPRINT(EM_DIAGRAM):   END;
2021998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2021999   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2022000   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2022001   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2022002   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2022003   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2022004   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2022005   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2022006   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2022007   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2022008   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2022009   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2022010   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2022011   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2022012   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2022013   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2022014   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2022015   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2022016   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2022017   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2022018   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2022019   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2022020   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2022021   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2022022   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2022023   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2022024   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2022025   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2022026   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2022027   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2022028   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2022029   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2022030   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2022031   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2022032   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2022033   +   ELSE S_NumCatalogPurchases
2022034   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2022035   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2022036   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2022037   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2022038   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2022039   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2022040   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2022041   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2022042   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2022043   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2022044   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2022045   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2022046   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2022047   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2022048   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2022049   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2022050   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2022051   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2022052   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2022053   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2022054   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2022055   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2022056   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2022057   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2022058   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2022059   +END;
MPRINT(EM_DIAGRAM):   END;
2022060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022061   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2022062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022064   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2022065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022067   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2022068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022069   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2022070   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
2022071   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
2022072   +        S_Income  +    -0.14142658616971 * S_Kidhome
2022073   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
2022074   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
2022075   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
2022076   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
2022077   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
2022078   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
2022079   +          +     0.96837841774168 * S_NumDealsPurchases
2022080   +          +      0.2846105381881 * S_NumDistPurchases
2022081   +          +    -0.69514041792943 * S_NumStorePurchases
2022082   +          +    -0.96425407351749 * S_NumWebPurchases
2022083   +          +     0.79545449599683 * S_NumWebVisitsMonth
2022084   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
2022085   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
2022086   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
2022087   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
2022088   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
2022089   +        S_Income  +    -0.55432195959203 * S_Kidhome
2022090   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
2022091   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
2022092   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
2022093   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
2022094   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
2022095   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
2022096   +          +      0.2190184330724 * S_NumDealsPurchases
2022097   +          +    -0.01682909442896 * S_NumDistPurchases
2022098   +          +    -0.70244951048552 * S_NumStorePurchases
2022099   +          +     -0.3057457659316 * S_NumWebPurchases
2022100   +          +     0.95928538762715 * S_NumWebVisitsMonth
2022101   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
2022102   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
2022103   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
2022104   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
2022105   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
2022106   +        S_Income  +    -0.06354861159882 * S_Kidhome
2022107   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
2022108   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
2022109   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
2022110   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
2022111   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
2022112   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
2022113   +          +    -0.21394230159696 * S_NumDealsPurchases
2022114   +          +    -0.23833771124663 * S_NumDistPurchases
2022115   +          +     0.45832031017813 * S_NumStorePurchases
2022116   +          +    -0.30226952040179 * S_NumWebPurchases
2022117   +          +    -0.29796387184481 * S_NumWebVisitsMonth
2022118   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
2022119   +        S_RMntFrq  +     0.87067423045258 * S_Recency
2022120   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
2022121   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
2022122   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
2022123   +        S_Income  +    -0.04839586846715 * S_Kidhome
2022124   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
2022125   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
2022126   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
2022127   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
2022128   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
2022129   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
2022130   +          +    -0.43749647771198 * S_NumDealsPurchases
2022131   +          +     0.21263473847472 * S_NumDistPurchases
2022132   +          +     0.26102168039141 * S_NumStorePurchases
2022133   +          +     0.54921725943657 * S_NumWebPurchases
2022134   +          +    -0.75685843498122 * S_NumWebVisitsMonth
2022135   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
2022136   +        S_RMntFrq  +     0.80536256822347 * S_Recency
2022137   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
2022138   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
2022139   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
2022140   +        S_Income  +     0.71499527198653 * S_Kidhome
2022141   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
2022142   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
2022143   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
2022144   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
2022145   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
2022146   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
2022147   +          +     0.09436067776126 * S_NumDealsPurchases
2022148   +          +    -0.02824201859641 * S_NumDistPurchases
2022149   +          +    -0.06770433780564 * S_NumStorePurchases
2022150   +          +    -0.07177620319715 * S_NumWebPurchases
2022151   +          +    -0.75589979685266 * S_NumWebVisitsMonth
2022152   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
2022153   +        S_RMntFrq  +     0.94408788011429 * S_Recency
2022154   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
2022155   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
2022156   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
2022157   +        S_Income  +    -0.63474522042341 * S_Kidhome
2022158   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
2022159   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
2022160   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
2022161   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
2022162   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
2022163   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
2022164   +          +    -0.51154511343396 * S_NumDealsPurchases
2022165   +          +    -0.52422915823572 * S_NumDistPurchases
2022166   +          +     0.30305498422357 * S_NumStorePurchases
2022167   +          +     0.12197321559338 * S_NumWebPurchases
2022168   +          +    -0.10520335422769 * S_NumWebVisitsMonth
2022169   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
2022170   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
2022171   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
2022172   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
2022173   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
2022174   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
2022175   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
2022176   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
2022177   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
2022178   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
2022179   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
2022180   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
2022181   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
2022182   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
2022183   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
2022184   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
2022185   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
2022186   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
2022187   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
2022188   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
2022189   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
2022190   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
2022191   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
2022192   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
2022193   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
2022194   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
2022195   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
2022196   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
2022197   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
2022198   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
2022199   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
2022200   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
2022201   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
2022202   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
2022203   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
2022204   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
2022205   +          +     0.10234616400375 * Marital_StatusDivorced
2022206   +          +     0.27961650739075 * Marital_StatusMarried
2022207   +          +    -0.40239488723767 * Marital_StatusSingle
2022208   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
2022209   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
2022210   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
2022211   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
2022212   +          +     0.46385792428023 * Marital_StatusDivorced
2022213   +          +    -0.62344590646391 * Marital_StatusMarried
2022214   +          +     0.61767209252062 * Marital_StatusSingle
2022215   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
2022216   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
2022217   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
2022218   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
2022219   +          +    -0.07839612590836 * Marital_StatusDivorced
2022220   +          +     0.35316864062221 * Marital_StatusMarried
2022221   +          +    -0.10730136429834 * Marital_StatusSingle
2022222   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
2022223   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
2022224   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
2022225   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
2022226   +          +    -0.09942175269886 * Marital_StatusDivorced
2022227   +          +     0.24385460865335 * Marital_StatusMarried
2022228   +          +    -0.33658955096296 * Marital_StatusSingle
2022229   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
2022230   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
2022231   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
2022232   +        EducationGraduation  +     0.37352174719748 * EducationMaster
2022233   +          +    -0.08047852561096 * Marital_StatusDivorced
2022234   +          +     1.16485862694561 * Marital_StatusMarried
2022235   +          +    -0.94140251178566 * Marital_StatusSingle
2022236   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
2022237   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
2022238   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
2022239   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
2022240   +          +    -0.16621963893391 * Marital_StatusDivorced
2022241   +          +    -0.44542186297324 * Marital_StatusMarried
2022242   +          +     0.42176133228308 * Marital_StatusSingle
2022243   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
2022244   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
2022245   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
2022246   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
2022247   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
2022248   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
2022249   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
2022250   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2022251   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2022252   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2022253   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2022254   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2022255   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2022256   +END;
MPRINT(EM_DIAGRAM):   END;
2022257   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2022258   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2022259   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2022260   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2022261   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2022262   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2022263   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2022264   +END;
MPRINT(EM_DIAGRAM):   END;
2022265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022266   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2022267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022268   +
2022269   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2022270   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2022271   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2022272   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2022273   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2022274   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022275   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2022276   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2022277   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2022278   +end;
MPRINT(EM_DIAGRAM):   end;
2022279   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022280   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2022281   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2022282   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2022283   +   end;
MPRINT(EM_DIAGRAM):   end;
2022284   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2022285   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2022286   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2022287   +   end;
MPRINT(EM_DIAGRAM):   end;
2022288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022289   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2022290   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2022291   +   end;
MPRINT(EM_DIAGRAM):   end;
2022292   +end;
MPRINT(EM_DIAGRAM):   end;
2022293   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2022294   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
2022295   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
2022296   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
2022297   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
2022298   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2022299   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2022300   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2022301   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2022302   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2022303   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2022304   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2022305   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2022306   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2022307   +END;
MPRINT(EM_DIAGRAM):   END;
2022308   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2022309   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2022310   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2022311   +END;
MPRINT(EM_DIAGRAM):   END;
2022312   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2022313   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2022314   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2022315   +END;
MPRINT(EM_DIAGRAM):   END;
2022316   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2022317   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2022318   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2022319   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2022320   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2022321   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2022322   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2022323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022324   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2022325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022326   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2022327   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2022328   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2022329   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2022330   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2022331   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2022332   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2022333   +END;
MPRINT(EM_DIAGRAM):   END;
2022334   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2022335   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2022336   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2022337   +drop
2022338   +H11
2022339   +H12
2022340   +H13
2022341   +H14
2022342   +H15
2022343   +H16
2022344   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2022345   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2022346   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
2022347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022348   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
2022349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022350   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
2022351   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
2022352   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
2022353   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
2022354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022355   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
2022356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022357   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
2022358   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
2022359   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
2022360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022361   +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
2022362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022364   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2022365   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2022366   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
2022367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2022368   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2022369   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2022370   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2022371   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2022372   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2022373   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2022374   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2022375   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2022376   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2022377   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2022378   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2022379   +LENGTH _WARN_ $4
2022380   +      F_DepVar  $ 12
2022381   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2022382   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2022383   +
2022384   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2022385   +
2022386   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2022387   +
2022388   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2022389   +
2022390   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2022391   +
2022392   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2022393   +
2022394   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2022395   +
2022396   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2022397   +
2022398   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2022399   +
2022400   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2022401   +
2022402   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2022403   +
2022404   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2022405   +
2022406   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2022407   +
2022408   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2022409   +
2022410   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2022411   +
2022412   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2022413   +
2022414   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2022415   +
2022416   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2022417   +
2022418   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2022419   +
2022420   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2022421   +
2022422   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2022423   +
2022424   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2022425   +
2022426   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2022427   +
2022428   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2022429   +
2022430   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2022431   +
2022432   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2022433   +
2022434   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2022435   +
2022436   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2022437   +
2022438   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2022439   +
2022440   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2022441   +
2022442   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2022443   +
2022444   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2022445   +
2022446   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2022447   +
2022448   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2022449   +
2022450   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2022451   +
2022452   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2022453   +
2022454   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2022455   +
2022456   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2022457   +
2022458   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2022459   +
2022460   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2022461   +
2022462   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2022463   +
2022464   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2022465   +
2022466   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2022467   +
2022468   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2022469   +
2022470   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2022471   +
2022472   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2022473   +
2022474   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2022475   +
2022476   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2022477   +
2022478   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2022479   +
2022480   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2022481   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2022482   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2022483   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2022484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022486   +end;
MPRINT(EM_DIAGRAM):   end;
2022487   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022488   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022489   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2022490   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022491   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2022492   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2022493   +   end;
MPRINT(EM_DIAGRAM):   end;
2022494   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2022495   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2022496   +   end;
MPRINT(EM_DIAGRAM):   end;
2022497   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022498   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2022499   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022500   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022501   +   end;
MPRINT(EM_DIAGRAM):   end;
2022502   +end;
MPRINT(EM_DIAGRAM):   end;
2022503   +
2022504   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2022505   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2022506   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2022507   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2022508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022510   +end;
MPRINT(EM_DIAGRAM):   end;
2022511   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022513   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2022514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022515   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2022516   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2022517   +   end;
MPRINT(EM_DIAGRAM):   end;
2022518   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2022519   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2022520   +   end;
MPRINT(EM_DIAGRAM):   end;
2022521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022522   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2022523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022525   +   end;
MPRINT(EM_DIAGRAM):   end;
2022526   +end;
MPRINT(EM_DIAGRAM):   end;
2022527   +
2022528   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2022529   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2022530   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2022531   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2022532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022534   +end;
MPRINT(EM_DIAGRAM):   end;
2022535   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022537   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2022538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2022540   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2022541   +   end;
MPRINT(EM_DIAGRAM):   end;
2022542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2022543   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2022544   +   end;
MPRINT(EM_DIAGRAM):   end;
2022545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022546   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2022547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022549   +   end;
MPRINT(EM_DIAGRAM):   end;
2022550   +end;
MPRINT(EM_DIAGRAM):   end;
2022551   +
2022552   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2022553   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2022554   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2022555   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2022556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022558   +end;
MPRINT(EM_DIAGRAM):   end;
2022559   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022561   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2022562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2022564   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2022565   +   end;
MPRINT(EM_DIAGRAM):   end;
2022566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2022567   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2022568   +   end;
MPRINT(EM_DIAGRAM):   end;
2022569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022570   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2022571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022573   +   end;
MPRINT(EM_DIAGRAM):   end;
2022574   +end;
MPRINT(EM_DIAGRAM):   end;
2022575   +
2022576   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2022577   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2022578   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2022579   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2022580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022582   +end;
MPRINT(EM_DIAGRAM):   end;
2022583   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022585   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2022586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2022588   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2022589   +   end;
MPRINT(EM_DIAGRAM):   end;
2022590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2022591   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2022592   +   end;
MPRINT(EM_DIAGRAM):   end;
2022593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022594   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2022595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022597   +   end;
MPRINT(EM_DIAGRAM):   end;
2022598   +end;
MPRINT(EM_DIAGRAM):   end;
2022599   +
2022600   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2022601   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2022602   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2022603   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2022604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022606   +end;
MPRINT(EM_DIAGRAM):   end;
2022607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022609   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2022610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2022612   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2022613   +   end;
MPRINT(EM_DIAGRAM):   end;
2022614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2022615   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2022616   +   end;
MPRINT(EM_DIAGRAM):   end;
2022617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022618   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2022619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022621   +   end;
MPRINT(EM_DIAGRAM):   end;
2022622   +end;
MPRINT(EM_DIAGRAM):   end;
2022623   +
2022624   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2022625   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2022626   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2022627   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2022628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022630   +end;
MPRINT(EM_DIAGRAM):   end;
2022631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2022633   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2022634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022635   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2022636   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2022637   +   end;
MPRINT(EM_DIAGRAM):   end;
2022638   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2022639   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2022640   +   end;
MPRINT(EM_DIAGRAM):   end;
2022641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022642   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2022643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022645   +   end;
MPRINT(EM_DIAGRAM):   end;
2022646   +end;
MPRINT(EM_DIAGRAM):   end;
2022647   +
2022648   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2022649   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2022650   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2022651   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2022652   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2022653   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2022654   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2022655   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2022656   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2022657   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2022658   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2022659   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2022660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022662   +end;
MPRINT(EM_DIAGRAM):   end;
2022663   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022664   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2022665   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2022666   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022667   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2022668   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2022669   +   end;
MPRINT(EM_DIAGRAM):   end;
2022670   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2022671   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2022672   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2022673   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2022674   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2022675   +   end;
MPRINT(EM_DIAGRAM):   end;
2022676   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2022677   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2022678   +   end;
MPRINT(EM_DIAGRAM):   end;
2022679   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2022680   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2022681   +   end;
MPRINT(EM_DIAGRAM):   end;
2022682   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2022683   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2022684   +   end;
MPRINT(EM_DIAGRAM):   end;
2022685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022686   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2022687   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2022688   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2022689   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2022690   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022691   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022692   +   end;
MPRINT(EM_DIAGRAM):   end;
2022693   +end;
MPRINT(EM_DIAGRAM):   end;
2022694   +
2022695   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2022696   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2022697   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2022698   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2022699   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2022700   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2022701   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2022702   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2022703   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2022704   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2022705   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2022706   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2022707   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2022708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2022709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022710   +end;
MPRINT(EM_DIAGRAM):   end;
2022711   +else do;
MPRINT(EM_DIAGRAM):   else do;
2022712   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2022713   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2022714   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2022715   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2022716   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2022717   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2022718   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2022719   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2022720   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2022721   +         end;
MPRINT(EM_DIAGRAM):   end;
2022722   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2022723   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2022724   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2022725   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2022726   +            end;
MPRINT(EM_DIAGRAM):   end;
2022727   +         end;
MPRINT(EM_DIAGRAM):   end;
2022728   +      end;
MPRINT(EM_DIAGRAM):   end;
2022729   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2022730   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2022731   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2022732   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2022733   +         end;
MPRINT(EM_DIAGRAM):   end;
2022734   +      end;
MPRINT(EM_DIAGRAM):   end;
2022735   +   end;
MPRINT(EM_DIAGRAM):   end;
2022736   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2022737   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2022738   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2022739   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2022740   +      end;
MPRINT(EM_DIAGRAM):   end;
2022741   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2022742   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2022743   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2022744   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2022745   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2022746   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2022747   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2022748   +         end;
MPRINT(EM_DIAGRAM):   end;
2022749   +      end;
MPRINT(EM_DIAGRAM):   end;
2022750   +   end;
MPRINT(EM_DIAGRAM):   end;
2022751   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2022752   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2022753   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2022754   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2022755   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2022756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2022757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022758   +   end;
MPRINT(EM_DIAGRAM):   end;
2022759   +end;
MPRINT(EM_DIAGRAM):   end;
2022760   +
2022761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022762   +*** Checking missing input Interval
2022763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2022764   +
2022765   +IF NMISS(
2022766   +   AcceptedCmpTotal ,
2022767   +   Age ,
2022768   +   Frq ,
2022769   +   Income ,
2022770   +   Kidhome ,
2022771   +   Mnt ,
2022772   +   MntFishProducts ,
2022773   +   MntFruits ,
2022774   +   MntGoldProds ,
2022775   +   MntMeatProducts ,
2022776   +   MntSweetProducts ,
2022777   +   MntWines ,
2022778   +   MonthsAsCustomer ,
2022779   +   NumCatalogPurchases ,
2022780   +   NumDealsPurchases ,
2022781   +   NumDistPurchases ,
2022782   +   NumStorePurchases ,
2022783   +   NumWebPurchases ,
2022784   +   NumWebVisitsMonth ,
2022785   +   RFMstat ,
2022786   +   RMntFrq ,
2022787   +   Recency ,
2022788   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2022789   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2022790   +
2022791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2022792   +END;
MPRINT(EM_DIAGRAM):   END;
2022793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022794   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2022795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022796   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2022797   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2022798   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2022799   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2022800   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2022801   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2022802   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2022803   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2022804   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2022805   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2022806   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2022807   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2022808   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2022809   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2022810   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2022811   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2022812   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2022813   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2022814   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2022815   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2022816   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2022817   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2022818   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2022819   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2022820   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2022821   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2022822   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2022823   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2022824   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2022825   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2022826   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2022827   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2022828   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2022829   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2022830   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2022831   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2022832   +END;
MPRINT(EM_DIAGRAM):   END;
2022833   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2022834   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2022835   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2022836   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2022837   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2022838   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2022839   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2022840   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2022841   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2022842   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2022843   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2022844   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2022845   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2022846   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2022847   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2022848   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2022849   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2022850   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2022851   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2022852   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2022853   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2022854   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2022855   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2022856   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2022857   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2022858   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2022859   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2022860   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2022861   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2022862   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2022863   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2022864   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2022865   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2022866   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2022867   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2022868   +   ELSE S_NumCatalogPurchases
2022869   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2022870   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2022871   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2022872   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2022873   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2022874   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2022875   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2022876   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2022877   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2022878   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2022879   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2022880   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2022881   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2022882   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2022883   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2022884   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2022885   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2022886   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2022887   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2022888   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2022889   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2022890   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2022891   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2022892   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2022893   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2022894   +END;
MPRINT(EM_DIAGRAM):   END;
2022895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022896   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2022897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022899   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2022900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022902   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2022903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2022904   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2022905   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
2022906   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
2022907   +        S_Income  +     0.51123266106809 * S_Kidhome
2022908   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
2022909   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
2022910   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
2022911   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
2022912   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
2022913   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
2022914   +          +     1.34095732961105 * S_NumDealsPurchases
2022915   +          +     0.16605991333252 * S_NumDistPurchases
2022916   +          +    -0.61746267736536 * S_NumStorePurchases
2022917   +          +    -0.61812800689506 * S_NumWebPurchases
2022918   +          +     1.44649145055387 * S_NumWebVisitsMonth
2022919   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
2022920   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
2022921   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
2022922   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
2022923   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
2022924   +        S_Income  +     0.52295323651199 * S_Kidhome
2022925   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
2022926   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
2022927   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
2022928   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
2022929   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
2022930   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
2022931   +          +    -0.72543332317832 * S_NumDealsPurchases
2022932   +          +    -0.05245472565117 * S_NumDistPurchases
2022933   +          +     1.00667431585298 * S_NumStorePurchases
2022934   +          +     1.02836701470962 * S_NumWebPurchases
2022935   +          +    -1.25666606219201 * S_NumWebVisitsMonth
2022936   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
2022937   +        S_RMntFrq  +     1.50910531484632 * S_Recency
2022938   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
2022939   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
2022940   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
2022941   +        S_Income  +     0.58025720116696 * S_Kidhome
2022942   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
2022943   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
2022944   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
2022945   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
2022946   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
2022947   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
2022948   +          +     0.12670438262487 * S_NumDealsPurchases
2022949   +          +    -0.46113523834333 * S_NumDistPurchases
2022950   +          +     0.07074818720567 * S_NumStorePurchases
2022951   +          +    -0.05066645783537 * S_NumWebPurchases
2022952   +          +    -0.65729410185804 * S_NumWebVisitsMonth
2022953   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
2022954   +        S_RMntFrq  +      1.4337242246086 * S_Recency
2022955   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
2022956   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
2022957   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
2022958   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
2022959   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
2022960   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
2022961   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
2022962   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
2022963   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
2022964   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
2022965   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
2022966   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
2022967   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
2022968   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
2022969   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
2022970   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
2022971   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
2022972   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
2022973   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
2022974   +          +     0.12692950862511 * Marital_StatusDivorced
2022975   +          +     0.10026497666167 * Marital_StatusMarried
2022976   +          +    -0.19893864592813 * Marital_StatusSingle
2022977   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
2022978   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
2022979   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
2022980   +        EducationGraduation  +     0.05580498138108 * EducationMaster
2022981   +          +    -0.16785192490199 * Marital_StatusDivorced
2022982   +          +     0.13153695130362 * Marital_StatusMarried
2022983   +          +    -0.50411544587104 * Marital_StatusSingle
2022984   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
2022985   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
2022986   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
2022987   +        EducationGraduation  +     0.21882736952662 * EducationMaster
2022988   +          +    -0.62654958087044 * Marital_StatusDivorced
2022989   +          +     1.86250132393341 * Marital_StatusMarried
2022990   +          +    -1.37067556451928 * Marital_StatusSingle
2022991   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
2022992   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
2022993   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
2022994   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
2022995   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2022996   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2022997   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2022998   +END;
MPRINT(EM_DIAGRAM):   END;
2022999   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2023000   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2023001   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2023002   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2023003   +END;
MPRINT(EM_DIAGRAM):   END;
2023004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023005   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2023006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023007   +
2023008   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2023009   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2023010   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2023011   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2023012   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2023013   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023014   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2023015   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2023016   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2023017   +end;
MPRINT(EM_DIAGRAM):   end;
2023018   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023019   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2023020   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2023021   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2023022   +   end;
MPRINT(EM_DIAGRAM):   end;
2023023   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2023024   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2023025   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2023026   +   end;
MPRINT(EM_DIAGRAM):   end;
2023027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023028   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2023029   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2023030   +   end;
MPRINT(EM_DIAGRAM):   end;
2023031   +end;
MPRINT(EM_DIAGRAM):   end;
2023032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2023033   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
2023034   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
2023035   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
2023036   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2023037   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2023038   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2023039   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2023040   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2023041   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2023042   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2023043   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2023044   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2023045   +END;
MPRINT(EM_DIAGRAM):   END;
The SAS System

2023046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2023047   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2023048   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2023049   +END;
MPRINT(EM_DIAGRAM):   END;
2023050   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2023051   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2023052   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2023053   +END;
MPRINT(EM_DIAGRAM):   END;
2023054   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2023055   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2023056   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2023057   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2023058   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2023059   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2023060   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2023061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023062   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2023063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023064   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2023065   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2023066   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2023067   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2023068   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2023069   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2023070   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2023071   +END;
MPRINT(EM_DIAGRAM):   END;
2023072   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2023073   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2023074   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2023075   +drop
2023076   +H11
2023077   +H12
2023078   +H13
2023079   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2023080   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2023081   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
2023082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023083   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
2023084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023085   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
2023086   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
2023087   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
2023088   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
2023089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023090   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
2023091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023092   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
2023093   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
2023094   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
2023095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023096   +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
2023097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023099   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2023100   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2023101   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
2023102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023103   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2023104   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2023105   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2023106   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2023107   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2023108   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2023109   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2023110   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2023111   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2023112   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2023113   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2023114   +LENGTH _WARN_ $4
2023115   +      F_DepVar  $ 12
2023116   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2023117   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2023118   +
2023119   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2023120   +
2023121   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2023122   +
2023123   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2023124   +
2023125   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2023126   +
2023127   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2023128   +
2023129   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2023130   +
2023131   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2023132   +
2023133   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2023134   +
2023135   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2023136   +
2023137   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2023138   +
2023139   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2023140   +
2023141   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2023142   +
2023143   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2023144   +
2023145   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2023146   +
2023147   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2023148   +
2023149   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2023150   +
2023151   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2023152   +
2023153   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2023154   +
2023155   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2023156   +
2023157   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2023158   +
2023159   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2023160   +
2023161   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2023162   +
2023163   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2023164   +
2023165   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2023166   +
2023167   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2023168   +
2023169   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2023170   +
2023171   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2023172   +
2023173   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2023174   +
2023175   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2023176   +
2023177   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2023178   +
2023179   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2023180   +
2023181   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2023182   +
2023183   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2023184   +
2023185   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2023186   +
2023187   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2023188   +
2023189   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2023190   +
2023191   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2023192   +
2023193   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2023194   +
2023195   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2023196   +
2023197   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2023198   +
2023199   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2023200   +
2023201   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2023202   +
2023203   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2023204   +
2023205   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2023206   +
2023207   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2023208   +
2023209   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2023210   +
2023211   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2023212   +
2023213   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2023214   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2023215   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2023216   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2023217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023219   +end;
MPRINT(EM_DIAGRAM):   end;
2023220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023222   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2023223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023225   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2023226   +   end;
MPRINT(EM_DIAGRAM):   end;
2023227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023228   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2023229   +   end;
MPRINT(EM_DIAGRAM):   end;
2023230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023231   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2023232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023234   +   end;
MPRINT(EM_DIAGRAM):   end;
2023235   +end;
MPRINT(EM_DIAGRAM):   end;
2023236   +
2023237   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2023238   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2023239   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2023240   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2023241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023243   +end;
MPRINT(EM_DIAGRAM):   end;
2023244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023246   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2023247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023249   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2023250   +   end;
MPRINT(EM_DIAGRAM):   end;
2023251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023252   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2023253   +   end;
MPRINT(EM_DIAGRAM):   end;
2023254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023255   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2023256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023258   +   end;
MPRINT(EM_DIAGRAM):   end;
2023259   +end;
MPRINT(EM_DIAGRAM):   end;
2023260   +
2023261   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2023262   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2023263   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2023264   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2023265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023267   +end;
MPRINT(EM_DIAGRAM):   end;
2023268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023270   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2023271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023272   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023273   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2023274   +   end;
MPRINT(EM_DIAGRAM):   end;
2023275   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023276   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2023277   +   end;
MPRINT(EM_DIAGRAM):   end;
2023278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023279   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2023280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023282   +   end;
MPRINT(EM_DIAGRAM):   end;
2023283   +end;
MPRINT(EM_DIAGRAM):   end;
2023284   +
2023285   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2023286   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2023287   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2023288   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2023289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023291   +end;
MPRINT(EM_DIAGRAM):   end;
2023292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023294   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2023295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023296   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023297   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2023298   +   end;
MPRINT(EM_DIAGRAM):   end;
2023299   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023300   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2023301   +   end;
MPRINT(EM_DIAGRAM):   end;
2023302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023303   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2023304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023306   +   end;
MPRINT(EM_DIAGRAM):   end;
2023307   +end;
MPRINT(EM_DIAGRAM):   end;
2023308   +
2023309   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2023310   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2023311   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2023312   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2023313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023315   +end;
MPRINT(EM_DIAGRAM):   end;
2023316   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023317   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023318   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2023319   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023320   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023321   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2023322   +   end;
MPRINT(EM_DIAGRAM):   end;
2023323   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023324   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2023325   +   end;
MPRINT(EM_DIAGRAM):   end;
2023326   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023327   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2023328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023330   +   end;
MPRINT(EM_DIAGRAM):   end;
2023331   +end;
MPRINT(EM_DIAGRAM):   end;
2023332   +
2023333   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2023334   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2023335   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2023336   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2023337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023339   +end;
MPRINT(EM_DIAGRAM):   end;
2023340   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023341   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023342   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2023343   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023344   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023345   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2023346   +   end;
MPRINT(EM_DIAGRAM):   end;
2023347   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023348   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2023349   +   end;
MPRINT(EM_DIAGRAM):   end;
2023350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023351   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2023352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023354   +   end;
MPRINT(EM_DIAGRAM):   end;
2023355   +end;
MPRINT(EM_DIAGRAM):   end;
2023356   +
2023357   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2023358   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2023359   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2023360   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2023361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023363   +end;
MPRINT(EM_DIAGRAM):   end;
2023364   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023366   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2023367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023368   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2023369   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2023370   +   end;
MPRINT(EM_DIAGRAM):   end;
2023371   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2023372   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2023373   +   end;
MPRINT(EM_DIAGRAM):   end;
2023374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023375   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2023376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023378   +   end;
MPRINT(EM_DIAGRAM):   end;
2023379   +end;
MPRINT(EM_DIAGRAM):   end;
2023380   +
2023381   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2023382   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2023383   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2023384   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2023385   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2023386   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2023387   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2023388   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2023389   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2023390   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2023391   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2023392   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2023393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023395   +end;
MPRINT(EM_DIAGRAM):   end;
2023396   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023397   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2023398   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2023399   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023400   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2023401   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2023402   +   end;
MPRINT(EM_DIAGRAM):   end;
2023403   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2023404   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2023405   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2023406   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2023407   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2023408   +   end;
MPRINT(EM_DIAGRAM):   end;
2023409   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2023410   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2023411   +   end;
MPRINT(EM_DIAGRAM):   end;
2023412   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2023413   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2023414   +   end;
MPRINT(EM_DIAGRAM):   end;
2023415   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2023416   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2023417   +   end;
MPRINT(EM_DIAGRAM):   end;
2023418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023419   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2023420   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2023421   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2023422   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2023423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023425   +   end;
MPRINT(EM_DIAGRAM):   end;
2023426   +end;
MPRINT(EM_DIAGRAM):   end;
2023427   +
2023428   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2023429   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2023430   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2023431   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2023432   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2023433   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2023434   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2023435   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2023436   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2023437   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2023438   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2023439   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2023440   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2023441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023443   +end;
MPRINT(EM_DIAGRAM):   end;
2023444   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023445   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2023446   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2023447   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023448   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2023449   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2023450   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2023451   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2023452   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2023453   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2023454   +         end;
MPRINT(EM_DIAGRAM):   end;
2023455   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2023456   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2023457   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2023458   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2023459   +            end;
MPRINT(EM_DIAGRAM):   end;
2023460   +         end;
MPRINT(EM_DIAGRAM):   end;
2023461   +      end;
MPRINT(EM_DIAGRAM):   end;
2023462   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2023463   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2023464   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2023465   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2023466   +         end;
MPRINT(EM_DIAGRAM):   end;
2023467   +      end;
MPRINT(EM_DIAGRAM):   end;
2023468   +   end;
MPRINT(EM_DIAGRAM):   end;
2023469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023470   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2023471   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2023472   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2023473   +      end;
MPRINT(EM_DIAGRAM):   end;
2023474   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2023475   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2023476   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2023477   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2023478   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2023479   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2023480   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2023481   +         end;
MPRINT(EM_DIAGRAM):   end;
2023482   +      end;
MPRINT(EM_DIAGRAM):   end;
2023483   +   end;
MPRINT(EM_DIAGRAM):   end;
2023484   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2023485   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2023486   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2023487   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2023488   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2023489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023491   +   end;
MPRINT(EM_DIAGRAM):   end;
2023492   +end;
MPRINT(EM_DIAGRAM):   end;
2023493   +
2023494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023495   +*** Checking missing input Interval
2023496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2023497   +
2023498   +IF NMISS(
2023499   +   AcceptedCmpTotal ,
2023500   +   Age ,
2023501   +   Frq ,
2023502   +   Income ,
2023503   +   Kidhome ,
2023504   +   Mnt ,
2023505   +   MntFishProducts ,
2023506   +   MntFruits ,
2023507   +   MntGoldProds ,
2023508   +   MntMeatProducts ,
2023509   +   MntSweetProducts ,
2023510   +   MntWines ,
2023511   +   MonthsAsCustomer ,
2023512   +   NumCatalogPurchases ,
2023513   +   NumDealsPurchases ,
2023514   +   NumDistPurchases ,
2023515   +   NumStorePurchases ,
2023516   +   NumWebPurchases ,
2023517   +   NumWebVisitsMonth ,
2023518   +   RFMstat ,
2023519   +   RMntFrq ,
2023520   +   Recency ,
2023521   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2023522   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2023523   +
2023524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023525   +END;
MPRINT(EM_DIAGRAM):   END;
2023526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023527   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2023528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023529   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2023530   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2023531   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2023532   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2023533   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2023534   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2023535   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2023536   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2023537   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2023538   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2023539   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2023540   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2023541   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2023542   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2023543   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2023544   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2023545   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2023546   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2023547   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2023548   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2023549   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2023550   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2023551   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2023552   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2023553   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2023554   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2023555   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2023556   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2023557   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2023558   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2023559   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2023560   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2023561   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2023562   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2023563   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2023564   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2023565   +END;
MPRINT(EM_DIAGRAM):   END;
2023566   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2023567   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2023568   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2023569   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2023570   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2023571   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2023572   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2023573   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2023574   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2023575   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2023576   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2023577   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2023578   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2023579   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2023580   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2023581   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2023582   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2023583   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2023584   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2023585   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2023586   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2023587   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2023588   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2023589   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2023590   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2023591   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2023592   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2023593   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2023594   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2023595   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2023596   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2023597   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2023598   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2023599   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2023600   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2023601   +   ELSE S_NumCatalogPurchases
2023602   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2023603   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2023604   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2023605   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2023606   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2023607   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2023608   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2023609   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2023610   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2023611   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2023612   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2023613   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2023614   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2023615   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2023616   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2023617   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2023618   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2023619   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2023620   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2023621   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2023622   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2023623   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2023624   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2023625   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2023626   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2023627   +END;
MPRINT(EM_DIAGRAM):   END;
2023628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023629   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2023630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023632   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2023633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023635   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2023636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023637   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2023638   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
2023639   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
2023640   +        S_Income  +    -1.07615700855274 * S_Kidhome
2023641   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
2023642   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
2023643   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
2023644   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
2023645   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
2023646   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
2023647   +          +      0.3429043319369 * S_NumDealsPurchases
2023648   +          +     0.71313309767469 * S_NumDistPurchases
2023649   +          +     0.06017757740083 * S_NumStorePurchases
2023650   +          +    -0.19817724925068 * S_NumWebPurchases
2023651   +          +     1.34164122205952 * S_NumWebVisitsMonth
2023652   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
2023653   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
2023654   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
2023655   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
2023656   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
2023657   +        S_Income  +     -0.0027232441092 * S_Kidhome
2023658   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
2023659   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
2023660   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
2023661   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
2023662   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
2023663   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
2023664   +          +      0.4576973746858 * S_NumDealsPurchases
2023665   +          +     0.15590877272659 * S_NumDistPurchases
2023666   +          +    -0.33414539713736 * S_NumStorePurchases
2023667   +          +    -0.39370244666257 * S_NumWebPurchases
2023668   +          +     0.52596714886704 * S_NumWebVisitsMonth
2023669   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
2023670   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
2023671   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
2023672   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
2023673   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
2023674   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
2023675   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
2023676   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
2023677   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
2023678   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
2023679   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
2023680   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
2023681   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
2023682   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
2023683   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
2023684   +        EducationGraduation  +      -0.333138438339 * EducationMaster
2023685   +          +      0.4663802937397 * Marital_StatusDivorced
2023686   +          +    -1.27401898796099 * Marital_StatusMarried
2023687   +          +      1.3125969368079 * Marital_StatusSingle
2023688   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
2023689   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
2023690   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
2023691   +        EducationGraduation  +     0.00771527138053 * EducationMaster
2023692   +          +     0.07419179522004 * Marital_StatusDivorced
2023693   +          +     0.00234615813337 * Marital_StatusMarried
2023694   +          +    -0.00725460458412 * Marital_StatusSingle
2023695   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
2023696   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
2023697   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
2023698   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2023699   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2023700   +END;
MPRINT(EM_DIAGRAM):   END;
2023701   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2023702   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2023703   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2023704   +END;
MPRINT(EM_DIAGRAM):   END;
2023705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023706   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2023707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023708   +
2023709   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2023710   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2023711   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2023712   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2023713   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2023714   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023715   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2023716   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2023717   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2023718   +end;
MPRINT(EM_DIAGRAM):   end;
2023719   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023720   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2023721   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2023722   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2023723   +   end;
MPRINT(EM_DIAGRAM):   end;
2023724   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2023725   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2023726   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2023727   +   end;
MPRINT(EM_DIAGRAM):   end;
2023728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023729   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2023730   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2023731   +   end;
MPRINT(EM_DIAGRAM):   end;
2023732   +end;
MPRINT(EM_DIAGRAM):   end;
2023733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2023734   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
2023735   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
2023736   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2023737   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2023738   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2023739   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2023740   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2023741   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2023742   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2023743   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2023744   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2023745   +END;
MPRINT(EM_DIAGRAM):   END;
2023746   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2023747   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2023748   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2023749   +END;
MPRINT(EM_DIAGRAM):   END;
2023750   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2023751   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2023752   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2023753   +END;
MPRINT(EM_DIAGRAM):   END;
2023754   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2023755   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2023756   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2023757   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2023758   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2023759   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2023760   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2023761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023762   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2023763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2023764   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2023765   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2023766   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2023767   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2023768   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2023769   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2023770   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2023771   +END;
MPRINT(EM_DIAGRAM):   END;
2023772   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2023773   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2023774   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2023775   +drop
2023776   +H11
2023777   +H12
2023778   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2023779   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2023780   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
2023781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023782   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
2023783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023784   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
2023785   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
2023786   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
2023787   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
2023788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023789   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
2023790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023791   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
2023792   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
2023793   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
2023794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023795   +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
2023796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023798   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2023799   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2023800   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
2023801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2023802   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2023803   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2023804   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2023805   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2023806   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2023807   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2023808   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2023809   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2023810   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2023811   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2023812   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2023813   +LENGTH _WARN_ $4
2023814   +      F_DepVar  $ 12
2023815   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2023816   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2023817   +
2023818   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2023819   +
2023820   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2023821   +
2023822   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2023823   +
2023824   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2023825   +
2023826   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2023827   +
2023828   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2023829   +
2023830   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2023831   +
2023832   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2023833   +
2023834   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2023835   +
2023836   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2023837   +
2023838   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2023839   +
2023840   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2023841   +
2023842   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2023843   +
2023844   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2023845   +
2023846   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2023847   +
2023848   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2023849   +
2023850   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2023851   +
2023852   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2023853   +
2023854   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2023855   +
2023856   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2023857   +
2023858   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2023859   +
2023860   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2023861   +
2023862   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2023863   +
2023864   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2023865   +
2023866   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2023867   +
2023868   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2023869   +
2023870   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2023871   +
2023872   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2023873   +
2023874   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2023875   +
2023876   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2023877   +
2023878   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2023879   +
2023880   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2023881   +
2023882   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2023883   +
2023884   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2023885   +
2023886   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2023887   +
2023888   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2023889   +
2023890   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2023891   +
2023892   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2023893   +
2023894   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2023895   +
2023896   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2023897   +
2023898   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2023899   +
2023900   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2023901   +
2023902   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2023903   +
2023904   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2023905   +
2023906   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2023907   +
2023908   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2023909   +
2023910   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2023911   +
2023912   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2023913   +
2023914   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2023915   +
2023916   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2023917   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2023918   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2023919   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2023920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023922   +end;
MPRINT(EM_DIAGRAM):   end;
2023923   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023925   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2023926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023928   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2023929   +   end;
MPRINT(EM_DIAGRAM):   end;
2023930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023931   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2023932   +   end;
MPRINT(EM_DIAGRAM):   end;
2023933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023934   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2023935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023937   +   end;
MPRINT(EM_DIAGRAM):   end;
2023938   +end;
MPRINT(EM_DIAGRAM):   end;
2023939   +
2023940   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2023941   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2023942   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2023943   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2023944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023946   +end;
MPRINT(EM_DIAGRAM):   end;
2023947   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023949   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2023950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023952   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2023953   +   end;
MPRINT(EM_DIAGRAM):   end;
2023954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023955   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2023956   +   end;
MPRINT(EM_DIAGRAM):   end;
2023957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023958   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2023959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023961   +   end;
MPRINT(EM_DIAGRAM):   end;
2023962   +end;
MPRINT(EM_DIAGRAM):   end;
2023963   +
2023964   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2023965   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2023966   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2023967   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2023968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023970   +end;
MPRINT(EM_DIAGRAM):   end;
2023971   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023973   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2023974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2023976   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2023977   +   end;
MPRINT(EM_DIAGRAM):   end;
2023978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2023979   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2023980   +   end;
MPRINT(EM_DIAGRAM):   end;
2023981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2023982   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2023983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2023984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023985   +   end;
MPRINT(EM_DIAGRAM):   end;
2023986   +end;
MPRINT(EM_DIAGRAM):   end;
2023987   +
2023988   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2023989   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2023990   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2023991   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2023992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2023993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2023994   +end;
MPRINT(EM_DIAGRAM):   end;
2023995   +else do;
MPRINT(EM_DIAGRAM):   else do;
2023996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2023997   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2023998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2023999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2024000   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2024001   +   end;
MPRINT(EM_DIAGRAM):   end;
2024002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2024003   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2024004   +   end;
MPRINT(EM_DIAGRAM):   end;
2024005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024006   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2024007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024009   +   end;
MPRINT(EM_DIAGRAM):   end;
2024010   +end;
MPRINT(EM_DIAGRAM):   end;
2024011   +
2024012   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2024013   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2024014   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2024015   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2024016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024018   +end;
MPRINT(EM_DIAGRAM):   end;
2024019   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2024021   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2024022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2024024   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2024025   +   end;
MPRINT(EM_DIAGRAM):   end;
2024026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2024027   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2024028   +   end;
MPRINT(EM_DIAGRAM):   end;
2024029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024030   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2024031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024033   +   end;
MPRINT(EM_DIAGRAM):   end;
2024034   +end;
MPRINT(EM_DIAGRAM):   end;
2024035   +
2024036   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2024037   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2024038   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2024039   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2024040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024042   +end;
MPRINT(EM_DIAGRAM):   end;
2024043   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2024045   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2024046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024047   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2024048   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2024049   +   end;
MPRINT(EM_DIAGRAM):   end;
2024050   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2024051   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2024052   +   end;
MPRINT(EM_DIAGRAM):   end;
2024053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024054   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2024055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024057   +   end;
MPRINT(EM_DIAGRAM):   end;
2024058   +end;
MPRINT(EM_DIAGRAM):   end;
2024059   +
2024060   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2024061   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2024062   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2024063   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2024064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024066   +end;
MPRINT(EM_DIAGRAM):   end;
2024067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2024069   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2024070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024071   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2024072   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2024073   +   end;
MPRINT(EM_DIAGRAM):   end;
2024074   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2024075   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2024076   +   end;
MPRINT(EM_DIAGRAM):   end;
2024077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024078   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2024079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024081   +   end;
MPRINT(EM_DIAGRAM):   end;
2024082   +end;
MPRINT(EM_DIAGRAM):   end;
2024083   +
2024084   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2024085   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2024086   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2024087   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2024088   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2024089   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2024090   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2024091   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2024092   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2024093   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2024094   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2024095   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2024096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024098   +end;
MPRINT(EM_DIAGRAM):   end;
2024099   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024100   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2024101   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2024102   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024103   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2024104   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2024105   +   end;
MPRINT(EM_DIAGRAM):   end;
2024106   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2024107   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2024108   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2024109   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2024110   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2024111   +   end;
MPRINT(EM_DIAGRAM):   end;
2024112   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2024113   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2024114   +   end;
MPRINT(EM_DIAGRAM):   end;
2024115   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2024116   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2024117   +   end;
MPRINT(EM_DIAGRAM):   end;
2024118   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2024119   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2024120   +   end;
MPRINT(EM_DIAGRAM):   end;
2024121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024122   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2024123   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2024124   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2024125   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2024126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024128   +   end;
MPRINT(EM_DIAGRAM):   end;
2024129   +end;
MPRINT(EM_DIAGRAM):   end;
2024130   +
2024131   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2024132   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2024133   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2024134   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2024135   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2024136   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2024137   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2024138   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2024139   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2024140   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2024141   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2024142   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2024143   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2024144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024146   +end;
MPRINT(EM_DIAGRAM):   end;
2024147   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024148   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2024149   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2024150   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024151   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2024152   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2024153   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2024154   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2024155   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2024156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024157   +         end;
MPRINT(EM_DIAGRAM):   end;
2024158   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2024159   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2024160   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2024161   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024162   +            end;
MPRINT(EM_DIAGRAM):   end;
2024163   +         end;
MPRINT(EM_DIAGRAM):   end;
2024164   +      end;
MPRINT(EM_DIAGRAM):   end;
2024165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2024166   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2024167   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2024168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024169   +         end;
MPRINT(EM_DIAGRAM):   end;
2024170   +      end;
MPRINT(EM_DIAGRAM):   end;
2024171   +   end;
MPRINT(EM_DIAGRAM):   end;
2024172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024173   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2024174   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2024175   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024176   +      end;
MPRINT(EM_DIAGRAM):   end;
2024177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2024178   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2024179   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2024180   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2024181   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2024182   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2024183   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024184   +         end;
MPRINT(EM_DIAGRAM):   end;
2024185   +      end;
MPRINT(EM_DIAGRAM):   end;
2024186   +   end;
MPRINT(EM_DIAGRAM):   end;
2024187   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2024188   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2024189   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2024190   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2024191   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2024192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024194   +   end;
MPRINT(EM_DIAGRAM):   end;
2024195   +end;
MPRINT(EM_DIAGRAM):   end;
2024196   +
2024197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024198   +*** Checking missing input Interval
2024199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2024200   +
2024201   +IF NMISS(
2024202   +   AcceptedCmpTotal ,
2024203   +   Age ,
2024204   +   Frq ,
2024205   +   Income ,
2024206   +   Kidhome ,
2024207   +   Mnt ,
2024208   +   MntFishProducts ,
2024209   +   MntFruits ,
2024210   +   MntGoldProds ,
2024211   +   MntMeatProducts ,
2024212   +   MntSweetProducts ,
2024213   +   MntWines ,
2024214   +   MonthsAsCustomer ,
2024215   +   NumCatalogPurchases ,
2024216   +   NumDealsPurchases ,
2024217   +   NumDistPurchases ,
2024218   +   NumStorePurchases ,
2024219   +   NumWebPurchases ,
2024220   +   NumWebVisitsMonth ,
2024221   +   RFMstat ,
2024222   +   RMntFrq ,
2024223   +   Recency ,
2024224   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2024225   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2024226   +
2024227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024228   +END;
MPRINT(EM_DIAGRAM):   END;
2024229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024230   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2024231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024232   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2024233   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2024234   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2024235   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2024236   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2024237   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2024238   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2024239   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2024240   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2024241   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2024242   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2024243   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2024244   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2024245   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2024246   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2024247   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2024248   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2024249   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2024250   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2024251   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2024252   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2024253   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2024254   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2024255   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2024256   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2024257   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2024258   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2024259   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2024260   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2024261   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2024262   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2024263   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2024264   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2024265   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2024266   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2024267   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2024268   +END;
MPRINT(EM_DIAGRAM):   END;
2024269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2024270   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2024271   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2024272   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2024273   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2024274   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2024275   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2024276   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2024277   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2024278   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2024279   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2024280   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2024281   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2024282   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2024283   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2024284   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2024285   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2024286   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2024287   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2024288   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2024289   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2024290   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2024291   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2024292   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2024293   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2024294   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2024295   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2024296   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2024297   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2024298   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2024299   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2024300   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2024301   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2024302   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2024303   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2024304   +   ELSE S_NumCatalogPurchases
2024305   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2024306   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2024307   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2024308   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2024309   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2024310   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2024311   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2024312   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2024313   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2024314   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2024315   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2024316   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2024317   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2024318   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2024319   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2024320   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2024321   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2024322   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2024323   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2024324   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2024325   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2024326   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2024327   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2024328   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2024329   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2024330   +END;
MPRINT(EM_DIAGRAM):   END;
2024331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024332   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2024333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024335   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2024336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024338   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2024339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2024341   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
2024342   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
2024343   +        S_Income  +    -0.27053363011695 * S_Kidhome
2024344   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
2024345   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
2024346   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
2024347   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
2024348   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
2024349   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
2024350   +          +    -1.35624485206227 * S_NumDealsPurchases
2024351   +          +    -0.54646115734684 * S_NumDistPurchases
2024352   +          +     1.29794225108321 * S_NumStorePurchases
2024353   +          +      1.8453064081809 * S_NumWebPurchases
2024354   +          +    -0.92747144824026 * S_NumWebVisitsMonth
2024355   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
2024356   +        S_RMntFrq  +     0.73207333681971 * S_Recency
2024357   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
2024358   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
2024359   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
2024360   +        S_Income  +    -0.79821220724157 * S_Kidhome
2024361   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
2024362   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
2024363   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
2024364   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
2024365   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
2024366   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
2024367   +          +     0.72513216556859 * S_NumDealsPurchases
2024368   +          +    -0.15566774650584 * S_NumDistPurchases
2024369   +          +     -0.8847675798982 * S_NumStorePurchases
2024370   +          +    -0.79405200318252 * S_NumWebPurchases
2024371   +          +     1.74003779802254 * S_NumWebVisitsMonth
2024372   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
2024373   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
2024374   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
2024375   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
2024376   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
2024377   +        S_Income  +    -0.58596240450544 * S_Kidhome
2024378   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
2024379   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
2024380   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
2024381   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
2024382   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
2024383   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
2024384   +          +     0.17466385502192 * S_NumDealsPurchases
2024385   +          +    -0.06219545947203 * S_NumDistPurchases
2024386   +          +     0.16637546838853 * S_NumStorePurchases
2024387   +          +    -0.06908729397635 * S_NumWebPurchases
2024388   +          +     1.44269772444244 * S_NumWebVisitsMonth
2024389   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
2024390   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
2024391   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
2024392   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
2024393   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
2024394   +        S_Income  +    -0.42454238091412 * S_Kidhome
2024395   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
2024396   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
2024397   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
2024398   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
2024399   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
2024400   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
2024401   +          +     0.77329078721398 * S_NumDealsPurchases
2024402   +          +     0.31693324305765 * S_NumDistPurchases
2024403   +          +    -1.08524196373091 * S_NumStorePurchases
2024404   +          +    -0.96945384922979 * S_NumWebPurchases
2024405   +          +     1.24659288571587 * S_NumWebVisitsMonth
2024406   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
2024407   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
2024408   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
2024409   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
2024410   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
2024411   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
2024412   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
2024413   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
2024414   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
2024415   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
2024416   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
2024417   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
2024418   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
2024419   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
2024420   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
2024421   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
2024422   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
2024423   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
2024424   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
2024425   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
2024426   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
2024427   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
2024428   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
2024429   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
2024430   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
2024431   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
2024432   +          +     0.36788499721115 * Marital_StatusDivorced
2024433   +          +    -0.16988636986433 * Marital_StatusMarried
2024434   +          +    -0.24560973256761 * Marital_StatusSingle
2024435   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
2024436   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
2024437   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
2024438   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
2024439   +          +     0.24497797058028 * Marital_StatusDivorced
2024440   +          +    -1.44410245434424 * Marital_StatusMarried
2024441   +          +     1.47441310087392 * Marital_StatusSingle
2024442   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
2024443   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
2024444   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
2024445   +        EducationGraduation  +     0.04653963359475 * EducationMaster
2024446   +          +     0.15823225296452 * Marital_StatusDivorced
2024447   +          +    -0.39129434667884 * Marital_StatusMarried
2024448   +          +     0.84414069966504 * Marital_StatusSingle
2024449   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
2024450   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
2024451   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
2024452   +        EducationGraduation  +     0.40030852414737 * EducationMaster
2024453   +          +     1.22039169814542 * Marital_StatusDivorced
2024454   +          +     0.91592976063128 * Marital_StatusMarried
2024455   +          +    -1.51267332883308 * Marital_StatusSingle
2024456   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
2024457   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
2024458   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
2024459   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
2024460   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
2024461   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2024462   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2024463   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2024464   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2024465   +END;
MPRINT(EM_DIAGRAM):   END;
2024466   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2024467   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2024468   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2024469   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2024470   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2024471   +END;
MPRINT(EM_DIAGRAM):   END;
2024472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024473   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2024474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024475   +
2024476   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2024477   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2024478   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2024479   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2024480   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2024481   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024482   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2024483   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2024484   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2024485   +end;
MPRINT(EM_DIAGRAM):   end;
2024486   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024487   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2024488   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2024489   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2024490   +   end;
MPRINT(EM_DIAGRAM):   end;
2024491   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2024492   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2024493   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2024494   +   end;
MPRINT(EM_DIAGRAM):   end;
2024495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024496   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2024497   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2024498   +   end;
MPRINT(EM_DIAGRAM):   end;
2024499   +end;
MPRINT(EM_DIAGRAM):   end;
2024500   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2024501   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
2024502   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
2024503   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
2024504   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2024505   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2024506   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2024507   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2024508   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2024509   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2024510   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2024511   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2024512   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2024513   +END;
MPRINT(EM_DIAGRAM):   END;
2024514   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2024515   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2024516   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2024517   +END;
MPRINT(EM_DIAGRAM):   END;
2024518   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2024519   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2024520   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2024521   +END;
MPRINT(EM_DIAGRAM):   END;
2024522   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2024523   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2024524   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2024525   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2024526   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2024527   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2024528   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2024529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024530   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2024531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2024532   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2024533   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2024534   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2024535   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2024536   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2024537   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2024538   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2024539   +END;
MPRINT(EM_DIAGRAM):   END;
2024540   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2024541   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2024542   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2024543   +drop
2024544   +H11
2024545   +H12
2024546   +H13
2024547   +H14
2024548   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2024549   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2024550   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
2024551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024552   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
2024553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024554   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
2024555   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
2024556   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
2024557   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
2024558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024559   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
2024560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024561   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
2024562   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
2024563   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
2024564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024565   +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
2024566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024568   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2024569   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2024570   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
2024571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024572   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2024573   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2024574   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2024575   +
2024576   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2024577   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2024578   +
2024579   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2024580   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2024581   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2024582   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
2024583   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2024584   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2024585   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2024586   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
2024587   +
2024588   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2024589   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2024590   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2024591   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2024592   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2024593   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024594   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2024595   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2024596   +end;
MPRINT(EM_DIAGRAM):   end;
2024597   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024598   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2024599   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2024600   +   end;
MPRINT(EM_DIAGRAM):   end;
2024601   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2024602   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2024603   +   end;
MPRINT(EM_DIAGRAM):   end;
2024604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024605   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2024606   +   end;
MPRINT(EM_DIAGRAM):   end;
2024607   +end;
MPRINT(EM_DIAGRAM):   end;
2024608   +
2024609   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2024610   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2024611   +
2024612   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
2024613   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
2024614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024616   +end;
MPRINT(EM_DIAGRAM):   end;
2024617   +
2024618   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
2024619   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
2024620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024622   +end;
MPRINT(EM_DIAGRAM):   end;
2024623   +
2024624   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
2024625   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
2024626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024628   +end;
MPRINT(EM_DIAGRAM):   end;
2024629   +
2024630   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2024631   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2024632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024634   +end;
MPRINT(EM_DIAGRAM):   end;
2024635   +
2024636   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
2024637   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
2024638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024640   +end;
MPRINT(EM_DIAGRAM):   end;
2024641   +
2024642   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
2024643   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
2024644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024646   +end;
MPRINT(EM_DIAGRAM):   end;
2024647   +
2024648   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2024649   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2024650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024652   +end;
MPRINT(EM_DIAGRAM):   end;
2024653   +
2024654   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2024655   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2024656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024658   +end;
MPRINT(EM_DIAGRAM):   end;
2024659   +
2024660   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2024661   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2024662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024664   +end;
MPRINT(EM_DIAGRAM):   end;
2024665   +
2024666   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2024667   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2024668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024670   +end;
MPRINT(EM_DIAGRAM):   end;
2024671   +
2024672   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
2024673   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
2024674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024676   +end;
MPRINT(EM_DIAGRAM):   end;
2024677   +
2024678   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2024679   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2024680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024682   +end;
MPRINT(EM_DIAGRAM):   end;
2024683   +
2024684   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2024685   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2024686   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024688   +end;
MPRINT(EM_DIAGRAM):   end;
2024689   +
2024690   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2024691   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
2024692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2024693   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
2024694   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
2024695   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
2024696   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
2024697   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2024698   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2024699   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2024700   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2024701   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2024702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024704   +end;
MPRINT(EM_DIAGRAM):   end;
2024705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024706   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2024707   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2024708   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024709   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2024710   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2024711   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2024712   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2024713   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
2024714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024715   +         end;
MPRINT(EM_DIAGRAM):   end;
2024716   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2024717   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2024718   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
2024719   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024720   +            end;
MPRINT(EM_DIAGRAM):   end;
2024721   +         end;
MPRINT(EM_DIAGRAM):   end;
2024722   +      end;
MPRINT(EM_DIAGRAM):   end;
2024723   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2024724   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2024725   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
2024726   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024727   +         end;
MPRINT(EM_DIAGRAM):   end;
2024728   +      end;
MPRINT(EM_DIAGRAM):   end;
2024729   +   end;
MPRINT(EM_DIAGRAM):   end;
2024730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024731   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2024732   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
2024733   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024734   +      end;
MPRINT(EM_DIAGRAM):   end;
2024735   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2024736   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2024737   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
2024738   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
2024739   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
2024740   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
2024741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2024742   +         end;
MPRINT(EM_DIAGRAM):   end;
2024743   +      end;
MPRINT(EM_DIAGRAM):   end;
2024744   +   end;
MPRINT(EM_DIAGRAM):   end;
2024745   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2024746   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2024747   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2024748   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2024749   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2024750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2024751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024752   +   end;
MPRINT(EM_DIAGRAM):   end;
2024753   +end;
MPRINT(EM_DIAGRAM):   end;
2024754   +
2024755   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2024756   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2024757   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2024758   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2024759   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
2024760   +end;
MPRINT(EM_DIAGRAM):   end;
2024761   +
2024762   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2024763   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2024764   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2024765   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2024766   +
2024767   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
2024768   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
2024769   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
2024770   +
2024771   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
2024772   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
2024773   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
2024774   +
2024775   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
2024776   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
2024777   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
2024778   +
2024779   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2024780   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2024781   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
2024782   +
2024783   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2024784   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2024785   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
2024786   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
2024787   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
2024788   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
2024789   +
2024790   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
2024791   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
2024792   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
2024793   +
2024794   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
2024795   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
2024796   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
2024797   +
2024798   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2024799   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2024800   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
2024801   +
2024802   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2024803   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2024804   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
2024805   +
2024806   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2024807   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2024808   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
2024809   +
2024810   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2024811   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2024812   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
2024813   +
2024814   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
2024815   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
2024816   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
2024817   +
2024818   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2024819   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2024820   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
2024821   +
2024822   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2024823   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2024824   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
2024825   +
2024826   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2024827   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2024828   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
2024829   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
2024830   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
2024831   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
2024832   +end;
MPRINT(EM_DIAGRAM):   end;
2024833   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
2024834   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2024835   +
2024836   +REGDR1:
2024837   +
2024838   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
2024839   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2024840   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2024841   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2024842   +end;
MPRINT(EM_DIAGRAM):   end;
2024843   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024844   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2024845   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2024846   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2024847   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2024848   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2024849   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2024850   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2024851   +   end;
MPRINT(EM_DIAGRAM):   end;
2024852   +end;
MPRINT(EM_DIAGRAM):   end;
2024853   +
2024854   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2024855   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2024856   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2024857   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2024858   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2024859   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2024860   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2024861   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2024862   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2024863   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2024864   +end;
MPRINT(EM_DIAGRAM):   end;
2024865   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
2024866   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
2024867   +
2024868   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2024869   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2024870   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2024871   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
2024872   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024873   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
2024874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024875   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
2024876   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
2024877   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
2024878   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
2024879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024880   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
2024881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024882   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
2024883   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
2024884   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
2024885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024886   +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
2024887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024889   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2024890   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2024891   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
2024892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2024893   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2024894   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2024895   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2024896   +
2024897   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2024898   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2024899   +
2024900   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2024901   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2024902   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2024903   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
2024904   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2024905   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2024906   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2024907   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
2024908   +
2024909   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2024910   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2024911   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2024912   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2024913   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2024914   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2024915   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2024916   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2024917   +end;
MPRINT(EM_DIAGRAM):   end;
2024918   +else do;
MPRINT(EM_DIAGRAM):   else do;
2024919   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2024920   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2024921   +   end;
MPRINT(EM_DIAGRAM):   end;
2024922   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2024923   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2024924   +   end;
MPRINT(EM_DIAGRAM):   end;
2024925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2024926   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2024927   +   end;
MPRINT(EM_DIAGRAM):   end;
2024928   +end;
MPRINT(EM_DIAGRAM):   end;
2024929   +
2024930   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2024931   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2024932   +
2024933   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
2024934   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
2024935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024937   +end;
MPRINT(EM_DIAGRAM):   end;
2024938   +
2024939   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
2024940   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
2024941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024943   +end;
MPRINT(EM_DIAGRAM):   end;
2024944   +
2024945   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2024946   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2024947   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024948   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024949   +end;
MPRINT(EM_DIAGRAM):   end;
2024950   +
2024951   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
2024952   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
2024953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024955   +end;
MPRINT(EM_DIAGRAM):   end;
2024956   +
2024957   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
2024958   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
2024959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024961   +end;
MPRINT(EM_DIAGRAM):   end;
2024962   +
2024963   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2024964   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2024965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024967   +end;
MPRINT(EM_DIAGRAM):   end;
2024968   +
2024969   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2024970   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2024971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024973   +end;
MPRINT(EM_DIAGRAM):   end;
2024974   +
2024975   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2024976   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2024977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024979   +end;
MPRINT(EM_DIAGRAM):   end;
2024980   +
2024981   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2024982   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2024983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024985   +end;
MPRINT(EM_DIAGRAM):   end;
2024986   +
2024987   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
2024988   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
2024989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024991   +end;
MPRINT(EM_DIAGRAM):   end;
2024992   +
2024993   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2024994   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2024995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2024996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2024997   +end;
MPRINT(EM_DIAGRAM):   end;
2024998   +
2024999   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2025000   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2025001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025003   +end;
MPRINT(EM_DIAGRAM):   end;
2025004   +
2025005   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2025006   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
2025007   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2025008   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
2025009   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
2025010   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
2025011   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
2025012   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2025013   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2025014   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2025015   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2025016   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2025017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025019   +end;
MPRINT(EM_DIAGRAM):   end;
2025020   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025021   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2025022   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2025023   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025024   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2025025   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2025026   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2025027   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2025028   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
2025029   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025030   +         end;
MPRINT(EM_DIAGRAM):   end;
2025031   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2025032   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2025033   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
2025034   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025035   +            end;
MPRINT(EM_DIAGRAM):   end;
2025036   +         end;
MPRINT(EM_DIAGRAM):   end;
2025037   +      end;
MPRINT(EM_DIAGRAM):   end;
2025038   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2025039   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2025040   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
2025041   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025042   +         end;
MPRINT(EM_DIAGRAM):   end;
2025043   +      end;
MPRINT(EM_DIAGRAM):   end;
2025044   +   end;
MPRINT(EM_DIAGRAM):   end;
2025045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025046   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2025047   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
2025048   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025049   +      end;
MPRINT(EM_DIAGRAM):   end;
2025050   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2025051   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2025052   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
2025053   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
2025054   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
2025055   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
2025056   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025057   +         end;
MPRINT(EM_DIAGRAM):   end;
2025058   +      end;
MPRINT(EM_DIAGRAM):   end;
2025059   +   end;
MPRINT(EM_DIAGRAM):   end;
2025060   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2025061   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2025062   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2025063   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2025064   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2025065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025067   +   end;
MPRINT(EM_DIAGRAM):   end;
2025068   +end;
MPRINT(EM_DIAGRAM):   end;
2025069   +
2025070   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2025071   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2025072   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2025073   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2025074   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
2025075   +end;
MPRINT(EM_DIAGRAM):   end;
2025076   +
2025077   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2025078   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2025079   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2025080   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2025081   +
2025082   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
2025083   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
2025084   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
2025085   +
2025086   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
2025087   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
2025088   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
2025089   +
2025090   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2025091   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2025092   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
2025093   +
2025094   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2025095   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2025096   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
2025097   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
2025098   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
2025099   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
2025100   +
2025101   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
2025102   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
2025103   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
2025104   +
2025105   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
2025106   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
2025107   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
2025108   +
2025109   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2025110   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2025111   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
2025112   +
2025113   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2025114   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2025115   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
2025116   +
2025117   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2025118   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2025119   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
2025120   +
2025121   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2025122   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2025123   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
2025124   +
2025125   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
2025126   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
2025127   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
2025128   +
2025129   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2025130   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2025131   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
2025132   +
2025133   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2025134   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2025135   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
2025136   +
2025137   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2025138   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2025139   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
2025140   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2025141   +
2025142   +REG5DR1:
2025143   +
2025144   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
2025145   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2025146   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2025147   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2025148   +end;
MPRINT(EM_DIAGRAM):   end;
2025149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025150   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2025151   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2025152   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2025153   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2025154   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2025155   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2025156   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2025157   +   end;
MPRINT(EM_DIAGRAM):   end;
2025158   +end;
MPRINT(EM_DIAGRAM):   end;
2025159   +
2025160   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2025161   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2025162   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2025163   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2025164   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2025165   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2025166   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2025167   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2025168   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2025169   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2025170   +end;
MPRINT(EM_DIAGRAM):   end;
2025171   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
2025172   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
2025173   +
2025174   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2025175   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2025176   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2025177   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
2025178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025179   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
2025180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025181   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
2025182   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
2025183   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
2025184   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
2025185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025186   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
2025187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025188   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
2025189   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
2025190   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
2025191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025192   +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
2025193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025194   +P_DepVar1 = (
2025195   +Neural10_P_DepVar1 +
2025196   +Neural9_P_DepVar1 +
2025197   +Neural3_P_DepVar1 +
2025198   +Neural2_P_DepVar1 +
2025199   +Neural4_P_DepVar1 +
2025200   +Reg_P_DepVar1 +
2025201   +Reg5_P_DepVar1
2025202   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural10_P_DepVar1 + Neural9_P_DepVar1 + Neural3_P_DepVar1 
+ Neural2_P_DepVar1 + Neural4_P_DepVar1 + Reg_P_DepVar1 + Reg5_P_DepVar1 )/7;
2025203   +P_DepVar0 = (
2025204   +Neural10_P_DepVar0 +
2025205   +Neural9_P_DepVar0 +
2025206   +Neural3_P_DepVar0 +
2025207   +Neural2_P_DepVar0 +
2025208   +Neural4_P_DepVar0 +
2025209   +Reg_P_DepVar0 +
2025210   +Reg5_P_DepVar0
2025211   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural10_P_DepVar0 + Neural9_P_DepVar0 + Neural3_P_DepVar0 
+ Neural2_P_DepVar0 + Neural4_P_DepVar0 + Reg_P_DepVar0 + Reg5_P_DepVar0 )/7;
2025212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025213   +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
2025214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025215   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2025216   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2025217   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2025218   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2025219   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2025220   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2025221   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2025222   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2025223   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2025224   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2025225   +end;
MPRINT(EM_DIAGRAM):   end;
2025226   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2025227   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2025228   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2025229   +end;
MPRINT(EM_DIAGRAM):   end;
2025230   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2025231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025232   +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
2025233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025234   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2025235   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2025236   +else
2025237   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2025238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025239   +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
2025240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025241   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2025242   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2025243   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2025244   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2025244  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2025245   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2025245  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2025246   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2025246  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2025247   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2025247  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2025248   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2025249   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2025250   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2025251   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2025252   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2025253   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2025254   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2025255   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2025256   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2025257   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2025258   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2025259   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2025260   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2025261   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2025262   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2025263   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2025264   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
2025265   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
2025266   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
2025267   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
2025268   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
2025269   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
2025270   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
2025271   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
2025272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025273   +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
2025274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025275   +if
2025276   +F_DepVar NE '1'
2025277   +AND F_DepVar NE '0'
2025278   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2025279   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2025280   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2025281   +end;
MPRINT(EM_DIAGRAM):   end;
2025282   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025283   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2025284   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2025285   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2025286   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2025287   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2025288   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2025289   +END;
MPRINT(EM_DIAGRAM):   END;
2025290   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2025291    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2025292    quit;
2025293    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2025294    filename emflow
2025294  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring NEURAL10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025295    *------------------------------------------------------------*;
2025296    * Ensmbl14: Scoring NEURAL10_VALIDATE data;
2025297    *------------------------------------------------------------*;
2025298    data EMWS8.Ensmbl14_VALIDATE
2025299    / view=EMWS8.Ensmbl14_VALIDATE
2025300    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_VALIDATE / view=EMWS8.Ensmbl14_VALIDATE ;
2025301    set EMWS8.Neural10_VALIDATE
2025302    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_VALIDATE ;
2025303    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\EMFLOWSCORE.sas.
2025304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025305   +* Ensmbl14: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Combine model for DepVar;
2025306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025307   +* Ensmbl14: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 1 of 7;
2025308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025310   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2025311   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2025312   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2025313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025315   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2025316   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2025317   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2025318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025320   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2025321   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2025322   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2025323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025325   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2025326   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2025327   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2025328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025329   +
2025330   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2025331   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2025331  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2025332   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2025333   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2025334   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2025335   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2025336   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2025337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025338   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2025339   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2025340   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2025341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025343   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2025344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025345   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2025346   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2025347   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2025348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025349   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2025350   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2025351   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2025352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025354   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2025355   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2025356   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2025357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025359   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2025360   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2025361   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
2025362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2025363   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2025364   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2025365   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2025366   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2025367   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2025368   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2025369   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2025370   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2025371   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2025372   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2025373   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2025374   +LENGTH _WARN_ $4
2025375   +      F_DepVar  $ 12
2025376   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2025377   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2025378   +
2025379   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2025380   +
2025381   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2025382   +
2025383   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2025384   +
2025385   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2025386   +
2025387   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2025388   +
2025389   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2025390   +
2025391   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2025392   +
2025393   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2025394   +
2025395   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2025396   +
2025397   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2025398   +
2025399   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2025400   +
2025401   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2025402   +
2025403   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2025404   +
2025405   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2025406   +
2025407   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2025408   +
2025409   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2025410   +
2025411   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2025412   +
2025413   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2025414   +
2025415   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2025416   +
2025417   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2025418   +
2025419   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2025420   +
2025421   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2025422   +
2025423   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2025424   +
2025425   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2025426   +
2025427   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2025428   +
2025429   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2025430   +
2025431   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2025432   +
2025433   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2025434   +
2025435   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2025436   +
2025437   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2025438   +
2025439   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2025440   +
2025441   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2025442   +
2025443   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2025444   +
2025445   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2025446   +
2025447   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2025448   +
2025449   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2025450   +
2025451   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2025452   +
2025453   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2025454   +
2025455   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2025456   +
2025457   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2025458   +
2025459   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2025460   +
2025461   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2025462   +
2025463   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2025464   +
2025465   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2025466   +
2025467   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2025468   +
2025469   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2025470   +
2025471   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2025472   +
2025473   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2025474   +
2025475   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2025476   +
2025477   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2025478   +
2025479   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2025480   +
2025481   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2025482   +
2025483   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2025484   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2025485   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2025486   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2025487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025489   +end;
MPRINT(EM_DIAGRAM):   end;
2025490   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025492   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2025493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025494   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2025495   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2025496   +   end;
MPRINT(EM_DIAGRAM):   end;
2025497   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2025498   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2025499   +   end;
MPRINT(EM_DIAGRAM):   end;
2025500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025501   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2025502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025504   +   end;
MPRINT(EM_DIAGRAM):   end;
2025505   +end;
MPRINT(EM_DIAGRAM):   end;
2025506   +
2025507   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2025508   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2025509   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2025510   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2025511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025513   +end;
MPRINT(EM_DIAGRAM):   end;
2025514   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025515   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025516   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2025517   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025518   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2025519   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2025520   +   end;
MPRINT(EM_DIAGRAM):   end;
2025521   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2025522   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2025523   +   end;
MPRINT(EM_DIAGRAM):   end;
2025524   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025525   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2025526   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025527   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025528   +   end;
MPRINT(EM_DIAGRAM):   end;
2025529   +end;
MPRINT(EM_DIAGRAM):   end;
2025530   +
2025531   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2025532   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2025533   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2025534   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2025535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025537   +end;
MPRINT(EM_DIAGRAM):   end;
2025538   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025539   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025540   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2025541   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025542   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2025543   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2025544   +   end;
MPRINT(EM_DIAGRAM):   end;
2025545   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2025546   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2025547   +   end;
MPRINT(EM_DIAGRAM):   end;
2025548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025549   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2025550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025552   +   end;
MPRINT(EM_DIAGRAM):   end;
2025553   +end;
MPRINT(EM_DIAGRAM):   end;
2025554   +
2025555   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2025556   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2025557   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2025558   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2025559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025561   +end;
MPRINT(EM_DIAGRAM):   end;
2025562   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025563   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025564   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2025565   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025566   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2025567   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2025568   +   end;
MPRINT(EM_DIAGRAM):   end;
2025569   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2025570   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2025571   +   end;
MPRINT(EM_DIAGRAM):   end;
2025572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025573   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2025574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025576   +   end;
MPRINT(EM_DIAGRAM):   end;
2025577   +end;
MPRINT(EM_DIAGRAM):   end;
2025578   +
2025579   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2025580   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2025581   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2025582   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2025583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025585   +end;
MPRINT(EM_DIAGRAM):   end;
2025586   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025587   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025588   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2025589   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025590   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2025591   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2025592   +   end;
MPRINT(EM_DIAGRAM):   end;
2025593   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2025594   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2025595   +   end;
MPRINT(EM_DIAGRAM):   end;
2025596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025597   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2025598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025600   +   end;
MPRINT(EM_DIAGRAM):   end;
2025601   +end;
MPRINT(EM_DIAGRAM):   end;
2025602   +
2025603   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2025604   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2025605   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2025606   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2025607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025609   +end;
MPRINT(EM_DIAGRAM):   end;
2025610   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025611   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025612   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2025613   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025614   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2025615   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2025616   +   end;
MPRINT(EM_DIAGRAM):   end;
2025617   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2025618   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2025619   +   end;
MPRINT(EM_DIAGRAM):   end;
2025620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025621   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2025622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025624   +   end;
MPRINT(EM_DIAGRAM):   end;
2025625   +end;
MPRINT(EM_DIAGRAM):   end;
2025626   +
2025627   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2025628   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2025629   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2025630   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2025631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025633   +end;
MPRINT(EM_DIAGRAM):   end;
2025634   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2025636   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2025637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025638   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2025639   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2025640   +   end;
MPRINT(EM_DIAGRAM):   end;
2025641   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2025642   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2025643   +   end;
MPRINT(EM_DIAGRAM):   end;
2025644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025645   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2025646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025648   +   end;
MPRINT(EM_DIAGRAM):   end;
2025649   +end;
MPRINT(EM_DIAGRAM):   end;
2025650   +
2025651   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2025652   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2025653   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2025654   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2025655   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2025656   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2025657   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2025658   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2025659   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2025660   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2025661   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2025662   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2025663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025665   +end;
MPRINT(EM_DIAGRAM):   end;
2025666   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025667   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2025668   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2025669   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025670   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2025671   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2025672   +   end;
MPRINT(EM_DIAGRAM):   end;
2025673   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2025674   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2025675   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2025676   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2025677   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2025678   +   end;
MPRINT(EM_DIAGRAM):   end;
2025679   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2025680   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2025681   +   end;
MPRINT(EM_DIAGRAM):   end;
2025682   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2025683   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2025684   +   end;
MPRINT(EM_DIAGRAM):   end;
2025685   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2025686   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2025687   +   end;
MPRINT(EM_DIAGRAM):   end;
2025688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025689   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2025690   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2025691   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2025692   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2025693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025695   +   end;
MPRINT(EM_DIAGRAM):   end;
2025696   +end;
MPRINT(EM_DIAGRAM):   end;
2025697   +
2025698   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2025699   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2025700   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2025701   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2025702   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2025703   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2025704   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2025705   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2025706   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2025707   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2025708   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2025709   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2025710   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2025711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2025712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025713   +end;
MPRINT(EM_DIAGRAM):   end;
2025714   +else do;
MPRINT(EM_DIAGRAM):   else do;
2025715   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2025716   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2025717   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2025718   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2025719   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2025720   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2025721   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2025722   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2025723   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025724   +         end;
MPRINT(EM_DIAGRAM):   end;
2025725   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2025726   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2025727   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2025728   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025729   +            end;
MPRINT(EM_DIAGRAM):   end;
2025730   +         end;
MPRINT(EM_DIAGRAM):   end;
2025731   +      end;
MPRINT(EM_DIAGRAM):   end;
2025732   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2025733   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2025734   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2025735   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025736   +         end;
MPRINT(EM_DIAGRAM):   end;
2025737   +      end;
MPRINT(EM_DIAGRAM):   end;
2025738   +   end;
MPRINT(EM_DIAGRAM):   end;
2025739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2025740   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2025741   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2025742   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025743   +      end;
MPRINT(EM_DIAGRAM):   end;
2025744   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2025745   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2025746   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2025747   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2025748   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2025749   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2025750   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2025751   +         end;
MPRINT(EM_DIAGRAM):   end;
2025752   +      end;
MPRINT(EM_DIAGRAM):   end;
2025753   +   end;
MPRINT(EM_DIAGRAM):   end;
2025754   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2025755   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2025756   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2025757   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2025758   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2025759   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2025760   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025761   +   end;
MPRINT(EM_DIAGRAM):   end;
2025762   +end;
MPRINT(EM_DIAGRAM):   end;
2025763   +
2025764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025765   +*** Checking missing input Interval
2025766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2025767   +
2025768   +IF NMISS(
2025769   +   AcceptedCmpTotal ,
2025770   +   Age ,
2025771   +   Frq ,
2025772   +   Income ,
2025773   +   Kidhome ,
2025774   +   Mnt ,
2025775   +   MntFishProducts ,
2025776   +   MntFruits ,
2025777   +   MntGoldProds ,
2025778   +   MntMeatProducts ,
2025779   +   MntSweetProducts ,
2025780   +   MntWines ,
2025781   +   MonthsAsCustomer ,
2025782   +   NumCatalogPurchases ,
2025783   +   NumDealsPurchases ,
2025784   +   NumDistPurchases ,
2025785   +   NumStorePurchases ,
2025786   +   NumWebPurchases ,
2025787   +   NumWebVisitsMonth ,
2025788   +   RFMstat ,
2025789   +   RMntFrq ,
2025790   +   Recency ,
2025791   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2025792   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2025793   +
2025794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2025795   +END;
MPRINT(EM_DIAGRAM):   END;
2025796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025797   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2025798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025799   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2025800   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2025801   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2025802   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2025803   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2025804   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2025805   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2025806   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2025807   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2025808   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2025809   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2025810   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2025811   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2025812   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2025813   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2025814   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2025815   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2025816   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2025817   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2025818   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2025819   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2025820   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2025821   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2025822   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2025823   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2025824   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2025825   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2025826   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2025827   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2025828   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2025829   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2025830   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2025831   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2025832   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2025833   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2025834   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2025835   +END;
MPRINT(EM_DIAGRAM):   END;
2025836   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2025837   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2025838   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2025839   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2025840   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2025841   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2025842   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2025843   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2025844   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2025845   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2025846   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2025847   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2025848   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2025849   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2025850   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2025851   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2025852   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2025853   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2025854   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2025855   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2025856   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2025857   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2025858   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2025859   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2025860   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2025861   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2025862   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2025863   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2025864   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2025865   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2025866   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2025867   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2025868   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2025869   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2025870   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2025871   +   ELSE S_NumCatalogPurchases
2025872   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2025873   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2025874   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2025875   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2025876   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2025877   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2025878   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2025879   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2025880   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2025881   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2025882   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2025883   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2025884   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2025885   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2025886   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2025887   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2025888   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2025889   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2025890   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2025891   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2025892   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2025893   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2025894   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2025895   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2025896   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2025897   +END;
MPRINT(EM_DIAGRAM):   END;
2025898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025899   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2025900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025902   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2025903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025905   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2025906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2025907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2025908   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
2025909   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
2025910   +        S_Income  +    -0.43070069114587 * S_Kidhome
2025911   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
2025912   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
2025913   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
2025914   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
2025915   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
2025916   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
2025917   +          +    -0.21858146166244 * S_NumDealsPurchases
2025918   +          +     0.18409991080913 * S_NumDistPurchases
2025919   +          +     0.35683163455594 * S_NumStorePurchases
2025920   +          +     0.24429183714976 * S_NumWebPurchases
2025921   +          +     -0.1263739191616 * S_NumWebVisitsMonth
2025922   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
2025923   +        S_RMntFrq  +      0.3452503815146 * S_Recency
2025924   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
2025925   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
2025926   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
2025927   +        S_Income  +     0.24623934031778 * S_Kidhome
2025928   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
2025929   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
2025930   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
2025931   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
2025932   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
2025933   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
2025934   +          +    -0.08125614129909 * S_NumDealsPurchases
2025935   +          +     0.38003696656333 * S_NumDistPurchases
2025936   +          +     0.22006494588298 * S_NumStorePurchases
2025937   +          +     0.26217639358993 * S_NumWebPurchases
2025938   +          +    -0.56905781005459 * S_NumWebVisitsMonth
2025939   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
2025940   +        S_RMntFrq  +     0.33060213336674 * S_Recency
2025941   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
2025942   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
2025943   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
2025944   +        S_Income  +     0.18597632724783 * S_Kidhome
2025945   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
2025946   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
2025947   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
2025948   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
2025949   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
2025950   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
2025951   +          +     0.08121213946217 * S_NumDealsPurchases
2025952   +          +    -0.04963282234139 * S_NumDistPurchases
2025953   +          +    -0.09521586837775 * S_NumStorePurchases
2025954   +          +     0.00630626523742 * S_NumWebPurchases
2025955   +          +    -0.03891587920939 * S_NumWebVisitsMonth
2025956   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
2025957   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
2025958   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
2025959   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
2025960   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
2025961   +        S_Income  +     0.25356767518099 * S_Kidhome
2025962   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
2025963   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
2025964   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
2025965   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
2025966   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
2025967   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
2025968   +          +     0.83749876944877 * S_NumDealsPurchases
2025969   +          +     0.29636537008068 * S_NumDistPurchases
2025970   +          +    -0.61202052257506 * S_NumStorePurchases
2025971   +          +    -0.96921731415369 * S_NumWebPurchases
2025972   +          +     0.10056455703323 * S_NumWebVisitsMonth
2025973   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
2025974   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
2025975   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
2025976   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
2025977   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
2025978   +        S_Income  +    -0.66239517276633 * S_Kidhome
2025979   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
2025980   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
2025981   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
2025982   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
2025983   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
2025984   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
2025985   +          +     0.63122884753912 * S_NumDealsPurchases
2025986   +          +     0.00285388491049 * S_NumDistPurchases
2025987   +          +    -0.76222252593182 * S_NumStorePurchases
2025988   +          +    -0.71485070772733 * S_NumWebPurchases
2025989   +          +     1.59020450778179 * S_NumWebVisitsMonth
2025990   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
2025991   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
2025992   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
2025993   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
2025994   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
2025995   +        S_Income  +    -0.22662005590555 * S_Kidhome
2025996   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
2025997   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
2025998   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
2025999   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
2026000   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
2026001   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
2026002   +          +    -0.28143084367284 * S_NumDealsPurchases
2026003   +          +     0.09640746756361 * S_NumDistPurchases
2026004   +          +      0.1754994442449 * S_NumStorePurchases
2026005   +          +     0.14321475617403 * S_NumWebPurchases
2026006   +          +     -0.1908048876137 * S_NumWebVisitsMonth
2026007   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
2026008   +        S_RMntFrq  +     0.02280616139018 * S_Recency
2026009   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
2026010   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
2026011   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
2026012   +        S_Income  +    -0.45643247613458 * S_Kidhome
2026013   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
2026014   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
2026015   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
2026016   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
2026017   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
2026018   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
2026019   +          +    -0.14623073736275 * S_NumDealsPurchases
2026020   +          +      0.1591142102614 * S_NumDistPurchases
2026021   +          +     0.10364624011419 * S_NumStorePurchases
2026022   +          +     0.21545343951201 * S_NumWebPurchases
2026023   +          +     0.61096997379603 * S_NumWebVisitsMonth
2026024   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
2026025   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
2026026   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
2026027   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
2026028   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
2026029   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
2026030   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
2026031   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
2026032   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
2026033   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
2026034   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
2026035   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
2026036   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
2026037   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
2026038   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
2026039   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
2026040   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
2026041   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
2026042   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
2026043   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
2026044   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
2026045   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
2026046   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
2026047   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
2026048   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
2026049   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
2026050   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
2026051   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
2026052   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
2026053   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
2026054   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
2026055   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
2026056   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
2026057   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
2026058   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
2026059   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
2026060   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
2026061   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
2026062   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
2026063   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
2026064   +        EducationGraduation  +     0.00389495660452 * EducationMaster
2026065   +          +     0.39856598367829 * Marital_StatusDivorced
2026066   +          +    -0.45922754552461 * Marital_StatusMarried
2026067   +          +     0.41270195301891 * Marital_StatusSingle
2026068   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
2026069   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
2026070   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
2026071   +        EducationGraduation  +      0.2609956614651 * EducationMaster
2026072   +          +     0.12002180366932 * Marital_StatusDivorced
2026073   +          +     0.50693056076018 * Marital_StatusMarried
2026074   +          +    -0.40828651697464 * Marital_StatusSingle
2026075   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
2026076   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
2026077   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
2026078   +        EducationGraduation  +     0.20017847825938 * EducationMaster
2026079   +          +    -0.05075621283629 * Marital_StatusDivorced
2026080   +          +     0.06731276969307 * Marital_StatusMarried
2026081   +          +     0.20458391966582 * Marital_StatusSingle
2026082   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
2026083   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
2026084   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
2026085   +        EducationGraduation  +     0.28829384238085 * EducationMaster
2026086   +          +    -0.37925185401218 * Marital_StatusDivorced
2026087   +          +     0.62971134740586 * Marital_StatusMarried
2026088   +          +    -0.36562351730859 * Marital_StatusSingle
2026089   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
2026090   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
2026091   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
2026092   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
2026093   +          +     0.84382044664305 * Marital_StatusDivorced
2026094   +          +    -0.84062627203871 * Marital_StatusMarried
2026095   +          +     0.74100406031127 * Marital_StatusSingle
2026096   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
2026097   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
2026098   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
2026099   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
2026100   +          +     -0.1195105091383 * Marital_StatusDivorced
2026101   +          +    -0.13486422945269 * Marital_StatusMarried
2026102   +          +     0.33592403429156 * Marital_StatusSingle
2026103   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
2026104   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
2026105   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
2026106   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
2026107   +          +     0.14792293029589 * Marital_StatusDivorced
2026108   +          +    -0.96003393582564 * Marital_StatusMarried
2026109   +          +     0.64637652355384 * Marital_StatusSingle
2026110   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
2026111   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
2026112   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
2026113   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
2026114   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
2026115   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
2026116   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
2026117   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
2026118   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2026119   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2026120   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2026121   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2026122   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2026123   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2026124   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2026125   +END;
MPRINT(EM_DIAGRAM):   END;
2026126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2026127   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2026128   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2026129   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2026130   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2026131   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2026132   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2026133   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2026134   +END;
MPRINT(EM_DIAGRAM):   END;
2026135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026136   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2026137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026138   +
2026139   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2026140   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2026141   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2026142   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2026143   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2026144   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026145   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2026146   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2026147   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2026148   +end;
MPRINT(EM_DIAGRAM):   end;
2026149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026150   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2026151   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2026152   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2026153   +   end;
MPRINT(EM_DIAGRAM):   end;
2026154   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2026155   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2026156   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2026157   +   end;
MPRINT(EM_DIAGRAM):   end;
2026158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026159   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2026160   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2026161   +   end;
MPRINT(EM_DIAGRAM):   end;
2026162   +end;
MPRINT(EM_DIAGRAM):   end;
2026163   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2026164   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
2026165   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
2026166   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
2026167   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
2026168   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
2026169   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2026170   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2026171   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2026172   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2026173   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2026174   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2026175   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2026176   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2026177   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2026178   +END;
MPRINT(EM_DIAGRAM):   END;
2026179   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2026180   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2026181   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2026182   +END;
MPRINT(EM_DIAGRAM):   END;
2026183   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2026184   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2026185   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2026186   +END;
MPRINT(EM_DIAGRAM):   END;
2026187   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2026188   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2026189   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2026190   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2026191   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2026192   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2026193   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2026194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026195   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2026196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026197   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2026198   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2026199   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2026200   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2026201   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2026202   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2026203   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2026204   +END;
MPRINT(EM_DIAGRAM):   END;
2026205   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2026206   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2026207   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2026208   +drop
2026209   +H11
2026210   +H12
2026211   +H13
2026212   +H14
2026213   +H15
2026214   +H16
2026215   +H17
2026216   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2026217   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2026218   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
2026219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026220   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
2026221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026222   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
2026223   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
2026224   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
2026225   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
2026226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026227   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
2026228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026229   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
2026230   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
2026231   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
2026232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026233   +* Ensmbl14: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 2 of 7;
2026234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026236   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2026237   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2026238   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
2026239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2026240   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2026241   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2026242   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2026243   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2026244   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2026245   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2026246   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2026247   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2026248   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2026249   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2026250   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2026251   +LENGTH _WARN_ $4
2026252   +      F_DepVar  $ 12
2026253   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2026254   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2026255   +
2026256   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2026257   +
2026258   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2026259   +
2026260   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2026261   +
2026262   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2026263   +
2026264   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2026265   +
2026266   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2026267   +
2026268   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2026269   +
2026270   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2026271   +
2026272   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2026273   +
2026274   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2026275   +
2026276   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2026277   +
2026278   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2026279   +
2026280   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2026281   +
2026282   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2026283   +
2026284   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2026285   +
2026286   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2026287   +
2026288   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2026289   +
2026290   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2026291   +
2026292   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2026293   +
2026294   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2026295   +
2026296   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2026297   +
2026298   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2026299   +
2026300   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2026301   +
2026302   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2026303   +
2026304   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2026305   +
2026306   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2026307   +
2026308   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2026309   +
2026310   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2026311   +
2026312   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2026313   +
2026314   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2026315   +
2026316   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2026317   +
2026318   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2026319   +
2026320   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2026321   +
2026322   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2026323   +
2026324   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2026325   +
2026326   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2026327   +
2026328   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2026329   +
2026330   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2026331   +
2026332   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2026333   +
2026334   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2026335   +
2026336   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2026337   +
2026338   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2026339   +
2026340   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2026341   +
2026342   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2026343   +
2026344   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2026345   +
2026346   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2026347   +
2026348   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2026349   +
2026350   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2026351   +
2026352   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2026353   +
2026354   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2026355   +
2026356   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2026357   +
2026358   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2026359   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2026360   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2026361   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2026362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026364   +end;
MPRINT(EM_DIAGRAM):   end;
2026365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026367   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2026368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2026370   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2026371   +   end;
MPRINT(EM_DIAGRAM):   end;
2026372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2026373   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2026374   +   end;
MPRINT(EM_DIAGRAM):   end;
2026375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026376   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2026377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026379   +   end;
MPRINT(EM_DIAGRAM):   end;
2026380   +end;
MPRINT(EM_DIAGRAM):   end;
2026381   +
2026382   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2026383   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2026384   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2026385   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2026386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026388   +end;
MPRINT(EM_DIAGRAM):   end;
2026389   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026391   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2026392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2026394   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2026395   +   end;
MPRINT(EM_DIAGRAM):   end;
2026396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2026397   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2026398   +   end;
MPRINT(EM_DIAGRAM):   end;
2026399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026400   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2026401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026403   +   end;
MPRINT(EM_DIAGRAM):   end;
2026404   +end;
MPRINT(EM_DIAGRAM):   end;
2026405   +
2026406   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2026407   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2026408   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2026409   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2026410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026412   +end;
MPRINT(EM_DIAGRAM):   end;
2026413   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026415   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2026416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026417   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2026418   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2026419   +   end;
MPRINT(EM_DIAGRAM):   end;
2026420   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2026421   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2026422   +   end;
MPRINT(EM_DIAGRAM):   end;
2026423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026424   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2026425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026427   +   end;
MPRINT(EM_DIAGRAM):   end;
2026428   +end;
MPRINT(EM_DIAGRAM):   end;
2026429   +
2026430   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2026431   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2026432   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2026433   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2026434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026436   +end;
MPRINT(EM_DIAGRAM):   end;
2026437   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026438   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026439   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2026440   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026441   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2026442   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2026443   +   end;
MPRINT(EM_DIAGRAM):   end;
2026444   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2026445   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2026446   +   end;
MPRINT(EM_DIAGRAM):   end;
2026447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026448   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2026449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026451   +   end;
MPRINT(EM_DIAGRAM):   end;
2026452   +end;
MPRINT(EM_DIAGRAM):   end;
2026453   +
2026454   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2026455   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2026456   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2026457   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2026458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026460   +end;
MPRINT(EM_DIAGRAM):   end;
2026461   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026463   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2026464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026465   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2026466   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2026467   +   end;
MPRINT(EM_DIAGRAM):   end;
2026468   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2026469   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2026470   +   end;
MPRINT(EM_DIAGRAM):   end;
2026471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026472   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2026473   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026474   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026475   +   end;
MPRINT(EM_DIAGRAM):   end;
2026476   +end;
MPRINT(EM_DIAGRAM):   end;
2026477   +
2026478   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2026479   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2026480   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2026481   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2026482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026484   +end;
MPRINT(EM_DIAGRAM):   end;
2026485   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026486   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026487   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2026488   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026489   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2026490   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2026491   +   end;
MPRINT(EM_DIAGRAM):   end;
2026492   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2026493   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2026494   +   end;
MPRINT(EM_DIAGRAM):   end;
2026495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026496   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2026497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026499   +   end;
MPRINT(EM_DIAGRAM):   end;
2026500   +end;
MPRINT(EM_DIAGRAM):   end;
2026501   +
2026502   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2026503   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2026504   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2026505   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2026506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026508   +end;
MPRINT(EM_DIAGRAM):   end;
2026509   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026510   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2026511   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2026512   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026513   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2026514   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2026515   +   end;
MPRINT(EM_DIAGRAM):   end;
2026516   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2026517   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2026518   +   end;
MPRINT(EM_DIAGRAM):   end;
2026519   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026520   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2026521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026523   +   end;
MPRINT(EM_DIAGRAM):   end;
2026524   +end;
MPRINT(EM_DIAGRAM):   end;
2026525   +
2026526   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2026527   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2026528   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2026529   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2026530   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2026531   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2026532   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2026533   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2026534   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2026535   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2026536   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2026537   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2026538   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026539   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026540   +end;
MPRINT(EM_DIAGRAM):   end;
2026541   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026542   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2026543   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2026544   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026545   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2026546   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2026547   +   end;
MPRINT(EM_DIAGRAM):   end;
2026548   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2026549   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2026550   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2026551   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2026552   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2026553   +   end;
MPRINT(EM_DIAGRAM):   end;
2026554   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2026555   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2026556   +   end;
MPRINT(EM_DIAGRAM):   end;
2026557   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2026558   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2026559   +   end;
MPRINT(EM_DIAGRAM):   end;
2026560   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2026561   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2026562   +   end;
MPRINT(EM_DIAGRAM):   end;
2026563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026564   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2026565   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2026566   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2026567   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2026568   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026569   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026570   +   end;
MPRINT(EM_DIAGRAM):   end;
2026571   +end;
MPRINT(EM_DIAGRAM):   end;
2026572   +
2026573   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2026574   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2026575   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2026576   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2026577   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2026578   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2026579   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2026580   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2026581   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2026582   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2026583   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2026584   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2026585   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2026586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2026587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026588   +end;
MPRINT(EM_DIAGRAM):   end;
2026589   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026590   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2026591   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2026592   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026593   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2026594   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2026595   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2026596   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2026597   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2026598   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2026599   +         end;
MPRINT(EM_DIAGRAM):   end;
2026600   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2026601   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2026602   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2026603   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2026604   +            end;
MPRINT(EM_DIAGRAM):   end;
2026605   +         end;
MPRINT(EM_DIAGRAM):   end;
2026606   +      end;
MPRINT(EM_DIAGRAM):   end;
2026607   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2026608   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2026609   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2026610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2026611   +         end;
MPRINT(EM_DIAGRAM):   end;
2026612   +      end;
MPRINT(EM_DIAGRAM):   end;
2026613   +   end;
MPRINT(EM_DIAGRAM):   end;
2026614   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2026615   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2026616   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2026617   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2026618   +      end;
MPRINT(EM_DIAGRAM):   end;
2026619   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2026620   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2026621   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2026622   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2026623   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2026624   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2026625   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2026626   +         end;
MPRINT(EM_DIAGRAM):   end;
2026627   +      end;
MPRINT(EM_DIAGRAM):   end;
2026628   +   end;
MPRINT(EM_DIAGRAM):   end;
2026629   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2026630   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2026631   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2026632   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2026633   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2026634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2026635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026636   +   end;
MPRINT(EM_DIAGRAM):   end;
2026637   +end;
MPRINT(EM_DIAGRAM):   end;
2026638   +
2026639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026640   +*** Checking missing input Interval
2026641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2026642   +
2026643   +IF NMISS(
2026644   +   AcceptedCmpTotal ,
2026645   +   Age ,
2026646   +   Frq ,
2026647   +   Income ,
2026648   +   Kidhome ,
2026649   +   Mnt ,
2026650   +   MntFishProducts ,
2026651   +   MntFruits ,
2026652   +   MntGoldProds ,
2026653   +   MntMeatProducts ,
2026654   +   MntSweetProducts ,
2026655   +   MntWines ,
2026656   +   MonthsAsCustomer ,
2026657   +   NumCatalogPurchases ,
2026658   +   NumDealsPurchases ,
2026659   +   NumDistPurchases ,
2026660   +   NumStorePurchases ,
2026661   +   NumWebPurchases ,
2026662   +   NumWebVisitsMonth ,
2026663   +   RFMstat ,
2026664   +   RMntFrq ,
2026665   +   Recency ,
2026666   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2026667   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2026668   +
2026669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2026670   +END;
MPRINT(EM_DIAGRAM):   END;
2026671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026672   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2026673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026674   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2026675   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2026676   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2026677   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2026678   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2026679   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2026680   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2026681   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2026682   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2026683   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2026684   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2026685   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2026686   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2026687   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2026688   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2026689   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2026690   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2026691   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2026692   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2026693   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2026694   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2026695   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2026696   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2026697   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2026698   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2026699   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2026700   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2026701   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2026702   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2026703   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2026704   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2026705   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2026706   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2026707   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2026708   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2026709   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2026710   +END;
MPRINT(EM_DIAGRAM):   END;
2026711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2026712   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2026713   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2026714   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2026715   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2026716   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2026717   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2026718   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2026719   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2026720   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2026721   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2026722   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2026723   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2026724   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2026725   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2026726   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2026727   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2026728   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2026729   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2026730   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2026731   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2026732   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2026733   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2026734   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2026735   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2026736   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2026737   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2026738   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2026739   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2026740   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2026741   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2026742   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2026743   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2026744   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2026745   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2026746   +   ELSE S_NumCatalogPurchases
2026747   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2026748   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2026749   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2026750   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2026751   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2026752   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2026753   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2026754   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2026755   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2026756   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2026757   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2026758   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2026759   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2026760   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2026761   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2026762   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2026763   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2026764   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2026765   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2026766   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2026767   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2026768   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2026769   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2026770   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2026771   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2026772   +END;
MPRINT(EM_DIAGRAM):   END;
2026773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026774   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2026775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026777   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2026778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026780   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2026781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026782   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2026783   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
2026784   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
2026785   +        S_Income  +    -0.14142658616971 * S_Kidhome
2026786   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
2026787   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
2026788   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
2026789   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
2026790   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
2026791   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
2026792   +          +     0.96837841774168 * S_NumDealsPurchases
2026793   +          +      0.2846105381881 * S_NumDistPurchases
2026794   +          +    -0.69514041792943 * S_NumStorePurchases
2026795   +          +    -0.96425407351749 * S_NumWebPurchases
2026796   +          +     0.79545449599683 * S_NumWebVisitsMonth
2026797   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
2026798   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
2026799   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
2026800   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
2026801   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
2026802   +        S_Income  +    -0.55432195959203 * S_Kidhome
2026803   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
2026804   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
2026805   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
2026806   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
2026807   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
2026808   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
2026809   +          +      0.2190184330724 * S_NumDealsPurchases
2026810   +          +    -0.01682909442896 * S_NumDistPurchases
2026811   +          +    -0.70244951048552 * S_NumStorePurchases
2026812   +          +     -0.3057457659316 * S_NumWebPurchases
2026813   +          +     0.95928538762715 * S_NumWebVisitsMonth
2026814   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
2026815   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
2026816   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
2026817   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
2026818   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
2026819   +        S_Income  +    -0.06354861159882 * S_Kidhome
2026820   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
2026821   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
2026822   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
2026823   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
2026824   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
2026825   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
2026826   +          +    -0.21394230159696 * S_NumDealsPurchases
2026827   +          +    -0.23833771124663 * S_NumDistPurchases
2026828   +          +     0.45832031017813 * S_NumStorePurchases
2026829   +          +    -0.30226952040179 * S_NumWebPurchases
2026830   +          +    -0.29796387184481 * S_NumWebVisitsMonth
2026831   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
2026832   +        S_RMntFrq  +     0.87067423045258 * S_Recency
2026833   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
2026834   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
2026835   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
2026836   +        S_Income  +    -0.04839586846715 * S_Kidhome
2026837   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
2026838   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
2026839   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
2026840   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
2026841   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
2026842   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
2026843   +          +    -0.43749647771198 * S_NumDealsPurchases
2026844   +          +     0.21263473847472 * S_NumDistPurchases
2026845   +          +     0.26102168039141 * S_NumStorePurchases
2026846   +          +     0.54921725943657 * S_NumWebPurchases
2026847   +          +    -0.75685843498122 * S_NumWebVisitsMonth
2026848   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
2026849   +        S_RMntFrq  +     0.80536256822347 * S_Recency
2026850   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
2026851   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
2026852   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
2026853   +        S_Income  +     0.71499527198653 * S_Kidhome
2026854   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
2026855   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
2026856   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
2026857   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
2026858   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
2026859   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
2026860   +          +     0.09436067776126 * S_NumDealsPurchases
2026861   +          +    -0.02824201859641 * S_NumDistPurchases
2026862   +          +    -0.06770433780564 * S_NumStorePurchases
2026863   +          +    -0.07177620319715 * S_NumWebPurchases
2026864   +          +    -0.75589979685266 * S_NumWebVisitsMonth
2026865   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
2026866   +        S_RMntFrq  +     0.94408788011429 * S_Recency
2026867   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
2026868   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
2026869   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
2026870   +        S_Income  +    -0.63474522042341 * S_Kidhome
2026871   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
2026872   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
2026873   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
2026874   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
2026875   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
2026876   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
2026877   +          +    -0.51154511343396 * S_NumDealsPurchases
2026878   +          +    -0.52422915823572 * S_NumDistPurchases
2026879   +          +     0.30305498422357 * S_NumStorePurchases
2026880   +          +     0.12197321559338 * S_NumWebPurchases
2026881   +          +    -0.10520335422769 * S_NumWebVisitsMonth
2026882   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
2026883   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
2026884   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
2026885   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
2026886   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
2026887   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
2026888   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
2026889   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
2026890   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
2026891   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
2026892   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
2026893   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
2026894   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
2026895   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
2026896   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
2026897   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
2026898   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
2026899   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
2026900   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
2026901   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
2026902   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
2026903   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
2026904   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
2026905   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
2026906   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
2026907   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
2026908   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
2026909   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
2026910   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
2026911   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
2026912   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
2026913   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
2026914   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
2026915   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
2026916   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
2026917   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
2026918   +          +     0.10234616400375 * Marital_StatusDivorced
2026919   +          +     0.27961650739075 * Marital_StatusMarried
2026920   +          +    -0.40239488723767 * Marital_StatusSingle
2026921   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
2026922   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
2026923   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
2026924   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
2026925   +          +     0.46385792428023 * Marital_StatusDivorced
2026926   +          +    -0.62344590646391 * Marital_StatusMarried
2026927   +          +     0.61767209252062 * Marital_StatusSingle
2026928   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
2026929   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
2026930   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
2026931   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
2026932   +          +    -0.07839612590836 * Marital_StatusDivorced
2026933   +          +     0.35316864062221 * Marital_StatusMarried
2026934   +          +    -0.10730136429834 * Marital_StatusSingle
2026935   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
2026936   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
2026937   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
2026938   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
2026939   +          +    -0.09942175269886 * Marital_StatusDivorced
2026940   +          +     0.24385460865335 * Marital_StatusMarried
2026941   +          +    -0.33658955096296 * Marital_StatusSingle
2026942   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
2026943   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
2026944   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
2026945   +        EducationGraduation  +     0.37352174719748 * EducationMaster
2026946   +          +    -0.08047852561096 * Marital_StatusDivorced
2026947   +          +     1.16485862694561 * Marital_StatusMarried
2026948   +          +    -0.94140251178566 * Marital_StatusSingle
2026949   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
2026950   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
2026951   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
2026952   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
2026953   +          +    -0.16621963893391 * Marital_StatusDivorced
2026954   +          +    -0.44542186297324 * Marital_StatusMarried
2026955   +          +     0.42176133228308 * Marital_StatusSingle
2026956   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
2026957   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
2026958   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
2026959   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
2026960   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
2026961   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
2026962   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
2026963   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2026964   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2026965   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2026966   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2026967   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2026968   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2026969   +END;
MPRINT(EM_DIAGRAM):   END;
2026970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2026971   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2026972   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2026973   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2026974   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2026975   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2026976   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2026977   +END;
MPRINT(EM_DIAGRAM):   END;
2026978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026979   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2026980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2026981   +
2026982   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2026983   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2026984   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2026985   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2026986   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2026987   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2026988   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2026989   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2026990   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2026991   +end;
MPRINT(EM_DIAGRAM):   end;
2026992   +else do;
MPRINT(EM_DIAGRAM):   else do;
2026993   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2026994   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2026995   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2026996   +   end;
MPRINT(EM_DIAGRAM):   end;
2026997   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2026998   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2026999   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2027000   +   end;
MPRINT(EM_DIAGRAM):   end;
2027001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027002   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2027003   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2027004   +   end;
MPRINT(EM_DIAGRAM):   end;
2027005   +end;
MPRINT(EM_DIAGRAM):   end;
2027006   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2027007   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
2027008   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
2027009   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
2027010   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
2027011   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2027012   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2027013   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2027014   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2027015   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2027016   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2027017   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2027018   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2027019   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2027020   +END;
MPRINT(EM_DIAGRAM):   END;
2027021   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2027022   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2027023   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2027024   +END;
MPRINT(EM_DIAGRAM):   END;
2027025   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2027026   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2027027   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2027028   +END;
MPRINT(EM_DIAGRAM):   END;
2027029   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2027030   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2027031   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2027032   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2027033   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2027034   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2027035   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2027036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027037   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2027038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027039   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2027040   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2027041   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2027042   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2027043   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2027044   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2027045   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2027046   +END;
MPRINT(EM_DIAGRAM):   END;
2027047   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2027048   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2027049   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2027050   +drop
2027051   +H11
2027052   +H12
2027053   +H13
2027054   +H14
2027055   +H15
2027056   +H16
2027057   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2027058   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2027059   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
2027060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027061   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
2027062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027063   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
2027064   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
2027065   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
2027066   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
2027067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027068   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
2027069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027070   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
2027071   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
2027072   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
2027073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027074   +* Ensmbl14: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 3 of 7;
2027075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027077   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2027078   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2027079   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
2027080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027081   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2027082   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2027083   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2027084   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2027085   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2027086   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2027087   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2027088   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2027089   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2027090   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2027091   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2027092   +LENGTH _WARN_ $4
2027093   +      F_DepVar  $ 12
2027094   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2027095   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2027096   +
2027097   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2027098   +
2027099   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2027100   +
2027101   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2027102   +
2027103   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2027104   +
2027105   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2027106   +
2027107   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2027108   +
2027109   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2027110   +
2027111   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2027112   +
2027113   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2027114   +
2027115   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2027116   +
2027117   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2027118   +
2027119   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2027120   +
2027121   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2027122   +
2027123   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2027124   +
2027125   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2027126   +
2027127   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2027128   +
2027129   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2027130   +
2027131   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2027132   +
2027133   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2027134   +
2027135   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2027136   +
2027137   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2027138   +
2027139   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2027140   +
2027141   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2027142   +
2027143   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2027144   +
2027145   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2027146   +
2027147   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2027148   +
2027149   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2027150   +
2027151   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2027152   +
2027153   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2027154   +
2027155   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2027156   +
2027157   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2027158   +
2027159   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2027160   +
2027161   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2027162   +
2027163   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2027164   +
2027165   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2027166   +
2027167   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2027168   +
2027169   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2027170   +
2027171   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2027172   +
2027173   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2027174   +
2027175   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2027176   +
2027177   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2027178   +
2027179   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2027180   +
2027181   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2027182   +
2027183   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2027184   +
2027185   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2027186   +
2027187   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2027188   +
2027189   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2027190   +
2027191   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2027192   +
2027193   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2027194   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2027195   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2027196   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2027197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027199   +end;
MPRINT(EM_DIAGRAM):   end;
2027200   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027202   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2027203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027204   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027205   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2027206   +   end;
MPRINT(EM_DIAGRAM):   end;
2027207   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027208   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2027209   +   end;
MPRINT(EM_DIAGRAM):   end;
2027210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027211   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2027212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027214   +   end;
MPRINT(EM_DIAGRAM):   end;
2027215   +end;
MPRINT(EM_DIAGRAM):   end;
2027216   +
2027217   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2027218   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2027219   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2027220   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2027221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027223   +end;
MPRINT(EM_DIAGRAM):   end;
2027224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027226   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2027227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027228   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027229   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2027230   +   end;
MPRINT(EM_DIAGRAM):   end;
2027231   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027232   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2027233   +   end;
MPRINT(EM_DIAGRAM):   end;
2027234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027235   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2027236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027238   +   end;
MPRINT(EM_DIAGRAM):   end;
2027239   +end;
MPRINT(EM_DIAGRAM):   end;
2027240   +
2027241   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2027242   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2027243   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2027244   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2027245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027247   +end;
MPRINT(EM_DIAGRAM):   end;
2027248   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027249   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027250   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2027251   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027252   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027253   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2027254   +   end;
MPRINT(EM_DIAGRAM):   end;
2027255   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027256   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2027257   +   end;
MPRINT(EM_DIAGRAM):   end;
2027258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027259   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2027260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027262   +   end;
MPRINT(EM_DIAGRAM):   end;
2027263   +end;
MPRINT(EM_DIAGRAM):   end;
2027264   +
2027265   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2027266   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2027267   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2027268   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2027269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027271   +end;
MPRINT(EM_DIAGRAM):   end;
2027272   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027273   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027274   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2027275   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027276   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027277   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2027278   +   end;
MPRINT(EM_DIAGRAM):   end;
2027279   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027280   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2027281   +   end;
MPRINT(EM_DIAGRAM):   end;
2027282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027283   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2027284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027286   +   end;
MPRINT(EM_DIAGRAM):   end;
2027287   +end;
MPRINT(EM_DIAGRAM):   end;
2027288   +
2027289   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2027290   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2027291   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2027292   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2027293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027295   +end;
MPRINT(EM_DIAGRAM):   end;
2027296   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027297   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027298   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2027299   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027300   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027301   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2027302   +   end;
MPRINT(EM_DIAGRAM):   end;
2027303   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027304   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2027305   +   end;
MPRINT(EM_DIAGRAM):   end;
2027306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027307   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2027308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027310   +   end;
MPRINT(EM_DIAGRAM):   end;
2027311   +end;
MPRINT(EM_DIAGRAM):   end;
2027312   +
2027313   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2027314   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2027315   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2027316   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2027317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027319   +end;
MPRINT(EM_DIAGRAM):   end;
2027320   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027321   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027322   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2027323   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027324   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027325   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2027326   +   end;
MPRINT(EM_DIAGRAM):   end;
2027327   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027328   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2027329   +   end;
MPRINT(EM_DIAGRAM):   end;
2027330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027331   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2027332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027334   +   end;
MPRINT(EM_DIAGRAM):   end;
2027335   +end;
MPRINT(EM_DIAGRAM):   end;
2027336   +
2027337   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2027338   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2027339   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2027340   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2027341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027343   +end;
MPRINT(EM_DIAGRAM):   end;
2027344   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027346   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2027347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027348   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2027349   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2027350   +   end;
MPRINT(EM_DIAGRAM):   end;
2027351   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2027352   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2027353   +   end;
MPRINT(EM_DIAGRAM):   end;
2027354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027355   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2027356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027358   +   end;
MPRINT(EM_DIAGRAM):   end;
2027359   +end;
MPRINT(EM_DIAGRAM):   end;
2027360   +
2027361   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2027362   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2027363   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2027364   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2027365   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2027366   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2027367   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2027368   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2027369   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2027370   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2027371   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2027372   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2027373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027375   +end;
MPRINT(EM_DIAGRAM):   end;
2027376   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027377   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2027378   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2027379   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027380   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2027381   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2027382   +   end;
MPRINT(EM_DIAGRAM):   end;
2027383   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2027384   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2027385   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2027386   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2027387   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2027388   +   end;
MPRINT(EM_DIAGRAM):   end;
2027389   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2027390   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2027391   +   end;
MPRINT(EM_DIAGRAM):   end;
2027392   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2027393   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2027394   +   end;
MPRINT(EM_DIAGRAM):   end;
2027395   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2027396   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2027397   +   end;
MPRINT(EM_DIAGRAM):   end;
2027398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027399   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2027400   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2027401   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2027402   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2027403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027405   +   end;
MPRINT(EM_DIAGRAM):   end;
2027406   +end;
MPRINT(EM_DIAGRAM):   end;
2027407   +
2027408   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2027409   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2027410   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2027411   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2027412   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2027413   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2027414   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2027415   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2027416   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2027417   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2027418   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2027419   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2027420   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2027421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027423   +end;
MPRINT(EM_DIAGRAM):   end;
2027424   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027425   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2027426   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2027427   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027428   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2027429   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2027430   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2027431   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2027432   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2027433   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2027434   +         end;
MPRINT(EM_DIAGRAM):   end;
2027435   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2027436   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2027437   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2027438   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2027439   +            end;
MPRINT(EM_DIAGRAM):   end;
2027440   +         end;
MPRINT(EM_DIAGRAM):   end;
2027441   +      end;
MPRINT(EM_DIAGRAM):   end;
2027442   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2027443   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2027444   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2027445   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2027446   +         end;
MPRINT(EM_DIAGRAM):   end;
2027447   +      end;
MPRINT(EM_DIAGRAM):   end;
2027448   +   end;
MPRINT(EM_DIAGRAM):   end;
2027449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027450   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2027451   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2027452   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2027453   +      end;
MPRINT(EM_DIAGRAM):   end;
2027454   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2027455   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2027456   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2027457   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2027458   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2027459   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2027460   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2027461   +         end;
MPRINT(EM_DIAGRAM):   end;
2027462   +      end;
MPRINT(EM_DIAGRAM):   end;
2027463   +   end;
MPRINT(EM_DIAGRAM):   end;
2027464   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2027465   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2027466   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2027467   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2027468   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2027469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027471   +   end;
MPRINT(EM_DIAGRAM):   end;
2027472   +end;
MPRINT(EM_DIAGRAM):   end;
2027473   +
2027474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027475   +*** Checking missing input Interval
2027476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2027477   +
2027478   +IF NMISS(
2027479   +   AcceptedCmpTotal ,
2027480   +   Age ,
2027481   +   Frq ,
2027482   +   Income ,
2027483   +   Kidhome ,
2027484   +   Mnt ,
2027485   +   MntFishProducts ,
2027486   +   MntFruits ,
2027487   +   MntGoldProds ,
2027488   +   MntMeatProducts ,
2027489   +   MntSweetProducts ,
2027490   +   MntWines ,
2027491   +   MonthsAsCustomer ,
2027492   +   NumCatalogPurchases ,
2027493   +   NumDealsPurchases ,
2027494   +   NumDistPurchases ,
2027495   +   NumStorePurchases ,
2027496   +   NumWebPurchases ,
2027497   +   NumWebVisitsMonth ,
2027498   +   RFMstat ,
2027499   +   RMntFrq ,
2027500   +   Recency ,
2027501   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2027502   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2027503   +
2027504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027505   +END;
MPRINT(EM_DIAGRAM):   END;
2027506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027507   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2027508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027509   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2027510   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2027511   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2027512   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2027513   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2027514   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2027515   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2027516   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2027517   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2027518   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2027519   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2027520   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2027521   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2027522   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2027523   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2027524   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2027525   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2027526   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2027527   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2027528   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2027529   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2027530   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2027531   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2027532   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2027533   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2027534   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2027535   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2027536   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2027537   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2027538   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2027539   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2027540   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2027541   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2027542   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2027543   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2027544   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2027545   +END;
MPRINT(EM_DIAGRAM):   END;
2027546   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2027547   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2027548   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2027549   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2027550   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2027551   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2027552   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2027553   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2027554   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2027555   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2027556   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2027557   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2027558   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2027559   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2027560   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2027561   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2027562   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2027563   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2027564   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2027565   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2027566   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2027567   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2027568   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2027569   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2027570   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2027571   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2027572   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2027573   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2027574   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2027575   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2027576   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2027577   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2027578   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2027579   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2027580   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2027581   +   ELSE S_NumCatalogPurchases
2027582   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2027583   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2027584   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2027585   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2027586   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2027587   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2027588   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2027589   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2027590   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2027591   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2027592   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2027593   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2027594   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2027595   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2027596   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2027597   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2027598   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2027599   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2027600   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2027601   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2027602   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2027603   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2027604   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2027605   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2027606   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2027607   +END;
MPRINT(EM_DIAGRAM):   END;
2027608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027609   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2027610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027612   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2027613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027615   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2027616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027617   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2027618   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
2027619   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
2027620   +        S_Income  +     0.51123266106809 * S_Kidhome
2027621   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
2027622   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
2027623   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
2027624   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
2027625   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
2027626   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
2027627   +          +     1.34095732961105 * S_NumDealsPurchases
2027628   +          +     0.16605991333252 * S_NumDistPurchases
2027629   +          +    -0.61746267736536 * S_NumStorePurchases
2027630   +          +    -0.61812800689506 * S_NumWebPurchases
2027631   +          +     1.44649145055387 * S_NumWebVisitsMonth
2027632   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
2027633   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
2027634   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
2027635   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
2027636   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
2027637   +        S_Income  +     0.52295323651199 * S_Kidhome
2027638   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
2027639   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
2027640   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
2027641   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
2027642   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
2027643   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
2027644   +          +    -0.72543332317832 * S_NumDealsPurchases
2027645   +          +    -0.05245472565117 * S_NumDistPurchases
2027646   +          +     1.00667431585298 * S_NumStorePurchases
2027647   +          +     1.02836701470962 * S_NumWebPurchases
2027648   +          +    -1.25666606219201 * S_NumWebVisitsMonth
2027649   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
2027650   +        S_RMntFrq  +     1.50910531484632 * S_Recency
2027651   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
2027652   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
2027653   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
2027654   +        S_Income  +     0.58025720116696 * S_Kidhome
2027655   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
2027656   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
2027657   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
2027658   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
2027659   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
2027660   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
2027661   +          +     0.12670438262487 * S_NumDealsPurchases
2027662   +          +    -0.46113523834333 * S_NumDistPurchases
2027663   +          +     0.07074818720567 * S_NumStorePurchases
2027664   +          +    -0.05066645783537 * S_NumWebPurchases
2027665   +          +    -0.65729410185804 * S_NumWebVisitsMonth
2027666   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
2027667   +        S_RMntFrq  +      1.4337242246086 * S_Recency
2027668   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
2027669   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
2027670   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
2027671   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
2027672   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
2027673   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
2027674   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
2027675   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
2027676   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
2027677   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
2027678   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
2027679   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
2027680   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
2027681   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
2027682   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
2027683   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
2027684   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
2027685   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
2027686   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
2027687   +          +     0.12692950862511 * Marital_StatusDivorced
2027688   +          +     0.10026497666167 * Marital_StatusMarried
2027689   +          +    -0.19893864592813 * Marital_StatusSingle
2027690   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
2027691   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
2027692   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
2027693   +        EducationGraduation  +     0.05580498138108 * EducationMaster
2027694   +          +    -0.16785192490199 * Marital_StatusDivorced
2027695   +          +     0.13153695130362 * Marital_StatusMarried
2027696   +          +    -0.50411544587104 * Marital_StatusSingle
2027697   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
2027698   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
2027699   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
2027700   +        EducationGraduation  +     0.21882736952662 * EducationMaster
2027701   +          +    -0.62654958087044 * Marital_StatusDivorced
2027702   +          +     1.86250132393341 * Marital_StatusMarried
2027703   +          +    -1.37067556451928 * Marital_StatusSingle
2027704   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
2027705   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
2027706   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
2027707   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
2027708   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2027709   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2027710   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2027711   +END;
MPRINT(EM_DIAGRAM):   END;
2027712   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2027713   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2027714   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2027715   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2027716   +END;
MPRINT(EM_DIAGRAM):   END;
2027717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027718   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2027719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027720   +
2027721   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2027722   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2027723   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2027724   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2027725   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2027726   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027727   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2027728   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2027729   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2027730   +end;
MPRINT(EM_DIAGRAM):   end;
2027731   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027732   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2027733   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2027734   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2027735   +   end;
MPRINT(EM_DIAGRAM):   end;
2027736   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2027737   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2027738   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2027739   +   end;
MPRINT(EM_DIAGRAM):   end;
2027740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027741   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2027742   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2027743   +   end;
MPRINT(EM_DIAGRAM):   end;
2027744   +end;
MPRINT(EM_DIAGRAM):   end;
2027745   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2027746   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
2027747   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
2027748   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
2027749   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2027750   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2027751   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2027752   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2027753   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2027754   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2027755   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2027756   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2027757   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2027758   +END;
MPRINT(EM_DIAGRAM):   END;
2027759   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2027760   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2027761   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2027762   +END;
MPRINT(EM_DIAGRAM):   END;
2027763   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2027764   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2027765   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2027766   +END;
MPRINT(EM_DIAGRAM):   END;
2027767   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2027768   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2027769   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2027770   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2027771   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2027772   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2027773   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2027774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027775   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2027776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2027777   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2027778   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2027779   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2027780   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2027781   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2027782   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2027783   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2027784   +END;
MPRINT(EM_DIAGRAM):   END;
2027785   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2027786   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2027787   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2027788   +drop
2027789   +H11
2027790   +H12
2027791   +H13
2027792   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2027793   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2027794   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
2027795   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027796   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
2027797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027798   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
2027799   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
2027800   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
2027801   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
2027802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027803   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
2027804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027805   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
2027806   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
2027807   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
2027808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027809   +* Ensmbl14: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 4 of 7;
2027810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027812   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2027813   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2027814   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
2027815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2027816   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2027817   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2027818   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2027819   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2027820   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2027821   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2027822   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2027823   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2027824   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2027825   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2027826   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2027827   +LENGTH _WARN_ $4
2027828   +      F_DepVar  $ 12
2027829   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2027830   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2027831   +
2027832   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2027833   +
2027834   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2027835   +
2027836   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2027837   +
2027838   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2027839   +
2027840   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2027841   +
2027842   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2027843   +
2027844   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2027845   +
2027846   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2027847   +
2027848   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2027849   +
2027850   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2027851   +
2027852   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2027853   +
2027854   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2027855   +
2027856   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2027857   +
2027858   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2027859   +
2027860   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2027861   +
2027862   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2027863   +
2027864   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2027865   +
2027866   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2027867   +
2027868   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2027869   +
2027870   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2027871   +
2027872   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2027873   +
2027874   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2027875   +
2027876   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2027877   +
2027878   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2027879   +
2027880   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2027881   +
2027882   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2027883   +
2027884   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2027885   +
2027886   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2027887   +
2027888   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2027889   +
2027890   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2027891   +
2027892   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2027893   +
2027894   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2027895   +
2027896   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2027897   +
2027898   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2027899   +
2027900   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2027901   +
2027902   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2027903   +
2027904   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2027905   +
2027906   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2027907   +
2027908   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2027909   +
2027910   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2027911   +
2027912   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2027913   +
2027914   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2027915   +
2027916   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2027917   +
2027918   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2027919   +
2027920   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2027921   +
2027922   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2027923   +
2027924   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2027925   +
2027926   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2027927   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2027928   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2027929   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2027930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027932   +end;
MPRINT(EM_DIAGRAM):   end;
2027933   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027935   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2027936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027937   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027938   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2027939   +   end;
MPRINT(EM_DIAGRAM):   end;
2027940   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027941   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2027942   +   end;
MPRINT(EM_DIAGRAM):   end;
2027943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027944   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2027945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027947   +   end;
MPRINT(EM_DIAGRAM):   end;
2027948   +end;
MPRINT(EM_DIAGRAM):   end;
2027949   +
2027950   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2027951   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2027952   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2027953   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2027954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027956   +end;
MPRINT(EM_DIAGRAM):   end;
2027957   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027959   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2027960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027962   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2027963   +   end;
MPRINT(EM_DIAGRAM):   end;
2027964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027965   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2027966   +   end;
MPRINT(EM_DIAGRAM):   end;
2027967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027968   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2027969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027971   +   end;
MPRINT(EM_DIAGRAM):   end;
2027972   +end;
MPRINT(EM_DIAGRAM):   end;
2027973   +
2027974   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2027975   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2027976   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2027977   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2027978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2027979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027980   +end;
MPRINT(EM_DIAGRAM):   end;
2027981   +else do;
MPRINT(EM_DIAGRAM):   else do;
2027982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2027983   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2027984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2027985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2027986   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2027987   +   end;
MPRINT(EM_DIAGRAM):   end;
2027988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2027989   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2027990   +   end;
MPRINT(EM_DIAGRAM):   end;
2027991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2027992   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2027993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2027994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2027995   +   end;
MPRINT(EM_DIAGRAM):   end;
2027996   +end;
MPRINT(EM_DIAGRAM):   end;
2027997   +
2027998   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2027999   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2028000   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2028001   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2028002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028004   +end;
MPRINT(EM_DIAGRAM):   end;
2028005   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028007   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2028008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028009   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028010   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2028011   +   end;
MPRINT(EM_DIAGRAM):   end;
2028012   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028013   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2028014   +   end;
MPRINT(EM_DIAGRAM):   end;
2028015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028016   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2028017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028019   +   end;
MPRINT(EM_DIAGRAM):   end;
2028020   +end;
MPRINT(EM_DIAGRAM):   end;
2028021   +
2028022   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2028023   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2028024   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2028025   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2028026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028028   +end;
MPRINT(EM_DIAGRAM):   end;
2028029   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028031   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2028032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028033   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028034   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2028035   +   end;
MPRINT(EM_DIAGRAM):   end;
2028036   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028037   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2028038   +   end;
MPRINT(EM_DIAGRAM):   end;
2028039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028040   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2028041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028043   +   end;
MPRINT(EM_DIAGRAM):   end;
2028044   +end;
MPRINT(EM_DIAGRAM):   end;
2028045   +
2028046   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2028047   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2028048   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2028049   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2028050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028052   +end;
MPRINT(EM_DIAGRAM):   end;
2028053   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028055   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2028056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028057   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028058   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2028059   +   end;
MPRINT(EM_DIAGRAM):   end;
2028060   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028061   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2028062   +   end;
MPRINT(EM_DIAGRAM):   end;
2028063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028064   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2028065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028067   +   end;
MPRINT(EM_DIAGRAM):   end;
2028068   +end;
MPRINT(EM_DIAGRAM):   end;
2028069   +
2028070   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2028071   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2028072   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2028073   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2028074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028076   +end;
MPRINT(EM_DIAGRAM):   end;
2028077   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028079   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2028080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028081   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2028082   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2028083   +   end;
MPRINT(EM_DIAGRAM):   end;
2028084   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2028085   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2028086   +   end;
MPRINT(EM_DIAGRAM):   end;
2028087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028088   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2028089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028091   +   end;
MPRINT(EM_DIAGRAM):   end;
2028092   +end;
MPRINT(EM_DIAGRAM):   end;
2028093   +
2028094   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2028095   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2028096   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2028097   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2028098   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2028099   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2028100   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2028101   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2028102   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2028103   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2028104   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2028105   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2028106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028108   +end;
MPRINT(EM_DIAGRAM):   end;
2028109   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028110   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2028111   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2028112   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028113   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2028114   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2028115   +   end;
MPRINT(EM_DIAGRAM):   end;
2028116   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2028117   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2028118   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2028119   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2028120   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2028121   +   end;
MPRINT(EM_DIAGRAM):   end;
2028122   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2028123   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2028124   +   end;
MPRINT(EM_DIAGRAM):   end;
2028125   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2028126   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2028127   +   end;
MPRINT(EM_DIAGRAM):   end;
2028128   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2028129   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2028130   +   end;
MPRINT(EM_DIAGRAM):   end;
2028131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028132   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2028133   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2028134   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2028135   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2028136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028138   +   end;
MPRINT(EM_DIAGRAM):   end;
2028139   +end;
MPRINT(EM_DIAGRAM):   end;
2028140   +
2028141   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2028142   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2028143   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2028144   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2028145   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2028146   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2028147   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2028148   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2028149   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2028150   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2028151   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2028152   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2028153   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2028154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028156   +end;
MPRINT(EM_DIAGRAM):   end;
2028157   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028158   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2028159   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2028160   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028161   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2028162   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2028163   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2028164   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2028165   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2028166   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028167   +         end;
MPRINT(EM_DIAGRAM):   end;
2028168   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2028169   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2028170   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2028171   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028172   +            end;
MPRINT(EM_DIAGRAM):   end;
2028173   +         end;
MPRINT(EM_DIAGRAM):   end;
2028174   +      end;
MPRINT(EM_DIAGRAM):   end;
2028175   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2028176   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2028177   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2028178   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028179   +         end;
MPRINT(EM_DIAGRAM):   end;
2028180   +      end;
MPRINT(EM_DIAGRAM):   end;
2028181   +   end;
MPRINT(EM_DIAGRAM):   end;
2028182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028183   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2028184   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2028185   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028186   +      end;
MPRINT(EM_DIAGRAM):   end;
2028187   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2028188   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2028189   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2028190   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2028191   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2028192   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2028193   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028194   +         end;
MPRINT(EM_DIAGRAM):   end;
2028195   +      end;
MPRINT(EM_DIAGRAM):   end;
2028196   +   end;
MPRINT(EM_DIAGRAM):   end;
2028197   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2028198   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2028199   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2028200   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2028201   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2028202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028204   +   end;
MPRINT(EM_DIAGRAM):   end;
2028205   +end;
MPRINT(EM_DIAGRAM):   end;
2028206   +
2028207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028208   +*** Checking missing input Interval
2028209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2028210   +
2028211   +IF NMISS(
2028212   +   AcceptedCmpTotal ,
2028213   +   Age ,
2028214   +   Frq ,
2028215   +   Income ,
2028216   +   Kidhome ,
2028217   +   Mnt ,
2028218   +   MntFishProducts ,
2028219   +   MntFruits ,
2028220   +   MntGoldProds ,
2028221   +   MntMeatProducts ,
2028222   +   MntSweetProducts ,
2028223   +   MntWines ,
2028224   +   MonthsAsCustomer ,
2028225   +   NumCatalogPurchases ,
2028226   +   NumDealsPurchases ,
2028227   +   NumDistPurchases ,
2028228   +   NumStorePurchases ,
2028229   +   NumWebPurchases ,
2028230   +   NumWebVisitsMonth ,
2028231   +   RFMstat ,
2028232   +   RMntFrq ,
2028233   +   Recency ,
2028234   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2028235   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2028236   +
2028237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028238   +END;
MPRINT(EM_DIAGRAM):   END;
2028239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028240   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2028241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028242   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2028243   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2028244   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2028245   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2028246   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2028247   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2028248   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2028249   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2028250   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2028251   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2028252   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2028253   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2028254   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2028255   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2028256   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2028257   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2028258   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2028259   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2028260   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2028261   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2028262   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2028263   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2028264   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2028265   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2028266   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2028267   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2028268   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2028269   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2028270   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2028271   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2028272   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2028273   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2028274   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2028275   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2028276   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2028277   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2028278   +END;
MPRINT(EM_DIAGRAM):   END;
2028279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2028280   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2028281   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2028282   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2028283   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2028284   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2028285   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2028286   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2028287   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2028288   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2028289   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2028290   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2028291   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2028292   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2028293   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2028294   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2028295   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2028296   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2028297   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2028298   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2028299   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2028300   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2028301   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2028302   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2028303   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2028304   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2028305   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2028306   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2028307   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2028308   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2028309   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2028310   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2028311   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2028312   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2028313   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2028314   +   ELSE S_NumCatalogPurchases
2028315   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2028316   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2028317   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2028318   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2028319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2028320   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2028321   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2028322   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2028323   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2028324   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2028325   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2028326   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2028327   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2028328   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2028329   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2028330   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2028331   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2028332   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2028333   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2028334   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2028335   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2028336   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2028337   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2028338   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2028339   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2028340   +END;
MPRINT(EM_DIAGRAM):   END;
2028341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028342   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2028343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028345   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2028346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028348   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2028349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2028351   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
2028352   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
2028353   +        S_Income  +    -1.07615700855274 * S_Kidhome
2028354   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
2028355   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
2028356   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
2028357   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
2028358   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
2028359   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
2028360   +          +      0.3429043319369 * S_NumDealsPurchases
2028361   +          +     0.71313309767469 * S_NumDistPurchases
2028362   +          +     0.06017757740083 * S_NumStorePurchases
2028363   +          +    -0.19817724925068 * S_NumWebPurchases
2028364   +          +     1.34164122205952 * S_NumWebVisitsMonth
2028365   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
2028366   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
2028367   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
2028368   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
2028369   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
The SAS System

2028370   +        S_Income  +     -0.0027232441092 * S_Kidhome
2028371   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
2028372   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
2028373   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
2028374   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
2028375   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
2028376   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
2028377   +          +      0.4576973746858 * S_NumDealsPurchases
2028378   +          +     0.15590877272659 * S_NumDistPurchases
2028379   +          +    -0.33414539713736 * S_NumStorePurchases
2028380   +          +    -0.39370244666257 * S_NumWebPurchases
2028381   +          +     0.52596714886704 * S_NumWebVisitsMonth
2028382   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
2028383   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
2028384   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
2028385   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
2028386   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
2028387   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
2028388   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
2028389   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
2028390   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
2028391   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
2028392   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
2028393   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
2028394   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
2028395   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
2028396   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
2028397   +        EducationGraduation  +      -0.333138438339 * EducationMaster
2028398   +          +      0.4663802937397 * Marital_StatusDivorced
2028399   +          +    -1.27401898796099 * Marital_StatusMarried
2028400   +          +      1.3125969368079 * Marital_StatusSingle
2028401   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
2028402   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
2028403   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
2028404   +        EducationGraduation  +     0.00771527138053 * EducationMaster
2028405   +          +     0.07419179522004 * Marital_StatusDivorced
2028406   +          +     0.00234615813337 * Marital_StatusMarried
2028407   +          +    -0.00725460458412 * Marital_StatusSingle
2028408   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
2028409   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
2028410   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
2028411   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2028412   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2028413   +END;
MPRINT(EM_DIAGRAM):   END;
2028414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2028415   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2028416   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2028417   +END;
MPRINT(EM_DIAGRAM):   END;
2028418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028419   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2028420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028421   +
2028422   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2028423   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2028424   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2028425   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2028426   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2028427   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028428   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2028429   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2028430   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2028431   +end;
MPRINT(EM_DIAGRAM):   end;
2028432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028433   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2028434   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2028435   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2028436   +   end;
MPRINT(EM_DIAGRAM):   end;
2028437   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2028438   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2028439   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2028440   +   end;
MPRINT(EM_DIAGRAM):   end;
2028441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028442   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2028443   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2028444   +   end;
MPRINT(EM_DIAGRAM):   end;
2028445   +end;
MPRINT(EM_DIAGRAM):   end;
2028446   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2028447   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
2028448   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
2028449   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2028450   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2028451   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2028452   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2028453   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2028454   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2028455   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2028456   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2028457   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2028458   +END;
MPRINT(EM_DIAGRAM):   END;
2028459   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2028460   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2028461   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2028462   +END;
MPRINT(EM_DIAGRAM):   END;
2028463   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2028464   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2028465   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2028466   +END;
MPRINT(EM_DIAGRAM):   END;
2028467   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2028468   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2028469   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2028470   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2028471   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2028472   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2028473   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2028474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028475   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2028476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028477   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2028478   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2028479   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2028480   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2028481   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2028482   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2028483   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2028484   +END;
MPRINT(EM_DIAGRAM):   END;
2028485   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2028486   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2028487   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2028488   +drop
2028489   +H11
2028490   +H12
2028491   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2028492   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2028493   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
2028494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028495   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
2028496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028497   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
2028498   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
2028499   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
2028500   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
2028501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028502   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
2028503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028504   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
2028505   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
2028506   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
2028507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028508   +* Ensmbl14: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 5 of 7;
2028509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028511   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2028512   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2028513   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
2028514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2028515   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2028516   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2028517   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2028518   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2028519   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2028520   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2028521   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2028522   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2028523   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2028524   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2028525   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2028526   +LENGTH _WARN_ $4
2028527   +      F_DepVar  $ 12
2028528   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2028529   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2028530   +
2028531   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2028532   +
2028533   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2028534   +
2028535   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2028536   +
2028537   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2028538   +
2028539   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2028540   +
2028541   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2028542   +
2028543   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2028544   +
2028545   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2028546   +
2028547   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2028548   +
2028549   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2028550   +
2028551   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2028552   +
2028553   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2028554   +
2028555   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2028556   +
2028557   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2028558   +
2028559   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2028560   +
2028561   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2028562   +
2028563   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2028564   +
2028565   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2028566   +
2028567   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2028568   +
2028569   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2028570   +
2028571   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2028572   +
2028573   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2028574   +
2028575   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2028576   +
2028577   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2028578   +
2028579   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2028580   +
2028581   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2028582   +
2028583   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2028584   +
2028585   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2028586   +
2028587   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2028588   +
2028589   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2028590   +
2028591   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2028592   +
2028593   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2028594   +
2028595   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2028596   +
2028597   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2028598   +
2028599   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2028600   +
2028601   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2028602   +
2028603   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2028604   +
2028605   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2028606   +
2028607   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2028608   +
2028609   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2028610   +
2028611   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2028612   +
2028613   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2028614   +
2028615   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2028616   +
2028617   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2028618   +
2028619   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2028620   +
2028621   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2028622   +
2028623   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2028624   +
2028625   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2028626   +
2028627   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2028628   +
2028629   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2028630   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2028631   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2028632   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2028633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028635   +end;
MPRINT(EM_DIAGRAM):   end;
2028636   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028638   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2028639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028641   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2028642   +   end;
MPRINT(EM_DIAGRAM):   end;
2028643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028644   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2028645   +   end;
MPRINT(EM_DIAGRAM):   end;
2028646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028647   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2028648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028650   +   end;
MPRINT(EM_DIAGRAM):   end;
2028651   +end;
MPRINT(EM_DIAGRAM):   end;
2028652   +
2028653   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2028654   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2028655   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2028656   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2028657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028659   +end;
MPRINT(EM_DIAGRAM):   end;
2028660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028662   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2028663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028665   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2028666   +   end;
MPRINT(EM_DIAGRAM):   end;
2028667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028668   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2028669   +   end;
MPRINT(EM_DIAGRAM):   end;
2028670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028671   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2028672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028674   +   end;
MPRINT(EM_DIAGRAM):   end;
2028675   +end;
MPRINT(EM_DIAGRAM):   end;
2028676   +
2028677   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2028678   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2028679   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2028680   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2028681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028683   +end;
MPRINT(EM_DIAGRAM):   end;
2028684   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028686   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2028687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028689   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2028690   +   end;
MPRINT(EM_DIAGRAM):   end;
2028691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028692   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2028693   +   end;
MPRINT(EM_DIAGRAM):   end;
2028694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028695   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2028696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028698   +   end;
MPRINT(EM_DIAGRAM):   end;
2028699   +end;
MPRINT(EM_DIAGRAM):   end;
2028700   +
2028701   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2028702   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2028703   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2028704   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2028705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028707   +end;
MPRINT(EM_DIAGRAM):   end;
2028708   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028710   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2028711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028712   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028713   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2028714   +   end;
MPRINT(EM_DIAGRAM):   end;
2028715   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028716   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2028717   +   end;
MPRINT(EM_DIAGRAM):   end;
2028718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028719   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2028720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028722   +   end;
MPRINT(EM_DIAGRAM):   end;
2028723   +end;
MPRINT(EM_DIAGRAM):   end;
2028724   +
2028725   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2028726   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2028727   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2028728   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2028729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028731   +end;
MPRINT(EM_DIAGRAM):   end;
2028732   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028734   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2028735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028736   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028737   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2028738   +   end;
MPRINT(EM_DIAGRAM):   end;
2028739   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028740   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2028741   +   end;
MPRINT(EM_DIAGRAM):   end;
2028742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028743   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2028744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028746   +   end;
MPRINT(EM_DIAGRAM):   end;
2028747   +end;
MPRINT(EM_DIAGRAM):   end;
2028748   +
2028749   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2028750   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2028751   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2028752   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2028753   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028754   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028755   +end;
MPRINT(EM_DIAGRAM):   end;
2028756   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028757   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028758   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2028759   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028760   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2028761   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2028762   +   end;
MPRINT(EM_DIAGRAM):   end;
2028763   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2028764   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2028765   +   end;
MPRINT(EM_DIAGRAM):   end;
2028766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028767   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2028768   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028769   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028770   +   end;
MPRINT(EM_DIAGRAM):   end;
2028771   +end;
MPRINT(EM_DIAGRAM):   end;
2028772   +
2028773   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2028774   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2028775   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2028776   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2028777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028779   +end;
MPRINT(EM_DIAGRAM):   end;
2028780   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028781   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2028782   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2028783   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028784   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2028785   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2028786   +   end;
MPRINT(EM_DIAGRAM):   end;
2028787   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2028788   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2028789   +   end;
MPRINT(EM_DIAGRAM):   end;
2028790   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028791   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2028792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028794   +   end;
MPRINT(EM_DIAGRAM):   end;
2028795   +end;
MPRINT(EM_DIAGRAM):   end;
2028796   +
2028797   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2028798   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2028799   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2028800   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2028801   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2028802   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2028803   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2028804   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2028805   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2028806   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2028807   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2028808   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2028809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028811   +end;
MPRINT(EM_DIAGRAM):   end;
2028812   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028813   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2028814   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2028815   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028816   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2028817   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2028818   +   end;
MPRINT(EM_DIAGRAM):   end;
2028819   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2028820   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2028821   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2028822   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2028823   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2028824   +   end;
MPRINT(EM_DIAGRAM):   end;
2028825   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2028826   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2028827   +   end;
MPRINT(EM_DIAGRAM):   end;
2028828   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2028829   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2028830   +   end;
MPRINT(EM_DIAGRAM):   end;
2028831   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2028832   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2028833   +   end;
MPRINT(EM_DIAGRAM):   end;
2028834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028835   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2028836   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2028837   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2028838   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2028839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028841   +   end;
MPRINT(EM_DIAGRAM):   end;
2028842   +end;
MPRINT(EM_DIAGRAM):   end;
2028843   +
2028844   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2028845   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2028846   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2028847   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2028848   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2028849   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2028850   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2028851   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2028852   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2028853   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2028854   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2028855   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2028856   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2028857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2028858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028859   +end;
MPRINT(EM_DIAGRAM):   end;
2028860   +else do;
MPRINT(EM_DIAGRAM):   else do;
2028861   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2028862   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2028863   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2028864   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2028865   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2028866   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2028867   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2028868   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2028869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028870   +         end;
MPRINT(EM_DIAGRAM):   end;
2028871   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2028872   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2028873   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2028874   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028875   +            end;
MPRINT(EM_DIAGRAM):   end;
2028876   +         end;
MPRINT(EM_DIAGRAM):   end;
2028877   +      end;
MPRINT(EM_DIAGRAM):   end;
2028878   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2028879   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2028880   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2028881   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028882   +         end;
MPRINT(EM_DIAGRAM):   end;
2028883   +      end;
MPRINT(EM_DIAGRAM):   end;
2028884   +   end;
MPRINT(EM_DIAGRAM):   end;
2028885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2028886   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2028887   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2028888   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028889   +      end;
MPRINT(EM_DIAGRAM):   end;
2028890   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2028891   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2028892   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2028893   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2028894   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2028895   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2028896   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2028897   +         end;
MPRINT(EM_DIAGRAM):   end;
2028898   +      end;
MPRINT(EM_DIAGRAM):   end;
2028899   +   end;
MPRINT(EM_DIAGRAM):   end;
2028900   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2028901   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2028902   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2028903   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2028904   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2028905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2028906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028907   +   end;
MPRINT(EM_DIAGRAM):   end;
2028908   +end;
MPRINT(EM_DIAGRAM):   end;
2028909   +
2028910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028911   +*** Checking missing input Interval
2028912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2028913   +
2028914   +IF NMISS(
2028915   +   AcceptedCmpTotal ,
2028916   +   Age ,
2028917   +   Frq ,
2028918   +   Income ,
2028919   +   Kidhome ,
2028920   +   Mnt ,
2028921   +   MntFishProducts ,
2028922   +   MntFruits ,
2028923   +   MntGoldProds ,
2028924   +   MntMeatProducts ,
2028925   +   MntSweetProducts ,
2028926   +   MntWines ,
2028927   +   MonthsAsCustomer ,
2028928   +   NumCatalogPurchases ,
2028929   +   NumDealsPurchases ,
2028930   +   NumDistPurchases ,
2028931   +   NumStorePurchases ,
2028932   +   NumWebPurchases ,
2028933   +   NumWebVisitsMonth ,
2028934   +   RFMstat ,
2028935   +   RMntFrq ,
2028936   +   Recency ,
2028937   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2028938   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2028939   +
2028940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2028941   +END;
MPRINT(EM_DIAGRAM):   END;
2028942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028943   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2028944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2028945   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2028946   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2028947   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2028948   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2028949   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2028950   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2028951   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2028952   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2028953   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2028954   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2028955   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2028956   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2028957   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2028958   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2028959   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2028960   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2028961   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2028962   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2028963   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2028964   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2028965   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2028966   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2028967   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2028968   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2028969   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2028970   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2028971   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2028972   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2028973   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2028974   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2028975   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2028976   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2028977   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2028978   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2028979   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2028980   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2028981   +END;
MPRINT(EM_DIAGRAM):   END;
2028982   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2028983   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2028984   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2028985   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2028986   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2028987   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2028988   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2028989   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2028990   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2028991   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2028992   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2028993   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2028994   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2028995   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2028996   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2028997   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2028998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2028999   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2029000   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2029001   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2029002   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2029003   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2029004   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2029005   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2029006   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2029007   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2029008   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2029009   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2029010   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2029011   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2029012   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2029013   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2029014   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2029015   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2029016   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2029017   +   ELSE S_NumCatalogPurchases
2029018   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2029019   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2029020   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2029021   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2029022   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2029023   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2029024   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2029025   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2029026   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2029027   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2029028   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2029029   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2029030   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2029031   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2029032   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2029033   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2029034   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2029035   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2029036   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2029037   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2029038   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2029039   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2029040   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2029041   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2029042   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2029043   +END;
MPRINT(EM_DIAGRAM):   END;
2029044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029045   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2029046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029048   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2029049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029051   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2029052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029053   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2029054   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
2029055   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
2029056   +        S_Income  +    -0.27053363011695 * S_Kidhome
2029057   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
2029058   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
2029059   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
2029060   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
2029061   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
2029062   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
2029063   +          +    -1.35624485206227 * S_NumDealsPurchases
2029064   +          +    -0.54646115734684 * S_NumDistPurchases
2029065   +          +     1.29794225108321 * S_NumStorePurchases
2029066   +          +      1.8453064081809 * S_NumWebPurchases
2029067   +          +    -0.92747144824026 * S_NumWebVisitsMonth
2029068   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
2029069   +        S_RMntFrq  +     0.73207333681971 * S_Recency
2029070   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
2029071   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
2029072   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
2029073   +        S_Income  +    -0.79821220724157 * S_Kidhome
2029074   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
2029075   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
2029076   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
2029077   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
2029078   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
2029079   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
2029080   +          +     0.72513216556859 * S_NumDealsPurchases
2029081   +          +    -0.15566774650584 * S_NumDistPurchases
2029082   +          +     -0.8847675798982 * S_NumStorePurchases
2029083   +          +    -0.79405200318252 * S_NumWebPurchases
2029084   +          +     1.74003779802254 * S_NumWebVisitsMonth
2029085   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
2029086   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
2029087   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
2029088   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
2029089   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
2029090   +        S_Income  +    -0.58596240450544 * S_Kidhome
2029091   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
2029092   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
2029093   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
2029094   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
2029095   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
2029096   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
2029097   +          +     0.17466385502192 * S_NumDealsPurchases
2029098   +          +    -0.06219545947203 * S_NumDistPurchases
2029099   +          +     0.16637546838853 * S_NumStorePurchases
2029100   +          +    -0.06908729397635 * S_NumWebPurchases
2029101   +          +     1.44269772444244 * S_NumWebVisitsMonth
2029102   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
2029103   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
2029104   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
2029105   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
2029106   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
2029107   +        S_Income  +    -0.42454238091412 * S_Kidhome
2029108   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
2029109   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
2029110   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
2029111   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
2029112   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
2029113   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
2029114   +          +     0.77329078721398 * S_NumDealsPurchases
2029115   +          +     0.31693324305765 * S_NumDistPurchases
2029116   +          +    -1.08524196373091 * S_NumStorePurchases
2029117   +          +    -0.96945384922979 * S_NumWebPurchases
2029118   +          +     1.24659288571587 * S_NumWebVisitsMonth
2029119   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
2029120   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
2029121   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
2029122   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
2029123   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
2029124   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
2029125   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
2029126   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
2029127   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
2029128   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
2029129   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
2029130   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
2029131   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
2029132   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
2029133   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
2029134   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
2029135   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
2029136   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
2029137   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
2029138   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
2029139   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
2029140   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
2029141   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
2029142   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
2029143   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
2029144   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
2029145   +          +     0.36788499721115 * Marital_StatusDivorced
2029146   +          +    -0.16988636986433 * Marital_StatusMarried
2029147   +          +    -0.24560973256761 * Marital_StatusSingle
2029148   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
2029149   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
2029150   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
2029151   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
2029152   +          +     0.24497797058028 * Marital_StatusDivorced
2029153   +          +    -1.44410245434424 * Marital_StatusMarried
2029154   +          +     1.47441310087392 * Marital_StatusSingle
2029155   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
2029156   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
2029157   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
2029158   +        EducationGraduation  +     0.04653963359475 * EducationMaster
2029159   +          +     0.15823225296452 * Marital_StatusDivorced
2029160   +          +    -0.39129434667884 * Marital_StatusMarried
2029161   +          +     0.84414069966504 * Marital_StatusSingle
2029162   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
2029163   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
2029164   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
2029165   +        EducationGraduation  +     0.40030852414737 * EducationMaster
2029166   +          +     1.22039169814542 * Marital_StatusDivorced
2029167   +          +     0.91592976063128 * Marital_StatusMarried
2029168   +          +    -1.51267332883308 * Marital_StatusSingle
2029169   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
2029170   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
2029171   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
2029172   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
2029173   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
2029174   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2029175   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2029176   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2029177   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2029178   +END;
MPRINT(EM_DIAGRAM):   END;
2029179   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2029180   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2029181   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2029182   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2029183   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2029184   +END;
MPRINT(EM_DIAGRAM):   END;
2029185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029186   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2029187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029188   +
2029189   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2029190   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2029191   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2029192   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2029193   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2029194   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2029195   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2029196   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2029197   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2029198   +end;
MPRINT(EM_DIAGRAM):   end;
2029199   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029200   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2029201   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2029202   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2029203   +   end;
MPRINT(EM_DIAGRAM):   end;
2029204   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2029205   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2029206   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2029207   +   end;
MPRINT(EM_DIAGRAM):   end;
2029208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2029209   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2029210   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2029211   +   end;
MPRINT(EM_DIAGRAM):   end;
2029212   +end;
MPRINT(EM_DIAGRAM):   end;
2029213   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2029214   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
2029215   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
2029216   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
2029217   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2029218   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2029219   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2029220   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2029221   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2029222   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2029223   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2029224   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2029225   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2029226   +END;
MPRINT(EM_DIAGRAM):   END;
2029227   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2029228   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2029229   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2029230   +END;
MPRINT(EM_DIAGRAM):   END;
2029231   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2029232   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2029233   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2029234   +END;
MPRINT(EM_DIAGRAM):   END;
2029235   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2029236   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2029237   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2029238   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2029239   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2029240   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2029241   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2029242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029243   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2029244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2029245   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2029246   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2029247   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2029248   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2029249   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2029250   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2029251   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2029252   +END;
MPRINT(EM_DIAGRAM):   END;
2029253   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2029254   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2029255   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2029256   +drop
2029257   +H11
2029258   +H12
2029259   +H13
2029260   +H14
2029261   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2029262   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2029263   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
2029264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029265   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
2029266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029267   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
2029268   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
2029269   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
2029270   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
2029271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029272   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
2029273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029274   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
2029275   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
2029276   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
2029277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029278   +* Ensmbl14: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 6 of 7;
2029279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029281   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2029282   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2029283   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
2029284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029285   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029286   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2029287   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029288   +
2029289   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2029290   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2029291   +
2029292   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2029293   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2029294   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2029295   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
2029296   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2029297   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2029298   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2029299   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
2029300   +
2029301   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2029302   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2029303   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2029304   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2029305   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2029306   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2029307   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2029308   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2029309   +end;
MPRINT(EM_DIAGRAM):   end;
2029310   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029311   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2029312   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2029313   +   end;
MPRINT(EM_DIAGRAM):   end;
2029314   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2029315   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2029316   +   end;
MPRINT(EM_DIAGRAM):   end;
2029317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2029318   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2029319   +   end;
MPRINT(EM_DIAGRAM):   end;
2029320   +end;
MPRINT(EM_DIAGRAM):   end;
2029321   +
2029322   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2029323   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2029324   +
2029325   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
2029326   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
2029327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029329   +end;
MPRINT(EM_DIAGRAM):   end;
2029330   +
2029331   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
2029332   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
2029333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029335   +end;
MPRINT(EM_DIAGRAM):   end;
2029336   +
2029337   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
2029338   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
2029339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029341   +end;
MPRINT(EM_DIAGRAM):   end;
2029342   +
2029343   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2029344   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2029345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029347   +end;
MPRINT(EM_DIAGRAM):   end;
2029348   +
2029349   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
2029350   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
2029351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029353   +end;
MPRINT(EM_DIAGRAM):   end;
2029354   +
2029355   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
2029356   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
2029357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029359   +end;
MPRINT(EM_DIAGRAM):   end;
2029360   +
2029361   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2029362   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2029363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029365   +end;
MPRINT(EM_DIAGRAM):   end;
2029366   +
2029367   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2029368   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2029369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029371   +end;
MPRINT(EM_DIAGRAM):   end;
2029372   +
2029373   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2029374   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2029375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029377   +end;
MPRINT(EM_DIAGRAM):   end;
2029378   +
2029379   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2029380   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2029381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029383   +end;
MPRINT(EM_DIAGRAM):   end;
2029384   +
2029385   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
2029386   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
2029387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029389   +end;
MPRINT(EM_DIAGRAM):   end;
2029390   +
2029391   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2029392   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2029393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029395   +end;
MPRINT(EM_DIAGRAM):   end;
2029396   +
2029397   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2029398   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2029399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029401   +end;
MPRINT(EM_DIAGRAM):   end;
2029402   +
2029403   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2029404   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
2029405   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2029406   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
2029407   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
2029408   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
2029409   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
2029410   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2029411   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2029412   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2029413   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2029414   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2029415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029417   +end;
MPRINT(EM_DIAGRAM):   end;
2029418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029419   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2029420   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2029421   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2029422   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2029423   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2029424   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2029425   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2029426   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
2029427   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029428   +         end;
MPRINT(EM_DIAGRAM):   end;
2029429   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2029430   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2029431   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
2029432   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029433   +            end;
MPRINT(EM_DIAGRAM):   end;
2029434   +         end;
MPRINT(EM_DIAGRAM):   end;
2029435   +      end;
MPRINT(EM_DIAGRAM):   end;
2029436   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2029437   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2029438   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
2029439   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029440   +         end;
MPRINT(EM_DIAGRAM):   end;
2029441   +      end;
MPRINT(EM_DIAGRAM):   end;
2029442   +   end;
MPRINT(EM_DIAGRAM):   end;
2029443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2029444   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2029445   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
2029446   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029447   +      end;
MPRINT(EM_DIAGRAM):   end;
2029448   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2029449   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2029450   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
2029451   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
2029452   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
2029453   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
2029454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029455   +         end;
MPRINT(EM_DIAGRAM):   end;
2029456   +      end;
MPRINT(EM_DIAGRAM):   end;
2029457   +   end;
MPRINT(EM_DIAGRAM):   end;
2029458   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2029459   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2029460   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2029461   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2029462   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2029463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2029464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029465   +   end;
MPRINT(EM_DIAGRAM):   end;
2029466   +end;
MPRINT(EM_DIAGRAM):   end;
2029467   +
2029468   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2029469   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2029470   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2029471   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2029472   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
2029473   +end;
MPRINT(EM_DIAGRAM):   end;
2029474   +
2029475   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2029476   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2029477   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2029478   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2029479   +
2029480   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
2029481   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
2029482   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
2029483   +
2029484   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
2029485   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
2029486   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
2029487   +
2029488   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
2029489   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
2029490   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
2029491   +
2029492   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2029493   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2029494   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
2029495   +
2029496   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2029497   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2029498   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
2029499   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
2029500   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
2029501   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
2029502   +
2029503   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
2029504   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
2029505   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
2029506   +
2029507   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
2029508   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
2029509   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
2029510   +
2029511   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2029512   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2029513   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
2029514   +
2029515   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2029516   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2029517   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
2029518   +
2029519   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2029520   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2029521   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
2029522   +
2029523   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2029524   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2029525   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
2029526   +
2029527   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
2029528   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
2029529   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
2029530   +
2029531   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2029532   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2029533   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
2029534   +
2029535   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2029536   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2029537   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
2029538   +
2029539   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2029540   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2029541   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
2029542   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
2029543   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
2029544   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
2029545   +end;
MPRINT(EM_DIAGRAM):   end;
2029546   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
2029547   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2029548   +
2029549   +REGDR1:
2029550   +
2029551   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
2029552   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2029553   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2029554   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2029555   +end;
MPRINT(EM_DIAGRAM):   end;
2029556   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029557   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2029558   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2029559   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2029560   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2029561   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2029562   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2029563   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2029564   +   end;
MPRINT(EM_DIAGRAM):   end;
2029565   +end;
MPRINT(EM_DIAGRAM):   end;
2029566   +
2029567   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2029568   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2029569   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2029570   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2029571   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2029572   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2029573   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2029574   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2029575   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2029576   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2029577   +end;
MPRINT(EM_DIAGRAM):   end;
2029578   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
2029579   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
2029580   +
2029581   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029582   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2029583   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029584   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
2029585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029586   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
2029587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029588   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
2029589   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
2029590   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
2029591   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
2029592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029593   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
2029594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029595   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
2029596   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
2029597   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
2029598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029599   +* Ensmbl14: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Scoring Code of model 7 of 7;
2029600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029602   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2029603   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2029604   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
2029605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029606   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029607   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2029608   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029609   +
2029610   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2029611   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2029612   +
2029613   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2029614   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2029615   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2029616   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
2029617   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2029618   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2029619   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2029620   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
2029621   +
2029622   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2029623   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2029624   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2029625   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2029626   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2029627   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2029628   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2029629   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2029630   +end;
MPRINT(EM_DIAGRAM):   end;
2029631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029632   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2029633   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2029634   +   end;
MPRINT(EM_DIAGRAM):   end;
2029635   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2029636   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2029637   +   end;
MPRINT(EM_DIAGRAM):   end;
2029638   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2029639   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2029640   +   end;
MPRINT(EM_DIAGRAM):   end;
2029641   +end;
MPRINT(EM_DIAGRAM):   end;
2029642   +
2029643   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2029644   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2029645   +
2029646   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
2029647   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
2029648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029650   +end;
MPRINT(EM_DIAGRAM):   end;
2029651   +
2029652   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
2029653   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
2029654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029656   +end;
MPRINT(EM_DIAGRAM):   end;
2029657   +
2029658   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2029659   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2029660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029662   +end;
MPRINT(EM_DIAGRAM):   end;
2029663   +
2029664   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
2029665   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
2029666   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029667   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029668   +end;
MPRINT(EM_DIAGRAM):   end;
2029669   +
2029670   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
2029671   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
2029672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029674   +end;
MPRINT(EM_DIAGRAM):   end;
2029675   +
2029676   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2029677   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2029678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029680   +end;
MPRINT(EM_DIAGRAM):   end;
2029681   +
2029682   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2029683   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2029684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029686   +end;
MPRINT(EM_DIAGRAM):   end;
2029687   +
2029688   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2029689   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2029690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029692   +end;
MPRINT(EM_DIAGRAM):   end;
2029693   +
2029694   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2029695   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2029696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029698   +end;
MPRINT(EM_DIAGRAM):   end;
2029699   +
2029700   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
2029701   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
2029702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029704   +end;
MPRINT(EM_DIAGRAM):   end;
2029705   +
2029706   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2029707   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2029708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029710   +end;
MPRINT(EM_DIAGRAM):   end;
2029711   +
2029712   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2029713   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2029714   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029716   +end;
MPRINT(EM_DIAGRAM):   end;
2029717   +
2029718   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2029719   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
2029720   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2029721   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
2029722   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
2029723   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
2029724   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
2029725   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2029726   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2029727   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2029728   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2029729   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2029730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2029731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029732   +end;
MPRINT(EM_DIAGRAM):   end;
2029733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029734   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2029735   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2029736   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2029737   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2029738   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2029739   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2029740   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2029741   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
2029742   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029743   +         end;
MPRINT(EM_DIAGRAM):   end;
2029744   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2029745   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2029746   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
2029747   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029748   +            end;
MPRINT(EM_DIAGRAM):   end;
2029749   +         end;
MPRINT(EM_DIAGRAM):   end;
2029750   +      end;
MPRINT(EM_DIAGRAM):   end;
2029751   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2029752   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2029753   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
2029754   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029755   +         end;
MPRINT(EM_DIAGRAM):   end;
2029756   +      end;
MPRINT(EM_DIAGRAM):   end;
2029757   +   end;
MPRINT(EM_DIAGRAM):   end;
2029758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2029759   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2029760   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
2029761   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029762   +      end;
MPRINT(EM_DIAGRAM):   end;
2029763   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2029764   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2029765   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
2029766   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
2029767   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
2029768   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
2029769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2029770   +         end;
MPRINT(EM_DIAGRAM):   end;
2029771   +      end;
MPRINT(EM_DIAGRAM):   end;
2029772   +   end;
MPRINT(EM_DIAGRAM):   end;
2029773   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2029774   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2029775   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2029776   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2029777   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2029778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2029779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2029780   +   end;
MPRINT(EM_DIAGRAM):   end;
2029781   +end;
MPRINT(EM_DIAGRAM):   end;
2029782   +
2029783   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2029784   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2029785   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2029786   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2029787   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
2029788   +end;
MPRINT(EM_DIAGRAM):   end;
2029789   +
2029790   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2029791   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2029792   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2029793   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2029794   +
2029795   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
2029796   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
2029797   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
2029798   +
2029799   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
2029800   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
2029801   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
2029802   +
2029803   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2029804   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2029805   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
2029806   +
2029807   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2029808   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2029809   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
2029810   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
2029811   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
2029812   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
2029813   +
2029814   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
2029815   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
2029816   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
2029817   +
2029818   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
2029819   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
2029820   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
2029821   +
2029822   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2029823   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2029824   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
2029825   +
2029826   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2029827   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2029828   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
2029829   +
2029830   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2029831   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2029832   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
2029833   +
2029834   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2029835   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2029836   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
2029837   +
2029838   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
2029839   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
2029840   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
2029841   +
2029842   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2029843   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2029844   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
2029845   +
2029846   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2029847   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2029848   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
2029849   +
2029850   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2029851   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2029852   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
2029853   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2029854   +
2029855   +REG5DR1:
2029856   +
2029857   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
2029858   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2029859   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2029860   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2029861   +end;
MPRINT(EM_DIAGRAM):   end;
2029862   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029863   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2029864   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2029865   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2029866   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2029867   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2029868   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2029869   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2029870   +   end;
MPRINT(EM_DIAGRAM):   end;
2029871   +end;
MPRINT(EM_DIAGRAM):   end;
2029872   +
2029873   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2029874   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2029875   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2029876   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2029877   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2029878   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2029879   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2029880   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2029881   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2029882   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2029883   +end;
MPRINT(EM_DIAGRAM):   end;
2029884   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
2029885   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
2029886   +
2029887   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029888   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2029889   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2029890   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
2029891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029892   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
2029893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029894   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
2029895   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
2029896   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
2029897   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
2029898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029899   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
2029900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029901   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
2029902   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
2029903   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
2029904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029905   +* Ensmbl14: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Average Posteriors of 7 models;
2029906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029907   +P_DepVar1 = (
2029908   +Neural10_P_DepVar1 +
2029909   +Neural9_P_DepVar1 +
2029910   +Neural3_P_DepVar1 +
2029911   +Neural2_P_DepVar1 +
2029912   +Neural4_P_DepVar1 +
2029913   +Reg_P_DepVar1 +
2029914   +Reg5_P_DepVar1
2029915   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural10_P_DepVar1 + Neural9_P_DepVar1 + Neural3_P_DepVar1 
+ Neural2_P_DepVar1 + Neural4_P_DepVar1 + Reg_P_DepVar1 + Reg5_P_DepVar1 )/7;
2029916   +P_DepVar0 = (
2029917   +Neural10_P_DepVar0 +
2029918   +Neural9_P_DepVar0 +
2029919   +Neural3_P_DepVar0 +
2029920   +Neural2_P_DepVar0 +
2029921   +Neural4_P_DepVar0 +
2029922   +Reg_P_DepVar0 +
2029923   +Reg5_P_DepVar0
2029924   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural10_P_DepVar0 + Neural9_P_DepVar0 + Neural3_P_DepVar0 
+ Neural2_P_DepVar0 + Neural4_P_DepVar0 + Reg_P_DepVar0 + Reg5_P_DepVar0 )/7;
2029925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029926   +* Ensmbl14: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Classification Vars;
2029927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029928   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2029929   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2029930   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2029931   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2029932   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2029933   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2029934   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2029935   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2029936   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2029937   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2029938   +end;
MPRINT(EM_DIAGRAM):   end;
2029939   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2029940   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2029941   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2029942   +end;
MPRINT(EM_DIAGRAM):   end;
2029943   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2029944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029945   +* Ensmbl14: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Producing Unformatted variable;
2029946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029947   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2029948   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2029949   +else
2029950   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2029951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029952   +* Ensmbl14: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing _WARN_ Variable;
2029953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029954   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2029955   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2029956   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2029957   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2029957  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2029958   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2029958  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2029959   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2029959  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2029960   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2029960  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2029961   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2029962   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2029963   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2029964   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2029965   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2029966   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2029967   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2029968   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2029969   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2029970   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2029971   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2029972   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2029973   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2029974   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2029975   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2029976   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2029977   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
2029978   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
2029979   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
2029980   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
2029981   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
2029982   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
2029983   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
2029984   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
2029985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029986   +* Ensmbl14: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing Residual Vars;
2029987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2029988   +if
2029989   +F_DepVar NE '1'
2029990   +AND F_DepVar NE '0'
2029991   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2029992   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2029993   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2029994   +end;
MPRINT(EM_DIAGRAM):   end;
2029995   +else do;
MPRINT(EM_DIAGRAM):   else do;
2029996   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2029997   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2029998   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2029999   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2030000   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2030001   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2030002   +END;
MPRINT(EM_DIAGRAM):   END;
2030003   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2030004    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2030005    quit;
2030006    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl14_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl14_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2030066    filename _pref
2030066  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
2030067    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2030068    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
2030069   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2030070   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2030071   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2030072   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2030073   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2030074   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2030075   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2030076   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2030077   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2030078   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2030079   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2030080   +LENGTH _WARN_ $4
2030081   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2030082   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2030083   +
2030084   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2030085   +
2030086   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2030087   +
2030088   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2030089   +
2030090   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2030091   +
2030092   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2030093   +
2030094   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2030095   +
2030096   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2030097   +
2030098   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2030099   +
2030100   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2030101   +
2030102   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2030103   +
2030104   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2030105   +
2030106   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2030107   +
2030108   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2030109   +
2030110   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2030111   +
2030112   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2030113   +
2030114   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2030115   +
2030116   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2030117   +
2030118   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2030119   +
2030120   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2030121   +
2030122   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2030123   +
2030124   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2030125   +
2030126   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2030127   +
2030128   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2030129   +
2030130   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2030131   +
2030132   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2030133   +
2030134   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2030135   +
2030136   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2030137   +
2030138   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2030139   +
2030140   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2030141   +
2030142   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2030143   +
2030144   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2030145   +
2030146   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2030147   +
2030148   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2030149   +
2030150   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2030151   +
2030152   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2030153   +
2030154   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2030155   +
2030156   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2030157   +
2030158   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2030159   +
2030160   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2030161   +
2030162   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2030163   +
2030164   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2030165   +
2030166   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2030167   +
2030168   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2030169   +
2030170   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2030171   +
2030172   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2030173   +
2030174   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2030175   +
2030176   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2030177   +
2030178   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2030179   +
2030180   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2030181   +
2030182   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2030183   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2030184   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2030185   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2030186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030188   +end;
MPRINT(EM_DIAGRAM):   end;
2030189   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030191   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2030192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2030194   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2030195   +   end;
MPRINT(EM_DIAGRAM):   end;
2030196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2030197   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2030198   +   end;
MPRINT(EM_DIAGRAM):   end;
2030199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030200   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2030201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030203   +   end;
MPRINT(EM_DIAGRAM):   end;
2030204   +end;
MPRINT(EM_DIAGRAM):   end;
2030205   +
2030206   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2030207   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2030208   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2030209   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2030210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030212   +end;
MPRINT(EM_DIAGRAM):   end;
2030213   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030215   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2030216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2030218   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2030219   +   end;
MPRINT(EM_DIAGRAM):   end;
2030220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2030221   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2030222   +   end;
MPRINT(EM_DIAGRAM):   end;
2030223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030224   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2030225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030227   +   end;
MPRINT(EM_DIAGRAM):   end;
2030228   +end;
MPRINT(EM_DIAGRAM):   end;
2030229   +
2030230   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2030231   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2030232   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2030233   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2030234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030236   +end;
MPRINT(EM_DIAGRAM):   end;
2030237   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030239   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2030240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2030242   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2030243   +   end;
MPRINT(EM_DIAGRAM):   end;
2030244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2030245   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2030246   +   end;
MPRINT(EM_DIAGRAM):   end;
2030247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030248   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2030249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030251   +   end;
MPRINT(EM_DIAGRAM):   end;
2030252   +end;
MPRINT(EM_DIAGRAM):   end;
2030253   +
2030254   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2030255   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2030256   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2030257   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2030258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030260   +end;
MPRINT(EM_DIAGRAM):   end;
2030261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030263   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2030264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2030266   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2030267   +   end;
MPRINT(EM_DIAGRAM):   end;
2030268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2030269   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2030270   +   end;
MPRINT(EM_DIAGRAM):   end;
2030271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030272   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2030273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030275   +   end;
MPRINT(EM_DIAGRAM):   end;
2030276   +end;
MPRINT(EM_DIAGRAM):   end;
2030277   +
2030278   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2030279   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2030280   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2030281   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2030282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030284   +end;
MPRINT(EM_DIAGRAM):   end;
2030285   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030287   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2030288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2030290   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2030291   +   end;
MPRINT(EM_DIAGRAM):   end;
2030292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2030293   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2030294   +   end;
MPRINT(EM_DIAGRAM):   end;
2030295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030296   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2030297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030299   +   end;
MPRINT(EM_DIAGRAM):   end;
2030300   +end;
MPRINT(EM_DIAGRAM):   end;
2030301   +
2030302   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2030303   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2030304   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2030305   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2030306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030308   +end;
MPRINT(EM_DIAGRAM):   end;
2030309   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030311   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2030312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2030314   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2030315   +   end;
MPRINT(EM_DIAGRAM):   end;
2030316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2030317   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2030318   +   end;
MPRINT(EM_DIAGRAM):   end;
2030319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030320   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2030321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030323   +   end;
MPRINT(EM_DIAGRAM):   end;
2030324   +end;
MPRINT(EM_DIAGRAM):   end;
2030325   +
2030326   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2030327   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2030328   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2030329   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2030330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030332   +end;
MPRINT(EM_DIAGRAM):   end;
2030333   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2030335   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2030336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030337   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2030338   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2030339   +   end;
MPRINT(EM_DIAGRAM):   end;
2030340   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2030341   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2030342   +   end;
MPRINT(EM_DIAGRAM):   end;
2030343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030344   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2030345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030347   +   end;
MPRINT(EM_DIAGRAM):   end;
2030348   +end;
MPRINT(EM_DIAGRAM):   end;
2030349   +
2030350   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2030351   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2030352   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2030353   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2030354   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2030355   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2030356   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2030357   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2030358   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2030359   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2030360   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2030361   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2030362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030364   +end;
MPRINT(EM_DIAGRAM):   end;
2030365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030366   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2030367   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2030368   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030369   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2030370   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2030371   +   end;
MPRINT(EM_DIAGRAM):   end;
2030372   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2030373   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2030374   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2030375   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2030376   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2030377   +   end;
MPRINT(EM_DIAGRAM):   end;
2030378   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2030379   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2030380   +   end;
MPRINT(EM_DIAGRAM):   end;
2030381   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2030382   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2030383   +   end;
MPRINT(EM_DIAGRAM):   end;
2030384   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2030385   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2030386   +   end;
MPRINT(EM_DIAGRAM):   end;
2030387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030388   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2030389   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2030390   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2030391   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2030392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030394   +   end;
MPRINT(EM_DIAGRAM):   end;
2030395   +end;
MPRINT(EM_DIAGRAM):   end;
2030396   +
2030397   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2030398   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2030399   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2030400   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2030401   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2030402   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2030403   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2030404   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2030405   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2030406   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2030407   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2030408   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2030409   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2030410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2030411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030412   +end;
MPRINT(EM_DIAGRAM):   end;
2030413   +else do;
MPRINT(EM_DIAGRAM):   else do;
2030414   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2030415   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2030416   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2030417   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2030418   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2030419   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2030420   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2030421   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2030422   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2030423   +         end;
MPRINT(EM_DIAGRAM):   end;
2030424   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2030425   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2030426   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2030427   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2030428   +            end;
MPRINT(EM_DIAGRAM):   end;
2030429   +         end;
MPRINT(EM_DIAGRAM):   end;
2030430   +      end;
MPRINT(EM_DIAGRAM):   end;
2030431   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2030432   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2030433   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2030434   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2030435   +         end;
MPRINT(EM_DIAGRAM):   end;
2030436   +      end;
MPRINT(EM_DIAGRAM):   end;
2030437   +   end;
MPRINT(EM_DIAGRAM):   end;
2030438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2030439   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2030440   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2030441   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2030442   +      end;
MPRINT(EM_DIAGRAM):   end;
2030443   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2030444   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2030445   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2030446   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2030447   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2030448   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2030449   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2030450   +         end;
MPRINT(EM_DIAGRAM):   end;
2030451   +      end;
MPRINT(EM_DIAGRAM):   end;
2030452   +   end;
MPRINT(EM_DIAGRAM):   end;
2030453   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2030454   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2030455   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2030456   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2030457   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2030458   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2030459   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030460   +   end;
MPRINT(EM_DIAGRAM):   end;
2030461   +end;
MPRINT(EM_DIAGRAM):   end;
2030462   +
2030463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030464   +*** Checking missing input Interval
2030465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2030466   +
2030467   +IF NMISS(
2030468   +   AcceptedCmpTotal ,
2030469   +   Age ,
2030470   +   Frq ,
2030471   +   Income ,
2030472   +   Kidhome ,
2030473   +   Mnt ,
2030474   +   MntFishProducts ,
2030475   +   MntFruits ,
2030476   +   MntGoldProds ,
2030477   +   MntMeatProducts ,
2030478   +   MntSweetProducts ,
2030479   +   MntWines ,
2030480   +   MonthsAsCustomer ,
2030481   +   NumCatalogPurchases ,
2030482   +   NumDealsPurchases ,
2030483   +   NumDistPurchases ,
2030484   +   NumStorePurchases ,
2030485   +   NumWebPurchases ,
2030486   +   NumWebVisitsMonth ,
2030487   +   RFMstat ,
2030488   +   RMntFrq ,
2030489   +   Recency ,
2030490   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2030491   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2030492   +
2030493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2030494   +END;
MPRINT(EM_DIAGRAM):   END;
2030495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030496   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2030497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2030499   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2030500   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2030501   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2030502   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2030503   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2030504   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2030505   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2030506   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2030507   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2030508   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2030509   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2030510   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2030511   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2030512   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2030513   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2030514   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2030515   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2030516   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2030517   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2030518   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2030519   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2030520   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2030521   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2030522   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2030523   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2030524   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2030525   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2030526   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2030527   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2030528   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2030529   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2030530   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2030531   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2030532   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2030533   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2030534   +END;
MPRINT(EM_DIAGRAM):   END;
2030535   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2030536   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2030537   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2030538   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2030539   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2030540   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2030541   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2030542   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2030543   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2030544   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2030545   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2030546   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2030547   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2030548   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2030549   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2030550   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2030551   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2030552   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2030553   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2030554   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2030555   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2030556   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2030557   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2030558   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2030559   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2030560   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2030561   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2030562   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2030563   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2030564   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2030565   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2030566   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2030567   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2030568   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2030569   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2030570   +   ELSE S_NumCatalogPurchases
2030571   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2030572   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2030573   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2030574   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2030575   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2030576   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2030577   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2030578   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2030579   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2030580   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2030581   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2030582   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2030583   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2030584   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2030585   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2030586   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2030587   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2030588   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2030589   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2030590   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2030591   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2030592   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2030593   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2030594   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2030595   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2030596   +END;
MPRINT(EM_DIAGRAM):   END;
2030597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030598   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2030599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030601   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2030602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030604   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2030605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030606   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2030607   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
2030608   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
2030609   +        S_Income  +    -0.43070069114587 * S_Kidhome
2030610   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
2030611   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
2030612   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
2030613   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
2030614   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
2030615   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
2030616   +          +    -0.21858146166244 * S_NumDealsPurchases
2030617   +          +     0.18409991080913 * S_NumDistPurchases
2030618   +          +     0.35683163455594 * S_NumStorePurchases
2030619   +          +     0.24429183714976 * S_NumWebPurchases
2030620   +          +     -0.1263739191616 * S_NumWebVisitsMonth
2030621   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
2030622   +        S_RMntFrq  +      0.3452503815146 * S_Recency
2030623   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
2030624   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
2030625   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
2030626   +        S_Income  +     0.24623934031778 * S_Kidhome
2030627   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
2030628   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
2030629   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
2030630   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
2030631   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
2030632   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
2030633   +          +    -0.08125614129909 * S_NumDealsPurchases
2030634   +          +     0.38003696656333 * S_NumDistPurchases
2030635   +          +     0.22006494588298 * S_NumStorePurchases
2030636   +          +     0.26217639358993 * S_NumWebPurchases
2030637   +          +    -0.56905781005459 * S_NumWebVisitsMonth
2030638   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
2030639   +        S_RMntFrq  +     0.33060213336674 * S_Recency
2030640   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
2030641   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
2030642   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
2030643   +        S_Income  +     0.18597632724783 * S_Kidhome
2030644   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
2030645   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
2030646   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
2030647   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
2030648   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
2030649   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
2030650   +          +     0.08121213946217 * S_NumDealsPurchases
2030651   +          +    -0.04963282234139 * S_NumDistPurchases
2030652   +          +    -0.09521586837775 * S_NumStorePurchases
2030653   +          +     0.00630626523742 * S_NumWebPurchases
2030654   +          +    -0.03891587920939 * S_NumWebVisitsMonth
2030655   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
2030656   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
2030657   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
2030658   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
2030659   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
2030660   +        S_Income  +     0.25356767518099 * S_Kidhome
2030661   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
2030662   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
2030663   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
2030664   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
2030665   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
2030666   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
2030667   +          +     0.83749876944877 * S_NumDealsPurchases
2030668   +          +     0.29636537008068 * S_NumDistPurchases
2030669   +          +    -0.61202052257506 * S_NumStorePurchases
2030670   +          +    -0.96921731415369 * S_NumWebPurchases
2030671   +          +     0.10056455703323 * S_NumWebVisitsMonth
2030672   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
2030673   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
2030674   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
2030675   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
2030676   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
2030677   +        S_Income  +    -0.66239517276633 * S_Kidhome
2030678   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
2030679   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
2030680   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
2030681   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
2030682   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
2030683   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
2030684   +          +     0.63122884753912 * S_NumDealsPurchases
2030685   +          +     0.00285388491049 * S_NumDistPurchases
2030686   +          +    -0.76222252593182 * S_NumStorePurchases
2030687   +          +    -0.71485070772733 * S_NumWebPurchases
2030688   +          +     1.59020450778179 * S_NumWebVisitsMonth
2030689   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
2030690   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
2030691   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
2030692   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
2030693   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
2030694   +        S_Income  +    -0.22662005590555 * S_Kidhome
2030695   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
2030696   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
2030697   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
2030698   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
2030699   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
2030700   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
2030701   +          +    -0.28143084367284 * S_NumDealsPurchases
2030702   +          +     0.09640746756361 * S_NumDistPurchases
2030703   +          +      0.1754994442449 * S_NumStorePurchases
2030704   +          +     0.14321475617403 * S_NumWebPurchases
2030705   +          +     -0.1908048876137 * S_NumWebVisitsMonth
2030706   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
2030707   +        S_RMntFrq  +     0.02280616139018 * S_Recency
2030708   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
2030709   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
2030710   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
2030711   +        S_Income  +    -0.45643247613458 * S_Kidhome
2030712   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
2030713   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
2030714   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
2030715   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
2030716   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
2030717   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
2030718   +          +    -0.14623073736275 * S_NumDealsPurchases
2030719   +          +      0.1591142102614 * S_NumDistPurchases
2030720   +          +     0.10364624011419 * S_NumStorePurchases
2030721   +          +     0.21545343951201 * S_NumWebPurchases
2030722   +          +     0.61096997379603 * S_NumWebVisitsMonth
2030723   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
2030724   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
2030725   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
2030726   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
2030727   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
2030728   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
2030729   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
2030730   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
2030731   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
2030732   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
2030733   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
2030734   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
2030735   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
2030736   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
2030737   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
2030738   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
2030739   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
2030740   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
2030741   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
2030742   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
2030743   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
2030744   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
2030745   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
2030746   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
2030747   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
2030748   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
2030749   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
2030750   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
2030751   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
2030752   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
2030753   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
2030754   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
2030755   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
2030756   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
2030757   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
2030758   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
2030759   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
2030760   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
2030761   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
2030762   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
2030763   +        EducationGraduation  +     0.00389495660452 * EducationMaster
2030764   +          +     0.39856598367829 * Marital_StatusDivorced
2030765   +          +    -0.45922754552461 * Marital_StatusMarried
2030766   +          +     0.41270195301891 * Marital_StatusSingle
2030767   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
2030768   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
2030769   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
2030770   +        EducationGraduation  +      0.2609956614651 * EducationMaster
2030771   +          +     0.12002180366932 * Marital_StatusDivorced
2030772   +          +     0.50693056076018 * Marital_StatusMarried
2030773   +          +    -0.40828651697464 * Marital_StatusSingle
2030774   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
2030775   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
2030776   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
2030777   +        EducationGraduation  +     0.20017847825938 * EducationMaster
2030778   +          +    -0.05075621283629 * Marital_StatusDivorced
2030779   +          +     0.06731276969307 * Marital_StatusMarried
2030780   +          +     0.20458391966582 * Marital_StatusSingle
2030781   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
2030782   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
2030783   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
2030784   +        EducationGraduation  +     0.28829384238085 * EducationMaster
2030785   +          +    -0.37925185401218 * Marital_StatusDivorced
2030786   +          +     0.62971134740586 * Marital_StatusMarried
2030787   +          +    -0.36562351730859 * Marital_StatusSingle
2030788   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
2030789   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
2030790   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
2030791   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
2030792   +          +     0.84382044664305 * Marital_StatusDivorced
2030793   +          +    -0.84062627203871 * Marital_StatusMarried
2030794   +          +     0.74100406031127 * Marital_StatusSingle
2030795   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
2030796   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
2030797   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
2030798   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
2030799   +          +     -0.1195105091383 * Marital_StatusDivorced
2030800   +          +    -0.13486422945269 * Marital_StatusMarried
2030801   +          +     0.33592403429156 * Marital_StatusSingle
2030802   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
2030803   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
2030804   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
2030805   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
2030806   +          +     0.14792293029589 * Marital_StatusDivorced
2030807   +          +    -0.96003393582564 * Marital_StatusMarried
2030808   +          +     0.64637652355384 * Marital_StatusSingle
2030809   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
2030810   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
2030811   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
2030812   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
2030813   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
2030814   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
2030815   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
2030816   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
2030817   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2030818   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2030819   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2030820   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2030821   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2030822   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2030823   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2030824   +END;
MPRINT(EM_DIAGRAM):   END;
2030825   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2030826   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2030827   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2030828   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2030829   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2030830   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2030831   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2030832   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2030833   +END;
MPRINT(EM_DIAGRAM):   END;
2030834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030835   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2030836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030837   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2030838   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
2030839   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
2030840   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
2030841   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
2030842   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
2030843   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2030844   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2030845   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2030846   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2030847   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2030848   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2030849   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2030850   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2030851   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2030852   +END;
MPRINT(EM_DIAGRAM):   END;
2030853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2030854   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2030855   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2030856   +END;
MPRINT(EM_DIAGRAM):   END;
2030857   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2030858   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2030859   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2030860   +END;
MPRINT(EM_DIAGRAM):   END;
2030861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030862   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2030863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2030864   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2030865   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2030866   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2030867   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2030868   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2030869   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2030870   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2030871   +END;
MPRINT(EM_DIAGRAM):   END;
2030872   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2030873   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2030874   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2030875   +drop
2030876   +H11
2030877   +H12
2030878   +H13
2030879   +H14
2030880   +H15
2030881   +H16
2030882   +H17
2030883   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2030884   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2030885    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2030886    quit;
2030887    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2030888    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2030889    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2030890    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
2030891    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2030892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030893    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2030894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030895    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030896    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
2030897    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030899    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2030900    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2030901    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2030902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030903    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
2030904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2030905    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2030906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030908    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2030909    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2030910    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030911    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030912    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2030913    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2030913  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

2030914    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030915    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2030916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030917    filename _pref
2030917  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2030918    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2030919    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2030920   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2030921   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2030922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2030923   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2030924   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2030925   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2030926    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2030927    quit;
2030928    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2030929    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2030930    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2030931    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2030932    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2030933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030934    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2030935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030937    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2030938    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030939    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030940    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2030941    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2030942    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2030943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2030944    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2030945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030946    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2030947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030949    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2030950    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2030951    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030952    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030953    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2030954    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2030954  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2030955    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030956    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2030957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030958    filename _pref
2030958  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2030959    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2030960    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2030961   +
2030962   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2030963   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2030963  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2030964   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2030965   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2030966   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2030967   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2030968   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2030969    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2030970    quit;
2030971    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2030972    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2030973    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2030974    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2030975    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2030976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2030977    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2030978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030980    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2030981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030983    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2030984    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2030985    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2030986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030987    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2030988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030989    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2030990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2030993    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2030994    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2030995    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030996    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2030997    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2030997  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2030998    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2030999    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2031000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031001    filename _pref
2031001  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2031002    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2031003    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2031004   +
2031005   +
2031006   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2031007   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2031008   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2031009   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2031010   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2031011   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031012   +
2031013   +
2031014   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2031015   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2031016   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2031017   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2031018   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2031019   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031020   +
2031021   +
2031022   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2031023   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2031024   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2031025   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2031026   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2031027   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031028   +
2031029   +
2031030   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2031031   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2031032   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2031033   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2031034   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2031035   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031036   +
2031037   +
2031038   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2031039   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2031040   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2031041   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2031042   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2031043   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031044   +
2031045   +
2031046   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2031047   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2031048   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2031049   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2031050   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2031051   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031052   +
2031053   +
2031054   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2031055   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2031056   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2031057   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2031058   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2031059   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031060   +
2031061   +
2031062   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2031063   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2031064   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2031065   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2031066   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2031067   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2031068   +if
2031069   +_FILTERNORM1 not in ( '.')
2031070   + and
2031071   +_FILTERNORM2 not in ( '.')
2031072   + and
2031073   +_FILTERNORM3 not in ( '.')
2031074   + and
2031075   +_FILTERNORM4 not in ( '.')
2031076   + and
2031077   +_FILTERNORM5 not in ( '.')
2031078   + and
2031079   +_FILTERNORM6 not in ( '.')
2031080   + and
2031081   +_FILTERNORM7 not in ( ' ')
2031082   + and
2031083   +_FILTERNORM8 not in ( ' ')
2031084   +and
2031085   +( Dt_Customer ne .)
2031086   +and ( Income ne . and (Income<=107000))
2031087   +and ( Kidhome ne .)
2031088   +and ( MntFishProducts ne .)
2031089   +and ( MntFruits ne .)
2031090   +and ( MntGoldProds ne .)
2031091   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2031092   +and ( MntSweetProducts ne .)
2031093   +and ( MntWines ne .)
2031094   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2031095   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2031096   +and ( NumStorePurchases ne .)
2031097   +and ( NumWebPurchases ne .)
2031098   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2031099   +and ( Recency ne .)
2031100   +and ( Teenhome ne .)
2031101   +and ( Year_Birth ne .)
2031102   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2031103   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2031104   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2031105   +end;
MPRINT(EM_DIAGRAM):   end;
2031106   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2031107   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2031108    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2031109    quit;
2031110    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2031111    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2031112    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2031113    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2031114    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2031115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031116    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2031117    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2031118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031119    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2031120    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2031121    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2031122    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2031123    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2031124    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2031125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031126    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2031127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2031128    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2031129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2031130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031131    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2031132    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2031133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2031134    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2031135    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2031136    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2031136  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2031137    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031138    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2031139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031140    %macro varDept(fcmpdata=,id=);
2031141    %global nobs&id scoreFlag&id;
2031142    %let scoreFlag&id = 0;
2031143    %if &id=1 or ^&fcmpStart %then %do;
2031144    proc sort data=&fcmpdata out=_temp&id nodupkey;
2031145    by NAME;
2031146    where id=&id and LHS in( %let j=1;
2031147    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2031148    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2031149    "&var" %let j = %eval(&j+1);
2031150    %end;
2031151    );
2031152    run;
2031153    %let dsid = %sysfunc(open(_temp&id));
2031154    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2031155    %let dsid = %sysfunc(close(&dsid));
2031156    %if &&nobs&id %then %do;
2031157    %let scoreFlag&id = 1;
2031158    %let fcmpStart = 1;
2031159    %end;
2031160    %else %let fcmpStart = 0;
2031161    %end;
2031162    %else %do;
2031163    proc sort data=&fcmpdata out=_tempid;
2031164    where id=&id;
2031165    by LHS;
2031166    run;
2031167    %let dsid = %sysfunc(open(_tempid));
2031168    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2031169    %let dsid = %sysfunc(close(&dsid));
2031170    %if ^&&nobs&id %then %do;
2031171    proc datasets lib=work nolist;
2031172    delete _tempid;
2031173    run;
2031174    quit;
2031175    %end;
2031176    %else %do;
2031177    data _tempAll;
2031178    set %let j=%eval(&id-1);
2031179    %do x=1 %to &j;
2031180    %if &&nobs&x %then %do;
2031181    _temp&x %end;
2031182    %end;
2031183    ;
2031184    run;
2031185    proc sql;
2031186    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2031186  ! work._tempid p2 where p.name=p2.lhs;
2031187    quit;
2031188    data _temp&id;
2031189    set _temp&id;
2031190    where LHS ne '' and NAME ne '' and Node ne '';
2031191    run;
2031192    proc datasets lib=work nolist;
2031193    delete _tempAll;
2031194    run;
2031195    %let dsid = %sysfunc(open(_temp&id));
2031196    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2031197    %let dsid = %sysfunc(close(&dsid));
2031198    %if ^&&nobs&id %then %do;
2031199    proc datasets lib=work nolist;
2031200    delete _temp&id;
2031201    run;
2031202    quit;
2031203    %end;
2031204    %else %do;
2031205    %let scoreFlag&id = 1;
2031206    data _temp&id;
2031207    set _temp&id;
2031208    where LHS ne NAME and node ne '';
2031209    run;
2031210    %let dsid = %sysfunc(open(_temp&id));
2031211    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2031212    %let dsid = %sysfunc(close(&dsid));
2031213    %if ^&&nobs&id %then %do;
2031214    proc datasets lib=work nolist;
2031215    delete _temp&id;
2031216    run;
2031217    quit;
2031218    %end;
2031219    %else %do;
2031220    proc sort data=_temp&id nodupkey;
2031221    by LHS NAME;
2031222    run;
2031223    %end;
2031224    %end;
2031225    %end;
2031226    %end;
2031227    %mend varDept;
2031228    %macro optCode(outdata=fcmpdata);
2031229    %global fcmpStart;
2031230    %let fcmpStart = 0;
2031231    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2031232    %let NumNodes=9;
2031233    %do k=1 %to &NumNodes;
2031234    %vardept(fcmpdata=&outdata, id=&k);
2031235    %end;
2031236    %mend optCode;
2031237    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.40 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2031238    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2031239    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2031240    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2031241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031242    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2031243    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2031244    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2031245    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031246    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2031247    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2031247  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2031248    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2031249    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2031250    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2031251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2031252    filename _pref
2031252  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
2031253    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2031254    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
2031255   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2031256   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2031257   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2031258   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2031259   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2031260   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2031261   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2031262   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2031263   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2031264   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2031265   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2031266   +LENGTH _WARN_ $4
2031267   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2031268   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2031269   +
2031270   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2031271   +
2031272   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2031273   +
2031274   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2031275   +
2031276   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2031277   +
2031278   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2031279   +
2031280   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2031281   +
2031282   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2031283   +
2031284   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2031285   +
2031286   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2031287   +
2031288   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2031289   +
2031290   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2031291   +
2031292   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2031293   +
2031294   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2031295   +
2031296   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2031297   +
2031298   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2031299   +
2031300   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2031301   +
2031302   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2031303   +
2031304   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2031305   +
2031306   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2031307   +
2031308   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2031309   +
2031310   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2031311   +
2031312   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2031313   +
2031314   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2031315   +
2031316   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2031317   +
2031318   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2031319   +
2031320   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2031321   +
2031322   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2031323   +
2031324   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2031325   +
2031326   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2031327   +
2031328   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2031329   +
2031330   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2031331   +
2031332   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2031333   +
2031334   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2031335   +
2031336   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2031337   +
2031338   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2031339   +
2031340   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2031341   +
2031342   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2031343   +
2031344   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2031345   +
2031346   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2031347   +
2031348   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2031349   +
2031350   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2031351   +
2031352   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2031353   +
2031354   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2031355   +
2031356   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2031357   +
2031358   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2031359   +
2031360   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2031361   +
2031362   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2031363   +
2031364   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2031365   +
2031366   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2031367   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2031368   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2031369   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2031370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031372   +end;
MPRINT(EM_DIAGRAM):   end;
2031373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031375   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2031376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2031378   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2031379   +   end;
MPRINT(EM_DIAGRAM):   end;
2031380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2031381   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2031382   +   end;
MPRINT(EM_DIAGRAM):   end;
2031383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031384   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2031385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031387   +   end;
MPRINT(EM_DIAGRAM):   end;
2031388   +end;
MPRINT(EM_DIAGRAM):   end;
2031389   +
2031390   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2031391   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2031392   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2031393   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2031394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031396   +end;
MPRINT(EM_DIAGRAM):   end;
2031397   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031399   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2031400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2031402   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2031403   +   end;
MPRINT(EM_DIAGRAM):   end;
2031404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2031405   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2031406   +   end;
MPRINT(EM_DIAGRAM):   end;
2031407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031408   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2031409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031411   +   end;
MPRINT(EM_DIAGRAM):   end;
2031412   +end;
MPRINT(EM_DIAGRAM):   end;
2031413   +
2031414   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2031415   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2031416   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2031417   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2031418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031420   +end;
MPRINT(EM_DIAGRAM):   end;
2031421   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031423   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2031424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2031426   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2031427   +   end;
MPRINT(EM_DIAGRAM):   end;
2031428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2031429   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2031430   +   end;
MPRINT(EM_DIAGRAM):   end;
2031431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031432   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2031433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031435   +   end;
MPRINT(EM_DIAGRAM):   end;
2031436   +end;
MPRINT(EM_DIAGRAM):   end;
2031437   +
2031438   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2031439   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2031440   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2031441   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2031442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031444   +end;
MPRINT(EM_DIAGRAM):   end;
2031445   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031447   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2031448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031449   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2031450   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2031451   +   end;
MPRINT(EM_DIAGRAM):   end;
2031452   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2031453   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2031454   +   end;
MPRINT(EM_DIAGRAM):   end;
2031455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031456   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2031457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031459   +   end;
MPRINT(EM_DIAGRAM):   end;
2031460   +end;
MPRINT(EM_DIAGRAM):   end;
2031461   +
2031462   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2031463   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2031464   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2031465   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2031466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031468   +end;
MPRINT(EM_DIAGRAM):   end;
2031469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031471   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2031472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2031474   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2031475   +   end;
MPRINT(EM_DIAGRAM):   end;
2031476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2031477   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2031478   +   end;
MPRINT(EM_DIAGRAM):   end;
2031479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031480   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2031481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031483   +   end;
MPRINT(EM_DIAGRAM):   end;
2031484   +end;
MPRINT(EM_DIAGRAM):   end;
2031485   +
2031486   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2031487   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2031488   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2031489   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2031490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031492   +end;
MPRINT(EM_DIAGRAM):   end;
2031493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031495   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2031496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2031498   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2031499   +   end;
MPRINT(EM_DIAGRAM):   end;
2031500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2031501   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2031502   +   end;
MPRINT(EM_DIAGRAM):   end;
2031503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031504   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2031505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031507   +   end;
MPRINT(EM_DIAGRAM):   end;
2031508   +end;
MPRINT(EM_DIAGRAM):   end;
2031509   +
2031510   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2031511   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2031512   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2031513   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2031514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031516   +end;
MPRINT(EM_DIAGRAM):   end;
2031517   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031518   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2031519   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2031520   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031521   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2031522   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2031523   +   end;
MPRINT(EM_DIAGRAM):   end;
2031524   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2031525   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2031526   +   end;
MPRINT(EM_DIAGRAM):   end;
2031527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031528   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2031529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031531   +   end;
MPRINT(EM_DIAGRAM):   end;
2031532   +end;
MPRINT(EM_DIAGRAM):   end;
2031533   +
2031534   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2031535   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2031536   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2031537   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2031538   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2031539   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2031540   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2031541   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2031542   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2031543   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2031544   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2031545   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2031546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031548   +end;
MPRINT(EM_DIAGRAM):   end;
2031549   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031550   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2031551   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2031552   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031553   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2031554   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2031555   +   end;
MPRINT(EM_DIAGRAM):   end;
2031556   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2031557   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2031558   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2031559   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2031560   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2031561   +   end;
MPRINT(EM_DIAGRAM):   end;
2031562   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2031563   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2031564   +   end;
MPRINT(EM_DIAGRAM):   end;
2031565   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2031566   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2031567   +   end;
MPRINT(EM_DIAGRAM):   end;
2031568   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2031569   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2031570   +   end;
MPRINT(EM_DIAGRAM):   end;
2031571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031572   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2031573   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2031574   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2031575   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2031576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031578   +   end;
MPRINT(EM_DIAGRAM):   end;
2031579   +end;
MPRINT(EM_DIAGRAM):   end;
2031580   +
2031581   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2031582   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2031583   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2031584   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2031585   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2031586   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2031587   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2031588   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2031589   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2031590   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2031591   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2031592   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2031593   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2031594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2031595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031596   +end;
MPRINT(EM_DIAGRAM):   end;
2031597   +else do;
MPRINT(EM_DIAGRAM):   else do;
2031598   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2031599   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2031600   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2031601   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2031602   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2031603   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2031604   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2031605   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2031606   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2031607   +         end;
MPRINT(EM_DIAGRAM):   end;
2031608   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2031609   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2031610   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2031611   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2031612   +            end;
MPRINT(EM_DIAGRAM):   end;
2031613   +         end;
MPRINT(EM_DIAGRAM):   end;
2031614   +      end;
MPRINT(EM_DIAGRAM):   end;
2031615   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2031616   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2031617   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2031618   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2031619   +         end;
MPRINT(EM_DIAGRAM):   end;
2031620   +      end;
MPRINT(EM_DIAGRAM):   end;
2031621   +   end;
MPRINT(EM_DIAGRAM):   end;
2031622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2031623   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2031624   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2031625   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2031626   +      end;
MPRINT(EM_DIAGRAM):   end;
2031627   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2031628   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2031629   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2031630   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2031631   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2031632   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2031633   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2031634   +         end;
MPRINT(EM_DIAGRAM):   end;
2031635   +      end;
MPRINT(EM_DIAGRAM):   end;
2031636   +   end;
MPRINT(EM_DIAGRAM):   end;
2031637   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2031638   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2031639   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2031640   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2031641   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2031642   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2031643   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031644   +   end;
MPRINT(EM_DIAGRAM):   end;
2031645   +end;
MPRINT(EM_DIAGRAM):   end;
2031646   +
2031647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031648   +*** Checking missing input Interval
2031649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2031650   +
2031651   +IF NMISS(
2031652   +   AcceptedCmpTotal ,
2031653   +   Age ,
2031654   +   Frq ,
2031655   +   Income ,
2031656   +   Kidhome ,
2031657   +   Mnt ,
2031658   +   MntFishProducts ,
2031659   +   MntFruits ,
2031660   +   MntGoldProds ,
2031661   +   MntMeatProducts ,
2031662   +   MntSweetProducts ,
2031663   +   MntWines ,
2031664   +   MonthsAsCustomer ,
2031665   +   NumCatalogPurchases ,
2031666   +   NumDealsPurchases ,
2031667   +   NumDistPurchases ,
2031668   +   NumStorePurchases ,
2031669   +   NumWebPurchases ,
2031670   +   NumWebVisitsMonth ,
2031671   +   RFMstat ,
2031672   +   RMntFrq ,
2031673   +   Recency ,
2031674   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2031675   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2031676   +
2031677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2031678   +END;
MPRINT(EM_DIAGRAM):   END;
2031679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031680   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2031681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2031683   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2031684   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2031685   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2031686   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2031687   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2031688   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2031689   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2031690   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2031691   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2031692   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2031693   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2031694   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2031695   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2031696   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2031697   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2031698   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2031699   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2031700   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2031701   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2031702   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2031703   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2031704   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2031705   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2031706   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2031707   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2031708   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2031709   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2031710   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2031711   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2031712   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2031713   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2031714   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2031715   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2031716   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2031717   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2031718   +END;
MPRINT(EM_DIAGRAM):   END;
2031719   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2031720   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2031721   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2031722   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2031723   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2031724   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2031725   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2031726   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2031727   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2031728   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2031729   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2031730   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2031731   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2031732   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2031733   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2031734   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2031735   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2031736   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2031737   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2031738   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2031739   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2031740   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2031741   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2031742   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2031743   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2031744   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2031745   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2031746   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2031747   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2031748   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2031749   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2031750   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2031751   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2031752   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2031753   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2031754   +   ELSE S_NumCatalogPurchases
2031755   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2031756   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2031757   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2031758   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2031759   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2031760   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2031761   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2031762   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2031763   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2031764   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2031765   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2031766   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2031767   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2031768   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2031769   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2031770   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2031771   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2031772   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2031773   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2031774   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2031775   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2031776   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2031777   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2031778   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2031779   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2031780   +END;
MPRINT(EM_DIAGRAM):   END;
2031781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031782   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2031783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031785   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2031786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031788   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2031789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2031791   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
2031792   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
2031793   +        S_Income  +    -0.14142658616971 * S_Kidhome
2031794   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
2031795   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
2031796   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
2031797   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
2031798   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
2031799   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
2031800   +          +     0.96837841774168 * S_NumDealsPurchases
2031801   +          +      0.2846105381881 * S_NumDistPurchases
2031802   +          +    -0.69514041792943 * S_NumStorePurchases
2031803   +          +    -0.96425407351749 * S_NumWebPurchases
2031804   +          +     0.79545449599683 * S_NumWebVisitsMonth
2031805   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
2031806   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
2031807   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
2031808   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
2031809   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
2031810   +        S_Income  +    -0.55432195959203 * S_Kidhome
2031811   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
2031812   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
2031813   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
2031814   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
2031815   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
2031816   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
2031817   +          +      0.2190184330724 * S_NumDealsPurchases
2031818   +          +    -0.01682909442896 * S_NumDistPurchases
2031819   +          +    -0.70244951048552 * S_NumStorePurchases
2031820   +          +     -0.3057457659316 * S_NumWebPurchases
2031821   +          +     0.95928538762715 * S_NumWebVisitsMonth
2031822   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
2031823   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
2031824   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
2031825   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
2031826   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
2031827   +        S_Income  +    -0.06354861159882 * S_Kidhome
2031828   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
2031829   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
2031830   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
2031831   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
2031832   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
2031833   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
2031834   +          +    -0.21394230159696 * S_NumDealsPurchases
2031835   +          +    -0.23833771124663 * S_NumDistPurchases
2031836   +          +     0.45832031017813 * S_NumStorePurchases
2031837   +          +    -0.30226952040179 * S_NumWebPurchases
2031838   +          +    -0.29796387184481 * S_NumWebVisitsMonth
2031839   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
2031840   +        S_RMntFrq  +     0.87067423045258 * S_Recency
2031841   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
2031842   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
2031843   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
2031844   +        S_Income  +    -0.04839586846715 * S_Kidhome
2031845   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
2031846   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
2031847   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
2031848   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
2031849   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
2031850   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
2031851   +          +    -0.43749647771198 * S_NumDealsPurchases
2031852   +          +     0.21263473847472 * S_NumDistPurchases
2031853   +          +     0.26102168039141 * S_NumStorePurchases
2031854   +          +     0.54921725943657 * S_NumWebPurchases
2031855   +          +    -0.75685843498122 * S_NumWebVisitsMonth
2031856   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
2031857   +        S_RMntFrq  +     0.80536256822347 * S_Recency
2031858   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
2031859   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
2031860   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
2031861   +        S_Income  +     0.71499527198653 * S_Kidhome
2031862   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
2031863   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
2031864   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
2031865   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
2031866   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
2031867   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
2031868   +          +     0.09436067776126 * S_NumDealsPurchases
2031869   +          +    -0.02824201859641 * S_NumDistPurchases
2031870   +          +    -0.06770433780564 * S_NumStorePurchases
2031871   +          +    -0.07177620319715 * S_NumWebPurchases
2031872   +          +    -0.75589979685266 * S_NumWebVisitsMonth
2031873   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
2031874   +        S_RMntFrq  +     0.94408788011429 * S_Recency
2031875   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
2031876   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
2031877   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
2031878   +        S_Income  +    -0.63474522042341 * S_Kidhome
2031879   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
2031880   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
2031881   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
2031882   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
2031883   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
2031884   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
2031885   +          +    -0.51154511343396 * S_NumDealsPurchases
2031886   +          +    -0.52422915823572 * S_NumDistPurchases
2031887   +          +     0.30305498422357 * S_NumStorePurchases
2031888   +          +     0.12197321559338 * S_NumWebPurchases
2031889   +          +    -0.10520335422769 * S_NumWebVisitsMonth
2031890   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
2031891   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
2031892   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
2031893   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
2031894   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
2031895   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
2031896   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
2031897   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
2031898   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
2031899   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
2031900   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
2031901   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
2031902   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
2031903   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
2031904   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
2031905   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
2031906   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
2031907   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
2031908   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
2031909   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
2031910   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
2031911   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
2031912   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
2031913   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
2031914   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
2031915   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
2031916   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
2031917   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
2031918   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
2031919   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
2031920   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
2031921   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
2031922   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
2031923   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
2031924   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
2031925   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
2031926   +          +     0.10234616400375 * Marital_StatusDivorced
2031927   +          +     0.27961650739075 * Marital_StatusMarried
2031928   +          +    -0.40239488723767 * Marital_StatusSingle
2031929   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
2031930   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
2031931   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
2031932   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
2031933   +          +     0.46385792428023 * Marital_StatusDivorced
2031934   +          +    -0.62344590646391 * Marital_StatusMarried
2031935   +          +     0.61767209252062 * Marital_StatusSingle
2031936   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
2031937   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
2031938   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
2031939   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
2031940   +          +    -0.07839612590836 * Marital_StatusDivorced
2031941   +          +     0.35316864062221 * Marital_StatusMarried
2031942   +          +    -0.10730136429834 * Marital_StatusSingle
2031943   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
2031944   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
2031945   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
2031946   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
2031947   +          +    -0.09942175269886 * Marital_StatusDivorced
2031948   +          +     0.24385460865335 * Marital_StatusMarried
2031949   +          +    -0.33658955096296 * Marital_StatusSingle
2031950   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
2031951   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
2031952   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
2031953   +        EducationGraduation  +     0.37352174719748 * EducationMaster
2031954   +          +    -0.08047852561096 * Marital_StatusDivorced
2031955   +          +     1.16485862694561 * Marital_StatusMarried
2031956   +          +    -0.94140251178566 * Marital_StatusSingle
2031957   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
2031958   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
2031959   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
2031960   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
2031961   +          +    -0.16621963893391 * Marital_StatusDivorced
2031962   +          +    -0.44542186297324 * Marital_StatusMarried
2031963   +          +     0.42176133228308 * Marital_StatusSingle
2031964   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
2031965   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
2031966   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
2031967   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
2031968   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
2031969   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
2031970   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
2031971   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2031972   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2031973   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2031974   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2031975   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2031976   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2031977   +END;
MPRINT(EM_DIAGRAM):   END;
2031978   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2031979   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2031980   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2031981   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2031982   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2031983   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2031984   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2031985   +END;
MPRINT(EM_DIAGRAM):   END;
2031986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031987   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2031988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2031989   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2031990   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
2031991   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
2031992   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
2031993   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
2031994   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2031995   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2031996   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2031997   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2031998   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2031999   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2032000   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2032001   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2032002   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2032003   +END;
MPRINT(EM_DIAGRAM):   END;
2032004   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2032005   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2032006   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2032007   +END;
MPRINT(EM_DIAGRAM):   END;
2032008   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2032009   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2032010   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2032011   +END;
MPRINT(EM_DIAGRAM):   END;
2032012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032013   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2032014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032015   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2032016   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2032017   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2032018   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2032019   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2032020   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2032021   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2032022   +END;
MPRINT(EM_DIAGRAM):   END;
2032023   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2032024   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2032025   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2032026   +drop
2032027   +H11
2032028   +H12
2032029   +H13
2032030   +H14
2032031   +H15
2032032   +H16
2032033   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2032034   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2032035    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2032036    quit;
2032037    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2032038    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2032039    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2032040    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
2032041    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2032042    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032043    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2032044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032046    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
2032047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032049    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032050    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2032051    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2032052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032053    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
2032054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2032055    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2032056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032058    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032059    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2032060    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032061    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032062    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2032063    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2032063  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

2032064    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032065    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2032066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032067    filename _pref
2032067  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2032068    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2032069    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2032070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2032071   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2032072   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2032073   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2032074   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2032075   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2032076    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2032077    quit;
2032078    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2032079    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2032080    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2032081    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2032082    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2032083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032084    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2032085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2032087    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2032088    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032090    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032091    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2032092    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2032093    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032094    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2032095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2032096    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2032097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032099    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032100    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2032101    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032102    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032103    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2032104    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2032104  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2032105    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032106    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2032107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032108    filename _pref
2032108  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2032109    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2032110    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2032111   +
2032112   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2032113   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2032113  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2032114   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2032115   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2032116   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2032117   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2032118   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2032119    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2032120    quit;
2032121    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2032122    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2032123    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2032124    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2032125    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2032126    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032127    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2032128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032130    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2032131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032132    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032133    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032134    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2032135    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2032136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032137    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2032138    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032139    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2032140    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032141    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032142    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032143    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2032144    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032145    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032146    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2032147    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2032147  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2032148    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032149    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2032150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032151    filename _pref
2032151  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2032152    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2032153    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2032154   +
2032155   +
2032156   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2032157   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2032158   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2032159   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2032160   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2032161   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032162   +
2032163   +
2032164   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2032165   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2032166   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2032167   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2032168   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2032169   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032170   +
2032171   +
2032172   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2032173   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2032174   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2032175   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2032176   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2032177   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032178   +
2032179   +
2032180   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2032181   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2032182   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2032183   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2032184   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2032185   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032186   +
2032187   +
2032188   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2032189   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2032190   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2032191   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2032192   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2032193   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032194   +
2032195   +
2032196   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2032197   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2032198   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2032199   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2032200   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2032201   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032202   +
2032203   +
2032204   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2032205   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2032206   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2032207   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2032208   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2032209   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032210   +
2032211   +
2032212   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2032213   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2032214   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2032215   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2032216   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2032217   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2032218   +if
2032219   +_FILTERNORM1 not in ( '.')
2032220   + and
2032221   +_FILTERNORM2 not in ( '.')
2032222   + and
2032223   +_FILTERNORM3 not in ( '.')
2032224   + and
2032225   +_FILTERNORM4 not in ( '.')
2032226   + and
2032227   +_FILTERNORM5 not in ( '.')
2032228   + and
2032229   +_FILTERNORM6 not in ( '.')
2032230   + and
2032231   +_FILTERNORM7 not in ( ' ')
2032232   + and
2032233   +_FILTERNORM8 not in ( ' ')
2032234   +and
2032235   +( Dt_Customer ne .)
2032236   +and ( Income ne . and (Income<=107000))
2032237   +and ( Kidhome ne .)
2032238   +and ( MntFishProducts ne .)
2032239   +and ( MntFruits ne .)
2032240   +and ( MntGoldProds ne .)
2032241   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2032242   +and ( MntSweetProducts ne .)
2032243   +and ( MntWines ne .)
2032244   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2032245   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2032246   +and ( NumStorePurchases ne .)
2032247   +and ( NumWebPurchases ne .)
2032248   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2032249   +and ( Recency ne .)
2032250   +and ( Teenhome ne .)
2032251   +and ( Year_Birth ne .)
2032252   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2032253   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2032254   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2032255   +end;
MPRINT(EM_DIAGRAM):   end;
2032256   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2032257   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2032258    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2032259    quit;
2032260    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2032261    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2032262    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2032263    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2032264    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2032265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032266    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2032267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032269    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2032270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032272    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032273    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2032274    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2032275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032276    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2032277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2032278    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2032279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032281    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2032282    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2032283    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2032284    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032285    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2032286    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2032286  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2032287    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032288    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2032289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032290    %macro varDept(fcmpdata=,id=);
2032291    %global nobs&id scoreFlag&id;
2032292    %let scoreFlag&id = 0;
2032293    %if &id=1 or ^&fcmpStart %then %do;
2032294    proc sort data=&fcmpdata out=_temp&id nodupkey;
2032295    by NAME;
2032296    where id=&id and LHS in( %let j=1;
2032297    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2032298    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2032299    "&var" %let j = %eval(&j+1);
2032300    %end;
2032301    );
2032302    run;
2032303    %let dsid = %sysfunc(open(_temp&id));
2032304    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2032305    %let dsid = %sysfunc(close(&dsid));
2032306    %if &&nobs&id %then %do;
2032307    %let scoreFlag&id = 1;
2032308    %let fcmpStart = 1;
2032309    %end;
2032310    %else %let fcmpStart = 0;
2032311    %end;
2032312    %else %do;
2032313    proc sort data=&fcmpdata out=_tempid;
2032314    where id=&id;
2032315    by LHS;
2032316    run;
2032317    %let dsid = %sysfunc(open(_tempid));
2032318    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2032319    %let dsid = %sysfunc(close(&dsid));
2032320    %if ^&&nobs&id %then %do;
2032321    proc datasets lib=work nolist;
2032322    delete _tempid;
2032323    run;
2032324    quit;
2032325    %end;
2032326    %else %do;
2032327    data _tempAll;
2032328    set %let j=%eval(&id-1);
2032329    %do x=1 %to &j;
2032330    %if &&nobs&x %then %do;
2032331    _temp&x %end;
2032332    %end;
2032333    ;
2032334    run;
2032335    proc sql;
2032336    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2032336  ! work._tempid p2 where p.name=p2.lhs;
2032337    quit;
2032338    data _temp&id;
2032339    set _temp&id;
2032340    where LHS ne '' and NAME ne '' and Node ne '';
2032341    run;
2032342    proc datasets lib=work nolist;
2032343    delete _tempAll;
2032344    run;
2032345    %let dsid = %sysfunc(open(_temp&id));
2032346    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2032347    %let dsid = %sysfunc(close(&dsid));
2032348    %if ^&&nobs&id %then %do;
2032349    proc datasets lib=work nolist;
2032350    delete _temp&id;
2032351    run;
2032352    quit;
2032353    %end;
2032354    %else %do;
2032355    %let scoreFlag&id = 1;
2032356    data _temp&id;
2032357    set _temp&id;
2032358    where LHS ne NAME and node ne '';
2032359    run;
2032360    %let dsid = %sysfunc(open(_temp&id));
2032361    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2032362    %let dsid = %sysfunc(close(&dsid));
2032363    %if ^&&nobs&id %then %do;
2032364    proc datasets lib=work nolist;
2032365    delete _temp&id;
2032366    run;
2032367    quit;
2032368    %end;
2032369    %else %do;
2032370    proc sort data=_temp&id nodupkey;
2032371    by LHS NAME;
2032372    run;
2032373    %end;
2032374    %end;
2032375    %end;
2032376    %end;
2032377    %mend varDept;
2032378    %macro optCode(outdata=fcmpdata);
2032379    %global fcmpStart;
2032380    %let fcmpStart = 0;
2032381    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2032382    %let NumNodes=9;
2032383    %do k=1 %to &NumNodes;
2032384    %vardept(fcmpdata=&outdata, id=&k);
2032385    %end;
2032386    %mend optCode;
2032387    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2032388    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2032389    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2032390    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2032391    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032392    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2032393    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2032394    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2032395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032396    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2032397    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2032397  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2032398    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2032399    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2032400    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2032401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2032402    filename _pref
2032402  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
2032403    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2032404    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
2032405   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2032406   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2032407   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2032408   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2032409   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2032410   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2032411   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2032412   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2032413   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2032414   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2032415   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2032416   +LENGTH _WARN_ $4
2032417   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2032418   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2032419   +
2032420   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2032421   +
2032422   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2032423   +
2032424   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2032425   +
2032426   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2032427   +
2032428   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2032429   +
2032430   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2032431   +
2032432   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2032433   +
2032434   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2032435   +
2032436   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2032437   +
2032438   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2032439   +
2032440   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2032441   +
2032442   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2032443   +
2032444   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2032445   +
2032446   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2032447   +
2032448   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2032449   +
2032450   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2032451   +
2032452   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2032453   +
2032454   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2032455   +
2032456   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2032457   +
2032458   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2032459   +
2032460   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2032461   +
2032462   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2032463   +
2032464   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2032465   +
2032466   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2032467   +
2032468   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2032469   +
2032470   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2032471   +
2032472   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2032473   +
2032474   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2032475   +
2032476   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2032477   +
2032478   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2032479   +
2032480   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2032481   +
2032482   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2032483   +
2032484   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2032485   +
2032486   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2032487   +
2032488   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2032489   +
2032490   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2032491   +
2032492   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2032493   +
2032494   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2032495   +
2032496   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2032497   +
2032498   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2032499   +
2032500   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2032501   +
2032502   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2032503   +
2032504   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2032505   +
2032506   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2032507   +
2032508   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2032509   +
2032510   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2032511   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2032512   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2032513   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2032514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032516   +end;
MPRINT(EM_DIAGRAM):   end;
2032517   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032518   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032519   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2032520   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032521   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2032522   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2032523   +   end;
MPRINT(EM_DIAGRAM):   end;
2032524   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2032525   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2032526   +   end;
MPRINT(EM_DIAGRAM):   end;
2032527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032528   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2032529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032531   +   end;
MPRINT(EM_DIAGRAM):   end;
2032532   +end;
MPRINT(EM_DIAGRAM):   end;
2032533   +
2032534   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2032535   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2032536   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2032537   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2032538   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032539   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032540   +end;
MPRINT(EM_DIAGRAM):   end;
2032541   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032542   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032543   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2032544   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032545   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2032546   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2032547   +   end;
MPRINT(EM_DIAGRAM):   end;
2032548   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2032549   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2032550   +   end;
MPRINT(EM_DIAGRAM):   end;
2032551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032552   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2032553   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032554   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032555   +   end;
MPRINT(EM_DIAGRAM):   end;
2032556   +end;
MPRINT(EM_DIAGRAM):   end;
2032557   +
2032558   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2032559   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2032560   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2032561   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2032562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032564   +end;
MPRINT(EM_DIAGRAM):   end;
2032565   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032566   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032567   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2032568   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032569   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2032570   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2032571   +   end;
MPRINT(EM_DIAGRAM):   end;
2032572   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2032573   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2032574   +   end;
MPRINT(EM_DIAGRAM):   end;
2032575   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032576   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2032577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032579   +   end;
MPRINT(EM_DIAGRAM):   end;
2032580   +end;
MPRINT(EM_DIAGRAM):   end;
2032581   +
2032582   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2032583   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2032584   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2032585   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2032586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032588   +end;
MPRINT(EM_DIAGRAM):   end;
2032589   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032591   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2032592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032593   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2032594   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2032595   +   end;
MPRINT(EM_DIAGRAM):   end;
2032596   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2032597   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2032598   +   end;
MPRINT(EM_DIAGRAM):   end;
2032599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032600   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2032601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032603   +   end;
MPRINT(EM_DIAGRAM):   end;
2032604   +end;
MPRINT(EM_DIAGRAM):   end;
2032605   +
2032606   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2032607   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2032608   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2032609   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2032610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032612   +end;
MPRINT(EM_DIAGRAM):   end;
2032613   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032615   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2032616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032617   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2032618   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2032619   +   end;
MPRINT(EM_DIAGRAM):   end;
2032620   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2032621   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2032622   +   end;
MPRINT(EM_DIAGRAM):   end;
2032623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032624   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2032625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032627   +   end;
MPRINT(EM_DIAGRAM):   end;
2032628   +end;
MPRINT(EM_DIAGRAM):   end;
2032629   +
2032630   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2032631   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2032632   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2032633   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2032634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032636   +end;
MPRINT(EM_DIAGRAM):   end;
2032637   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032639   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2032640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032641   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2032642   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2032643   +   end;
MPRINT(EM_DIAGRAM):   end;
2032644   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2032645   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2032646   +   end;
MPRINT(EM_DIAGRAM):   end;
2032647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032648   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2032649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032651   +   end;
MPRINT(EM_DIAGRAM):   end;
2032652   +end;
MPRINT(EM_DIAGRAM):   end;
2032653   +
2032654   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2032655   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2032656   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2032657   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2032658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032660   +end;
MPRINT(EM_DIAGRAM):   end;
2032661   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2032663   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2032664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032665   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2032666   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2032667   +   end;
MPRINT(EM_DIAGRAM):   end;
2032668   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2032669   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2032670   +   end;
MPRINT(EM_DIAGRAM):   end;
2032671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032672   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2032673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032675   +   end;
MPRINT(EM_DIAGRAM):   end;
2032676   +end;
MPRINT(EM_DIAGRAM):   end;
2032677   +
2032678   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2032679   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2032680   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2032681   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2032682   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2032683   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2032684   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2032685   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2032686   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2032687   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2032688   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2032689   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2032690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032692   +end;
MPRINT(EM_DIAGRAM):   end;
2032693   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032694   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2032695   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2032696   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032697   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2032698   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2032699   +   end;
MPRINT(EM_DIAGRAM):   end;
2032700   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2032701   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2032702   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2032703   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2032704   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2032705   +   end;
MPRINT(EM_DIAGRAM):   end;
2032706   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2032707   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2032708   +   end;
MPRINT(EM_DIAGRAM):   end;
2032709   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2032710   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2032711   +   end;
MPRINT(EM_DIAGRAM):   end;
2032712   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2032713   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2032714   +   end;
MPRINT(EM_DIAGRAM):   end;
2032715   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032716   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2032717   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2032718   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2032719   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2032720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032722   +   end;
MPRINT(EM_DIAGRAM):   end;
2032723   +end;
MPRINT(EM_DIAGRAM):   end;
2032724   +
2032725   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2032726   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2032727   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2032728   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2032729   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2032730   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2032731   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2032732   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2032733   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2032734   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2032735   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2032736   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2032737   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2032738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2032739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032740   +end;
MPRINT(EM_DIAGRAM):   end;
2032741   +else do;
MPRINT(EM_DIAGRAM):   else do;
2032742   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2032743   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2032744   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2032745   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2032746   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2032747   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2032748   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2032749   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2032750   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2032751   +         end;
MPRINT(EM_DIAGRAM):   end;
2032752   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2032753   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2032754   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2032755   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2032756   +            end;
MPRINT(EM_DIAGRAM):   end;
2032757   +         end;
MPRINT(EM_DIAGRAM):   end;
2032758   +      end;
MPRINT(EM_DIAGRAM):   end;
2032759   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2032760   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2032761   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2032762   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2032763   +         end;
MPRINT(EM_DIAGRAM):   end;
2032764   +      end;
MPRINT(EM_DIAGRAM):   end;
2032765   +   end;
MPRINT(EM_DIAGRAM):   end;
2032766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2032767   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2032768   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2032769   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2032770   +      end;
MPRINT(EM_DIAGRAM):   end;
2032771   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2032772   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2032773   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2032774   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2032775   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2032776   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2032777   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2032778   +         end;
MPRINT(EM_DIAGRAM):   end;
2032779   +      end;
MPRINT(EM_DIAGRAM):   end;
2032780   +   end;
MPRINT(EM_DIAGRAM):   end;
2032781   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2032782   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2032783   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2032784   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2032785   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2032786   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2032787   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032788   +   end;
MPRINT(EM_DIAGRAM):   end;
2032789   +end;
MPRINT(EM_DIAGRAM):   end;
2032790   +
2032791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032792   +*** Checking missing input Interval
2032793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2032794   +
2032795   +IF NMISS(
2032796   +   AcceptedCmpTotal ,
2032797   +   Age ,
2032798   +   Frq ,
2032799   +   Income ,
2032800   +   Kidhome ,
2032801   +   Mnt ,
2032802   +   MntFishProducts ,
2032803   +   MntFruits ,
2032804   +   MntGoldProds ,
2032805   +   MntMeatProducts ,
2032806   +   MntSweetProducts ,
2032807   +   MntWines ,
2032808   +   MonthsAsCustomer ,
2032809   +   NumCatalogPurchases ,
2032810   +   NumDealsPurchases ,
2032811   +   NumDistPurchases ,
2032812   +   NumStorePurchases ,
2032813   +   NumWebPurchases ,
2032814   +   NumWebVisitsMonth ,
2032815   +   RFMstat ,
2032816   +   RMntFrq ,
2032817   +   Recency ,
2032818   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2032819   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2032820   +
2032821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2032822   +END;
MPRINT(EM_DIAGRAM):   END;
2032823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032824   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2032825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032826   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2032827   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2032828   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2032829   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2032830   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2032831   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2032832   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2032833   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2032834   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2032835   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2032836   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2032837   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2032838   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2032839   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2032840   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2032841   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2032842   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2032843   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2032844   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2032845   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2032846   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2032847   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2032848   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2032849   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2032850   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2032851   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2032852   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2032853   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2032854   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2032855   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2032856   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2032857   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2032858   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2032859   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2032860   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2032861   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2032862   +END;
MPRINT(EM_DIAGRAM):   END;
2032863   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2032864   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2032865   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2032866   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2032867   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2032868   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2032869   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2032870   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2032871   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2032872   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2032873   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2032874   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2032875   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2032876   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2032877   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2032878   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2032879   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2032880   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2032881   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2032882   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2032883   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2032884   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2032885   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2032886   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2032887   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2032888   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2032889   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2032890   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2032891   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2032892   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2032893   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2032894   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2032895   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2032896   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2032897   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2032898   +   ELSE S_NumCatalogPurchases
2032899   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2032900   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2032901   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2032902   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2032903   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2032904   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2032905   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2032906   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2032907   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2032908   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2032909   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2032910   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2032911   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2032912   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2032913   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2032914   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2032915   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2032916   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2032917   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2032918   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2032919   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2032920   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2032921   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2032922   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2032923   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2032924   +END;
MPRINT(EM_DIAGRAM):   END;
2032925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032926   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2032927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032929   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2032930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032932   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2032933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2032934   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2032935   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
2032936   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
2032937   +        S_Income  +     0.51123266106809 * S_Kidhome
2032938   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
2032939   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
2032940   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
2032941   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
2032942   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
2032943   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
2032944   +          +     1.34095732961105 * S_NumDealsPurchases
2032945   +          +     0.16605991333252 * S_NumDistPurchases
2032946   +          +    -0.61746267736536 * S_NumStorePurchases
2032947   +          +    -0.61812800689506 * S_NumWebPurchases
2032948   +          +     1.44649145055387 * S_NumWebVisitsMonth
2032949   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
2032950   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
2032951   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
The SAS System

-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
2032952   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
2032953   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
2032954   +        S_Income  +     0.52295323651199 * S_Kidhome
2032955   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
2032956   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
2032957   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
2032958   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
2032959   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
2032960   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
2032961   +          +    -0.72543332317832 * S_NumDealsPurchases
2032962   +          +    -0.05245472565117 * S_NumDistPurchases
2032963   +          +     1.00667431585298 * S_NumStorePurchases
2032964   +          +     1.02836701470962 * S_NumWebPurchases
2032965   +          +    -1.25666606219201 * S_NumWebVisitsMonth
2032966   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
2032967   +        S_RMntFrq  +     1.50910531484632 * S_Recency
2032968   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
2032969   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
2032970   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
2032971   +        S_Income  +     0.58025720116696 * S_Kidhome
2032972   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
2032973   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
2032974   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
2032975   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
2032976   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
2032977   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
2032978   +          +     0.12670438262487 * S_NumDealsPurchases
2032979   +          +    -0.46113523834333 * S_NumDistPurchases
2032980   +          +     0.07074818720567 * S_NumStorePurchases
2032981   +          +    -0.05066645783537 * S_NumWebPurchases
2032982   +          +    -0.65729410185804 * S_NumWebVisitsMonth
2032983   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
2032984   +        S_RMntFrq  +      1.4337242246086 * S_Recency
2032985   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
2032986   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
2032987   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
2032988   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
2032989   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
2032990   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
2032991   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
2032992   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
2032993   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
2032994   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
2032995   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
2032996   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
2032997   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
2032998   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
2032999   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
2033000   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
2033001   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
2033002   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
2033003   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
2033004   +          +     0.12692950862511 * Marital_StatusDivorced
2033005   +          +     0.10026497666167 * Marital_StatusMarried
2033006   +          +    -0.19893864592813 * Marital_StatusSingle
2033007   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
2033008   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
2033009   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
2033010   +        EducationGraduation  +     0.05580498138108 * EducationMaster
2033011   +          +    -0.16785192490199 * Marital_StatusDivorced
2033012   +          +     0.13153695130362 * Marital_StatusMarried
2033013   +          +    -0.50411544587104 * Marital_StatusSingle
2033014   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
2033015   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
2033016   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
2033017   +        EducationGraduation  +     0.21882736952662 * EducationMaster
2033018   +          +    -0.62654958087044 * Marital_StatusDivorced
2033019   +          +     1.86250132393341 * Marital_StatusMarried
2033020   +          +    -1.37067556451928 * Marital_StatusSingle
2033021   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
2033022   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
2033023   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
2033024   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
2033025   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2033026   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2033027   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2033028   +END;
MPRINT(EM_DIAGRAM):   END;
2033029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2033030   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2033031   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2033032   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2033033   +END;
MPRINT(EM_DIAGRAM):   END;
2033034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033035   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2033036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033037   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2033038   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
2033039   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
2033040   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
2033041   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2033042   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2033043   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2033044   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2033045   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2033046   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2033047   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2033048   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2033049   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2033050   +END;
MPRINT(EM_DIAGRAM):   END;
2033051   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2033052   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2033053   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2033054   +END;
MPRINT(EM_DIAGRAM):   END;
2033055   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2033056   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2033057   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2033058   +END;
MPRINT(EM_DIAGRAM):   END;
2033059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033060   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2033061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033062   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2033063   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2033064   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2033065   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2033066   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2033067   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2033068   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2033069   +END;
MPRINT(EM_DIAGRAM):   END;
2033070   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2033071   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2033072   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2033073   +drop
2033074   +H11
2033075   +H12
2033076   +H13
2033077   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2033078   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2033079    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2033080    quit;
2033081    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2033082    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2033083    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2033084    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
2033085    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2033086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033087    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2033088    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033090    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
2033091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2033093    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033094    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2033095    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2033096    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033097    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
2033098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

2033099    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2033100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033101    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033102    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033103    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2033104    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033105    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033106    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2033107    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2033107  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

2033108    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033109    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2033110    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033111    filename _pref
2033111  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2033112    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2033113    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2033114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2033115   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2033116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2033117   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2033118   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2033119   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2033120    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2033121    quit;
2033122    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2033123    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2033124    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2033125    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2033126    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2033127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033128    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2033129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033131    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2033132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033134    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033135    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2033136    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2033137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033138    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2033139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2033140    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2033141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033142    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033143    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033144    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2033145    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033146    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033147    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2033148    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2033148  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2033149    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033150    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2033151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033152    filename _pref
2033152  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2033153    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2033154    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2033155   +
2033156   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2033157   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2033157  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2033158   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2033159   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2033160   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2033161   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2033162   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2033163    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2033164    quit;
2033165    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2033166    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2033167    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2033168    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2033169    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2033170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033171    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2033172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033174    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2033175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033177    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033178    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2033179    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2033180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033181    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2033182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033183    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2033184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033185    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033186    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033187    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2033188    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033189    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033190    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2033191    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2033191  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2033192    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033193    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2033194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033195    filename _pref
2033195  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2033196    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2033197    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2033198   +
2033199   +
2033200   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2033201   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2033202   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2033203   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2033204   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2033205   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033206   +
2033207   +
2033208   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2033209   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2033210   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2033211   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2033212   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2033213   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033214   +
2033215   +
2033216   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2033217   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2033218   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2033219   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2033220   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2033221   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033222   +
2033223   +
2033224   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2033225   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2033226   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2033227   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2033228   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2033229   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033230   +
2033231   +
2033232   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2033233   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2033234   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2033235   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2033236   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2033237   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033238   +
2033239   +
2033240   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2033241   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2033242   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2033243   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2033244   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2033245   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033246   +
2033247   +
2033248   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2033249   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2033250   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2033251   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2033252   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2033253   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033254   +
2033255   +
2033256   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2033257   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2033258   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2033259   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2033260   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2033261   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2033262   +if
2033263   +_FILTERNORM1 not in ( '.')
2033264   + and
2033265   +_FILTERNORM2 not in ( '.')
2033266   + and
2033267   +_FILTERNORM3 not in ( '.')
2033268   + and
2033269   +_FILTERNORM4 not in ( '.')
2033270   + and
2033271   +_FILTERNORM5 not in ( '.')
2033272   + and
2033273   +_FILTERNORM6 not in ( '.')
2033274   + and
2033275   +_FILTERNORM7 not in ( ' ')
2033276   + and
2033277   +_FILTERNORM8 not in ( ' ')
2033278   +and
2033279   +( Dt_Customer ne .)
2033280   +and ( Income ne . and (Income<=107000))
2033281   +and ( Kidhome ne .)
2033282   +and ( MntFishProducts ne .)
2033283   +and ( MntFruits ne .)
2033284   +and ( MntGoldProds ne .)
2033285   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2033286   +and ( MntSweetProducts ne .)
2033287   +and ( MntWines ne .)
2033288   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2033289   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2033290   +and ( NumStorePurchases ne .)
2033291   +and ( NumWebPurchases ne .)
2033292   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2033293   +and ( Recency ne .)
2033294   +and ( Teenhome ne .)
2033295   +and ( Year_Birth ne .)
2033296   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2033297   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2033298   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2033299   +end;
MPRINT(EM_DIAGRAM):   end;
2033300   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2033301   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2033302    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2033303    quit;
2033304    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2033305    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2033306    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2033307    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2033308    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2033309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033310    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2033311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033313    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2033314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033316    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033317    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2033318    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2033319    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033320    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2033321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2033322    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2033323    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033324    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033325    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2033326    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2033327    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2033328    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033329    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2033330    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2033330  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2033331    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033332    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2033333    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033334    %macro varDept(fcmpdata=,id=);
2033335    %global nobs&id scoreFlag&id;
2033336    %let scoreFlag&id = 0;
2033337    %if &id=1 or ^&fcmpStart %then %do;
2033338    proc sort data=&fcmpdata out=_temp&id nodupkey;
2033339    by NAME;
2033340    where id=&id and LHS in( %let j=1;
2033341    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2033342    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2033343    "&var" %let j = %eval(&j+1);
2033344    %end;
2033345    );
2033346    run;
2033347    %let dsid = %sysfunc(open(_temp&id));
2033348    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2033349    %let dsid = %sysfunc(close(&dsid));
2033350    %if &&nobs&id %then %do;
2033351    %let scoreFlag&id = 1;
2033352    %let fcmpStart = 1;
2033353    %end;
2033354    %else %let fcmpStart = 0;
2033355    %end;
2033356    %else %do;
2033357    proc sort data=&fcmpdata out=_tempid;
2033358    where id=&id;
2033359    by LHS;
2033360    run;
2033361    %let dsid = %sysfunc(open(_tempid));
2033362    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2033363    %let dsid = %sysfunc(close(&dsid));
2033364    %if ^&&nobs&id %then %do;
2033365    proc datasets lib=work nolist;
2033366    delete _tempid;
2033367    run;
2033368    quit;
2033369    %end;
2033370    %else %do;
2033371    data _tempAll;
2033372    set %let j=%eval(&id-1);
2033373    %do x=1 %to &j;
2033374    %if &&nobs&x %then %do;
2033375    _temp&x %end;
2033376    %end;
2033377    ;
2033378    run;
2033379    proc sql;
2033380    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2033380  ! work._tempid p2 where p.name=p2.lhs;
2033381    quit;
2033382    data _temp&id;
2033383    set _temp&id;
2033384    where LHS ne '' and NAME ne '' and Node ne '';
2033385    run;
2033386    proc datasets lib=work nolist;
2033387    delete _tempAll;
2033388    run;
2033389    %let dsid = %sysfunc(open(_temp&id));
2033390    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2033391    %let dsid = %sysfunc(close(&dsid));
2033392    %if ^&&nobs&id %then %do;
2033393    proc datasets lib=work nolist;
2033394    delete _temp&id;
2033395    run;
2033396    quit;
2033397    %end;
2033398    %else %do;
2033399    %let scoreFlag&id = 1;
2033400    data _temp&id;
2033401    set _temp&id;
2033402    where LHS ne NAME and node ne '';
2033403    run;
2033404    %let dsid = %sysfunc(open(_temp&id));
2033405    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2033406    %let dsid = %sysfunc(close(&dsid));
2033407    %if ^&&nobs&id %then %do;
2033408    proc datasets lib=work nolist;
2033409    delete _temp&id;
2033410    run;
2033411    quit;
2033412    %end;
2033413    %else %do;
2033414    proc sort data=_temp&id nodupkey;
2033415    by LHS NAME;
2033416    run;
2033417    %end;
2033418    %end;
2033419    %end;
2033420    %end;
2033421    %mend varDept;
2033422    %macro optCode(outdata=fcmpdata);
2033423    %global fcmpStart;
2033424    %let fcmpStart = 0;
2033425    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2033426    %let NumNodes=9;
2033427    %do k=1 %to &NumNodes;
2033428    %vardept(fcmpdata=&outdata, id=&k);
2033429    %end;
2033430    %mend optCode;
2033431    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2033432    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2033433    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2033434    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2033435    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033436    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2033437    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2033438    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2033439    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2033440    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2033441    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2033441  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2033442    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033443    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2033444    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2033445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2033446    filename _pref
2033446  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
2033447    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2033448    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
2033449   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2033450   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2033451   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2033452   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2033453   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2033454   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2033455   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2033456   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2033457   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2033458   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2033459   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2033460   +LENGTH _WARN_ $4
2033461   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2033462   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2033463   +
2033464   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2033465   +
2033466   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2033467   +
2033468   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2033469   +
2033470   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2033471   +
2033472   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2033473   +
2033474   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2033475   +
2033476   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2033477   +
2033478   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2033479   +
2033480   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2033481   +
2033482   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2033483   +
2033484   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2033485   +
2033486   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2033487   +
2033488   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2033489   +
2033490   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2033491   +
2033492   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2033493   +
2033494   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2033495   +
2033496   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2033497   +
2033498   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2033499   +
2033500   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2033501   +
2033502   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2033503   +
2033504   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2033505   +
2033506   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2033507   +
2033508   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2033509   +
2033510   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2033511   +
2033512   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2033513   +
2033514   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2033515   +
2033516   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2033517   +
2033518   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2033519   +
2033520   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2033521   +
2033522   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2033523   +
2033524   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2033525   +
2033526   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2033527   +
2033528   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2033529   +
2033530   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2033531   +
2033532   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2033533   +
2033534   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2033535   +
2033536   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2033537   +
2033538   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2033539   +
2033540   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2033541   +
2033542   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2033543   +
2033544   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2033545   +
2033546   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2033547   +
2033548   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2033549   +
2033550   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2033551   +
2033552   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2033553   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2033554   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2033555   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2033556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033558   +end;
MPRINT(EM_DIAGRAM):   end;
2033559   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033561   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2033562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2033564   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2033565   +   end;
MPRINT(EM_DIAGRAM):   end;
2033566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2033567   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2033568   +   end;
MPRINT(EM_DIAGRAM):   end;
2033569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033570   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2033571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033573   +   end;
MPRINT(EM_DIAGRAM):   end;
2033574   +end;
MPRINT(EM_DIAGRAM):   end;
2033575   +
2033576   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2033577   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2033578   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2033579   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2033580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033582   +end;
MPRINT(EM_DIAGRAM):   end;
2033583   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033585   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2033586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2033588   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2033589   +   end;
MPRINT(EM_DIAGRAM):   end;
2033590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2033591   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2033592   +   end;
MPRINT(EM_DIAGRAM):   end;
2033593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033594   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2033595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033597   +   end;
MPRINT(EM_DIAGRAM):   end;
2033598   +end;
MPRINT(EM_DIAGRAM):   end;
2033599   +
2033600   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2033601   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2033602   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2033603   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2033604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033606   +end;
MPRINT(EM_DIAGRAM):   end;
2033607   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033609   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2033610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2033612   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2033613   +   end;
MPRINT(EM_DIAGRAM):   end;
2033614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2033615   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2033616   +   end;
MPRINT(EM_DIAGRAM):   end;
2033617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033618   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2033619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033621   +   end;
MPRINT(EM_DIAGRAM):   end;
2033622   +end;
MPRINT(EM_DIAGRAM):   end;
2033623   +
2033624   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2033625   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2033626   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2033627   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2033628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033630   +end;
MPRINT(EM_DIAGRAM):   end;
2033631   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033633   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2033634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2033636   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2033637   +   end;
MPRINT(EM_DIAGRAM):   end;
2033638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2033639   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2033640   +   end;
MPRINT(EM_DIAGRAM):   end;
2033641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033642   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2033643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033645   +   end;
MPRINT(EM_DIAGRAM):   end;
2033646   +end;
MPRINT(EM_DIAGRAM):   end;
2033647   +
2033648   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2033649   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2033650   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2033651   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2033652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033654   +end;
MPRINT(EM_DIAGRAM):   end;
2033655   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033657   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2033658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2033660   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2033661   +   end;
MPRINT(EM_DIAGRAM):   end;
2033662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2033663   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2033664   +   end;
MPRINT(EM_DIAGRAM):   end;
2033665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033666   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2033667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033669   +   end;
MPRINT(EM_DIAGRAM):   end;
2033670   +end;
MPRINT(EM_DIAGRAM):   end;
2033671   +
2033672   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2033673   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2033674   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2033675   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2033676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033678   +end;
MPRINT(EM_DIAGRAM):   end;
2033679   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033681   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2033682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2033684   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2033685   +   end;
MPRINT(EM_DIAGRAM):   end;
2033686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2033687   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2033688   +   end;
MPRINT(EM_DIAGRAM):   end;
2033689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033690   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2033691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033693   +   end;
MPRINT(EM_DIAGRAM):   end;
2033694   +end;
MPRINT(EM_DIAGRAM):   end;
2033695   +
2033696   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2033697   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2033698   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2033699   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2033700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033702   +end;
MPRINT(EM_DIAGRAM):   end;
2033703   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2033705   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2033706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033707   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2033708   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2033709   +   end;
MPRINT(EM_DIAGRAM):   end;
2033710   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2033711   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2033712   +   end;
MPRINT(EM_DIAGRAM):   end;
2033713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033714   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2033715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033717   +   end;
MPRINT(EM_DIAGRAM):   end;
2033718   +end;
MPRINT(EM_DIAGRAM):   end;
2033719   +
2033720   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2033721   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2033722   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2033723   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2033724   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2033725   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2033726   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2033727   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2033728   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2033729   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2033730   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2033731   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2033732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033734   +end;
MPRINT(EM_DIAGRAM):   end;
2033735   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033736   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2033737   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2033738   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033739   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2033740   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2033741   +   end;
MPRINT(EM_DIAGRAM):   end;
2033742   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2033743   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2033744   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2033745   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2033746   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2033747   +   end;
MPRINT(EM_DIAGRAM):   end;
2033748   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2033749   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2033750   +   end;
MPRINT(EM_DIAGRAM):   end;
2033751   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2033752   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2033753   +   end;
MPRINT(EM_DIAGRAM):   end;
2033754   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2033755   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2033756   +   end;
MPRINT(EM_DIAGRAM):   end;
2033757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033758   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2033759   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2033760   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2033761   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2033762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033764   +   end;
MPRINT(EM_DIAGRAM):   end;
2033765   +end;
MPRINT(EM_DIAGRAM):   end;
2033766   +
2033767   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2033768   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2033769   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2033770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2033771   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2033772   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2033773   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2033774   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2033775   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2033776   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2033777   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2033778   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2033779   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2033780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2033781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033782   +end;
MPRINT(EM_DIAGRAM):   end;
2033783   +else do;
MPRINT(EM_DIAGRAM):   else do;
2033784   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2033785   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2033786   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2033787   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2033788   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2033789   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2033790   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2033791   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2033792   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2033793   +         end;
MPRINT(EM_DIAGRAM):   end;
2033794   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2033795   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2033796   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2033797   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2033798   +            end;
MPRINT(EM_DIAGRAM):   end;
2033799   +         end;
MPRINT(EM_DIAGRAM):   end;
2033800   +      end;
MPRINT(EM_DIAGRAM):   end;
2033801   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2033802   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2033803   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2033804   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2033805   +         end;
MPRINT(EM_DIAGRAM):   end;
2033806   +      end;
MPRINT(EM_DIAGRAM):   end;
2033807   +   end;
MPRINT(EM_DIAGRAM):   end;
2033808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2033809   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2033810   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2033811   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2033812   +      end;
MPRINT(EM_DIAGRAM):   end;
2033813   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2033814   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2033815   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2033816   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2033817   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2033818   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2033819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2033820   +         end;
MPRINT(EM_DIAGRAM):   end;
2033821   +      end;
MPRINT(EM_DIAGRAM):   end;
2033822   +   end;
MPRINT(EM_DIAGRAM):   end;
2033823   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2033824   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2033825   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2033826   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2033827   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2033828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2033829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033830   +   end;
MPRINT(EM_DIAGRAM):   end;
2033831   +end;
MPRINT(EM_DIAGRAM):   end;
2033832   +
2033833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033834   +*** Checking missing input Interval
2033835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2033836   +
2033837   +IF NMISS(
2033838   +   AcceptedCmpTotal ,
2033839   +   Age ,
2033840   +   Frq ,
2033841   +   Income ,
2033842   +   Kidhome ,
2033843   +   Mnt ,
2033844   +   MntFishProducts ,
2033845   +   MntFruits ,
2033846   +   MntGoldProds ,
2033847   +   MntMeatProducts ,
2033848   +   MntSweetProducts ,
2033849   +   MntWines ,
2033850   +   MonthsAsCustomer ,
2033851   +   NumCatalogPurchases ,
2033852   +   NumDealsPurchases ,
2033853   +   NumDistPurchases ,
2033854   +   NumStorePurchases ,
2033855   +   NumWebPurchases ,
2033856   +   NumWebVisitsMonth ,
2033857   +   RFMstat ,
2033858   +   RMntFrq ,
2033859   +   Recency ,
2033860   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2033861   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2033862   +
2033863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2033864   +END;
MPRINT(EM_DIAGRAM):   END;
2033865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033866   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2033867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033868   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2033869   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2033870   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2033871   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2033872   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2033873   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2033874   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2033875   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2033876   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2033877   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2033878   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2033879   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2033880   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2033881   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2033882   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2033883   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2033884   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2033885   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2033886   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2033887   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2033888   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2033889   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2033890   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2033891   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2033892   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2033893   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2033894   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2033895   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2033896   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2033897   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2033898   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2033899   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2033900   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2033901   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2033902   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2033903   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2033904   +END;
MPRINT(EM_DIAGRAM):   END;
2033905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2033906   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2033907   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2033908   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2033909   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2033910   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2033911   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2033912   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2033913   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2033914   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2033915   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2033916   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2033917   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2033918   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2033919   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2033920   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2033921   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2033922   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2033923   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2033924   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2033925   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2033926   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2033927   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2033928   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2033929   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2033930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2033931   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2033932   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2033933   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2033934   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2033935   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2033936   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2033937   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2033938   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2033939   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2033940   +   ELSE S_NumCatalogPurchases
2033941   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2033942   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2033943   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2033944   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2033945   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2033946   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2033947   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2033948   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2033949   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2033950   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2033951   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2033952   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2033953   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2033954   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2033955   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2033956   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2033957   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2033958   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2033959   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2033960   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2033961   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2033962   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2033963   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2033964   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2033965   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2033966   +END;
MPRINT(EM_DIAGRAM):   END;
2033967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033968   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2033969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033971   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2033972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033974   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2033975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2033976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2033977   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
2033978   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
2033979   +        S_Income  +    -1.07615700855274 * S_Kidhome
2033980   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
2033981   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
2033982   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
2033983   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
2033984   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
2033985   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
2033986   +          +      0.3429043319369 * S_NumDealsPurchases
2033987   +          +     0.71313309767469 * S_NumDistPurchases
2033988   +          +     0.06017757740083 * S_NumStorePurchases
2033989   +          +    -0.19817724925068 * S_NumWebPurchases
2033990   +          +     1.34164122205952 * S_NumWebVisitsMonth
2033991   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
2033992   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
2033993   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
2033994   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
2033995   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
2033996   +        S_Income  +     -0.0027232441092 * S_Kidhome
2033997   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
2033998   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
2033999   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
2034000   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
2034001   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
2034002   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
2034003   +          +      0.4576973746858 * S_NumDealsPurchases
2034004   +          +     0.15590877272659 * S_NumDistPurchases
2034005   +          +    -0.33414539713736 * S_NumStorePurchases
2034006   +          +    -0.39370244666257 * S_NumWebPurchases
2034007   +          +     0.52596714886704 * S_NumWebVisitsMonth
2034008   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
2034009   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
2034010   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
2034011   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
2034012   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
2034013   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
2034014   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
2034015   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
2034016   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
2034017   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
2034018   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
2034019   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
2034020   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
2034021   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
2034022   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
2034023   +        EducationGraduation  +      -0.333138438339 * EducationMaster
2034024   +          +      0.4663802937397 * Marital_StatusDivorced
2034025   +          +    -1.27401898796099 * Marital_StatusMarried
2034026   +          +      1.3125969368079 * Marital_StatusSingle
2034027   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
2034028   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
2034029   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
2034030   +        EducationGraduation  +     0.00771527138053 * EducationMaster
2034031   +          +     0.07419179522004 * Marital_StatusDivorced
2034032   +          +     0.00234615813337 * Marital_StatusMarried
2034033   +          +    -0.00725460458412 * Marital_StatusSingle
2034034   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
2034035   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
2034036   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
2034037   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2034038   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2034039   +END;
MPRINT(EM_DIAGRAM):   END;
2034040   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2034041   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2034042   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2034043   +END;
MPRINT(EM_DIAGRAM):   END;
2034044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034045   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2034046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034047   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2034048   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
2034049   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
2034050   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2034051   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2034052   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2034053   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2034054   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2034055   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2034056   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2034057   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2034058   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2034059   +END;
MPRINT(EM_DIAGRAM):   END;
2034060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2034061   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2034062   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2034063   +END;
MPRINT(EM_DIAGRAM):   END;
2034064   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2034065   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2034066   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2034067   +END;
MPRINT(EM_DIAGRAM):   END;
2034068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034069   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2034070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034071   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2034072   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2034073   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2034074   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2034075   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2034076   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2034077   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2034078   +END;
MPRINT(EM_DIAGRAM):   END;
2034079   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2034080   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2034081   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2034082   +drop
2034083   +H11
2034084   +H12
2034085   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2034086   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2034087    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2034088    quit;
2034089    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2034090    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2034091    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2034092    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
2034093    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2034094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034095    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2034096    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034097    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034098    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
2034099    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034100    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034101    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034102    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2034103    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2034104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034105    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
2034106    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2034107    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2034108    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034109    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034110    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034111    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2034112    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034113    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034114    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2034115    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2034115  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

2034116    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034117    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2034118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034119    filename _pref
2034119  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2034120    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2034121    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2034122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2034123   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2034124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2034125   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2034126   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2034127   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2034128    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2034129    quit;
2034130    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2034131    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2034132    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2034133    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2034134    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2034135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034136    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2034137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034138    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034139    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2034140    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034141    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034142    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034143    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2034144    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2034145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034146    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2034147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2034148    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2034149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034151    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034152    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2034153    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034154    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034155    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2034156    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2034156  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2034157    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034158    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2034159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034160    filename _pref
2034160  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2034161    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2034162    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2034163   +
2034164   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2034165   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2034165  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2034166   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2034167   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2034168   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2034169   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2034170   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2034171    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2034172    quit;
2034173    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2034174    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2034175    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2034176    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2034177    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2034178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034179    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2034180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034182    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2034183    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034184    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034185    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034186    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2034187    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2034188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034189    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2034190    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034191    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2034192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034193    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034194    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034195    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2034196    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034197    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034198    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2034199    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2034199  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2034200    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034201    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2034202    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034203    filename _pref
2034203  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2034204    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2034205    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2034206   +
2034207   +
2034208   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2034209   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2034210   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2034211   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2034212   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2034213   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034214   +
2034215   +
2034216   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2034217   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2034218   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2034219   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2034220   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2034221   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034222   +
2034223   +
2034224   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2034225   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2034226   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2034227   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2034228   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2034229   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034230   +
2034231   +
2034232   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2034233   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2034234   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2034235   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2034236   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2034237   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034238   +
2034239   +
2034240   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2034241   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2034242   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2034243   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2034244   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2034245   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034246   +
2034247   +
2034248   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2034249   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2034250   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2034251   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2034252   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2034253   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034254   +
2034255   +
2034256   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2034257   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2034258   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2034259   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2034260   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2034261   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034262   +
2034263   +
2034264   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2034265   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2034266   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2034267   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2034268   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2034269   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2034270   +if
2034271   +_FILTERNORM1 not in ( '.')
2034272   + and
2034273   +_FILTERNORM2 not in ( '.')
2034274   + and
2034275   +_FILTERNORM3 not in ( '.')
2034276   + and
2034277   +_FILTERNORM4 not in ( '.')
2034278   + and
2034279   +_FILTERNORM5 not in ( '.')
2034280   + and
2034281   +_FILTERNORM6 not in ( '.')
2034282   + and
2034283   +_FILTERNORM7 not in ( ' ')
2034284   + and
2034285   +_FILTERNORM8 not in ( ' ')
2034286   +and
2034287   +( Dt_Customer ne .)
2034288   +and ( Income ne . and (Income<=107000))
2034289   +and ( Kidhome ne .)
2034290   +and ( MntFishProducts ne .)
2034291   +and ( MntFruits ne .)
2034292   +and ( MntGoldProds ne .)
2034293   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2034294   +and ( MntSweetProducts ne .)
2034295   +and ( MntWines ne .)
2034296   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2034297   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2034298   +and ( NumStorePurchases ne .)
2034299   +and ( NumWebPurchases ne .)
2034300   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2034301   +and ( Recency ne .)
2034302   +and ( Teenhome ne .)
2034303   +and ( Year_Birth ne .)
2034304   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2034305   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2034306   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2034307   +end;
MPRINT(EM_DIAGRAM):   end;
2034308   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2034309   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2034310    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2034311    quit;
2034312    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2034313    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2034314    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2034315    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2034316    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2034317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034318    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2034319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034320    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034321    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2034322    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034324    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034325    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2034326    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2034327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034328    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2034329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034330    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2034331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034333    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2034334    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2034335    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2034336    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034337    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2034338    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2034338  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2034339    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034340    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2034341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034342    %macro varDept(fcmpdata=,id=);
2034343    %global nobs&id scoreFlag&id;
2034344    %let scoreFlag&id = 0;
2034345    %if &id=1 or ^&fcmpStart %then %do;
2034346    proc sort data=&fcmpdata out=_temp&id nodupkey;
2034347    by NAME;
2034348    where id=&id and LHS in( %let j=1;
2034349    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2034350    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2034351    "&var" %let j = %eval(&j+1);
2034352    %end;
2034353    );
2034354    run;
2034355    %let dsid = %sysfunc(open(_temp&id));
2034356    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2034357    %let dsid = %sysfunc(close(&dsid));
2034358    %if &&nobs&id %then %do;
2034359    %let scoreFlag&id = 1;
2034360    %let fcmpStart = 1;
2034361    %end;
2034362    %else %let fcmpStart = 0;
2034363    %end;
2034364    %else %do;
2034365    proc sort data=&fcmpdata out=_tempid;
2034366    where id=&id;
2034367    by LHS;
2034368    run;
2034369    %let dsid = %sysfunc(open(_tempid));
2034370    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2034371    %let dsid = %sysfunc(close(&dsid));
2034372    %if ^&&nobs&id %then %do;
2034373    proc datasets lib=work nolist;
2034374    delete _tempid;
2034375    run;
2034376    quit;
2034377    %end;
2034378    %else %do;
2034379    data _tempAll;
2034380    set %let j=%eval(&id-1);
2034381    %do x=1 %to &j;
2034382    %if &&nobs&x %then %do;
2034383    _temp&x %end;
2034384    %end;
2034385    ;
2034386    run;
2034387    proc sql;
2034388    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2034388  ! work._tempid p2 where p.name=p2.lhs;
2034389    quit;
2034390    data _temp&id;
2034391    set _temp&id;
2034392    where LHS ne '' and NAME ne '' and Node ne '';
2034393    run;
2034394    proc datasets lib=work nolist;
2034395    delete _tempAll;
2034396    run;
2034397    %let dsid = %sysfunc(open(_temp&id));
2034398    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2034399    %let dsid = %sysfunc(close(&dsid));
2034400    %if ^&&nobs&id %then %do;
2034401    proc datasets lib=work nolist;
2034402    delete _temp&id;
2034403    run;
2034404    quit;
2034405    %end;
2034406    %else %do;
2034407    %let scoreFlag&id = 1;
2034408    data _temp&id;
2034409    set _temp&id;
2034410    where LHS ne NAME and node ne '';
2034411    run;
2034412    %let dsid = %sysfunc(open(_temp&id));
2034413    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2034414    %let dsid = %sysfunc(close(&dsid));
2034415    %if ^&&nobs&id %then %do;
2034416    proc datasets lib=work nolist;
2034417    delete _temp&id;
2034418    run;
2034419    quit;
2034420    %end;
2034421    %else %do;
2034422    proc sort data=_temp&id nodupkey;
2034423    by LHS NAME;
2034424    run;
2034425    %end;
2034426    %end;
2034427    %end;
2034428    %end;
2034429    %mend varDept;
2034430    %macro optCode(outdata=fcmpdata);
2034431    %global fcmpStart;
2034432    %let fcmpStart = 0;
2034433    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2034434    %let NumNodes=9;
2034435    %do k=1 %to &NumNodes;
2034436    %vardept(fcmpdata=&outdata, id=&k);
2034437    %end;
2034438    %mend optCode;
2034439    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2034440    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2034441    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2034442    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2034443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034444    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2034445    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2034446    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2034447    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034448    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2034449    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2034449  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2034450    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2034451    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2034452    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2034453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2034454    filename _pref
2034454  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
2034455    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2034456    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
2034457   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2034458   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2034459   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2034460   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2034461   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2034462   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2034463   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2034464   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2034465   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2034466   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2034467   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2034468   +LENGTH _WARN_ $4
2034469   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2034470   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2034471   +
2034472   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2034473   +
2034474   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2034475   +
2034476   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2034477   +
2034478   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2034479   +
2034480   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2034481   +
2034482   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2034483   +
2034484   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2034485   +
2034486   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2034487   +
2034488   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2034489   +
2034490   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2034491   +
2034492   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2034493   +
2034494   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2034495   +
2034496   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2034497   +
2034498   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2034499   +
2034500   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2034501   +
2034502   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2034503   +
2034504   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2034505   +
2034506   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2034507   +
2034508   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2034509   +
2034510   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2034511   +
2034512   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2034513   +
2034514   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2034515   +
2034516   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2034517   +
2034518   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2034519   +
2034520   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2034521   +
2034522   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2034523   +
2034524   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2034525   +
2034526   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2034527   +
2034528   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2034529   +
2034530   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2034531   +
2034532   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2034533   +
2034534   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2034535   +
2034536   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2034537   +
2034538   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2034539   +
2034540   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2034541   +
2034542   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2034543   +
2034544   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2034545   +
2034546   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2034547   +
2034548   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2034549   +
2034550   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2034551   +
2034552   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2034553   +
2034554   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2034555   +
2034556   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2034557   +
2034558   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2034559   +
2034560   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2034561   +
2034562   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2034563   +
2034564   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2034565   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2034566   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2034567   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2034568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034570   +end;
MPRINT(EM_DIAGRAM):   end;
2034571   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034573   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2034574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034575   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2034576   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2034577   +   end;
MPRINT(EM_DIAGRAM):   end;
2034578   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2034579   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2034580   +   end;
MPRINT(EM_DIAGRAM):   end;
2034581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034582   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2034583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034585   +   end;
MPRINT(EM_DIAGRAM):   end;
2034586   +end;
MPRINT(EM_DIAGRAM):   end;
2034587   +
2034588   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2034589   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2034590   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2034591   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2034592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034594   +end;
MPRINT(EM_DIAGRAM):   end;
2034595   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034597   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2034598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034599   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2034600   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2034601   +   end;
MPRINT(EM_DIAGRAM):   end;
2034602   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2034603   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2034604   +   end;
MPRINT(EM_DIAGRAM):   end;
2034605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034606   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2034607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034609   +   end;
MPRINT(EM_DIAGRAM):   end;
2034610   +end;
MPRINT(EM_DIAGRAM):   end;
2034611   +
2034612   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2034613   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2034614   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2034615   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2034616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034618   +end;
MPRINT(EM_DIAGRAM):   end;
2034619   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034621   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2034622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034623   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2034624   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2034625   +   end;
MPRINT(EM_DIAGRAM):   end;
2034626   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2034627   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2034628   +   end;
MPRINT(EM_DIAGRAM):   end;
2034629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034630   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2034631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034633   +   end;
MPRINT(EM_DIAGRAM):   end;
2034634   +end;
MPRINT(EM_DIAGRAM):   end;
2034635   +
2034636   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2034637   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2034638   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2034639   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2034640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034642   +end;
MPRINT(EM_DIAGRAM):   end;
2034643   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034644   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034645   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2034646   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034647   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2034648   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2034649   +   end;
MPRINT(EM_DIAGRAM):   end;
2034650   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2034651   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2034652   +   end;
MPRINT(EM_DIAGRAM):   end;
2034653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034654   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2034655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034657   +   end;
MPRINT(EM_DIAGRAM):   end;
2034658   +end;
MPRINT(EM_DIAGRAM):   end;
2034659   +
2034660   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2034661   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2034662   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2034663   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2034664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034666   +end;
MPRINT(EM_DIAGRAM):   end;
2034667   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034668   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034669   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2034670   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034671   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2034672   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2034673   +   end;
MPRINT(EM_DIAGRAM):   end;
2034674   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2034675   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2034676   +   end;
MPRINT(EM_DIAGRAM):   end;
2034677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034678   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2034679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034681   +   end;
MPRINT(EM_DIAGRAM):   end;
2034682   +end;
MPRINT(EM_DIAGRAM):   end;
2034683   +
2034684   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2034685   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2034686   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2034687   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2034688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034690   +end;
MPRINT(EM_DIAGRAM):   end;
2034691   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034693   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2034694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2034696   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2034697   +   end;
MPRINT(EM_DIAGRAM):   end;
2034698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2034699   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2034700   +   end;
MPRINT(EM_DIAGRAM):   end;
2034701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034702   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2034703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034705   +   end;
MPRINT(EM_DIAGRAM):   end;
2034706   +end;
MPRINT(EM_DIAGRAM):   end;
2034707   +
2034708   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2034709   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2034710   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2034711   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2034712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034714   +end;
MPRINT(EM_DIAGRAM):   end;
2034715   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2034717   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2034718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034719   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2034720   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2034721   +   end;
MPRINT(EM_DIAGRAM):   end;
2034722   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2034723   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2034724   +   end;
MPRINT(EM_DIAGRAM):   end;
2034725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034726   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2034727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034729   +   end;
MPRINT(EM_DIAGRAM):   end;
2034730   +end;
MPRINT(EM_DIAGRAM):   end;
2034731   +
2034732   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2034733   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2034734   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2034735   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2034736   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2034737   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2034738   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2034739   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2034740   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2034741   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2034742   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2034743   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2034744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034746   +end;
MPRINT(EM_DIAGRAM):   end;
2034747   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034748   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2034749   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2034750   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034751   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2034752   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2034753   +   end;
MPRINT(EM_DIAGRAM):   end;
2034754   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2034755   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2034756   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2034757   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2034758   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2034759   +   end;
MPRINT(EM_DIAGRAM):   end;
2034760   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2034761   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2034762   +   end;
MPRINT(EM_DIAGRAM):   end;
2034763   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2034764   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2034765   +   end;
MPRINT(EM_DIAGRAM):   end;
2034766   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2034767   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2034768   +   end;
MPRINT(EM_DIAGRAM):   end;
2034769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034770   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2034771   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2034772   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2034773   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2034774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034776   +   end;
MPRINT(EM_DIAGRAM):   end;
2034777   +end;
MPRINT(EM_DIAGRAM):   end;
2034778   +
2034779   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2034780   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2034781   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2034782   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2034783   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2034784   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2034785   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2034786   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2034787   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2034788   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2034789   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2034790   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2034791   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2034792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2034793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034794   +end;
MPRINT(EM_DIAGRAM):   end;
2034795   +else do;
MPRINT(EM_DIAGRAM):   else do;
2034796   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2034797   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2034798   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2034799   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2034800   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2034801   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2034802   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2034803   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2034804   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2034805   +         end;
MPRINT(EM_DIAGRAM):   end;
2034806   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2034807   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2034808   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2034809   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2034810   +            end;
MPRINT(EM_DIAGRAM):   end;
2034811   +         end;
MPRINT(EM_DIAGRAM):   end;
2034812   +      end;
MPRINT(EM_DIAGRAM):   end;
2034813   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2034814   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2034815   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2034816   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2034817   +         end;
MPRINT(EM_DIAGRAM):   end;
2034818   +      end;
MPRINT(EM_DIAGRAM):   end;
2034819   +   end;
MPRINT(EM_DIAGRAM):   end;
2034820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2034821   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2034822   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2034823   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2034824   +      end;
MPRINT(EM_DIAGRAM):   end;
2034825   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2034826   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2034827   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2034828   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2034829   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2034830   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2034831   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2034832   +         end;
MPRINT(EM_DIAGRAM):   end;
2034833   +      end;
MPRINT(EM_DIAGRAM):   end;
2034834   +   end;
MPRINT(EM_DIAGRAM):   end;
2034835   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2034836   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2034837   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2034838   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2034839   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2034840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2034841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034842   +   end;
MPRINT(EM_DIAGRAM):   end;
2034843   +end;
MPRINT(EM_DIAGRAM):   end;
2034844   +
2034845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034846   +*** Checking missing input Interval
2034847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2034848   +
2034849   +IF NMISS(
2034850   +   AcceptedCmpTotal ,
2034851   +   Age ,
2034852   +   Frq ,
2034853   +   Income ,
2034854   +   Kidhome ,
2034855   +   Mnt ,
2034856   +   MntFishProducts ,
2034857   +   MntFruits ,
2034858   +   MntGoldProds ,
2034859   +   MntMeatProducts ,
2034860   +   MntSweetProducts ,
2034861   +   MntWines ,
2034862   +   MonthsAsCustomer ,
2034863   +   NumCatalogPurchases ,
2034864   +   NumDealsPurchases ,
2034865   +   NumDistPurchases ,
2034866   +   NumStorePurchases ,
2034867   +   NumWebPurchases ,
2034868   +   NumWebVisitsMonth ,
2034869   +   RFMstat ,
2034870   +   RMntFrq ,
2034871   +   Recency ,
2034872   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2034873   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2034874   +
2034875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2034876   +END;
MPRINT(EM_DIAGRAM):   END;
2034877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034878   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2034879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2034881   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2034882   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2034883   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2034884   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2034885   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2034886   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2034887   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2034888   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2034889   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2034890   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2034891   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2034892   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2034893   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2034894   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2034895   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2034896   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2034897   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2034898   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2034899   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2034900   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2034901   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2034902   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2034903   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2034904   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2034905   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2034906   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2034907   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2034908   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2034909   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2034910   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2034911   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2034912   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2034913   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2034914   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2034915   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2034916   +END;
MPRINT(EM_DIAGRAM):   END;
2034917   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2034918   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2034919   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2034920   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2034921   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2034922   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2034923   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2034924   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2034925   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2034926   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2034927   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2034928   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2034929   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2034930   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2034931   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2034932   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2034933   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2034934   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2034935   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2034936   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2034937   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2034938   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2034939   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2034940   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2034941   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2034942   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2034943   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2034944   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2034945   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2034946   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2034947   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2034948   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2034949   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
2034950   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
2034951   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2034952   +   ELSE S_NumCatalogPurchases
2034953   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2034954   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2034955   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2034956   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2034957   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2034958   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2034959   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2034960   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2034961   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2034962   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2034963   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2034964   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2034965   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2034966   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2034967   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2034968   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2034969   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2034970   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2034971   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2034972   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2034973   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2034974   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2034975   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2034976   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2034977   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2034978   +END;
MPRINT(EM_DIAGRAM):   END;
2034979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034980   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2034981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034983   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2034984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034986   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2034987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2034988   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2034989   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
2034990   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
2034991   +        S_Income  +    -0.27053363011695 * S_Kidhome
2034992   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
2034993   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
2034994   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
2034995   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
2034996   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
2034997   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
2034998   +          +    -1.35624485206227 * S_NumDealsPurchases
2034999   +          +    -0.54646115734684 * S_NumDistPurchases
2035000   +          +     1.29794225108321 * S_NumStorePurchases
2035001   +          +      1.8453064081809 * S_NumWebPurchases
2035002   +          +    -0.92747144824026 * S_NumWebVisitsMonth
2035003   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
2035004   +        S_RMntFrq  +     0.73207333681971 * S_Recency
2035005   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
2035006   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
2035007   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
2035008   +        S_Income  +    -0.79821220724157 * S_Kidhome
2035009   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
2035010   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
2035011   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
2035012   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
2035013   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
2035014   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
2035015   +          +     0.72513216556859 * S_NumDealsPurchases
2035016   +          +    -0.15566774650584 * S_NumDistPurchases
2035017   +          +     -0.8847675798982 * S_NumStorePurchases
2035018   +          +    -0.79405200318252 * S_NumWebPurchases
2035019   +          +     1.74003779802254 * S_NumWebVisitsMonth
2035020   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
2035021   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
2035022   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
2035023   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
2035024   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
2035025   +        S_Income  +    -0.58596240450544 * S_Kidhome
2035026   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
2035027   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
2035028   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
2035029   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
2035030   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
2035031   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
2035032   +          +     0.17466385502192 * S_NumDealsPurchases
2035033   +          +    -0.06219545947203 * S_NumDistPurchases
2035034   +          +     0.16637546838853 * S_NumStorePurchases
2035035   +          +    -0.06908729397635 * S_NumWebPurchases
2035036   +          +     1.44269772444244 * S_NumWebVisitsMonth
2035037   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
2035038   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
2035039   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
2035040   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
2035041   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
2035042   +        S_Income  +    -0.42454238091412 * S_Kidhome
2035043   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
2035044   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
2035045   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
2035046   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
2035047   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
2035048   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
2035049   +          +     0.77329078721398 * S_NumDealsPurchases
2035050   +          +     0.31693324305765 * S_NumDistPurchases
2035051   +          +    -1.08524196373091 * S_NumStorePurchases
2035052   +          +    -0.96945384922979 * S_NumWebPurchases
2035053   +          +     1.24659288571587 * S_NumWebVisitsMonth
2035054   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
2035055   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
2035056   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
2035057   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
2035058   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
2035059   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
2035060   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
2035061   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
2035062   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
2035063   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
2035064   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
2035065   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
2035066   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
2035067   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
2035068   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
2035069   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
2035070   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
2035071   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
2035072   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
2035073   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
2035074   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
2035075   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
2035076   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
2035077   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
2035078   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
2035079   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
2035080   +          +     0.36788499721115 * Marital_StatusDivorced
2035081   +          +    -0.16988636986433 * Marital_StatusMarried
2035082   +          +    -0.24560973256761 * Marital_StatusSingle
2035083   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
2035084   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
2035085   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
2035086   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
2035087   +          +     0.24497797058028 * Marital_StatusDivorced
2035088   +          +    -1.44410245434424 * Marital_StatusMarried
2035089   +          +     1.47441310087392 * Marital_StatusSingle
2035090   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
2035091   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
2035092   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
2035093   +        EducationGraduation  +     0.04653963359475 * EducationMaster
2035094   +          +     0.15823225296452 * Marital_StatusDivorced
2035095   +          +    -0.39129434667884 * Marital_StatusMarried
2035096   +          +     0.84414069966504 * Marital_StatusSingle
2035097   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
2035098   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
2035099   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
2035100   +        EducationGraduation  +     0.40030852414737 * EducationMaster
2035101   +          +     1.22039169814542 * Marital_StatusDivorced
2035102   +          +     0.91592976063128 * Marital_StatusMarried
2035103   +          +    -1.51267332883308 * Marital_StatusSingle
2035104   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
2035105   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
2035106   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
2035107   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
2035108   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
2035109   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2035110   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2035111   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2035112   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2035113   +END;
MPRINT(EM_DIAGRAM):   END;
2035114   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2035115   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2035116   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2035117   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2035118   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2035119   +END;
MPRINT(EM_DIAGRAM):   END;
2035120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2035121   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2035122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2035123   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2035124   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
2035125   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
2035126   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
2035127   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2035128   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2035129   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2035130   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2035131   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2035132   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2035133   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2035134   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2035135   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2035136   +END;
MPRINT(EM_DIAGRAM):   END;
2035137   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2035138   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2035139   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2035140   +END;
MPRINT(EM_DIAGRAM):   END;
2035141   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2035142   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2035143   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2035144   +END;
MPRINT(EM_DIAGRAM):   END;
2035145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2035146   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2035147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2035148   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2035149   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2035150   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2035151   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2035152   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2035153   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2035154   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2035155   +END;
MPRINT(EM_DIAGRAM):   END;
2035156   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2035157   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2035158   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2035159   +drop
2035160   +H11
2035161   +H12
2035162   +H13
2035163   +H14
2035164   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2035165   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035166    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035167    quit;
2035168    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035169    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035170    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035171    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
2035172    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035174    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035177    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
2035178    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035179    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035180    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035181    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035182    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035183    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035184    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
2035185    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2035186    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035187    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035189    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035190    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035192    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035193    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035194    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035194  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

2035195    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035196    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035198    filename _pref
2035198  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2035199    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035200    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2035201   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2035202   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2035203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2035204   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2035205   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2035206   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035207    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035208    quit;
2035209    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035210    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035211    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035212    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2035213    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035215    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035218    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2035219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035221    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035222    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035223    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035225    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2035226    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035227    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035228    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035229    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035230    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035231    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035233    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035234    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035235    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035235  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2035236    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035237    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035238    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035239    filename _pref
2035239  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2035240    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035241    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2035242   +
2035243   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2035244   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2035244  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2035245   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2035246   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2035247   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2035248   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2035249   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035250    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035251    quit;
2035252    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035253    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035254    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035255    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2035256    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035258    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035259    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035261    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2035262    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035263    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035264    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035265    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035266    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035267    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035268    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2035269    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035270    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035271    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035273    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035274    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035276    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035277    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035278    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035278  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2035279    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035280    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035281    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035282    filename _pref
2035282  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2035283    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035284    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2035285   +
2035286   +
2035287   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2035288   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2035289   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2035290   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2035291   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2035292   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035293   +
2035294   +
2035295   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2035296   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2035297   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2035298   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2035299   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2035300   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035301   +
2035302   +
2035303   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2035304   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2035305   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2035306   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2035307   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2035308   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035309   +
2035310   +
2035311   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2035312   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2035313   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2035314   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2035315   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2035316   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035317   +
2035318   +
2035319   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2035320   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2035321   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2035322   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2035323   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2035324   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035325   +
2035326   +
2035327   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2035328   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2035329   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2035330   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2035331   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2035332   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035333   +
2035334   +
2035335   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2035336   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2035337   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2035338   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2035339   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2035340   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035341   +
2035342   +
2035343   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2035344   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2035345   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2035346   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2035347   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2035348   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035349   +if
2035350   +_FILTERNORM1 not in ( '.')
2035351   + and
2035352   +_FILTERNORM2 not in ( '.')
2035353   + and
2035354   +_FILTERNORM3 not in ( '.')
2035355   + and
2035356   +_FILTERNORM4 not in ( '.')
2035357   + and
2035358   +_FILTERNORM5 not in ( '.')
2035359   + and
2035360   +_FILTERNORM6 not in ( '.')
2035361   + and
2035362   +_FILTERNORM7 not in ( ' ')
2035363   + and
2035364   +_FILTERNORM8 not in ( ' ')
2035365   +and
2035366   +( Dt_Customer ne .)
2035367   +and ( Income ne . and (Income<=107000))
2035368   +and ( Kidhome ne .)
2035369   +and ( MntFishProducts ne .)
2035370   +and ( MntFruits ne .)
2035371   +and ( MntGoldProds ne .)
2035372   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2035373   +and ( MntSweetProducts ne .)
2035374   +and ( MntWines ne .)
2035375   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2035376   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2035377   +and ( NumStorePurchases ne .)
2035378   +and ( NumWebPurchases ne .)
2035379   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2035380   +and ( Recency ne .)
2035381   +and ( Teenhome ne .)
2035382   +and ( Year_Birth ne .)
2035383   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2035384   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2035385   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2035386   +end;
MPRINT(EM_DIAGRAM):   end;
2035387   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2035388   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035389    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035390    quit;
2035391    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035392    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035393    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035394    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2035395    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035397    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035400    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2035401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035403    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035404    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035405    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035406    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035407    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2035408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2035409    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035410    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035412    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035413    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035415    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035416    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035417    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035417  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2035418    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035419    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035421    %macro varDept(fcmpdata=,id=);
2035422    %global nobs&id scoreFlag&id;
2035423    %let scoreFlag&id = 0;
2035424    %if &id=1 or ^&fcmpStart %then %do;
2035425    proc sort data=&fcmpdata out=_temp&id nodupkey;
2035426    by NAME;
2035427    where id=&id and LHS in( %let j=1;
2035428    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2035429    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2035430    "&var" %let j = %eval(&j+1);
2035431    %end;
2035432    );
2035433    run;
2035434    %let dsid = %sysfunc(open(_temp&id));
2035435    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2035436    %let dsid = %sysfunc(close(&dsid));
2035437    %if &&nobs&id %then %do;
2035438    %let scoreFlag&id = 1;
2035439    %let fcmpStart = 1;
2035440    %end;
2035441    %else %let fcmpStart = 0;
2035442    %end;
2035443    %else %do;
2035444    proc sort data=&fcmpdata out=_tempid;
2035445    where id=&id;
2035446    by LHS;
2035447    run;
2035448    %let dsid = %sysfunc(open(_tempid));
2035449    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2035450    %let dsid = %sysfunc(close(&dsid));
2035451    %if ^&&nobs&id %then %do;
2035452    proc datasets lib=work nolist;
2035453    delete _tempid;
2035454    run;
2035455    quit;
2035456    %end;
2035457    %else %do;
2035458    data _tempAll;
2035459    set %let j=%eval(&id-1);
2035460    %do x=1 %to &j;
2035461    %if &&nobs&x %then %do;
2035462    _temp&x %end;
2035463    %end;
2035464    ;
2035465    run;
2035466    proc sql;
2035467    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2035467  ! work._tempid p2 where p.name=p2.lhs;
2035468    quit;
2035469    data _temp&id;
2035470    set _temp&id;
2035471    where LHS ne '' and NAME ne '' and Node ne '';
2035472    run;
2035473    proc datasets lib=work nolist;
2035474    delete _tempAll;
2035475    run;
2035476    %let dsid = %sysfunc(open(_temp&id));
2035477    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2035478    %let dsid = %sysfunc(close(&dsid));
2035479    %if ^&&nobs&id %then %do;
2035480    proc datasets lib=work nolist;
2035481    delete _temp&id;
2035482    run;
2035483    quit;
2035484    %end;
2035485    %else %do;
2035486    %let scoreFlag&id = 1;
2035487    data _temp&id;
2035488    set _temp&id;
2035489    where LHS ne NAME and node ne '';
2035490    run;
2035491    %let dsid = %sysfunc(open(_temp&id));
2035492    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2035493    %let dsid = %sysfunc(close(&dsid));
2035494    %if ^&&nobs&id %then %do;
2035495    proc datasets lib=work nolist;
2035496    delete _temp&id;
2035497    run;
2035498    quit;
2035499    %end;
2035500    %else %do;
2035501    proc sort data=_temp&id nodupkey;
2035502    by LHS NAME;
2035503    run;
2035504    %end;
2035505    %end;
2035506    %end;
2035507    %end;
2035508    %mend varDept;
2035509    %macro optCode(outdata=fcmpdata);
2035510    %global fcmpStart;
2035511    %let fcmpStart = 0;
2035512    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2035513    %let NumNodes=9;
2035514    %do k=1 %to &NumNodes;
2035515    %vardept(fcmpdata=&outdata, id=&k);
2035516    %end;
2035517    %mend optCode;
2035518    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2035519    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2035520    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2035521    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2035522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035523    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2035524    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2035525    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2035526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035527    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035528    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2035528  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2035529    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035530    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2035531    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2035532    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035533    filename _pref
2035533  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
2035534    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035535    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
2035536   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2035537   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2035538   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2035539   +
2035540   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2035541   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2035542   +
2035543   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2035544   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2035545   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2035546   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
2035547   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2035548   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2035549   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2035550   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
2035551   +
2035552   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2035553   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2035554   +
2035555   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
2035556   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
2035557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035559   +end;
MPRINT(EM_DIAGRAM):   end;
2035560   +
2035561   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
2035562   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
2035563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035565   +end;
MPRINT(EM_DIAGRAM):   end;
2035566   +
2035567   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
2035568   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
2035569   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035570   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035571   +end;
MPRINT(EM_DIAGRAM):   end;
2035572   +
2035573   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2035574   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2035575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035577   +end;
MPRINT(EM_DIAGRAM):   end;
2035578   +
2035579   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
2035580   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
2035581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035583   +end;
MPRINT(EM_DIAGRAM):   end;
2035584   +
2035585   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
2035586   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
2035587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035589   +end;
MPRINT(EM_DIAGRAM):   end;
2035590   +
2035591   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2035592   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2035593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035595   +end;
MPRINT(EM_DIAGRAM):   end;
2035596   +
2035597   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2035598   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2035599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035601   +end;
MPRINT(EM_DIAGRAM):   end;
2035602   +
2035603   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2035604   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2035605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035607   +end;
MPRINT(EM_DIAGRAM):   end;
2035608   +
2035609   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2035610   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2035611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035613   +end;
MPRINT(EM_DIAGRAM):   end;
2035614   +
2035615   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
2035616   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
2035617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035619   +end;
MPRINT(EM_DIAGRAM):   end;
2035620   +
2035621   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2035622   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2035623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035625   +end;
MPRINT(EM_DIAGRAM):   end;
2035626   +
2035627   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2035628   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2035629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035631   +end;
MPRINT(EM_DIAGRAM):   end;
2035632   +
2035633   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2035634   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
2035635   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2035636   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
2035637   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
2035638   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
2035639   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
2035640   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2035641   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2035642   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2035643   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2035644   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2035645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2035646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035647   +end;
MPRINT(EM_DIAGRAM):   end;
2035648   +else do;
MPRINT(EM_DIAGRAM):   else do;
2035649   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2035650   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2035651   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2035652   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2035653   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2035654   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2035655   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2035656   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
2035657   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2035658   +         end;
MPRINT(EM_DIAGRAM):   end;
2035659   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2035660   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2035661   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
2035662   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2035663   +            end;
MPRINT(EM_DIAGRAM):   end;
2035664   +         end;
MPRINT(EM_DIAGRAM):   end;
2035665   +      end;
MPRINT(EM_DIAGRAM):   end;
2035666   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2035667   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2035668   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
2035669   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2035670   +         end;
MPRINT(EM_DIAGRAM):   end;
2035671   +      end;
MPRINT(EM_DIAGRAM):   end;
2035672   +   end;
MPRINT(EM_DIAGRAM):   end;
2035673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2035674   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2035675   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
2035676   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2035677   +      end;
MPRINT(EM_DIAGRAM):   end;
2035678   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2035679   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2035680   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
2035681   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
2035682   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
2035683   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
2035684   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2035685   +         end;
MPRINT(EM_DIAGRAM):   end;
2035686   +      end;
MPRINT(EM_DIAGRAM):   end;
2035687   +   end;
MPRINT(EM_DIAGRAM):   end;
2035688   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2035689   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2035690   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2035691   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2035692   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2035693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2035694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2035695   +   end;
MPRINT(EM_DIAGRAM):   end;
2035696   +end;
MPRINT(EM_DIAGRAM):   end;
2035697   +
2035698   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2035699   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2035700   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2035701   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2035702   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
2035703   +end;
MPRINT(EM_DIAGRAM):   end;
2035704   +
2035705   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2035706   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2035707   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2035708   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2035709   +
2035710   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
2035711   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
2035712   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
2035713   +
2035714   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
2035715   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
2035716   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
2035717   +
2035718   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
2035719   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
2035720   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
2035721   +
2035722   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2035723   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2035724   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
2035725   +
2035726   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2035727   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2035728   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
2035729   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
2035730   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
2035731   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
2035732   +
2035733   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
2035734   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
2035735   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
2035736   +
2035737   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
2035738   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
2035739   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
2035740   +
2035741   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2035742   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2035743   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
2035744   +
2035745   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2035746   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2035747   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
2035748   +
2035749   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2035750   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2035751   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
2035752   +
2035753   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2035754   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2035755   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
2035756   +
2035757   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
2035758   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
2035759   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
2035760   +
2035761   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2035762   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2035763   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
2035764   +
2035765   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2035766   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2035767   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
2035768   +
2035769   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2035770   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2035771   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
2035772   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
2035773   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
2035774   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
2035775   +end;
MPRINT(EM_DIAGRAM):   end;
2035776   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
2035777   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2035778   +
2035779   +REGDR1:
2035780   +
2035781   +
2035782   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
2035783   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2035784   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2035785   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2035786   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2035787   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2035788   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2035789   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2035790   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2035791   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2035792   +end;
MPRINT(EM_DIAGRAM):   end;
2035793   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
2035794   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
2035795   +
2035796   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2035797   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2035798   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035799    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035800    quit;
2035801    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035802    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035803    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035804    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
2035805    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2035807    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035810    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
2035811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035813    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035814    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035815    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035817    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
2035818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035819    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035823    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035825    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035826    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035827    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035827  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

2035828    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035829    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035831    filename _pref
2035831  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2035832    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035833    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2035834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2035835   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2035836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2035837   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2035838   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2035839   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035840    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035841    quit;
2035842    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035843    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035844    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035845    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2035846    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035847    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035848    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035850    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035851    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2035852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035854    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035855    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035856    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035857    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035858    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2035859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2035860    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035862    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035863    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035864    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035866    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035867    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035868    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035868  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2035869    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035870    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035872    filename _pref
2035872  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2035873    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035874    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2035875   +
2035876   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2035877   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2035877  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2035878   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2035879   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2035880   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2035881   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2035882   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2035883    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2035884    quit;
2035885    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2035886    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2035887    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2035888    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2035889    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2035890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035891    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2035892    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2035894    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2035895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035897    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035898    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2035899    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2035900    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035901    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2035902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035903    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2035904    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035905    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035906    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2035907    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2035908    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2035909    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035910    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2035911    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2035911  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2035912    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2035913    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2035914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2035915    filename _pref
2035915  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2035916    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2035917    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2035918   +
2035919   +
2035920   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2035921   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2035922   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2035923   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2035924   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2035925   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035926   +
2035927   +
2035928   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2035929   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2035930   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2035931   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2035932   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2035933   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035934   +
2035935   +
2035936   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2035937   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2035938   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2035939   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2035940   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2035941   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035942   +
2035943   +
2035944   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2035945   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2035946   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2035947   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2035948   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2035949   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035950   +
2035951   +
2035952   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2035953   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2035954   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2035955   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2035956   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2035957   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035958   +
2035959   +
2035960   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2035961   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2035962   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2035963   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2035964   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2035965   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035966   +
2035967   +
2035968   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2035969   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2035970   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2035971   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2035972   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2035973   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035974   +
2035975   +
2035976   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2035977   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2035978   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2035979   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2035980   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2035981   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2035982   +if
2035983   +_FILTERNORM1 not in ( '.')
2035984   + and
2035985   +_FILTERNORM2 not in ( '.')
2035986   + and
2035987   +_FILTERNORM3 not in ( '.')
2035988   + and
2035989   +_FILTERNORM4 not in ( '.')
2035990   + and
2035991   +_FILTERNORM5 not in ( '.')
2035992   + and
2035993   +_FILTERNORM6 not in ( '.')
2035994   + and
2035995   +_FILTERNORM7 not in ( ' ')
2035996   + and
2035997   +_FILTERNORM8 not in ( ' ')
2035998   +and
2035999   +( Dt_Customer ne .)
2036000   +and ( Income ne . and (Income<=107000))
2036001   +and ( Kidhome ne .)
2036002   +and ( MntFishProducts ne .)
2036003   +and ( MntFruits ne .)
2036004   +and ( MntGoldProds ne .)
2036005   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2036006   +and ( MntSweetProducts ne .)
2036007   +and ( MntWines ne .)
2036008   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2036009   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2036010   +and ( NumStorePurchases ne .)
2036011   +and ( NumWebPurchases ne .)
2036012   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2036013   +and ( Recency ne .)
2036014   +and ( Teenhome ne .)
2036015   +and ( Year_Birth ne .)
2036016   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2036017   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2036018   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2036019   +end;
MPRINT(EM_DIAGRAM):   end;
2036020   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2036021   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2036022    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2036023    quit;
2036024    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2036025    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2036026    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2036027    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2036028    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2036029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036030    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2036031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036033    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2036034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036037    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2036038    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2036039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036040    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2036041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036042    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2036043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036046    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2036047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036048    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2036050    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2036050  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2036051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036052    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2036053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036054    %macro varDept(fcmpdata=,id=);
2036055    %global nobs&id scoreFlag&id;
2036056    %let scoreFlag&id = 0;
2036057    %if &id=1 or ^&fcmpStart %then %do;
2036058    proc sort data=&fcmpdata out=_temp&id nodupkey;
2036059    by NAME;
2036060    where id=&id and LHS in( %let j=1;
2036061    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2036062    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2036063    "&var" %let j = %eval(&j+1);
2036064    %end;
2036065    );
2036066    run;
2036067    %let dsid = %sysfunc(open(_temp&id));
2036068    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036069    %let dsid = %sysfunc(close(&dsid));
2036070    %if &&nobs&id %then %do;
2036071    %let scoreFlag&id = 1;
2036072    %let fcmpStart = 1;
2036073    %end;
2036074    %else %let fcmpStart = 0;
2036075    %end;
2036076    %else %do;
2036077    proc sort data=&fcmpdata out=_tempid;
2036078    where id=&id;
2036079    by LHS;
2036080    run;
2036081    %let dsid = %sysfunc(open(_tempid));
2036082    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036083    %let dsid = %sysfunc(close(&dsid));
2036084    %if ^&&nobs&id %then %do;
2036085    proc datasets lib=work nolist;
2036086    delete _tempid;
2036087    run;
2036088    quit;
2036089    %end;
2036090    %else %do;
2036091    data _tempAll;
2036092    set %let j=%eval(&id-1);
2036093    %do x=1 %to &j;
2036094    %if &&nobs&x %then %do;
2036095    _temp&x %end;
2036096    %end;
2036097    ;
2036098    run;
2036099    proc sql;
2036100    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2036100  ! work._tempid p2 where p.name=p2.lhs;
2036101    quit;
2036102    data _temp&id;
2036103    set _temp&id;
2036104    where LHS ne '' and NAME ne '' and Node ne '';
2036105    run;
2036106    proc datasets lib=work nolist;
2036107    delete _tempAll;
2036108    run;
2036109    %let dsid = %sysfunc(open(_temp&id));
2036110    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036111    %let dsid = %sysfunc(close(&dsid));
2036112    %if ^&&nobs&id %then %do;
2036113    proc datasets lib=work nolist;
2036114    delete _temp&id;
2036115    run;
2036116    quit;
2036117    %end;
2036118    %else %do;
2036119    %let scoreFlag&id = 1;
2036120    data _temp&id;
2036121    set _temp&id;
2036122    where LHS ne NAME and node ne '';
2036123    run;
2036124    %let dsid = %sysfunc(open(_temp&id));
2036125    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036126    %let dsid = %sysfunc(close(&dsid));
2036127    %if ^&&nobs&id %then %do;
2036128    proc datasets lib=work nolist;
2036129    delete _temp&id;
2036130    run;
2036131    quit;
2036132    %end;
2036133    %else %do;
2036134    proc sort data=_temp&id nodupkey;
2036135    by LHS NAME;
2036136    run;
2036137    %end;
2036138    %end;
2036139    %end;
2036140    %end;
2036141    %mend varDept;
2036142    %macro optCode(outdata=fcmpdata);
2036143    %global fcmpStart;
2036144    %let fcmpStart = 0;
2036145    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2036146    %let NumNodes=9;
2036147    %do k=1 %to &NumNodes;
2036148    %vardept(fcmpdata=&outdata, id=&k);
2036149    %end;
2036150    %mend optCode;
2036151    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2036152    filename _pref
2036152  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
2036153    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2036154    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
2036155   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2036156   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2036157   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2036158   +
2036159   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2036160   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2036161   +
2036162   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2036163   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2036164   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2036165   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
2036166   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2036167   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2036168   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2036169   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
2036170   +
2036171   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2036172   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2036173   +
2036174   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
2036175   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
2036176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036178   +end;
MPRINT(EM_DIAGRAM):   end;
2036179   +
2036180   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
2036181   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
2036182   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036183   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036184   +end;
MPRINT(EM_DIAGRAM):   end;
2036185   +
2036186   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2036187   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2036188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036190   +end;
MPRINT(EM_DIAGRAM):   end;
2036191   +
2036192   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
2036193   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
2036194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036196   +end;
MPRINT(EM_DIAGRAM):   end;
2036197   +
2036198   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
2036199   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
2036200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036202   +end;
MPRINT(EM_DIAGRAM):   end;
2036203   +
2036204   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2036205   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2036206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036208   +end;
MPRINT(EM_DIAGRAM):   end;
2036209   +
2036210   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2036211   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2036212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036214   +end;
MPRINT(EM_DIAGRAM):   end;
2036215   +
2036216   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2036217   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2036218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036220   +end;
MPRINT(EM_DIAGRAM):   end;
2036221   +
2036222   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2036223   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2036224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036226   +end;
MPRINT(EM_DIAGRAM):   end;
2036227   +
2036228   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
2036229   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
2036230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036232   +end;
MPRINT(EM_DIAGRAM):   end;
2036233   +
2036234   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2036235   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2036236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036238   +end;
MPRINT(EM_DIAGRAM):   end;
2036239   +
2036240   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2036241   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2036242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036244   +end;
MPRINT(EM_DIAGRAM):   end;
2036245   +
2036246   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2036247   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
2036248   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2036249   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
2036250   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
2036251   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
2036252   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
2036253   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2036254   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2036255   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2036256   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2036257   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2036258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2036259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036260   +end;
MPRINT(EM_DIAGRAM):   end;
2036261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2036262   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2036263   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2036264   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2036265   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2036266   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2036267   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2036268   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2036269   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
2036270   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2036271   +         end;
MPRINT(EM_DIAGRAM):   end;
2036272   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2036273   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2036274   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
2036275   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2036276   +            end;
MPRINT(EM_DIAGRAM):   end;
2036277   +         end;
MPRINT(EM_DIAGRAM):   end;
2036278   +      end;
MPRINT(EM_DIAGRAM):   end;
2036279   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2036280   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2036281   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
2036282   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2036283   +         end;
MPRINT(EM_DIAGRAM):   end;
2036284   +      end;
MPRINT(EM_DIAGRAM):   end;
2036285   +   end;
MPRINT(EM_DIAGRAM):   end;
2036286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2036287   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2036288   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
2036289   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2036290   +      end;
MPRINT(EM_DIAGRAM):   end;
2036291   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2036292   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2036293   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
2036294   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
2036295   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
2036296   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
2036297   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2036298   +         end;
MPRINT(EM_DIAGRAM):   end;
2036299   +      end;
MPRINT(EM_DIAGRAM):   end;
2036300   +   end;
MPRINT(EM_DIAGRAM):   end;
2036301   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2036302   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
2036303   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
2036304   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
2036305   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
2036306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2036307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2036308   +   end;
MPRINT(EM_DIAGRAM):   end;
2036309   +end;
MPRINT(EM_DIAGRAM):   end;
2036310   +
2036311   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2036312   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2036313   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2036314   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2036315   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
2036316   +end;
MPRINT(EM_DIAGRAM):   end;
2036317   +
2036318   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2036319   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2036320   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2036321   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2036322   +
2036323   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
2036324   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
2036325   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
2036326   +
2036327   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
2036328   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
2036329   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
2036330   +
2036331   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2036332   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2036333   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
2036334   +
2036335   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2036336   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2036337   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
2036338   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
2036339   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
2036340   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
2036341   +
2036342   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
2036343   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
2036344   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
2036345   +
2036346   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
2036347   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
2036348   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
2036349   +
2036350   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2036351   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2036352   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
2036353   +
2036354   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2036355   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2036356   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
2036357   +
2036358   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2036359   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2036360   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
2036361   +
2036362   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2036363   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2036364   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
2036365   +
2036366   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
2036367   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
2036368   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
2036369   +
2036370   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2036371   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2036372   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
2036373   +
2036374   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2036375   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2036376   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
2036377   +
2036378   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2036379   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2036380   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
2036381   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2036382   +
2036383   +REG5DR1:
2036384   +
2036385   +
2036386   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
2036387   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2036388   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2036389   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2036390   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2036391   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2036392   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2036393   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2036394   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2036395   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2036396   +end;
MPRINT(EM_DIAGRAM):   end;
2036397   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
2036398   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
2036399   +
2036400   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2036401   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2036402   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2036403    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2036404    quit;
2036405    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2036406    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2036407    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2036408    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
2036409    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2036410    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036411    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2036412    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036414    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
2036415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036417    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036418    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2036419    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2036420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036421    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
2036422    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036423    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2036424    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036426    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036427    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2036428    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036429    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036430    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2036431    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2036431  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

2036432    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036433    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2036434    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036435    filename _pref
2036435  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2036436    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2036437    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2036438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2036439   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2036440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2036441   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2036442   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2036443   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2036444    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2036445    quit;
2036446    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2036447    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2036448    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2036449    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2036450    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2036451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036452    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2036453    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036455    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2036456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036457    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036458    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036459    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2036460    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2036461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036462    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2036463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

2036464    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2036465    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036467    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036468    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2036469    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036470    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036471    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2036472    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2036472  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2036473    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036474    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2036475    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036476    filename _pref
2036476  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2036477    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2036478    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2036479   +
2036480   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2036481   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2036481  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2036482   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2036483   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2036484   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2036485   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2036486   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2036487    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2036488    quit;
2036489    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2036490    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2036491    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2036492    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2036493    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2036494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036495    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2036496    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036497    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2036498    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2036499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036501    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036502    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2036503    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2036504    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036505    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2036506    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036507    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2036508    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036509    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036510    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036511    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2036512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036513    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036514    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2036515    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2036515  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2036516    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036517    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2036518    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036519    filename _pref
2036519  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2036520    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2036521    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2036522   +
2036523   +
2036524   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2036525   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2036526   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2036527   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2036528   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2036529   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036530   +
2036531   +
2036532   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2036533   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2036534   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2036535   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2036536   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2036537   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036538   +
2036539   +
2036540   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2036541   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2036542   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2036543   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2036544   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2036545   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036546   +
2036547   +
2036548   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2036549   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2036550   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2036551   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2036552   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2036553   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036554   +
2036555   +
2036556   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2036557   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2036558   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2036559   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2036560   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2036561   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036562   +
2036563   +
2036564   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2036565   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2036566   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2036567   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2036568   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2036569   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036570   +
2036571   +
2036572   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2036573   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2036574   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2036575   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2036576   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2036577   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036578   +
2036579   +
2036580   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2036581   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2036582   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2036583   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2036584   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2036585   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2036586   +if
2036587   +_FILTERNORM1 not in ( '.')
2036588   + and
2036589   +_FILTERNORM2 not in ( '.')
2036590   + and
2036591   +_FILTERNORM3 not in ( '.')
2036592   + and
2036593   +_FILTERNORM4 not in ( '.')
2036594   + and
2036595   +_FILTERNORM5 not in ( '.')
2036596   + and
2036597   +_FILTERNORM6 not in ( '.')
2036598   + and
2036599   +_FILTERNORM7 not in ( ' ')
2036600   + and
2036601   +_FILTERNORM8 not in ( ' ')
2036602   +and
2036603   +( Dt_Customer ne .)
2036604   +and ( Income ne . and (Income<=107000))
2036605   +and ( Kidhome ne .)
2036606   +and ( MntFishProducts ne .)
2036607   +and ( MntFruits ne .)
2036608   +and ( MntGoldProds ne .)
2036609   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2036610   +and ( MntSweetProducts ne .)
2036611   +and ( MntWines ne .)
2036612   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2036613   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2036614   +and ( NumStorePurchases ne .)
2036615   +and ( NumWebPurchases ne .)
2036616   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2036617   +and ( Recency ne .)
2036618   +and ( Teenhome ne .)
2036619   +and ( Year_Birth ne .)
2036620   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2036621   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2036622   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2036623   +end;
MPRINT(EM_DIAGRAM):   end;
2036624   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2036625   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2036626    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2036627    quit;
2036628    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2036629    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2036630    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2036631    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2036632    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2036633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036634    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2036635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


2036637    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2036638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036639    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036640    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036641    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2036642    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2036643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2036644    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2036645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036646    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2036647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2036649    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2036650    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2036651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2036652    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036653    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2036654    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2036654  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2036655    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2036656    proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl14_FCMP data=_tempx;
2036657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL14_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL14_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2036658    %macro varDept(fcmpdata=,id=);
2036659    %global nobs&id scoreFlag&id;
2036660    %let scoreFlag&id = 0;
2036661    %if &id=1 or ^&fcmpStart %then %do;
2036662    proc sort data=&fcmpdata out=_temp&id nodupkey;
2036663    by NAME;
2036664    where id=&id and LHS in( %let j=1;
2036665    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2036666    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2036667    "&var" %let j = %eval(&j+1);
2036668    %end;
2036669    );
2036670    run;
2036671    %let dsid = %sysfunc(open(_temp&id));
2036672    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036673    %let dsid = %sysfunc(close(&dsid));
2036674    %if &&nobs&id %then %do;
2036675    %let scoreFlag&id = 1;
2036676    %let fcmpStart = 1;
2036677    %end;
2036678    %else %let fcmpStart = 0;
2036679    %end;
2036680    %else %do;
2036681    proc sort data=&fcmpdata out=_tempid;
2036682    where id=&id;
2036683    by LHS;
2036684    run;
2036685    %let dsid = %sysfunc(open(_tempid));
2036686    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036687    %let dsid = %sysfunc(close(&dsid));
2036688    %if ^&&nobs&id %then %do;
2036689    proc datasets lib=work nolist;
2036690    delete _tempid;
2036691    run;
2036692    quit;
2036693    %end;
2036694    %else %do;
2036695    data _tempAll;
2036696    set %let j=%eval(&id-1);
2036697    %do x=1 %to &j;
2036698    %if &&nobs&x %then %do;
2036699    _temp&x %end;
2036700    %end;
2036701    ;
2036702    run;
2036703    proc sql;
2036704    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2036704  ! work._tempid p2 where p.name=p2.lhs;
2036705    quit;
2036706    data _temp&id;
2036707    set _temp&id;
2036708    where LHS ne '' and NAME ne '' and Node ne '';
2036709    run;
2036710    proc datasets lib=work nolist;
2036711    delete _tempAll;
2036712    run;
2036713    %let dsid = %sysfunc(open(_temp&id));
2036714    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036715    %let dsid = %sysfunc(close(&dsid));
2036716    %if ^&&nobs&id %then %do;
2036717    proc datasets lib=work nolist;
2036718    delete _temp&id;
2036719    run;
2036720    quit;
2036721    %end;
2036722    %else %do;
2036723    %let scoreFlag&id = 1;
2036724    data _temp&id;
2036725    set _temp&id;
2036726    where LHS ne NAME and node ne '';
2036727    run;
2036728    %let dsid = %sysfunc(open(_temp&id));
2036729    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2036730    %let dsid = %sysfunc(close(&dsid));
2036731    %if ^&&nobs&id %then %do;
2036732    proc datasets lib=work nolist;
2036733    delete _temp&id;
2036734    run;
2036735    quit;
2036736    %end;
2036737    %else %do;
2036738    proc sort data=_temp&id nodupkey;
2036739    by LHS NAME;
2036740    run;
2036741    %end;
2036742    %end;
2036743    %end;
2036744    %end;
2036745    %mend varDept;
2036746    %macro optCode(outdata=fcmpdata);
2036747    %global fcmpStart;
2036748    %let fcmpStart = 0;
2036749    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2036750    %let NumNodes=9;
2036751    %do k=1 %to &NumNodes;
2036752    %vardept(fcmpdata=&outdata, id=&k);
2036753    %end;
2036754    %mend optCode;
2036755    %optcode(outData=EMWS8.Ensmbl14_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl14_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2036756    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2036757    * Ensmbl14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Computing metadata for TRAIN data;
2036758    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl14_TRAIN out=WORK.M1RRWF4H noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RRWF4H;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RRWF4H(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RRWF4H;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RRWF4H;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1X03YO4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3S9ADGA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   set WORK.M1X03YO4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl14";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2037078    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2037079    set EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO;
2037080    where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2037081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL14_EMINFO.
      WHERE (DATA='Ensmbl14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2037082    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl14_EMINFO;
2037083    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2037084    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2037085    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2037089    run;
2037090    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
2037091    set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl14_EMINFO WORK.MODELTEMP_INFO;
2037092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2037093    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl14_EMINFO NOTHREADS;
2037094    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2037095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2037096    proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2037097    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2037098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2037099    proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2037100    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2037101    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2037102    data EMWS8.Ensmbl14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl14_EMINFO;
2037103    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2037104    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2037105    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2037106    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2037107    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2037108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2037109    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL14_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL14_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
